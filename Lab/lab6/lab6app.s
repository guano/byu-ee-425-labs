; Generated by c86 (BYU-NASM) 5.1 (beta) from lab6app.i
	CPU	8086
	ALIGN	2
	jmp	main	; Jump to program start
L_lab6app_5:
	DB	"Max: ",0
L_lab6app_4:
	DB	"Min: ",0
L_lab6app_3:
	DB	0x9,0
L_lab6app_2:
	DB	"Ticks: ",0
L_lab6app_1:
	DB	"! Dropped msgs: tick ",0
	ALIGN	2
ATask:
	jmp	L_lab6app_6
L_lab6app_7:
	mov	word [bp-4], 100
	mov	word [bp-6], 0
	mov	word [bp-8], 0
	jmp	L_lab6app_9
L_lab6app_8:
	push	word [MsgQPtr]
	call	YKQPend
	add	sp, 2
	mov	word [bp-2], ax
	mov	ax, word [bp-8]
	inc	ax
	mov	si, word [bp-2]
	mov	dx, word [si]
	cmp	dx, ax
	je	L_lab6app_11
	mov	ax, 21
	push	ax
	mov	ax, L_lab6app_1
	push	ax
	call	print
	add	sp, 4
	mov	si, word [bp-2]
	mov	ax, word [si]
	sub	ax, word [bp-8]
	dec	ax
	cmp	ax, 1
	jle	L_lab6app_12
	mov	ax, word [bp-8]
	inc	ax
	push	ax
	call	printInt
	add	sp, 2
	mov	al, 45
	push	ax
	call	printChar
	add	sp, 2
	mov	si, word [bp-2]
	mov	ax, word [si]
	dec	ax
	push	ax
	call	printInt
	add	sp, 2
	call	printNewLine
	jmp	L_lab6app_13
L_lab6app_12:
	mov	si, word [bp-2]
	mov	ax, word [si]
	dec	ax
	push	ax
	call	printInt
	add	sp, 2
	call	printNewLine
L_lab6app_13:
L_lab6app_11:
	mov	si, word [bp-2]
	mov	ax, word [si]
	mov	word [bp-8], ax
	mov	si, word [bp-2]
	add	si, 2
	mov	ax, word [bp-4]
	cmp	ax, word [si]
	jle	L_lab6app_14
	mov	si, word [bp-2]
	add	si, 2
	mov	ax, word [si]
	mov	word [bp-4], ax
L_lab6app_14:
	mov	si, word [bp-2]
	add	si, 2
	mov	ax, word [bp-6]
	cmp	ax, word [si]
	jge	L_lab6app_15
	mov	si, word [bp-2]
	add	si, 2
	mov	ax, word [si]
	mov	word [bp-6], ax
L_lab6app_15:
	mov	ax, 7
	push	ax
	mov	ax, L_lab6app_2
	push	ax
	call	print
	add	sp, 4
	push	word [bp-8]
	call	printInt
	add	sp, 2
	mov	ax, 1
	push	ax
	mov	ax, L_lab6app_3
	push	ax
	call	print
	add	sp, 4
	mov	ax, 5
	push	ax
	mov	ax, L_lab6app_4
	push	ax
	call	print
	add	sp, 4
	push	word [bp-4]
	call	printInt
	add	sp, 2
	mov	ax, 1
	push	ax
	mov	ax, L_lab6app_3
	push	ax
	call	print
	add	sp, 4
	mov	ax, 5
	push	ax
	mov	ax, L_lab6app_5
	push	ax
	call	print
	add	sp, 4
	push	word [bp-6]
	call	printInt
	add	sp, 2
	call	printNewLine
L_lab6app_9:
	jmp	L_lab6app_8
L_lab6app_10:
	mov	sp, bp
	pop	bp
	ret
L_lab6app_6:
	push	bp
	mov	bp, sp
	sub	sp, 8
	jmp	L_lab6app_7
	ALIGN	2
BTask:
	jmp	L_lab6app_17
L_lab6app_18:
	mov	word [bp-4], 1001
	mov	word [bp-10], 0
	jmp	L_lab6app_20
L_lab6app_19:
	mov	ax, 2
	push	ax
	call	YKDelayTask
	add	sp, 2
	cmp	word [GlobalFlag], 1
	jne	L_lab6app_22
	call	YKEnterMutex
	mov	ax, word [YKTickNum]
	mov	word [bp-2], ax
	call	YKExitMutex
	jmp	L_lab6app_24
L_lab6app_23:
	call	YKEnterMutex
	mov	ax, word [YKTickNum]
	mov	word [bp-12], ax
	call	YKExitMutex
	mov	ax, word [bp-2]
	add	ax, 5
	mov	dx, word [bp-12]
	cmp	dx, ax
	jae	L_lab6app_25
L_lab6app_26:
	add	word [bp-4], 2
	mov	word [bp-8], 0
	mov	word [bp-6], 3
	jmp	L_lab6app_28
L_lab6app_27:
	mov	ax, word [bp-4]
	cwd
	idiv	word [bp-6]
	mov	ax, dx
	test	ax, ax
	jne	L_lab6app_31
	mov	word [bp-8], 1
	jmp	L_lab6app_29
L_lab6app_31:
L_lab6app_30:
	add	word [bp-6], 2
L_lab6app_28:
	mov	ax, word [bp-6]
	imul	word [bp-6]
	mov	dx, word [bp-4]
	cmp	dx, ax
	jg	L_lab6app_27
L_lab6app_29:
	mov	ax, word [bp-8]
	test	ax, ax
	jne	L_lab6app_32
	mov	al, 46
	push	ax
	call	printChar
	add	sp, 2
	mov	ax, word [bp-10]
	inc	ax
	mov	word [bp-10], ax
	cmp	ax, 75
	jle	L_lab6app_33
	call	printNewLine
	mov	word [bp-10], 0
L_lab6app_33:
L_lab6app_32:
L_lab6app_24:
	jmp	L_lab6app_23
L_lab6app_25:
	call	printNewLine
	mov	word [bp-10], 0
	mov	word [GlobalFlag], 0
L_lab6app_22:
L_lab6app_20:
	jmp	L_lab6app_19
L_lab6app_21:
	mov	sp, bp
	pop	bp
	ret
L_lab6app_17:
	push	bp
	mov	bp, sp
	sub	sp, 12
	jmp	L_lab6app_18
L_lab6app_39:
	DB	"% >>>>>",0xD,0xA,0
L_lab6app_38:
	DB	", CPU usage: ",0
L_lab6app_37:
	DB	"<<<<< Context switches: ",0
L_lab6app_36:
	DB	"Determining CPU capacity",0xD,0xA,0
L_lab6app_35:
	DB	"Welcome to the YAK kernel",0xD,0xA,0
	ALIGN	2
STask:
	jmp	L_lab6app_40
L_lab6app_41:
	mov	ax, 1
	push	ax
	call	YKDelayTask
	add	sp, 2
	mov	ax, L_lab6app_35
	push	ax
	call	printString
	add	sp, 2
	mov	ax, L_lab6app_36
	push	ax
	call	printString
	add	sp, 2
	mov	ax, 1
	push	ax
	call	YKDelayTask
	add	sp, 2
	mov	word [YKIdleCount], 0
	mov	ax, 5
	push	ax
	call	YKDelayTask
	add	sp, 2
	mov	ax, word [YKIdleCount]
	xor	dx, dx
	mov	cx, 25
	div	cx
	mov	word [bp-2], ax
	mov	word [YKIdleCount], 0
	mov	al, 10
	push	ax
	mov	ax, (BTaskStk+1024)
	push	ax
	mov	ax, BTask
	push	ax
	call	YKNewTask
	add	sp, 6
	mov	al, 20
	push	ax
	mov	ax, (ATaskStk+1024)
	push	ax
	mov	ax, ATask
	push	ax
	call	YKNewTask
	add	sp, 6
	jmp	L_lab6app_43
L_lab6app_42:
	mov	ax, 20
	push	ax
	call	YKDelayTask
	add	sp, 2
	call	YKEnterMutex
	mov	ax, word [YKCtxSwCount]
	mov	word [bp-4], ax
	mov	ax, word [YKIdleCount]
	mov	word [bp-6], ax
	call	YKExitMutex
	mov	ax, L_lab6app_37
	push	ax
	call	printString
	add	sp, 2
	push	word [bp-4]
	call	printInt
	add	sp, 2
	mov	ax, L_lab6app_38
	push	ax
	call	printString
	add	sp, 2
	mov	ax, word [bp-6]
	xor	dx, dx
	div	word [bp-2]
	mov	word [bp-8], ax
	mov	ax, 100
	sub	ax, word [bp-8]
	push	ax
	call	printInt
	add	sp, 2
	mov	ax, L_lab6app_39
	push	ax
	call	printString
	add	sp, 2
	call	YKEnterMutex
	mov	word [YKCtxSwCount], 0
	mov	word [YKIdleCount], 0
	call	YKExitMutex
L_lab6app_43:
	jmp	L_lab6app_42
L_lab6app_44:
	mov	sp, bp
	pop	bp
	ret
L_lab6app_40:
	push	bp
	mov	bp, sp
	sub	sp, 8
	jmp	L_lab6app_41
	ALIGN	2
main:
	jmp	L_lab6app_46
L_lab6app_47:
	call	YKInitialize
	mov	word [GlobalFlag], 0
	mov	ax, 10
	push	ax
	mov	ax, MsgQ
	push	ax
	call	YKQCreate
	add	sp, 4
	mov	word [MsgQPtr], ax
	mov	al, 30
	push	ax
	mov	ax, (STaskStk+1024)
	push	ax
	mov	ax, STask
	push	ax
	call	YKNewTask
	add	sp, 6
	call	YKRun
	mov	sp, bp
	pop	bp
	ret
L_lab6app_46:
	push	bp
	mov	bp, sp
	jmp	L_lab6app_47
	ALIGN	2
MsgArray:
	TIMES	80 db 0
ATaskStk:
	TIMES	1024 db 0
BTaskStk:
	TIMES	1024 db 0
STaskStk:
	TIMES	1024 db 0
GlobalFlag:
	TIMES	2 db 0
MsgQ:
	TIMES	20 db 0
MsgQPtr:
	TIMES	2 db 0
