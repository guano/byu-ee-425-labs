; Generated by c86 (BYU-NASM) 5.1 (beta) from lab7app.i
	CPU	8086
	ALIGN	2
	jmp	main	; Jump to program start
L_lab7app_5:
	DB	"CharTask     (C)",0xA,0
L_lab7app_4:
	DB	"CharTask     (B)",0xA,0
L_lab7app_3:
	DB	"CharTask     (A)",0xA,0
L_lab7app_2:
	DB	"Oops! At least one event should be set in return value!",0xA,0
L_lab7app_1:
	DB	"Started CharTask     (2)",0xA,0
	ALIGN	2
CharTask:
	jmp	L_lab7app_6
L_lab7app_7:
	mov	ax, L_lab7app_1
	push	ax
	call	printString
	add	sp, 2
	jmp	L_lab7app_9
L_lab7app_8:
	xor	ax, ax
	push	ax
	mov	ax, 7
	push	ax
	push	word [charEvent]
	call	YKEventPend
	add	sp, 6
	mov	word [bp-2], ax
	mov	ax, word [bp-2]
	test	ax, ax
	jne	L_lab7app_11
	mov	ax, L_lab7app_2
	push	ax
	call	printString
	add	sp, 2
L_lab7app_11:
	mov	ax, word [bp-2]
	and	ax, 1
	je	L_lab7app_12
	mov	ax, L_lab7app_3
	push	ax
	call	printString
	add	sp, 2
	mov	ax, 1
	push	ax
	push	word [charEvent]
	call	YKEventReset
	add	sp, 4
L_lab7app_12:
	mov	ax, word [bp-2]
	and	ax, 2
	je	L_lab7app_13
	mov	ax, L_lab7app_4
	push	ax
	call	printString
	add	sp, 2
	mov	ax, 2
	push	ax
	push	word [charEvent]
	call	YKEventReset
	add	sp, 4
L_lab7app_13:
	mov	ax, word [bp-2]
	and	ax, 4
	je	L_lab7app_14
	mov	ax, L_lab7app_5
	push	ax
	call	printString
	add	sp, 2
	mov	ax, 4
	push	ax
	push	word [charEvent]
	call	YKEventReset
	add	sp, 4
L_lab7app_14:
L_lab7app_9:
	jmp	L_lab7app_8
L_lab7app_10:
	mov	sp, bp
	pop	bp
	ret
L_lab7app_6:
	push	bp
	mov	bp, sp
	push	cx
	jmp	L_lab7app_7
L_lab7app_18:
	DB	"AllCharsTask (D)",0xA,0
L_lab7app_17:
	DB	"Oops! Char events weren't reset by CharTask!",0xA,0
L_lab7app_16:
	DB	"Started AllCharsTask (3)",0xA,0
	ALIGN	2
AllCharsTask:
	jmp	L_lab7app_19
L_lab7app_20:
	mov	ax, L_lab7app_16
	push	ax
	call	printString
	add	sp, 2
	jmp	L_lab7app_22
L_lab7app_21:
	mov	ax, 1
	push	ax
	mov	ax, 7
	push	ax
	push	word [charEvent]
	call	YKEventPend
	add	sp, 6
	mov	word [bp-2], ax
	mov	ax, word [bp-2]
	test	ax, ax
	je	L_lab7app_24
	mov	ax, L_lab7app_17
	push	ax
	call	printString
	add	sp, 2
L_lab7app_24:
	mov	ax, L_lab7app_18
	push	ax
	call	printString
	add	sp, 2
L_lab7app_22:
	jmp	L_lab7app_21
L_lab7app_23:
	mov	sp, bp
	pop	bp
	ret
L_lab7app_19:
	push	bp
	mov	bp, sp
	push	cx
	jmp	L_lab7app_20
L_lab7app_28:
	DB	"AllNumsTask  (123)",0xA,0
L_lab7app_27:
	DB	"Oops! All events should be set in return value!",0xA,0
L_lab7app_26:
	DB	"Started AllNumsTask  (1)",0xA,0
	ALIGN	2
AllNumsTask:
	jmp	L_lab7app_29
L_lab7app_30:
	mov	ax, L_lab7app_26
	push	ax
	call	printString
	add	sp, 2
	jmp	L_lab7app_32
L_lab7app_31:
	mov	ax, 1
	push	ax
	mov	ax, 7
	push	ax
	push	word [numEvent]
	call	YKEventPend
	add	sp, 6
	mov	word [bp-2], ax
	cmp	word [bp-2], 7
	je	L_lab7app_34
	mov	ax, L_lab7app_27
	push	ax
	call	printString
	add	sp, 2
L_lab7app_34:
	mov	ax, L_lab7app_28
	push	ax
	call	printString
	add	sp, 2
	mov	ax, 7
	push	ax
	push	word [numEvent]
	call	YKEventReset
	add	sp, 4
L_lab7app_32:
	jmp	L_lab7app_31
L_lab7app_33:
	mov	sp, bp
	pop	bp
	ret
L_lab7app_29:
	push	bp
	mov	bp, sp
	push	cx
	jmp	L_lab7app_30
L_lab7app_40:
	DB	"% >>>>>",0xD,0xA,0
L_lab7app_39:
	DB	", CPU usage: ",0
L_lab7app_38:
	DB	"<<<<< Context switches: ",0
L_lab7app_37:
	DB	"Determining CPU capacity",0xD,0xA,0
L_lab7app_36:
	DB	"Welcome to the YAK kernel",0xD,0xA,0
	ALIGN	2
STask:
	jmp	L_lab7app_41
L_lab7app_42:
	mov	ax, 1
	push	ax
	call	YKDelayTask
	add	sp, 2
	mov	ax, L_lab7app_36
	push	ax
	call	printString
	add	sp, 2
	mov	ax, L_lab7app_37
	push	ax
	call	printString
	add	sp, 2
	mov	ax, 1
	push	ax
	call	YKDelayTask
	add	sp, 2
	mov	word [YKIdleCount], 0
	mov	ax, 5
	push	ax
	call	YKDelayTask
	add	sp, 2
	mov	ax, word [YKIdleCount]
	xor	dx, dx
	mov	cx, 25
	div	cx
	mov	word [bp-2], ax
	mov	word [YKIdleCount], 0
	mov	al, 2
	push	ax
	mov	ax, (CharTaskStk+1024)
	push	ax
	mov	ax, CharTask
	push	ax
	call	YKNewTask
	add	sp, 6
	mov	al, 1
	push	ax
	mov	ax, (AllNumsTaskStk+1024)
	push	ax
	mov	ax, AllNumsTask
	push	ax
	call	YKNewTask
	add	sp, 6
	mov	al, 3
	push	ax
	mov	ax, (AllCharsTaskStk+1024)
	push	ax
	mov	ax, AllCharsTask
	push	ax
	call	YKNewTask
	add	sp, 6
	jmp	L_lab7app_44
L_lab7app_43:
	mov	ax, 20
	push	ax
	call	YKDelayTask
	add	sp, 2
	call	YKEnterMutex
	mov	ax, word [YKCtxSwCount]
	mov	word [bp-4], ax
	mov	ax, word [YKIdleCount]
	mov	word [bp-6], ax
	call	YKExitMutex
	mov	ax, L_lab7app_38
	push	ax
	call	printString
	add	sp, 2
	push	word [bp-4]
	call	printInt
	add	sp, 2
	mov	ax, L_lab7app_39
	push	ax
	call	printString
	add	sp, 2
	mov	ax, word [bp-6]
	xor	dx, dx
	div	word [bp-2]
	mov	word [bp-8], ax
	mov	ax, 100
	sub	ax, word [bp-8]
	push	ax
	call	printInt
	add	sp, 2
	mov	ax, L_lab7app_40
	push	ax
	call	printString
	add	sp, 2
	call	YKEnterMutex
	mov	word [YKCtxSwCount], 0
	mov	word [YKIdleCount], 0
	call	YKExitMutex
L_lab7app_44:
	jmp	L_lab7app_43
L_lab7app_45:
	mov	sp, bp
	pop	bp
	ret
L_lab7app_41:
	push	bp
	mov	bp, sp
	sub	sp, 8
	jmp	L_lab7app_42
	ALIGN	2
main:
	jmp	L_lab7app_47
L_lab7app_48:
	call	YKInitialize
	xor	ax, ax
	push	ax
	call	YKEventCreate
	add	sp, 2
	mov	word [charEvent], ax
	xor	ax, ax
	push	ax
	call	YKEventCreate
	add	sp, 2
	mov	word [numEvent], ax
	xor	al, al
	push	ax
	mov	ax, (STaskStk+1024)
	push	ax
	mov	ax, STask
	push	ax
	call	YKNewTask
	add	sp, 6
	call	YKRun
	mov	sp, bp
	pop	bp
	ret
L_lab7app_47:
	push	bp
	mov	bp, sp
	jmp	L_lab7app_48
	ALIGN	2
charEvent:
	TIMES	2 db 0
numEvent:
	TIMES	2 db 0
CharTaskStk:
	TIMES	1024 db 0
AllCharsTaskStk:
	TIMES	1024 db 0
AllNumsTaskStk:
	TIMES	1024 db 0
STaskStk:
	TIMES	1024 db 0
