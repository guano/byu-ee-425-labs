; Generated by c86 (BYU-NASM) 5.1 (beta) from lab8app.i
	CPU	8086
	ALIGN	2
	jmp	main	; Jump to program start
	ALIGN	2
getMovePieceQueueArrayIndex:
	jmp	L_lab8app_1
L_lab8app_2:
	cmp	word [movePieceArrayIndex], 40
	jne	L_lab8app_3
	mov	word [movePieceArrayIndex], 0
L_lab8app_3:
	mov	ax, word [movePieceArrayIndex]
	inc	word [movePieceArrayIndex]
L_lab8app_4:
	mov	sp, bp
	pop	bp
	ret
L_lab8app_1:
	push	bp
	mov	bp, sp
	jmp	L_lab8app_2
	ALIGN	2
getLowerBucket:
	jmp	L_lab8app_6
L_lab8app_7:
	mov	word [bp-2], 0
	mov	word [bp-4], 0
	mov	ax, word [screen0]
	mov	word [bp-6], ax
	mov	ax, word [screen3]
	mov	word [bp-8], ax
	jmp	L_lab8app_9
L_lab8app_8:
	mov	ax, word [bp-2]
	inc	ax
	mov	word [bp-2], ax
	mov	ax, word [bp-6]
	shl	ax, 1
	mov	word [bp-6], ax
L_lab8app_9:
	mov	ax, word [bp-6]
	test	ax, ax
	jne	L_lab8app_8
L_lab8app_10:
	jmp	L_lab8app_12
L_lab8app_11:
	mov	ax, word [bp-4]
	inc	ax
	mov	word [bp-4], ax
	mov	ax, word [bp-8]
	shl	ax, 1
	mov	word [bp-8], ax
L_lab8app_12:
	mov	ax, word [bp-8]
	test	ax, ax
	jne	L_lab8app_11
L_lab8app_13:
	mov	ax, word [bp-2]
	cmp	ax, word [bp-4]
	jl	L_lab8app_14
	xor	ax, ax
	jmp	L_lab8app_15
L_lab8app_14:
	mov	ax, 1
L_lab8app_15:
L_lab8app_16:
	mov	sp, bp
	pop	bp
	ret
L_lab8app_6:
	push	bp
	mov	bp, sp
	sub	sp, 8
	jmp	L_lab8app_7
	ALIGN	2
isBucketFlat:
	jmp	L_lab8app_18
L_lab8app_19:
	mov	ax, word [bp+4]
	test	ax, ax
	je	L_lab8app_20
	mov	ax, word [screen3]
	mov	word [bp-2], ax
	mov	ax, word [screen5]
	mov	word [bp-4], ax
	jmp	L_lab8app_21
L_lab8app_20:
	mov	ax, word [screen0]
	mov	word [bp-2], ax
	mov	ax, word [screen2]
	mov	word [bp-4], ax
L_lab8app_21:
	jmp	L_lab8app_23
L_lab8app_22:
	mov	ax, word [bp-2]
	shl	ax, 1
	mov	ax, word [bp-4]
	shl	ax, 1
L_lab8app_23:
	mov	ax, word [bp-2]
	test	ax, ax
	je	L_lab8app_25
	mov	ax, word [bp-4]
	test	ax, ax
	jne	L_lab8app_22
L_lab8app_25:
L_lab8app_24:
	mov	ax, word [bp-4]
	cmp	ax, word [bp-2]
	je	L_lab8app_26
	xor	ax, ax
	jmp	L_lab8app_27
L_lab8app_26:
	mov	ax, 1
L_lab8app_27:
L_lab8app_28:
	mov	sp, bp
	pop	bp
	ret
L_lab8app_18:
	push	bp
	mov	bp, sp
	sub	sp, 4
	jmp	L_lab8app_19
L_lab8app_30:
	DB	"You really want a column not 0-5???",0xA,0
	ALIGN	2
getLowestSpace:
	jmp	L_lab8app_31
L_lab8app_32:
	mov	word [bp-2], 0
	mov	ax, word [bp+4]
	sub	ax, 0
	je	L_lab8app_35
	dec	ax
	je	L_lab8app_36
	dec	ax
	je	L_lab8app_37
	dec	ax
	je	L_lab8app_38
	dec	ax
	je	L_lab8app_39
	dec	ax
	je	L_lab8app_40
	jmp	L_lab8app_34
L_lab8app_35:
	mov	ax, word [screen0]
	mov	word [bp-4], ax
	jmp	L_lab8app_33
L_lab8app_36:
	mov	ax, word [screen1]
	mov	word [bp-4], ax
	jmp	L_lab8app_33
L_lab8app_37:
	mov	ax, word [screen2]
	mov	word [bp-4], ax
	jmp	L_lab8app_33
L_lab8app_38:
	mov	ax, word [screen3]
	mov	word [bp-4], ax
	jmp	L_lab8app_33
L_lab8app_39:
	mov	ax, word [screen4]
	mov	word [bp-4], ax
	jmp	L_lab8app_33
L_lab8app_40:
	mov	ax, word [screen5]
	mov	word [bp-4], ax
	jmp	L_lab8app_33
L_lab8app_34:
	mov	ax, L_lab8app_30
	push	ax
	call	printString
	add	sp, 2
L_lab8app_33:
	jmp	L_lab8app_42
L_lab8app_41:
	mov	ax, word [bp-2]
	inc	ax
	mov	word [bp-2], ax
	mov	ax, word [bp-4]
	shl	ax, 1
	mov	word [bp-4], ax
L_lab8app_42:
	mov	ax, word [bp-4]
	test	ax, ax
	jne	L_lab8app_41
L_lab8app_43:
	mov	sp, bp
	pop	bp
	ret
L_lab8app_31:
	push	bp
	mov	bp, sp
	sub	sp, 4
	jmp	L_lab8app_32
L_lab8app_45:
	DB	"CODE NOT WRITTEN :'(",0
	ALIGN	2
tryToClearLine:
	jmp	L_lab8app_46
L_lab8app_47:
	mov	ax, 1
	mov	cx, word [bp+4]
	shl	ax, cl
	and	ax, word [screen0]
	je	L_lab8app_48
	mov	ax, 1
	shl	ax, cl
	and	ax, word [screen1]
	je	L_lab8app_48
	mov	ax, 1
	shl	ax, cl
	and	ax, word [screen2]
	je	L_lab8app_48
	mov	ax, 1
	shl	ax, cl
	and	ax, word [screen3]
	je	L_lab8app_48
	mov	ax, 1
	shl	ax, cl
	and	ax, word [screen4]
	je	L_lab8app_48
	mov	ax, 1
	shl	ax, cl
	and	ax, word [screen5]
	je	L_lab8app_48
	mov	ax, word [bp+4]
	test	ax, ax
	jne	L_lab8app_49
	mov	ax, word [screen0]
	shl	ax, 1
	mov	word [screen0], ax
	mov	ax, word [screen1]
	shl	ax, 1
	mov	word [screen1], ax
	mov	ax, word [screen2]
	shl	ax, 1
	mov	word [screen2], ax
	mov	ax, word [screen3]
	shl	ax, 1
	mov	word [screen3], ax
	mov	ax, word [screen4]
	shl	ax, 1
	mov	word [screen4], ax
	mov	ax, word [screen5]
	shl	ax, 1
	mov	word [screen5], ax
	jmp	L_lab8app_50
L_lab8app_49:
	mov	ax, L_lab8app_45
	push	ax
	call	printString
	add	sp, 2
L_lab8app_50:
L_lab8app_48:
	mov	sp, bp
	pop	bp
	ret
L_lab8app_46:
	push	bp
	mov	bp, sp
	jmp	L_lab8app_47
L_lab8app_52:
	DB	"newPieceTask moving!",0xA,0
	ALIGN	2
newPieceTask:
	jmp	L_lab8app_53
L_lab8app_54:
	mov	ax, L_lab8app_52
	push	ax
	call	printString
	add	sp, 2
	call	StartSimptris
	jmp	L_lab8app_56
L_lab8app_55:
	push	word [newPieceQueuePTR]
	call	YKQPend
	add	sp, 2
	mov	word [bp-2], ax
	mov	si, word [bp-2]
	add	si, 2
	cmp	word [si], 1
	jne	L_lab8app_58
	call	getLowerBucket
	mov	word [bp-4], ax
	mov	si, word [bp-2]
	add	si, 6
	mov	ax, word [si]
	mov	word [bp-6], ax
	mov	ax, word [bp-4]
	test	ax, ax
	je	L_lab8app_59
	mov	ax, 3
	jmp	L_lab8app_60
L_lab8app_59:
	xor	ax, ax
L_lab8app_60:
	push	ax
	call	getLowestSpace
	add	sp, 2
	mov	word [bp-10], ax
	mov	ax, word [bp-4]
	mov	word [bp-12], ax
	mov	ax, word [bp-4]
	test	ax, ax
	je	L_lab8app_61
	mov	ax, 4
	jmp	L_lab8app_62
L_lab8app_61:
	mov	ax, 1
L_lab8app_62:
	mov	word [bp-4], ax
	jmp	L_lab8app_64
L_lab8app_63:
	call	getMovePieceQueueArrayIndex
	mov	word [bp-8], ax
	mov	si, word [bp-2]
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	mov	di, ax
	add	di, movePieceArray
	mov	ax, word [si]
	mov	word [di], ax
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 4
	mov	word [si], 1
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 2
	mov	word [si], SlidePiece
	mov	ax, word [bp-6]
	inc	ax
	mov	word [bp-6], ax
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	push	ax
	push	word [movePieceQueuePTR]
	call	YKQPost
	add	sp, 4
L_lab8app_64:
	mov	ax, word [bp-4]
	cmp	ax, word [bp-6]
	jg	L_lab8app_63
L_lab8app_65:
	jmp	L_lab8app_67
L_lab8app_66:
	call	getMovePieceQueueArrayIndex
	mov	word [bp-8], ax
	mov	si, word [bp-2]
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	mov	di, ax
	add	di, movePieceArray
	mov	ax, word [si]
	mov	word [di], ax
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 4
	mov	word [si], 0
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 2
	mov	word [si], SlidePiece
	mov	ax, word [bp-6]
	dec	ax
	mov	word [bp-6], ax
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	push	ax
	push	word [movePieceQueuePTR]
	call	YKQPost
	add	sp, 4
L_lab8app_67:
	mov	ax, word [bp-4]
	cmp	ax, word [bp-6]
	jl	L_lab8app_66
L_lab8app_68:
	mov	si, word [bp-2]
	add	si, 4
	mov	ax, word [si]
	test	ax, ax
	je	L_lab8app_69
	call	getMovePieceQueueArrayIndex
	mov	word [bp-14], ax
	mov	si, word [bp-2]
	mov	ax, word [bp-14]
	mov	cx, 6
	imul	cx
	mov	di, ax
	add	di, movePieceArray
	mov	ax, word [si]
	mov	word [di], ax
	mov	ax, word [bp-14]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 4
	mov	word [si], 1
	mov	ax, word [bp-14]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 2
	mov	word [si], RotatePiece
	mov	ax, word [bp-14]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	push	ax
	push	word [movePieceQueuePTR]
	call	YKQPost
	add	sp, 4
L_lab8app_69:
	mov	ax, word [bp-12]
	test	ax, ax
	jne	L_lab8app_70
	mov	ax, 1
	mov	cx, word [bp-10]
	shl	ax, cl
	or	ax, word [screen0]
	mov	word [screen0], ax
	mov	ax, 1
	shl	ax, cl
	or	ax, word [screen1]
	mov	word [screen1], ax
	mov	ax, 1
	shl	ax, cl
	or	ax, word [screen2]
	mov	word [screen2], ax
L_lab8app_70:
	push	word [bp-10]
	call	tryToClearLine
	add	sp, 2
	jmp	L_lab8app_71
L_lab8app_58:
	call	getLowerBucket
	mov	word [bp-4], ax
	mov	si, word [bp-2]
	add	si, 6
	mov	ax, word [si]
	mov	word [bp-6], ax
	push	word [bp-4]
	call	isBucketFlat
	add	sp, 2
	test	ax, ax
	je	L_lab8app_72
	mov	ax, word [bp-4]
	test	ax, ax
	je	L_lab8app_74
	xor	ax, ax
	jmp	L_lab8app_75
L_lab8app_74:
	mov	ax, 1
L_lab8app_75:
	push	ax
	call	isBucketFlat
	add	sp, 2
	test	ax, ax
	je	L_lab8app_73
	mov	ax, word [bp-4]
	test	ax, ax
	je	L_lab8app_76
	mov	word [bp-4], 3
	jmp	L_lab8app_78
L_lab8app_77:
	call	getMovePieceQueueArrayIndex
	mov	word [bp-8], ax
	mov	si, word [bp-2]
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	mov	di, ax
	add	di, movePieceArray
	mov	ax, word [si]
	mov	word [di], ax
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 4
	mov	word [si], 1
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 2
	mov	word [si], SlidePiece
	mov	ax, word [bp-6]
	inc	ax
	mov	word [bp-6], ax
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	push	ax
	push	word [movePieceQueuePTR]
	call	YKQPost
	add	sp, 4
L_lab8app_78:
	mov	ax, word [bp-4]
	cmp	ax, word [bp-6]
	jg	L_lab8app_77
L_lab8app_79:
	jmp	L_lab8app_81
L_lab8app_80:
	call	getMovePieceQueueArrayIndex
	mov	word [bp-8], ax
	mov	si, word [bp-2]
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	mov	di, ax
	add	di, movePieceArray
	mov	ax, word [si]
	mov	word [di], ax
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 4
	mov	word [si], 0
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 2
	mov	word [si], SlidePiece
	mov	ax, word [bp-6]
	dec	ax
	mov	word [bp-6], ax
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	push	ax
	push	word [movePieceQueuePTR]
	call	YKQPost
	add	sp, 4
L_lab8app_81:
	mov	ax, word [bp-4]
	cmp	ax, word [bp-6]
	jl	L_lab8app_80
L_lab8app_82:
	mov	si, word [bp-2]
	add	si, 4
	cmp	word [si], 3
	jne	L_lab8app_83
	call	getMovePieceQueueArrayIndex
	mov	word [bp-8], ax
	mov	si, word [bp-2]
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	mov	di, ax
	add	di, movePieceArray
	mov	ax, word [si]
	mov	word [di], ax
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 4
	mov	word [si], 0
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 2
	mov	word [si], RotatePiece
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	push	ax
	push	word [movePieceQueuePTR]
	call	YKQPost
	add	sp, 4
L_lab8app_83:
	mov	si, word [bp-2]
	add	si, 4
	cmp	word [si], 2
	jne	L_lab8app_84
	call	getMovePieceQueueArrayIndex
	mov	word [bp-8], ax
	mov	si, word [bp-2]
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	mov	di, ax
	add	di, movePieceArray
	mov	ax, word [si]
	mov	word [di], ax
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 4
	mov	word [si], 1
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 2
	mov	word [si], RotatePiece
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	push	ax
	push	word [movePieceQueuePTR]
	call	YKQPost
	add	sp, 4
L_lab8app_84:
	mov	si, word [bp-2]
	add	si, 4
	cmp	word [si], 2
	je	L_lab8app_86
	mov	si, word [bp-2]
	add	si, 4
	cmp	word [si], 1
	jne	L_lab8app_85
L_lab8app_86:
	call	getMovePieceQueueArrayIndex
	mov	word [bp-8], ax
	mov	si, word [bp-2]
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	mov	di, ax
	add	di, movePieceArray
	mov	ax, word [si]
	mov	word [di], ax
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 4
	mov	word [si], 1
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 2
	mov	word [si], RotatePiece
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	push	ax
	push	word [movePieceQueuePTR]
	call	YKQPost
	add	sp, 4
L_lab8app_85:
	jmp	L_lab8app_87
L_lab8app_76:
	mov	ax, word [bp-6]
	test	ax, ax
	jne	L_lab8app_88
	mov	si, word [bp-2]
	add	si, 4
	mov	ax, word [si]
	test	ax, ax
	je	L_lab8app_88
	call	getMovePieceQueueArrayIndex
	mov	word [bp-8], ax
	mov	si, word [bp-2]
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	mov	di, ax
	add	di, movePieceArray
	mov	ax, word [si]
	mov	word [di], ax
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 4
	mov	word [si], 1
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 2
	mov	word [si], SlidePiece
	mov	ax, word [bp-6]
	inc	ax
	mov	word [bp-6], ax
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	push	ax
	push	word [movePieceQueuePTR]
	call	YKQPost
	add	sp, 4
	jmp	L_lab8app_89
L_lab8app_88:
	cmp	word [bp-6], 5
	jne	L_lab8app_90
	mov	si, word [bp-2]
	add	si, 4
	mov	ax, word [si]
	test	ax, ax
	je	L_lab8app_90
	call	getMovePieceQueueArrayIndex
	mov	word [bp-8], ax
	mov	si, word [bp-2]
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	mov	di, ax
	add	di, movePieceArray
	mov	ax, word [si]
	mov	word [di], ax
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 4
	mov	word [si], 0
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 2
	mov	word [si], SlidePiece
	mov	ax, word [bp-6]
	dec	ax
	mov	word [bp-6], ax
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	push	ax
	push	word [movePieceQueuePTR]
	call	YKQPost
	add	sp, 4
L_lab8app_90:
L_lab8app_89:
	mov	si, word [bp-2]
	add	si, 4
	cmp	word [si], 3
	jne	L_lab8app_91
	call	getMovePieceQueueArrayIndex
	mov	word [bp-8], ax
	mov	si, word [bp-2]
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	mov	di, ax
	add	di, movePieceArray
	mov	ax, word [si]
	mov	word [di], ax
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 4
	mov	word [si], 0
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 2
	mov	word [si], RotatePiece
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	push	ax
	push	word [movePieceQueuePTR]
	call	YKQPost
	add	sp, 4
L_lab8app_91:
	mov	si, word [bp-2]
	add	si, 4
	cmp	word [si], 2
	jne	L_lab8app_92
	call	getMovePieceQueueArrayIndex
	mov	word [bp-8], ax
	mov	si, word [bp-2]
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	mov	di, ax
	add	di, movePieceArray
	mov	ax, word [si]
	mov	word [di], ax
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 4
	mov	word [si], 1
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 2
	mov	word [si], RotatePiece
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	push	ax
	push	word [movePieceQueuePTR]
	call	YKQPost
	add	sp, 4
L_lab8app_92:
	mov	si, word [bp-2]
	add	si, 4
	cmp	word [si], 2
	je	L_lab8app_94
	mov	si, word [bp-2]
	add	si, 4
	cmp	word [si], 1
	jne	L_lab8app_93
L_lab8app_94:
	call	getMovePieceQueueArrayIndex
	mov	word [bp-8], ax
	mov	si, word [bp-2]
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	mov	di, ax
	add	di, movePieceArray
	mov	ax, word [si]
	mov	word [di], ax
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 4
	mov	word [si], 1
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 2
	mov	word [si], RotatePiece
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	push	ax
	push	word [movePieceQueuePTR]
	call	YKQPost
	add	sp, 4
L_lab8app_93:
	jmp	L_lab8app_96
L_lab8app_95:
	call	getMovePieceQueueArrayIndex
	mov	word [bp-8], ax
	mov	si, word [bp-2]
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	mov	di, ax
	add	di, movePieceArray
	mov	ax, word [si]
	mov	word [di], ax
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 4
	mov	word [si], 0
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 2
	mov	word [si], SlidePiece
	mov	ax, word [bp-6]
	dec	ax
	mov	word [bp-6], ax
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	push	ax
	push	word [movePieceQueuePTR]
	call	YKQPost
	add	sp, 4
L_lab8app_96:
	mov	ax, word [bp-4]
	cmp	ax, word [bp-6]
	jl	L_lab8app_95
L_lab8app_97:
L_lab8app_87:
	jmp	L_lab8app_98
L_lab8app_73:
	mov	ax, word [bp-4]
	test	ax, ax
	je	L_lab8app_99
	xor	ax, ax
	jmp	L_lab8app_100
L_lab8app_99:
	mov	ax, 1
L_lab8app_100:
	mov	word [bp-4], ax
	mov	ax, word [bp-4]
	test	ax, ax
	je	L_lab8app_101
	mov	ax, 5
	jmp	L_lab8app_102
L_lab8app_101:
	mov	ax, 2
L_lab8app_102:
	mov	word [bp-4], ax
	cmp	word [bp-4], 5
	jne	L_lab8app_103
	mov	ax, word [bp-6]
	test	ax, ax
	jne	L_lab8app_104
	mov	si, word [bp-2]
	add	si, 4
	cmp	word [si], 2
	je	L_lab8app_104
	call	getMovePieceQueueArrayIndex
	mov	word [bp-8], ax
	mov	si, word [bp-2]
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	mov	di, ax
	add	di, movePieceArray
	mov	ax, word [si]
	mov	word [di], ax
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 4
	mov	word [si], 1
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 2
	mov	word [si], SlidePiece
	mov	ax, word [bp-6]
	inc	ax
	mov	word [bp-6], ax
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	push	ax
	push	word [movePieceQueuePTR]
	call	YKQPost
	add	sp, 4
	jmp	L_lab8app_105
L_lab8app_104:
	cmp	word [bp-6], 5
	jne	L_lab8app_106
	mov	si, word [bp-2]
	add	si, 4
	cmp	word [si], 2
	je	L_lab8app_106
	call	getMovePieceQueueArrayIndex
	mov	word [bp-8], ax
	mov	si, word [bp-2]
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	mov	di, ax
	add	di, movePieceArray
	mov	ax, word [si]
	mov	word [di], ax
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 4
	mov	word [si], 0
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 2
	mov	word [si], SlidePiece
	mov	ax, word [bp-6]
	dec	ax
	mov	word [bp-6], ax
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	push	ax
	push	word [movePieceQueuePTR]
	call	YKQPost
	add	sp, 4
L_lab8app_106:
L_lab8app_105:
	mov	si, word [bp-2]
	add	si, 4
	cmp	word [si], 1
	jne	L_lab8app_107
	call	getMovePieceQueueArrayIndex
	mov	word [bp-8], ax
	mov	si, word [bp-2]
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	mov	di, ax
	add	di, movePieceArray
	mov	ax, word [si]
	mov	word [di], ax
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 4
	mov	word [si], 0
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 2
	mov	word [si], RotatePiece
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	push	ax
	push	word [movePieceQueuePTR]
	call	YKQPost
	add	sp, 4
L_lab8app_107:
	mov	si, word [bp-2]
	add	si, 4
	mov	ax, word [si]
	test	ax, ax
	jne	L_lab8app_108
	call	getMovePieceQueueArrayIndex
	mov	word [bp-8], ax
	mov	si, word [bp-2]
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	mov	di, ax
	add	di, movePieceArray
	mov	ax, word [si]
	mov	word [di], ax
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 4
	mov	word [si], 1
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 2
	mov	word [si], RotatePiece
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	push	ax
	push	word [movePieceQueuePTR]
	call	YKQPost
	add	sp, 4
L_lab8app_108:
	mov	si, word [bp-2]
	add	si, 4
	mov	ax, word [si]
	test	ax, ax
	je	L_lab8app_110
	mov	si, word [bp-2]
	add	si, 4
	cmp	word [si], 3
	jne	L_lab8app_109
L_lab8app_110:
	call	getMovePieceQueueArrayIndex
	mov	word [bp-8], ax
	mov	si, word [bp-2]
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	mov	di, ax
	add	di, movePieceArray
	mov	ax, word [si]
	mov	word [di], ax
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 4
	mov	word [si], 1
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 2
	mov	word [si], RotatePiece
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	push	ax
	push	word [movePieceQueuePTR]
	call	YKQPost
	add	sp, 4
L_lab8app_109:
	jmp	L_lab8app_112
L_lab8app_111:
	call	getMovePieceQueueArrayIndex
	mov	word [bp-8], ax
	mov	si, word [bp-2]
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	mov	di, ax
	add	di, movePieceArray
	mov	ax, word [si]
	mov	word [di], ax
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 4
	mov	word [si], 1
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 2
	mov	word [si], SlidePiece
	mov	ax, word [bp-6]
	inc	ax
	mov	word [bp-6], ax
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	push	ax
	push	word [movePieceQueuePTR]
	call	YKQPost
	add	sp, 4
L_lab8app_112:
	mov	ax, word [bp-4]
	cmp	ax, word [bp-6]
	jg	L_lab8app_111
L_lab8app_113:
	jmp	L_lab8app_114
L_lab8app_103:
	jmp	L_lab8app_116
L_lab8app_115:
	call	getMovePieceQueueArrayIndex
	mov	word [bp-8], ax
	mov	si, word [bp-2]
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	mov	di, ax
	add	di, movePieceArray
	mov	ax, word [si]
	mov	word [di], ax
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 4
	mov	word [si], 1
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 2
	mov	word [si], SlidePiece
	mov	ax, word [bp-6]
	inc	ax
	mov	word [bp-6], ax
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	push	ax
	push	word [movePieceQueuePTR]
	call	YKQPost
	add	sp, 4
L_lab8app_116:
	mov	ax, word [bp-4]
	cmp	ax, word [bp-6]
	jg	L_lab8app_115
L_lab8app_117:
	jmp	L_lab8app_119
L_lab8app_118:
	call	getMovePieceQueueArrayIndex
	mov	word [bp-8], ax
	mov	si, word [bp-2]
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	mov	di, ax
	add	di, movePieceArray
	mov	ax, word [si]
	mov	word [di], ax
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 4
	mov	word [si], 0
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 2
	mov	word [si], SlidePiece
	mov	ax, word [bp-6]
	dec	ax
	mov	word [bp-6], ax
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	push	ax
	push	word [movePieceQueuePTR]
	call	YKQPost
	add	sp, 4
L_lab8app_119:
	mov	ax, word [bp-4]
	cmp	ax, word [bp-6]
	jl	L_lab8app_118
L_lab8app_120:
	mov	si, word [bp-2]
	add	si, 4
	cmp	word [si], 1
	jne	L_lab8app_121
	call	getMovePieceQueueArrayIndex
	mov	word [bp-8], ax
	mov	si, word [bp-2]
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	mov	di, ax
	add	di, movePieceArray
	mov	ax, word [si]
	mov	word [di], ax
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 4
	mov	word [si], 0
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 2
	mov	word [si], RotatePiece
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	push	ax
	push	word [movePieceQueuePTR]
	call	YKQPost
	add	sp, 4
L_lab8app_121:
	mov	si, word [bp-2]
	add	si, 4
	mov	ax, word [si]
	test	ax, ax
	jne	L_lab8app_122
	call	getMovePieceQueueArrayIndex
	mov	word [bp-8], ax
	mov	si, word [bp-2]
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	mov	di, ax
	add	di, movePieceArray
	mov	ax, word [si]
	mov	word [di], ax
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 4
	mov	word [si], 1
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 2
	mov	word [si], RotatePiece
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	push	ax
	push	word [movePieceQueuePTR]
	call	YKQPost
	add	sp, 4
L_lab8app_122:
	mov	si, word [bp-2]
	add	si, 4
	mov	ax, word [si]
	test	ax, ax
	je	L_lab8app_124
	mov	si, word [bp-2]
	add	si, 4
	cmp	word [si], 3
	jne	L_lab8app_123
L_lab8app_124:
	call	getMovePieceQueueArrayIndex
	mov	word [bp-8], ax
	mov	si, word [bp-2]
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	mov	di, ax
	add	di, movePieceArray
	mov	ax, word [si]
	mov	word [di], ax
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 4
	mov	word [si], 1
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 2
	mov	word [si], RotatePiece
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	push	ax
	push	word [movePieceQueuePTR]
	call	YKQPost
	add	sp, 4
L_lab8app_123:
L_lab8app_114:
L_lab8app_98:
	jmp	L_lab8app_125
L_lab8app_72:
	mov	ax, word [bp-4]
	test	ax, ax
	je	L_lab8app_126
	mov	ax, 5
	jmp	L_lab8app_127
L_lab8app_126:
	mov	ax, 2
L_lab8app_127:
	mov	word [bp-4], ax
	cmp	word [bp-4], 5
	jne	L_lab8app_128
	mov	ax, word [bp-6]
	test	ax, ax
	jne	L_lab8app_129
	mov	si, word [bp-2]
	add	si, 4
	cmp	word [si], 2
	je	L_lab8app_129
	call	getMovePieceQueueArrayIndex
	mov	word [bp-8], ax
	mov	si, word [bp-2]
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	mov	di, ax
	add	di, movePieceArray
	mov	ax, word [si]
	mov	word [di], ax
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 4
	mov	word [si], 1
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 2
	mov	word [si], SlidePiece
	mov	ax, word [bp-6]
	inc	ax
	mov	word [bp-6], ax
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	push	ax
	push	word [movePieceQueuePTR]
	call	YKQPost
	add	sp, 4
	jmp	L_lab8app_130
L_lab8app_129:
	cmp	word [bp-6], 5
	jne	L_lab8app_131
	mov	si, word [bp-2]
	add	si, 4
	cmp	word [si], 2
	je	L_lab8app_131
	call	getMovePieceQueueArrayIndex
	mov	word [bp-8], ax
	mov	si, word [bp-2]
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	mov	di, ax
	add	di, movePieceArray
	mov	ax, word [si]
	mov	word [di], ax
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 4
	mov	word [si], 0
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 2
	mov	word [si], SlidePiece
	mov	ax, word [bp-6]
	dec	ax
	mov	word [bp-6], ax
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	push	ax
	push	word [movePieceQueuePTR]
	call	YKQPost
	add	sp, 4
L_lab8app_131:
L_lab8app_130:
	mov	si, word [bp-2]
	add	si, 4
	cmp	word [si], 1
	jne	L_lab8app_132
	call	getMovePieceQueueArrayIndex
	mov	word [bp-8], ax
	mov	si, word [bp-2]
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	mov	di, ax
	add	di, movePieceArray
	mov	ax, word [si]
	mov	word [di], ax
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 4
	mov	word [si], 0
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 2
	mov	word [si], RotatePiece
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	push	ax
	push	word [movePieceQueuePTR]
	call	YKQPost
	add	sp, 4
L_lab8app_132:
	mov	si, word [bp-2]
	add	si, 4
	mov	ax, word [si]
	test	ax, ax
	jne	L_lab8app_133
	call	getMovePieceQueueArrayIndex
	mov	word [bp-8], ax
	mov	si, word [bp-2]
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	mov	di, ax
	add	di, movePieceArray
	mov	ax, word [si]
	mov	word [di], ax
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 4
	mov	word [si], 1
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 2
	mov	word [si], RotatePiece
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	push	ax
	push	word [movePieceQueuePTR]
	call	YKQPost
	add	sp, 4
L_lab8app_133:
	mov	si, word [bp-2]
	add	si, 4
	mov	ax, word [si]
	test	ax, ax
	je	L_lab8app_135
	mov	si, word [bp-2]
	add	si, 4
	cmp	word [si], 3
	jne	L_lab8app_134
L_lab8app_135:
	call	getMovePieceQueueArrayIndex
	mov	word [bp-8], ax
	mov	si, word [bp-2]
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	mov	di, ax
	add	di, movePieceArray
	mov	ax, word [si]
	mov	word [di], ax
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 4
	mov	word [si], 1
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 2
	mov	word [si], RotatePiece
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	push	ax
	push	word [movePieceQueuePTR]
	call	YKQPost
	add	sp, 4
L_lab8app_134:
	jmp	L_lab8app_137
L_lab8app_136:
	call	getMovePieceQueueArrayIndex
	mov	word [bp-8], ax
	mov	si, word [bp-2]
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	mov	di, ax
	add	di, movePieceArray
	mov	ax, word [si]
	mov	word [di], ax
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 4
	mov	word [si], 1
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 2
	mov	word [si], SlidePiece
	mov	ax, word [bp-6]
	inc	ax
	mov	word [bp-6], ax
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	push	ax
	push	word [movePieceQueuePTR]
	call	YKQPost
	add	sp, 4
L_lab8app_137:
	mov	ax, word [bp-4]
	cmp	ax, word [bp-6]
	jg	L_lab8app_136
L_lab8app_138:
	jmp	L_lab8app_139
L_lab8app_128:
	jmp	L_lab8app_141
L_lab8app_140:
	call	getMovePieceQueueArrayIndex
	mov	word [bp-8], ax
	mov	si, word [bp-2]
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	mov	di, ax
	add	di, movePieceArray
	mov	ax, word [si]
	mov	word [di], ax
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 4
	mov	word [si], 1
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 2
	mov	word [si], SlidePiece
	mov	ax, word [bp-6]
	inc	ax
	mov	word [bp-6], ax
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	push	ax
	push	word [movePieceQueuePTR]
	call	YKQPost
	add	sp, 4
L_lab8app_141:
	mov	ax, word [bp-4]
	cmp	ax, word [bp-6]
	jg	L_lab8app_140
L_lab8app_142:
	jmp	L_lab8app_144
L_lab8app_143:
	call	getMovePieceQueueArrayIndex
	mov	word [bp-8], ax
	mov	si, word [bp-2]
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	mov	di, ax
	add	di, movePieceArray
	mov	ax, word [si]
	mov	word [di], ax
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 4
	mov	word [si], 0
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 2
	mov	word [si], SlidePiece
	mov	ax, word [bp-6]
	dec	ax
	mov	word [bp-6], ax
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	push	ax
	push	word [movePieceQueuePTR]
	call	YKQPost
	add	sp, 4
L_lab8app_144:
	mov	ax, word [bp-4]
	cmp	ax, word [bp-6]
	jl	L_lab8app_143
L_lab8app_145:
	mov	si, word [bp-2]
	add	si, 4
	cmp	word [si], 1
	jne	L_lab8app_146
	call	getMovePieceQueueArrayIndex
	mov	word [bp-8], ax
	mov	si, word [bp-2]
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	mov	di, ax
	add	di, movePieceArray
	mov	ax, word [si]
	mov	word [di], ax
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 4
	mov	word [si], 0
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 2
	mov	word [si], RotatePiece
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	push	ax
	push	word [movePieceQueuePTR]
	call	YKQPost
	add	sp, 4
L_lab8app_146:
	mov	si, word [bp-2]
	add	si, 4
	mov	ax, word [si]
	test	ax, ax
	jne	L_lab8app_147
	call	getMovePieceQueueArrayIndex
	mov	word [bp-8], ax
	mov	si, word [bp-2]
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	mov	di, ax
	add	di, movePieceArray
	mov	ax, word [si]
	mov	word [di], ax
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 4
	mov	word [si], 1
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 2
	mov	word [si], RotatePiece
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	push	ax
	push	word [movePieceQueuePTR]
	call	YKQPost
	add	sp, 4
L_lab8app_147:
	mov	si, word [bp-2]
	add	si, 4
	mov	ax, word [si]
	test	ax, ax
	je	L_lab8app_149
	mov	si, word [bp-2]
	add	si, 4
	cmp	word [si], 3
	jne	L_lab8app_148
L_lab8app_149:
	call	getMovePieceQueueArrayIndex
	mov	word [bp-8], ax
	mov	si, word [bp-2]
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	mov	di, ax
	add	di, movePieceArray
	mov	ax, word [si]
	mov	word [di], ax
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 4
	mov	word [si], 1
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	mov	si, ax
	add	si, 2
	mov	word [si], RotatePiece
	mov	ax, word [bp-8]
	mov	cx, 6
	imul	cx
	add	ax, movePieceArray
	push	ax
	push	word [movePieceQueuePTR]
	call	YKQPost
	add	sp, 4
L_lab8app_148:
L_lab8app_139:
L_lab8app_125:
L_lab8app_71:
L_lab8app_56:
	jmp	L_lab8app_55
L_lab8app_57:
	mov	sp, bp
	pop	bp
	ret
L_lab8app_53:
	push	bp
	mov	bp, sp
	sub	sp, 14
	jmp	L_lab8app_54
L_lab8app_153:
	DB	"got a piece. ID ",0
L_lab8app_152:
	DB	"piece move event. getting move now",0xA,0
L_lab8app_151:
	DB	"movePieceTask moveing!",0xA,0
	ALIGN	2
movePieceTask:
	jmp	L_lab8app_154
L_lab8app_155:
	mov	ax, L_lab8app_151
	push	ax
	call	printString
	add	sp, 2
	jmp	L_lab8app_157
L_lab8app_156:
	mov	ax, 1
	push	ax
	mov	ax, 1
	push	ax
	push	word [pieceMoveEvent]
	call	YKEventPend
	add	sp, 6
	mov	ax, 1
	push	ax
	push	word [pieceMoveEvent]
	call	YKEventReset
	add	sp, 4
	mov	ax, L_lab8app_152
	push	ax
	call	printString
	add	sp, 2
	push	word [movePieceQueuePTR]
	call	YKQPend
	add	sp, 2
	mov	word [bp-2], ax
	mov	ax, L_lab8app_153
	push	ax
	call	printString
	add	sp, 2
	mov	si, word [bp-2]
	push	word [si]
	call	printInt
	add	sp, 2
	mov	ax, (L_lab8app_30+35)
	push	ax
	call	printString
	add	sp, 2
	mov	si, word [bp-2]
	add	si, 4
	push	word [si]
	mov	si, word [bp-2]
	push	word [si]
	add	si, 2
	mov	si, word [si]
	call	si
	add	sp, 4
L_lab8app_157:
	jmp	L_lab8app_156
L_lab8app_158:
	mov	sp, bp
	pop	bp
	ret
L_lab8app_154:
	push	bp
	mov	bp, sp
	push	cx
	jmp	L_lab8app_155
	ALIGN	2
main:
	jmp	L_lab8app_160
L_lab8app_161:
	call	YKInitialize
	mov	ax, 10
	push	ax
	mov	ax, newPieceQueue
	push	ax
	call	YKQCreate
	add	sp, 4
	mov	word [newPieceQueuePTR], ax
	mov	ax, 20
	push	ax
	mov	ax, movePieceQueue
	push	ax
	call	YKQCreate
	add	sp, 4
	mov	word [movePieceQueuePTR], ax
	mov	ax, 1
	push	ax
	call	YKEventCreate
	add	sp, 2
	mov	word [pieceMoveEvent], ax
	mov	ax, 191
	xor	dx, dx
	push	dx
	push	ax
	call	SeedSimptris
	add	sp, 4
	mov	al, 2
	push	ax
	mov	ax, (newPieceTaskStk+1024)
	push	ax
	mov	ax, newPieceTask
	push	ax
	call	YKNewTask
	add	sp, 6
	mov	al, 3
	push	ax
	mov	ax, (movePieceTaskStk+1024)
	push	ax
	mov	ax, movePieceTask
	push	ax
	call	YKNewTask
	add	sp, 6
	call	YKRun
	mov	sp, bp
	pop	bp
	ret
L_lab8app_160:
	push	bp
	mov	bp, sp
	jmp	L_lab8app_161
	ALIGN	2
movePieceQueuePTR:
	TIMES	2 db 0
newPieceQueuePTR:
	TIMES	2 db 0
pieceMoveEvent:
	TIMES	2 db 0
movePieceTaskStk:
	TIMES	1024 db 0
newPieceTaskStk:
	TIMES	1024 db 0
newPieceArray:
	TIMES	160 db 0
newPieceQueue:
	TIMES	20 db 0
movePieceArray:
	TIMES	240 db 0
movePieceArrayIndex:
	TIMES	2 db 0
movePieceQueue:
	TIMES	40 db 0
screen0:
	TIMES	2 db 0
screen1:
	TIMES	2 db 0
screen2:
	TIMES	2 db 0
screen3:
	TIMES	2 db 0
screen4:
	TIMES	2 db 0
screen5:
	TIMES	2 db 0
