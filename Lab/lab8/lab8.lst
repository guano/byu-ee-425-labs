 LINE  | ADDRESS  | HEX DUMP                  | ASSEMBLY
-------|----------|---------------------------|----------------------------
     1 |          |                           |         CPU     8086
     2 |          |                           |         ORG     0h
     3 |          |                           | InterruptVectorTable:
     4 |          |                           |         ; Internal x86 Interrupts:
     5 | 00000000 | 00000000                  |         dd      0 ; Reserved (Div err)  ; Int 00h
     6 | 00000004 | 00000000                  |         dd      0 ; Reserved (Step)     ; Int 01h
     7 | 00000008 | 00000000                  |         dd      0 ; Reserved (NMI)      ; Int 02h
     8 | 0000000C | 00000000                  |         dd      0 ; Reserved (Break)    ; Int 03h
     9 | 00000010 | 00000000                  |         dd      0 ; Reserved (Overflow) ; Int 04h
    10 | 00000014 | 00000000                  |         dd      0                       ; Int 05h
    11 | 00000018 | 00000000                  |         dd      0                       ; Int 06h
    12 | 0000001C | 00000000                  |         dd      0                       ; Int 07h
    13 |          |                           |         ; Hardware Interrupts:
    14 | 00000020 | [C8080000]                |         dd      isr_reset ; Reset               ; Int 08h (IRQ 0)
    15 | 00000024 | [26090000]                |         dd      isr_tick ; Tick                ; Int 09h (IRQ 1)
    16 | 00000028 | [F7080000]                |         dd      isr_keypress ; Keyboard            ; Int 0Ah (IRQ 2)
    17 | 0000002C | [55090000]                |         dd      isr_game_over ; Simptris Game Over  ; Int 0Bh (IRQ 3)
    18 | 00000030 | [84090000]                |         dd      isr_new_piece ; Simptris New Piece  ; Int 0Ch (IRQ 4)
    19 | 00000034 | [B3090000]                |         dd      isr_received ; Simptris Received   ; Int 0Dh (IRQ 5)
    20 | 00000038 | [E2090000]                |         dd      isr_touchdown ; Simptris Touchdown  ; Int 0Eh (IRQ 6)
    21 | 0000003C | [E7090000]                |         dd      isr_clear ; Simptris Clear      ; Int 0Fh (IRQ 7)
    22 |          |                           |         ; Software Interrupts:
    23 | 00000040 | 00000000                  |         dd      0 ; Reserved (PC BIOS)  ; Int 10h
    24 | 00000044 | 00000000                  |         dd      0                       ; Int 11h
    25 | 00000048 | 00000000                  |         dd      0                       ; Int 12h
    26 | 0000004C | 00000000                  |         dd      0                       ; Int 13h
    27 | 00000050 | 00000000                  |         dd      0                       ; Int 14h
    28 | 00000054 | 00000000                  |         dd      0                       ; Int 15h
    29 | 00000058 | 00000000                  |         dd      0                       ; Int 16h
    30 | 0000005C | 00000000                  |         dd      0                       ; Int 17h
    31 | 00000060 | 00000000                  |         dd      0                       ; Int 18h
    32 | 00000064 | 00000000                  |         dd      0                       ; Int 19h
    33 | 00000068 | 00000000                  |         dd      0                       ; Int 1Ah
    34 | 0000006C | 00000000                  |         dd      0                       ; Int 1Bh
    35 | 00000070 | 00000000                  |         dd      0                       ; Int 1Ch
    36 | 00000074 | 00000000                  |         dd      0                       ; Int 1Dh
    37 | 00000078 | 00000000                  |         dd      0                       ; Int 1Eh
    38 | 0000007C | 00000000                  |         dd      0                       ; Int 1Fh
    39 | 00000080 | 00000000                  |         dd      0                       ; Int 20h
    40 | 00000084 | 00000000                  |         dd      0 ; Reserved (DOS)      ; Int 21h
    41 | 00000088 | 00000000                  |         dd      0 ; Simptris Services   ; Int 22h
    42 | 0000008C | 00000000                  |         dd      0                       ; Int 23h
    43 | 00000090 | 00000000                  |         dd      0                       ; Int 24h
    44 | 00000094 | 00000000                  |         dd      0                       ; Int 25h
    45 | 00000098 | 00000000                  |         dd      0                       ; Int 26h
    46 | 0000009C | 00000000                  |         dd      0                       ; Int 27h
    47 | 000000A0 | 00000000                  |         dd      0                       ; Int 28h
    48 | 000000A4 | 00000000                  |         dd      0                       ; Int 29h
    49 | 000000A8 | 00000000                  |         dd      0                       ; Int 2Ah
    50 | 000000AC | 00000000                  |         dd      0                       ; Int 2Bh
    51 | 000000B0 | 00000000                  |         dd      0                       ; Int 2Ch
    52 | 000000B4 | 00000000                  |         dd      0                       ; Int 2Dh
    53 | 000000B8 | 00000000                  |         dd      0                       ; Int 2Eh
    54 | 000000BC | 00000000                  |         dd      0                       ; Int 2Fh
    55 |          |                           | KeyBuffer:                              ; Address 0xC0
    56 | 000000C0 | 0000                      |         dw      0
    57 |          |                           | NewPieceType:                           ; Address 0xC2
    58 | 000000C2 | 0000                      |         dw      0
    59 |          |                           | NewPieceID:                             ; Address 0xC4
    60 | 000000C4 | 0000                      |         dw      0
    61 |          |                           | NewPieceOrientation:                    ; Address 0xC6
    62 | 000000C6 | 0000                      |         dw      0
    63 |          |                           | NewPieceColumn:                         ; Address 0xC8
    64 | 000000C8 | 0000                      |         dw      0
    65 |          |                           | TouchdownID:                            ; Address 0xCA
    66 | 000000CA | 0000                      | 	dw	0
    67 |          |                           | ScreenBitMap0:                          ; Address 0xCC
    68 | 000000CC | 0000                      |         dw      0
    69 |          |                           | ScreenBitMap1:
    70 | 000000CE | 0000                      |         dw      0
    71 |          |                           | ScreenBitMap2:
    72 | 000000D0 | 0000                      |         dw      0
    73 |          |                           | ScreenBitMap3:
    74 | 000000D2 | 0000                      |         dw      0
    75 |          |                           | ScreenBitMap4:
    76 | 000000D4 | 0000                      |         dw      0
    77 |          |                           | ScreenBitMap5:
    78 | 000000D6 | 0000                      |         dw      0
    79 | 000000D8 | 00<rept>                  | TIMES   100h-($-$$) db  0               ; Fill up to (but not including) address 100h with 0
    80 | 00000100 | E99928                    | 	jmp	main
    81 |          |                           | ; This file contains support routines for 32-bit on the 8086.
    82 |          |                           | ; It is intended for use code generated by the C86 compiler.
    83 |          |                           | ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    84 |          |                           | SR_asldiv:			; l1 /= l2
    85 | 00000103 | 55                        | 	push	bp
    86 | 00000104 | 89E5                      | 	mov	bp,sp
    87 | 00000106 | 53                        | 	push	bx
    88 | 00000107 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
    89 | 0000010A | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
    90 | 0000010D | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
    91 | 00000110 | FF7702                    | 	push	word [bx+2]	; Push hi l1
    92 | 00000113 | FF37                      | 	push	word [bx]	; Push lo l1
    93 | 00000115 | E83D01                    | 	call	SR_ldiv
    94 | 00000118 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
    95 | 0000011B | 895702                    | 	mov	[bx+2],dx	; Store result
    96 | 0000011E | 8907                      | 	mov	[bx],ax
    97 | 00000120 | 5B                        | 	pop	bx
    98 | 00000121 | 5D                        | 	pop	bp
    99 | 00000122 | C3                        | 	ret
   100 |          |                           | SR_aslmod:			; l1 %= l2
   101 | 00000123 | 55                        | 	push	bp
   102 | 00000124 | 89E5                      | 	mov	bp,sp
   103 | 00000126 | 53                        | 	push	bx
   104 | 00000127 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
   105 | 0000012A | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
   106 | 0000012D | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
   107 | 00000130 | FF7702                    | 	push	word [bx+2]	; Push hi l1
   108 | 00000133 | FF37                      | 	push	word [bx]	; Push lo l1
   109 | 00000135 | E82C01                    | 	call	SR_lmod
   110 | 00000138 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
   111 | 0000013B | 895702                    | 	mov	[bx+2],dx	; Store result
   112 | 0000013E | 8907                      | 	mov	[bx],ax
   113 | 00000140 | 5B                        | 	pop	bx
   114 | 00000141 | 5D                        | 	pop	bp
   115 | 00000142 | C3                        | 	ret
   116 |          |                           | SR_aslmul:			; l1 *= l2
   117 | 00000143 | 55                        | 	push	bp
   118 | 00000144 | 89E5                      | 	mov	bp,sp
   119 | 00000146 | 53                        | 	push	bx
   120 | 00000147 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
   121 | 0000014A | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
   122 | 0000014D | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
   123 | 00000150 | FF7702                    | 	push	word [bx+2]	; Push hi l1
   124 | 00000153 | FF37                      | 	push	word [bx]	; Push lo l1
   125 | 00000155 | E84002                    | 	call	SR_lmul
   126 | 00000158 | 83C408                    | 	add	sp,8
   127 | 0000015B | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
   128 | 0000015E | 895702                    | 	mov	[bx+2],dx	; Store result
   129 | 00000161 | 8907                      | 	mov	[bx],ax
   130 | 00000163 | 5B                        | 	pop	bx
   131 | 00000164 | 5D                        | 	pop	bp
   132 | 00000165 | C3                        | 	ret
   133 |          |                           | SR_aslshl:			; l1 <<= l2
   134 | 00000166 | 55                        | 	push	bp
   135 | 00000167 | 89E5                      | 	mov	bp,sp
   136 | 00000169 | 53                        | 	push	bx
   137 | 0000016A | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
   138 | 0000016D | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
   139 | 00000170 | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
   140 | 00000173 | FF7702                    | 	push	word [bx+2]	; Push hi l1
   141 | 00000176 | FF37                      | 	push	word [bx]	; Push lo l1
   142 | 00000178 | E88801                    | 	call	SR_lshl
   143 | 0000017B | 83C408                    | 	add	sp,8
   144 | 0000017E | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
   145 | 00000181 | 895702                    | 	mov	[bx+2],dx	; Store result
   146 | 00000184 | 8907                      | 	mov	[bx],ax
   147 | 00000186 | 5B                        | 	pop	bx
   148 | 00000187 | 5D                        | 	pop	bp
   149 | 00000188 | C3                        | 	ret
   150 |          |                           | SR_aslshr:			; l1 >>= l2
   151 | 00000189 | 55                        | 	push	bp
   152 | 0000018A | 89E5                      | 	mov	bp,sp
   153 | 0000018C | 53                        | 	push	bx
   154 | 0000018D | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
   155 | 00000190 | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
   156 | 00000193 | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
   157 | 00000196 | FF7702                    | 	push	word [bx+2]	; Push hi l1
   158 | 00000199 | FF37                      | 	push	word [bx]	; Push lo l1
   159 | 0000019B | E89701                    | 	call	SR_lshr
   160 | 0000019E | 83C408                    | 	add	sp,8
   161 | 000001A1 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
   162 | 000001A4 | 895702                    | 	mov	[bx+2],dx	; Store result
   163 | 000001A7 | 8907                      | 	mov	[bx],ax
   164 | 000001A9 | 5B                        | 	pop	bx
   165 | 000001AA | 5D                        | 	pop	bp
   166 | 000001AB | C3                        | 	ret
   167 |          |                           | 
   168 |          |                           | 
   169 |          |                           | SR_asuldiv:			; u1 /= u2
   170 | 000001AC | 55                        | 	push	bp
   171 | 000001AD | 89E5                      | 	mov	bp,sp
   172 | 000001AF | 53                        | 	push	bx
   173 | 000001B0 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   174 | 000001B3 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   175 | 000001B6 | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   176 | 000001B9 | FF7702                    | 	push	word [bx+2]	; Push hi u1
   177 | 000001BC | FF37                      | 	push	word [bx]	; Push lo u1
   178 | 000001BE | E89B00                    | 	call	SR_uldiv
   179 | 000001C1 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   180 | 000001C4 | 895702                    | 	mov	[bx+2],dx	; Store result
   181 | 000001C7 | 8907                      | 	mov	[bx],ax
   182 | 000001C9 | 5B                        | 	pop	bx
   183 | 000001CA | 5D                        | 	pop	bp
   184 | 000001CB | C3                        | 	ret
   185 |          |                           | SR_asilmod:			; u1 %= u2
   186 | 000001CC | 55                        | 	push	bp
   187 | 000001CD | 89E5                      | 	mov	bp,sp
   188 | 000001CF | 53                        | 	push	bx
   189 | 000001D0 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   190 | 000001D3 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   191 | 000001D6 | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   192 | 000001D9 | FF7702                    | 	push	word [bx+2]	; Push hi u1
   193 | 000001DC | FF37                      | 	push	word [bx]	; Push lo u1
   194 | 000001DE | E88B00                    | 	call	SR_ilmod
   195 | 000001E1 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   196 | 000001E4 | 895702                    | 	mov	[bx+2],dx	; Store result
   197 | 000001E7 | 8907                      | 	mov	[bx],ax
   198 | 000001E9 | 5B                        | 	pop	bx
   199 | 000001EA | 5D                        | 	pop	bp
   200 | 000001EB | C3                        | 	ret
   201 |          |                           | SR_asulmul:			; u1 *= u2
   202 | 000001EC | 55                        | 	push	bp
   203 | 000001ED | 89E5                      | 	mov	bp,sp
   204 | 000001EF | 53                        | 	push	bx
   205 | 000001F0 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   206 | 000001F3 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   207 | 000001F6 | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   208 | 000001F9 | FF7702                    | 	push	word [bx+2]	; Push hi u1
   209 | 000001FC | FF37                      | 	push	word [bx]	; Push lo u1
   210 | 000001FE | E89701                    | 	call	SR_ulmul
   211 | 00000201 | 83C408                    | 	add	sp,8
   212 | 00000204 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   213 | 00000207 | 895702                    | 	mov	[bx+2],dx	; Store result
   214 | 0000020A | 8907                      | 	mov	[bx],ax
   215 | 0000020C | 5B                        | 	pop	bx
   216 | 0000020D | 5D                        | 	pop	bp
   217 | 0000020E | C3                        | 	ret
   218 |          |                           | SR_asulshl:			; u1 << u2
   219 | 0000020F | 55                        | 	push	bp
   220 | 00000210 | 89E5                      | 	mov	bp,sp
   221 | 00000212 | 53                        | 	push	bx
   222 | 00000213 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   223 | 00000216 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   224 | 00000219 | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   225 | 0000021C | FF7702                    | 	push	word [bx+2]	; Push hi u1
   226 | 0000021F | FF37                      | 	push	word [bx]	; Push lo u1
   227 | 00000221 | E8DF00                    | 	call	SR_ulshl
   228 | 00000224 | 83C408                    | 	add	sp,8
   229 | 00000227 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   230 | 0000022A | 895702                    | 	mov	[bx+2],dx	; Store result
   231 | 0000022D | 8907                      | 	mov	[bx],ax
   232 | 0000022F | 5B                        | 	pop	bx
   233 | 00000230 | 5D                        | 	pop	bp
   234 | 00000231 | C3                        | 	ret
   235 |          |                           | SR_asulshr:			; u1 >> u2
   236 | 00000232 | 55                        | 	push	bp
   237 | 00000233 | 89E5                      | 	mov	bp,sp
   238 | 00000235 | 53                        | 	push	bx
   239 | 00000236 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   240 | 00000239 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   241 | 0000023C | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   242 | 0000023F | FF7702                    | 	push	word [bx+2]	; Push hi u1
   243 | 00000242 | FF37                      | 	push	word [bx]	; Push lo u1
   244 | 00000244 | E81F01                    | 	call	SR_ulshr
   245 | 00000247 | 83C408                    | 	add	sp,8
   246 | 0000024A | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   247 | 0000024D | 895702                    | 	mov	[bx+2],dx	; Store result
   248 | 00000250 | 8907                      | 	mov	[bx],ax
   249 | 00000252 | 5B                        | 	pop	bx
   250 | 00000253 | 5D                        | 	pop	bp
   251 | 00000254 | C3                        | 	ret
   252 |          |                           | 
   253 |          |                           | 
   254 |          |                           | ; Main 32-bit routines begin here:
   255 |          |                           | 
   256 |          |                           | SR_ldiv:	; N_LDIV@
   257 | 00000255 | 59                        | 	pop    cx
   258 | 00000256 | 0E                        | 	push   cs
   259 | 00000257 | 51                        | 	push   cx
   260 |          |                           | 	; LDIV@
   261 | 00000258 | 31C9                      | 	xor    cx,cx
   262 | 0000025A | EB16                      | 	jmp    LSR_01
   263 |          |                           | SR_uldiv:	; N_LUDIV@
   264 | 0000025C | 59                        | 	pop    cx
   265 | 0000025D | 0E                        | 	push   cs
   266 | 0000025E | 51                        | 	push   cx
   267 |          |                           | 	; F_LUDIV@
   268 | 0000025F | B90100                    | 	mov    cx,0001
   269 | 00000262 | EB0E                      | 	jmp    LSR_01
   270 |          |                           | SR_lmod:	; N_LMOD@
   271 | 00000264 | 59                        | 	pop    cx
   272 | 00000265 | 0E                        | 	push   cs
   273 | 00000266 | 51                        | 	push   cx
   274 |          |                           | 	; F_LMOD@
   275 | 00000267 | B90200                    | 	mov    cx,0002
   276 | 0000026A | EB06                      | 	jmp    LSR_01
   277 |          |                           | SR_ilmod:	; N_LUMOD@
   278 | 0000026C | 59                        | 	pop    cx
   279 | 0000026D | 0E                        | 	push   cs
   280 | 0000026E | 51                        | 	push   cx
   281 |          |                           | 	; LUMOD@
   282 | 0000026F | B90300                    | 	mov    cx,0003
   283 |          |                           | LSR_01:
   284 | 00000272 | 55                        | 	push   bp
   285 | 00000273 | 56                        | 	push   si
   286 | 00000274 | 57                        | 	push   di
   287 | 00000275 | 89E5                      | 	mov    bp,sp
   288 | 00000277 | 89CF                      | 	mov    di,cx
   289 | 00000279 | 8B460A                    | 	mov    ax,[bp+0Ah]
   290 | 0000027C | 8B560C                    | 	mov    dx,[bp+0Ch]
   291 | 0000027F | 8B5E0E                    | 	mov    bx,[bp+0Eh]
   292 | 00000282 | 8B4E10                    | 	mov    cx,[bp+10h]
   293 | 00000285 | 09C9                      | 	or     cx,cx
   294 | 00000287 | 7508                      | 	jne    LSR_02
   295 | 00000289 | 09D2                      | 	or     dx,dx
   296 | 0000028B | 7469                      | 	je     LSR_10
   297 | 0000028D | 09DB                      | 	or     bx,bx
   298 | 0000028F | 7465                      | 	je     LSR_10
   299 |          |                           | LSR_02:
   300 | 00000291 | F7C70100                  | 	test   di,0001
   301 | 00000295 | 751C                      | 	jne    LSR_04
   302 | 00000297 | 09D2                      | 	or     dx,dx
   303 | 00000299 | 790A                      | 	jns    LSR_03
   304 | 0000029B | F7DA                      | 	neg    dx
   305 | 0000029D | F7D8                      | 	neg    ax
   306 | 0000029F | 83DA00                    | 	sbb    dx,0000
   307 | 000002A2 | 83CF0C                    | 	or     di,000Ch
   308 |          |                           | LSR_03:
   309 | 000002A5 | 09C9                      | 	or     cx,cx
   310 | 000002A7 | 790A                      | 	jns    LSR_04
   311 | 000002A9 | F7D9                      | 	neg    cx
   312 | 000002AB | F7DB                      | 	neg    bx
   313 | 000002AD | 83D900                    | 	sbb    cx,0000
   314 | 000002B0 | 83F704                    | 	xor    di,0004
   315 |          |                           | LSR_04:
   316 | 000002B3 | 89CD                      | 	mov    bp,cx
   317 | 000002B5 | B92000                    | 	mov    cx,0020h
   318 | 000002B8 | 57                        | 	push   di
   319 | 000002B9 | 31FF                      | 	xor    di,di
   320 | 000002BB | 31F6                      | 	xor    si,si
   321 |          |                           | LSR_05:
   322 | 000002BD | D1E0                      | 	shl    ax,1
   323 | 000002BF | D1D2                      | 	rcl    dx,1
   324 | 000002C1 | D1D6                      | 	rcl    si,1
   325 | 000002C3 | D1D7                      | 	rcl    di,1
   326 | 000002C5 | 39EF                      | 	cmp    di,bp
   327 | 000002C7 | 720B                      | 	jb     LSR_07
   328 | 000002C9 | 7704                      | 	ja     LSR_06
   329 | 000002CB | 39DE                      | 	cmp    si,bx
   330 | 000002CD | 7205                      | 	jb     LSR_07
   331 |          |                           | LSR_06:
   332 | 000002CF | 29DE                      | 	sub    si,bx
   333 | 000002D1 | 19EF                      | 	sbb    di,bp
   334 | 000002D3 | 40                        | 	inc    ax
   335 |          |                           | LSR_07:
   336 | 000002D4 | E2E7                      | 	loop   LSR_05
   337 | 000002D6 | 5B                        | 	pop    bx
   338 | 000002D7 | F7C30200                  | 	test   bx,0002
   339 | 000002DB | 7406                      | 	je     LSR_08
   340 | 000002DD | 89F0                      | 	mov    ax,si
   341 | 000002DF | 89FA                      | 	mov    dx,di
   342 | 000002E1 | D1EB                      | 	shr    bx,1
   343 |          |                           | LSR_08:
   344 | 000002E3 | F7C30400                  | 	test   bx,0004h
   345 | 000002E7 | 7407                      | 	je     LSR_09
   346 | 000002E9 | F7DA                      | 	neg    dx
   347 | 000002EB | F7D8                      | 	neg    ax
   348 | 000002ED | 83DA00                    | 	sbb    dx,0000
   349 |          |                           | LSR_09:
   350 | 000002F0 | 5F                        | 	pop    di
   351 | 000002F1 | 5E                        | 	pop    si
   352 | 000002F2 | 5D                        | 	pop    bp
   353 | 000002F3 | CA0800                    | 	retf   0008
   354 |          |                           | LSR_10:
   355 | 000002F6 | F7F3                      | 	div    bx
   356 | 000002F8 | F7C70200                  | 	test   di,0002
   357 | 000002FC | 7401                      | 	je     LSR_11
   358 | 000002FE | 92                        | 	xchg   dx,ax
   359 |          |                           | LSR_11:
   360 | 000002FF | 31D2                      | 	xor    dx,dx
   361 | 00000301 | EBED                      | 	jmp    LSR_09
   362 |          |                           | SR_lshl:	; N_LXLSH@
   363 |          |                           | SR_ulshl:
   364 |          |                           | 	; r = a << b
   365 | 00000303 | 5B                        | 	pop    bx
   366 | 00000304 | 0E                        | 	push   cs
   367 | 00000305 | 53                        | 	push   bx
   368 |          |                           | 
   369 | 00000306 | 55                        | 	push   bp
   370 | 00000307 | 89E5                      | 	mov    bp,sp
   371 |          |                           | 
   372 | 00000309 | 51                        | 	push   cx	; C86 doesn't expect use of cx or bx
   373 |          |                           | 
   374 | 0000030A | 8B4606                    | 	mov    ax, [bp+6]	; pop loword(a)
   375 | 0000030D | 8B5608                    | 	mov    dx, [bp+8]	; pop hiword(a)
   376 | 00000310 | 8B4E0A                    | 	mov    cx, [bp+10]	; pop word(b)
   377 |          |                           | 	
   378 |          |                           | 	; LXLSH@
   379 | 00000313 | 80F910                    | 	cmp    cl,10h
   380 | 00000316 | 7312                      | 	jnb    LSR_12
   381 | 00000318 | 89C3                      | 	mov    bx,ax
   382 | 0000031A | D3E0                      | 	shl    ax,cl
   383 | 0000031C | D3E2                      | 	shl    dx,cl
   384 | 0000031E | F6D9                      | 	neg    cl
   385 | 00000320 | 80C110                    | 	add    cl,10h
   386 | 00000323 | D3EB                      | 	shr    bx,cl
   387 | 00000325 | 09DA                      | 	or     dx,bx
   388 | 00000327 | 59                        | 	pop    cx
   389 | 00000328 | 5D                        | 	pop    bp
   390 | 00000329 | CB                        | 	retf
   391 |          |                           | LSR_12:
   392 | 0000032A | 80E910                    | 	sub    cl,10h
   393 | 0000032D | 92                        | 	xchg   dx,ax
   394 | 0000032E | 31C0                      | 	xor    ax,ax
   395 | 00000330 | D3E2                      | 	shl    dx,cl
   396 | 00000332 | 59                        | 	pop    cx
   397 | 00000333 | 5D                        | 	pop    bp
   398 | 00000334 | CB                        | 	retf
   399 |          |                           | SR_lshr:	; N_LXRSH@
   400 |          |                           | 	; r = a >> b
   401 | 00000335 | 5B                        | 	pop    bx
   402 | 00000336 | 0E                        | 	push   cs
   403 | 00000337 | 53                        | 	push   bx
   404 |          |                           | 
   405 | 00000338 | 55                        | 	push   bp
   406 | 00000339 | 89E5                      | 	mov    bp,sp
   407 |          |                           | 
   408 | 0000033B | 51                        | 	push   cx	; C86 doesn't expect use of cx or bx
   409 |          |                           | 
   410 | 0000033C | 8B4606                    |         mov    ax, [bp+6]	; pop loword(a)
   411 | 0000033F | 8B5608                    | 	mov    dx, [bp+8]	; pop hiword(a)
   412 | 00000342 | 8B4E0A                    | 	mov    cx, [bp+10]	; pop word(b)
   413 |          |                           | 	
   414 |          |                           | 	; LXRSH@
   415 | 00000345 | 80F910                    | 	cmp    cl,10h
   416 | 00000348 | 7312                      | 	jnb    LSR_13
   417 | 0000034A | 89D3                      | 	mov    bx,dx
   418 | 0000034C | D3E8                      | 	shr    ax,cl
   419 | 0000034E | D3FA                      | 	sar    dx,cl
   420 | 00000350 | F6D9                      | 	neg    cl
   421 | 00000352 | 80C110                    | 	add    cl,10h
   422 | 00000355 | D3E3                      | 	shl    bx,cl
   423 | 00000357 | 09D8                      | 	or     ax,bx
   424 | 00000359 | 59                        | 	pop    cx
   425 | 0000035A | 5D                        | 	pop    bp
   426 | 0000035B | CB                        | 	retf
   427 |          |                           | LSR_13:
   428 | 0000035C | 80E910                    | 	sub    cl,10h
   429 | 0000035F | 92                        | 	xchg   dx,ax
   430 | 00000360 | 99                        | 	cwd
   431 | 00000361 | D3F8                      | 	sar    ax,cl
   432 | 00000363 | 59                        | 	pop    cx
   433 | 00000364 | 5D                        | 	pop    bp
   434 | 00000365 | CB                        | 	retf
   435 |          |                           | SR_ulshr:	; N_LXURSH@
   436 |          |                           | 	; r = a >> b
   437 | 00000366 | 5B                        | 	pop    bx
   438 | 00000367 | 0E                        | 	push   cs
   439 | 00000368 | 53                        | 	push   bx
   440 |          |                           | 
   441 | 00000369 | 55                        | 	push   bp
   442 | 0000036A | 89E5                      | 	mov    bp,sp
   443 |          |                           | 
   444 | 0000036C | 51                        | 	push   cx	; C86 doesn't expect use of cx or bx
   445 |          |                           | 
   446 | 0000036D | 8B4606                    |         mov    ax, [bp+6]	; pop loword(a)
   447 | 00000370 | 8B5608                    | 	mov    dx, [bp+8]	; pop hiword(a)
   448 | 00000373 | 8B4E0A                    | 	mov    cx, [bp+10]	; pop word(b)
   449 |          |                           | 	
   450 |          |                           | 	; LXURSH@
   451 | 00000376 | 80F910                    | 	cmp    cl,10h
   452 | 00000379 | 7312                      | 	jnb    LSR_14
   453 | 0000037B | 89D3                      | 	mov    bx,dx
   454 | 0000037D | D3E8                      | 	shr    ax,cl
   455 | 0000037F | D3EA                      | 	shr    dx,cl
   456 | 00000381 | F6D9                      | 	neg    cl
   457 | 00000383 | 80C110                    | 	add    cl,10h
   458 | 00000386 | D3E3                      | 	shl    bx,cl
   459 | 00000388 | 09D8                      | 	or     ax,bx
   460 | 0000038A | 59                        | 	pop    cx
   461 | 0000038B | 5D                        | 	pop    bp
   462 | 0000038C | CB                        | 	retf
   463 |          |                           | LSR_14:
   464 | 0000038D | 80E910                    | 	sub    cl,10h
   465 | 00000390 | 92                        | 	xchg   dx,ax
   466 | 00000391 | 31D2                      | 	xor    dx,dx
   467 | 00000393 | D3E8                      | 	shr    ax,cl
   468 | 00000395 | 59                        | 	pop    cx
   469 | 00000396 | 5D                        | 	pop    bp
   470 | 00000397 | CB                        | 	retf
   471 |          |                           | SR_lmul:	; N_LXMUL@
   472 |          |                           | SR_ulmul:
   473 |          |                           | 	; r = a * b
   474 | 00000398 | 55                        | 	push   bp
   475 | 00000399 | 56                        | 	push   si
   476 | 0000039A | 89E5                      | 	mov    bp,sp
   477 |          |                           | 
   478 | 0000039C | 51                        | 	push   cx	; C86 doesn't expect use of cx or bx
   479 | 0000039D | 53                        | 	push   bx
   480 |          |                           | 
   481 | 0000039E | 8B5E06                    |         mov    bx, [bp+6]	; pop loword(a)
   482 | 000003A1 | 8B4E08                    | 	mov    cx, [bp+8]	; pop hiword(a)
   483 | 000003A4 | 8B460A                    | 	mov    ax, [bp+10]	; pop loword(b)
   484 | 000003A7 | 8B560C                    | 	mov    dx, [bp+12]	; pop hiword(b)
   485 |          |                           | 	
   486 | 000003AA | 96                        | 	xchg   si,ax
   487 | 000003AB | 92                        | 	xchg   dx,ax
   488 | 000003AC | 85C0                      | 	test   ax,ax
   489 | 000003AE | 7402                      | 	je     LSR_15
   490 | 000003B0 | F7E3                      | 	mul    bx
   491 |          |                           | LSR_15:
   492 | 000003B2 | E305                      | 	jcxz   LSR_16
   493 | 000003B4 | 91                        | 	xchg   cx,ax
   494 | 000003B5 | F7E6                      | 	mul    si
   495 | 000003B7 | 01C8                      | 	add    ax,cx
   496 |          |                           | LSR_16:
   497 | 000003B9 | 96                        | 	xchg   si,ax
   498 | 000003BA | F7E3                      | 	mul    bx
   499 | 000003BC | 01F2                      | 	add    dx,si
   500 | 000003BE | 5B                        | 	pop    bx
   501 | 000003BF | 59                        | 	pop    cx
   502 | 000003C0 | 5E                        | 	pop    si
   503 | 000003C1 | 5D                        | 	pop    bp
   504 | 000003C2 | C3                        | 	ret
   505 |          |                           | 
   506 |          |                           | ; Generated by c86 (BYU-NASM) 5.1 (beta) from clib.c
   507 |          |                           | 	CPU	8086
   508 | 000003C3 | 90                        | 	ALIGN	2
   509 | 000003C4 | E9D525                    | 	jmp	main	; Jump to program start
   510 |          |                           | new_line:
   511 | 000003C7 | 0D0A24                    | 	db	13,10,36
   512 |          |                           | 	ALIGN	2
   513 |          |                           | signalEOI:
   514 | 000003CA | EB08                      | 	jmp	L_clib_1
   515 |          |                           | L_clib_2:
   516 | 000003CC | B020                      | 	mov	al, 0x20
   517 | 000003CE | E620                      | 	out	0x20, al
   518 | 000003D0 | 89EC                      | 	mov	sp, bp
   519 | 000003D2 | 5D                        | 	pop	bp
   520 | 000003D3 | C3                        | 	ret
   521 |          |                           | L_clib_1:
   522 | 000003D4 | 55                        | 	push	bp
   523 | 000003D5 | 89E5                      | 	mov	bp, sp
   524 | 000003D7 | EBF3                      | 	jmp	L_clib_2
   525 | 000003D9 | 90                        | 	ALIGN	2
   526 |          |                           | exit:
   527 | 000003DA | EB0B                      | 	jmp	L_clib_4
   528 |          |                           | L_clib_5:
   529 | 000003DC | B44C                      | 	mov	ah, 4Ch
   530 | 000003DE | 8A4604                    | 	mov	al, [bp+4]
   531 | 000003E1 | CD21                      | 	int	21h
   532 | 000003E3 | 89EC                      | 	mov	sp, bp
   533 | 000003E5 | 5D                        | 	pop	bp
   534 | 000003E6 | C3                        | 	ret
   535 |          |                           | L_clib_4:
   536 | 000003E7 | 55                        | 	push	bp
   537 | 000003E8 | 89E5                      | 	mov	bp, sp
   538 | 000003EA | EBF0                      | 	jmp	L_clib_5
   539 |          |                           | 	ALIGN	2
   540 |          |                           | print:
   541 | 000003EC | EB11                      | 	jmp	L_clib_7
   542 |          |                           | L_clib_8:
   543 | 000003EE | B440                      | 	mov	ah, 40h
   544 | 000003F0 | BB0100                    | 	mov	bx, 1
   545 | 000003F3 | 8B4E06                    | 	mov	cx, [bp+6]
   546 | 000003F6 | 8B5604                    | 	mov	dx, [bp+4]
   547 | 000003F9 | CD21                      | 	int	21h
   548 | 000003FB | 89EC                      | 	mov	sp, bp
   549 | 000003FD | 5D                        | 	pop	bp
   550 | 000003FE | C3                        | 	ret
   551 |          |                           | L_clib_7:
   552 | 000003FF | 55                        | 	push	bp
   553 | 00000400 | 89E5                      | 	mov	bp, sp
   554 | 00000402 | EBEA                      | 	jmp	L_clib_8
   555 |          |                           | 	ALIGN	2
   556 |          |                           | printChar:
   557 | 00000404 | EB0B                      | 	jmp	L_clib_10
   558 |          |                           | L_clib_11:
   559 | 00000406 | B402                      | 	mov	ah, 2
   560 | 00000408 | 8A5604                    | 	mov	dl, [bp+4]
   561 | 0000040B | CD21                      | 	int	21h
   562 | 0000040D | 89EC                      | 	mov	sp, bp
   563 | 0000040F | 5D                        | 	pop	bp
   564 | 00000410 | C3                        | 	ret
   565 |          |                           | L_clib_10:
   566 | 00000411 | 55                        | 	push	bp
   567 | 00000412 | 89E5                      | 	mov	bp, sp
   568 | 00000414 | EBF0                      | 	jmp	L_clib_11
   569 |          |                           | 	ALIGN	2
   570 |          |                           | printNewLine:
   571 | 00000416 | EB0B                      | 	jmp	L_clib_13
   572 |          |                           | L_clib_14:
   573 | 00000418 | B409                      | 	mov	ah, 9
   574 | 0000041A | BA[C703]                  | 	mov	dx, new_line
   575 | 0000041D | CD21                      | 	int	21h
   576 | 0000041F | 89EC                      | 	mov	sp, bp
   577 | 00000421 | 5D                        | 	pop	bp
   578 | 00000422 | C3                        | 	ret
   579 |          |                           | L_clib_13:
   580 | 00000423 | 55                        | 	push	bp
   581 | 00000424 | 89E5                      | 	mov	bp, sp
   582 | 00000426 | EBF0                      | 	jmp	L_clib_14
   583 |          |                           | 	ALIGN	2
   584 |          |                           | printString:
   585 | 00000428 | EB1C                      | 	jmp	L_clib_16
   586 |          |                           | L_clib_17:
   587 | 0000042A | 31F6                      | 	xor	si,si
   588 | 0000042C | 8B5E04                    | 	mov	bx, [bp+4]
   589 | 0000042F | EB01                      | 	jmp	printString2
   590 |          |                           | 	printString1:
   591 | 00000431 | 46                        | 	inc	si
   592 |          |                           | 	printString2:
   593 | 00000432 | 803800                    | 	cmp	byte [bx+si],0
   594 | 00000435 | 75FA                      | 	jne	printString1
   595 | 00000437 | 89DA                      | 	mov	dx, bx
   596 | 00000439 | 89F1                      | 	mov	cx, si
   597 | 0000043B | B440                      | 	mov	ah, 40h
   598 | 0000043D | BB0100                    | 	mov	bx, 1
   599 | 00000440 | CD21                      | 	int	21h
   600 | 00000442 | 89EC                      | 	mov	sp, bp
   601 | 00000444 | 5D                        | 	pop	bp
   602 | 00000445 | C3                        | 	ret
   603 |          |                           | L_clib_16:
   604 | 00000446 | 55                        | 	push	bp
   605 | 00000447 | 89E5                      | 	mov	bp, sp
   606 | 00000449 | 51                        | 	push	cx
   607 | 0000044A | EBDE                      | 	jmp	L_clib_17
   608 |          |                           | 	ALIGN	2
   609 |          |                           | printInt:
   610 | 0000044C | E99500                    | 	jmp	L_clib_19
   611 |          |                           | L_clib_20:
   612 | 0000044F | C746FE0000                | 	mov	word [bp-2], 0
   613 | 00000454 | C746FC1027                | 	mov	word [bp-4], 10000
   614 | 00000459 | 837E0400                  | 	cmp	word [bp+4], 0
   615 | 0000045D | 7D0F                      | 	jge	L_clib_21
   616 | 0000045F | C646F62D                  | 	mov	byte [bp-10], 45
   617 | 00000463 | FF46FE                    | 	inc	word [bp-2]
   618 | 00000466 | 8B4604                    | 	mov	ax, word [bp+4]
   619 | 00000469 | F7D8                      | 	neg	ax
   620 | 0000046B | 894604                    | 	mov	word [bp+4], ax
   621 |          |                           | L_clib_21:
   622 | 0000046E | 8B4604                    | 	mov	ax, word [bp+4]
   623 | 00000471 | 85C0                      | 	test	ax, ax
   624 | 00000473 | 7507                      | 	jne	L_clib_22
   625 | 00000475 | C746FC0100                | 	mov	word [bp-4], 1
   626 | 0000047A | EB19                      | 	jmp	L_clib_23
   627 |          |                           | L_clib_22:
   628 | 0000047C | EB0C                      | 	jmp	L_clib_25
   629 |          |                           | L_clib_24:
   630 | 0000047E | 8B46FC                    | 	mov	ax, word [bp-4]
   631 | 00000481 | 99                        | 	cwd
   632 | 00000482 | B90A00                    | 	mov	cx, 10
   633 | 00000485 | F7F9                      | 	idiv	cx
   634 | 00000487 | 8946FC                    | 	mov	word [bp-4], ax
   635 |          |                           | L_clib_25:
   636 | 0000048A | 8B4604                    | 	mov	ax, word [bp+4]
   637 | 0000048D | 99                        | 	cwd
   638 | 0000048E | F77EFC                    | 	idiv	word [bp-4]
   639 | 00000491 | 85C0                      | 	test	ax, ax
   640 | 00000493 | 74E9                      | 	je	L_clib_24
   641 |          |                           | L_clib_26:
   642 |          |                           | L_clib_23:
   643 | 00000495 | EB36                      | 	jmp	L_clib_28
   644 |          |                           | L_clib_27:
   645 | 00000497 | 8B4604                    | 	mov	ax, word [bp+4]
   646 | 0000049A | 31D2                      | 	xor	dx, dx
   647 | 0000049C | F776FC                    | 	div	word [bp-4]
   648 | 0000049F | 0430                      | 	add	al, 48
   649 | 000004A1 | 8B76FE                    | 	mov	si, word [bp-2]
   650 | 000004A4 | 8D56F6                    | 	lea	dx, [bp-10]
   651 | 000004A7 | 01D6                      | 	add	si, dx
   652 | 000004A9 | 8804                      | 	mov	byte [si], al
   653 | 000004AB | FF46FE                    | 	inc	word [bp-2]
   654 | 000004AE | 8B4604                    | 	mov	ax, word [bp+4]
   655 | 000004B1 | 31D2                      | 	xor	dx, dx
   656 | 000004B3 | F776FC                    | 	div	word [bp-4]
   657 | 000004B6 | 89D0                      | 	mov	ax, dx
   658 | 000004B8 | 894604                    | 	mov	word [bp+4], ax
   659 | 000004BB | 8B46FC                    | 	mov	ax, word [bp-4]
   660 | 000004BE | 99                        | 	cwd
   661 | 000004BF | B90A00                    | 	mov	cx, 10
   662 | 000004C2 | F7F9                      | 	idiv	cx
   663 | 000004C4 | 8946FC                    | 	mov	word [bp-4], ax
   664 | 000004C7 | 8B46FC                    | 	mov	ax, word [bp-4]
   665 | 000004CA | 8946FC                    | 	mov	word [bp-4], ax
   666 |          |                           | L_clib_28:
   667 | 000004CD | 837EFC00                  | 	cmp	word [bp-4], 0
   668 | 000004D1 | 7FC4                      | 	jg	L_clib_27
   669 |          |                           | L_clib_29:
   670 | 000004D3 | FF76FE                    | 	push	word [bp-2]
   671 | 000004D6 | 8D46F6                    | 	lea	ax, [bp-10]
   672 | 000004D9 | 50                        | 	push	ax
   673 | 000004DA | E80FFF                    | 	call	print
   674 | 000004DD | 83C404                    | 	add	sp, 4
   675 | 000004E0 | 89EC                      | 	mov	sp, bp
   676 | 000004E2 | 5D                        | 	pop	bp
   677 | 000004E3 | C3                        | 	ret
   678 |          |                           | L_clib_19:
   679 | 000004E4 | 55                        | 	push	bp
   680 | 000004E5 | 89E5                      | 	mov	bp, sp
   681 | 000004E7 | 83EC0A                    | 	sub	sp, 10
   682 | 000004EA | E962FF                    | 	jmp	L_clib_20
   683 | 000004ED | 90                        | 	ALIGN	2
   684 |          |                           | printLong:
   685 | 000004EE | E9D200                    | 	jmp	L_clib_31
   686 |          |                           | L_clib_32:
   687 | 000004F1 | C746FE0000                | 	mov	word [bp-2], 0
   688 | 000004F6 | C746FA00CA                | 	mov	word [bp-6], 51712
   689 | 000004FB | C746FC9A3B                | 	mov	word [bp-4], 15258
   690 | 00000500 | 837E0600                  | 	cmp	word [bp+6], 0
   691 | 00000504 | 7F22                      | 	jg	L_clib_33
   692 | 00000506 | 7C06                      | 	jl	L_clib_34
   693 | 00000508 | 837E0400                  | 	cmp	word [bp+4], 0
   694 | 0000050C | 731A                      | 	jae	L_clib_33
   695 |          |                           | L_clib_34:
   696 | 0000050E | C646EF2D                  | 	mov	byte [bp-17], 45
   697 | 00000512 | FF46FE                    | 	inc	word [bp-2]
   698 | 00000515 | 8B4604                    | 	mov	ax, word [bp+4]
   699 | 00000518 | 8B5606                    | 	mov	dx, word [bp+6]
   700 | 0000051B | F7D8                      | 	neg	ax
   701 | 0000051D | 83D200                    | 	adc	dx, 0
   702 | 00000520 | F7DA                      | 	neg	dx
   703 | 00000522 | 894604                    | 	mov	word [bp+4], ax
   704 | 00000525 | 895606                    | 	mov	word [bp+6], dx
   705 |          |                           | L_clib_33:
   706 | 00000528 | 8B4604                    | 	mov	ax, word [bp+4]
   707 | 0000052B | 8B5606                    | 	mov	dx, word [bp+6]
   708 | 0000052E | 09C2                      | 	or	dx, ax
   709 | 00000530 | 750C                      | 	jne	L_clib_35
   710 | 00000532 | C746FA0100                | 	mov	word [bp-6], 1
   711 | 00000537 | C746FC0000                | 	mov	word [bp-4], 0
   712 | 0000053C | EB23                      | 	jmp	L_clib_36
   713 |          |                           | L_clib_35:
   714 | 0000053E | EB0E                      | 	jmp	L_clib_38
   715 |          |                           | L_clib_37:
   716 | 00000540 | B80A00                    | 	mov	ax, 10
   717 | 00000543 | 31D2                      | 	xor	dx, dx
   718 | 00000545 | 52                        | 	push	dx
   719 | 00000546 | 50                        | 	push	ax
   720 | 00000547 | 8D46FA                    | 	lea	ax, [bp-6]
   721 | 0000054A | 50                        | 	push	ax
   722 | 0000054B | E8B5FB                    | 	call	SR_asldiv
   723 |          |                           | L_clib_38:
   724 | 0000054E | FF76FC                    | 	push	word [bp-4]
   725 | 00000551 | FF76FA                    | 	push	word [bp-6]
   726 | 00000554 | FF7606                    | 	push	word [bp+6]
   727 | 00000557 | FF7604                    | 	push	word [bp+4]
   728 | 0000055A | E8F8FC                    | 	call	SR_ldiv
   729 | 0000055D | 09C2                      | 	or	dx, ax
   730 | 0000055F | 74DF                      | 	je	L_clib_37
   731 |          |                           | L_clib_39:
   732 |          |                           | L_clib_36:
   733 | 00000561 | EB41                      | 	jmp	L_clib_41
   734 |          |                           | L_clib_40:
   735 | 00000563 | FF76FC                    | 	push	word [bp-4]
   736 | 00000566 | FF76FA                    | 	push	word [bp-6]
   737 | 00000569 | FF7606                    | 	push	word [bp+6]
   738 | 0000056C | FF7604                    | 	push	word [bp+4]
   739 | 0000056F | E8EAFC                    | 	call	SR_uldiv
   740 | 00000572 | 0430                      | 	add	al, 48
   741 | 00000574 | 8B76FE                    | 	mov	si, word [bp-2]
   742 | 00000577 | 8D56EF                    | 	lea	dx, [bp-17]
   743 | 0000057A | 01D6                      | 	add	si, dx
   744 | 0000057C | 8804                      | 	mov	byte [si], al
   745 | 0000057E | FF46FE                    | 	inc	word [bp-2]
   746 | 00000581 | FF76FC                    | 	push	word [bp-4]
   747 | 00000584 | FF76FA                    | 	push	word [bp-6]
   748 | 00000587 | FF7606                    | 	push	word [bp+6]
   749 | 0000058A | FF7604                    | 	push	word [bp+4]
   750 | 0000058D | E8D4FC                    | 	call	SR_lmod
   751 | 00000590 | 894604                    | 	mov	word [bp+4], ax
   752 | 00000593 | 895606                    | 	mov	word [bp+6], dx
   753 | 00000596 | B80A00                    | 	mov	ax, 10
   754 | 00000599 | 31D2                      | 	xor	dx, dx
   755 | 0000059B | 52                        | 	push	dx
   756 | 0000059C | 50                        | 	push	ax
   757 | 0000059D | 8D46FA                    | 	lea	ax, [bp-6]
   758 | 000005A0 | 50                        | 	push	ax
   759 | 000005A1 | E85FFB                    | 	call	SR_asldiv
   760 |          |                           | L_clib_41:
   761 | 000005A4 | 837EFC00                  | 	cmp	word [bp-4], 0
   762 | 000005A8 | 7FB9                      | 	jg	L_clib_40
   763 | 000005AA | 7506                      | 	jne	L_clib_43
   764 | 000005AC | 837EFA00                  | 	cmp	word [bp-6], 0
   765 | 000005B0 | 77B1                      | 	ja	L_clib_40
   766 |          |                           | L_clib_43:
   767 |          |                           | L_clib_42:
   768 | 000005B2 | FF76FE                    | 	push	word [bp-2]
   769 | 000005B5 | 8D46EF                    | 	lea	ax, [bp-17]
   770 | 000005B8 | 50                        | 	push	ax
   771 | 000005B9 | E830FE                    | 	call	print
   772 | 000005BC | 83C404                    | 	add	sp, 4
   773 | 000005BF | 89EC                      | 	mov	sp, bp
   774 | 000005C1 | 5D                        | 	pop	bp
   775 | 000005C2 | C3                        | 	ret
   776 |          |                           | L_clib_31:
   777 | 000005C3 | 55                        | 	push	bp
   778 | 000005C4 | 89E5                      | 	mov	bp, sp
   779 | 000005C6 | 83EC12                    | 	sub	sp, 18
   780 | 000005C9 | E925FF                    | 	jmp	L_clib_32
   781 |          |                           | 	ALIGN	2
   782 |          |                           | printUInt:
   783 | 000005CC | EB7C                      | 	jmp	L_clib_45
   784 |          |                           | L_clib_46:
   785 | 000005CE | C746FE0000                | 	mov	word [bp-2], 0
   786 | 000005D3 | C746FC1027                | 	mov	word [bp-4], 10000
   787 | 000005D8 | 8B4604                    | 	mov	ax, word [bp+4]
   788 | 000005DB | 85C0                      | 	test	ax, ax
   789 | 000005DD | 7507                      | 	jne	L_clib_47
   790 | 000005DF | C746FC0100                | 	mov	word [bp-4], 1
   791 | 000005E4 | EB1B                      | 	jmp	L_clib_48
   792 |          |                           | L_clib_47:
   793 | 000005E6 | EB0D                      | 	jmp	L_clib_50
   794 |          |                           | L_clib_49:
   795 | 000005E8 | 8B46FC                    | 	mov	ax, word [bp-4]
   796 | 000005EB | 31D2                      | 	xor	dx, dx
   797 | 000005ED | B90A00                    | 	mov	cx, 10
   798 | 000005F0 | F7F1                      | 	div	cx
   799 | 000005F2 | 8946FC                    | 	mov	word [bp-4], ax
   800 |          |                           | L_clib_50:
   801 | 000005F5 | 8B4604                    | 	mov	ax, word [bp+4]
   802 | 000005F8 | 31D2                      | 	xor	dx, dx
   803 | 000005FA | F776FC                    | 	div	word [bp-4]
   804 | 000005FD | 85C0                      | 	test	ax, ax
   805 | 000005FF | 74E7                      | 	je	L_clib_49
   806 |          |                           | L_clib_51:
   807 |          |                           | L_clib_48:
   808 | 00000601 | EB2F                      | 	jmp	L_clib_53
   809 |          |                           | L_clib_52:
   810 | 00000603 | 8B4604                    | 	mov	ax, word [bp+4]
   811 | 00000606 | 31D2                      | 	xor	dx, dx
   812 | 00000608 | F776FC                    | 	div	word [bp-4]
   813 | 0000060B | 0430                      | 	add	al, 48
   814 | 0000060D | 8B76FE                    | 	mov	si, word [bp-2]
   815 | 00000610 | 8D56F6                    | 	lea	dx, [bp-10]
   816 | 00000613 | 01D6                      | 	add	si, dx
   817 | 00000615 | 8804                      | 	mov	byte [si], al
   818 | 00000617 | FF46FE                    | 	inc	word [bp-2]
   819 | 0000061A | 8B4604                    | 	mov	ax, word [bp+4]
   820 | 0000061D | 31D2                      | 	xor	dx, dx
   821 | 0000061F | F776FC                    | 	div	word [bp-4]
   822 | 00000622 | 895604                    | 	mov	word [bp+4], dx
   823 | 00000625 | 8B46FC                    | 	mov	ax, word [bp-4]
   824 | 00000628 | 31D2                      | 	xor	dx, dx
   825 | 0000062A | B90A00                    | 	mov	cx, 10
   826 | 0000062D | F7F1                      | 	div	cx
   827 | 0000062F | 8946FC                    | 	mov	word [bp-4], ax
   828 |          |                           | L_clib_53:
   829 | 00000632 | 8B46FC                    | 	mov	ax, word [bp-4]
   830 | 00000635 | 85C0                      | 	test	ax, ax
   831 | 00000637 | 75CA                      | 	jne	L_clib_52
   832 |          |                           | L_clib_54:
   833 | 00000639 | FF76FE                    | 	push	word [bp-2]
   834 | 0000063C | 8D46F6                    | 	lea	ax, [bp-10]
   835 | 0000063F | 50                        | 	push	ax
   836 | 00000640 | E8A9FD                    | 	call	print
   837 | 00000643 | 83C404                    | 	add	sp, 4
   838 | 00000646 | 89EC                      | 	mov	sp, bp
   839 | 00000648 | 5D                        | 	pop	bp
   840 | 00000649 | C3                        | 	ret
   841 |          |                           | L_clib_45:
   842 | 0000064A | 55                        | 	push	bp
   843 | 0000064B | 89E5                      | 	mov	bp, sp
   844 | 0000064D | 83EC0A                    | 	sub	sp, 10
   845 | 00000650 | E97BFF                    | 	jmp	L_clib_46
   846 | 00000653 | 90                        | 	ALIGN	2
   847 |          |                           | printULong:
   848 | 00000654 | E99E00                    | 	jmp	L_clib_56
   849 |          |                           | L_clib_57:
   850 | 00000657 | C746FE0000                | 	mov	word [bp-2], 0
   851 | 0000065C | C746FA00CA                | 	mov	word [bp-6], 51712
   852 | 00000661 | C746FC9A3B                | 	mov	word [bp-4], 15258
   853 | 00000666 | 8B4604                    | 	mov	ax, word [bp+4]
   854 | 00000669 | 8B5606                    | 	mov	dx, word [bp+6]
   855 | 0000066C | 09C2                      | 	or	dx, ax
   856 | 0000066E | 750C                      | 	jne	L_clib_58
   857 | 00000670 | C746FA0100                | 	mov	word [bp-6], 1
   858 | 00000675 | C746FC0000                | 	mov	word [bp-4], 0
   859 | 0000067A | EB23                      | 	jmp	L_clib_59
   860 |          |                           | L_clib_58:
   861 | 0000067C | EB0E                      | 	jmp	L_clib_61
   862 |          |                           | L_clib_60:
   863 | 0000067E | B80A00                    | 	mov	ax, 10
   864 | 00000681 | 31D2                      | 	xor	dx, dx
   865 | 00000683 | 52                        | 	push	dx
   866 | 00000684 | 50                        | 	push	ax
   867 | 00000685 | 8D46FA                    | 	lea	ax, [bp-6]
   868 | 00000688 | 50                        | 	push	ax
   869 | 00000689 | E820FB                    | 	call	SR_asuldiv
   870 |          |                           | L_clib_61:
   871 | 0000068C | FF76FC                    | 	push	word [bp-4]
   872 | 0000068F | FF76FA                    | 	push	word [bp-6]
   873 | 00000692 | FF7606                    | 	push	word [bp+6]
   874 | 00000695 | FF7604                    | 	push	word [bp+4]
   875 | 00000698 | E8C1FB                    | 	call	SR_uldiv
   876 | 0000069B | 09C2                      | 	or	dx, ax
   877 | 0000069D | 74DF                      | 	je	L_clib_60
   878 |          |                           | L_clib_62:
   879 |          |                           | L_clib_59:
   880 | 0000069F | EB39                      | 	jmp	L_clib_64
   881 |          |                           | L_clib_63:
   882 | 000006A1 | FF76FC                    | 	push	word [bp-4]
   883 | 000006A4 | FF76FA                    | 	push	word [bp-6]
   884 | 000006A7 | FF7606                    | 	push	word [bp+6]
   885 | 000006AA | FF7604                    | 	push	word [bp+4]
   886 | 000006AD | E8ACFB                    | 	call	SR_uldiv
   887 | 000006B0 | 0430                      | 	add	al, 48
   888 | 000006B2 | 8B76FE                    | 	mov	si, word [bp-2]
   889 | 000006B5 | 8D56EF                    | 	lea	dx, [bp-17]
   890 | 000006B8 | 01D6                      | 	add	si, dx
   891 | 000006BA | 8804                      | 	mov	byte [si], al
   892 | 000006BC | FF46FE                    | 	inc	word [bp-2]
   893 | 000006BF | FF76FC                    | 	push	word [bp-4]
   894 | 000006C2 | FF76FA                    | 	push	word [bp-6]
   895 | 000006C5 | 8D4604                    | 	lea	ax, [bp+4]
   896 | 000006C8 | 50                        | 	push	ax
   897 | 000006C9 | E800FB                    | 	call	SR_asilmod
   898 | 000006CC | B80A00                    | 	mov	ax, 10
   899 | 000006CF | 31D2                      | 	xor	dx, dx
   900 | 000006D1 | 52                        | 	push	dx
   901 | 000006D2 | 50                        | 	push	ax
   902 | 000006D3 | 8D46FA                    | 	lea	ax, [bp-6]
   903 | 000006D6 | 50                        | 	push	ax
   904 | 000006D7 | E8D2FA                    | 	call	SR_asuldiv
   905 |          |                           | L_clib_64:
   906 | 000006DA | 8B46FA                    | 	mov	ax, word [bp-6]
   907 | 000006DD | 8B56FC                    | 	mov	dx, word [bp-4]
   908 | 000006E0 | 09C2                      | 	or	dx, ax
   909 | 000006E2 | 75BD                      | 	jne	L_clib_63
   910 |          |                           | L_clib_65:
   911 | 000006E4 | FF76FE                    | 	push	word [bp-2]
   912 | 000006E7 | 8D46EF                    | 	lea	ax, [bp-17]
   913 | 000006EA | 50                        | 	push	ax
   914 | 000006EB | E8FEFC                    | 	call	print
   915 | 000006EE | 83C404                    | 	add	sp, 4
   916 | 000006F1 | 89EC                      | 	mov	sp, bp
   917 | 000006F3 | 5D                        | 	pop	bp
   918 | 000006F4 | C3                        | 	ret
   919 |          |                           | L_clib_56:
   920 | 000006F5 | 55                        | 	push	bp
   921 | 000006F6 | 89E5                      | 	mov	bp, sp
   922 | 000006F8 | 83EC12                    | 	sub	sp, 18
   923 | 000006FB | E959FF                    | 	jmp	L_clib_57
   924 |          |                           | 	ALIGN	2
   925 |          |                           | printByte:
   926 | 000006FE | EB61                      | 	jmp	L_clib_67
   927 |          |                           | L_clib_68:
   928 | 00000700 | 8A4604                    | 	mov	al, byte [bp+4]
   929 | 00000703 | 98                        | 	cbw
   930 | 00000704 | B90400                    | 	mov	cx, 4
   931 | 00000707 | D3F8                      | 	sar	ax, cl
   932 | 00000709 | 83E00F                    | 	and	ax, 15
   933 | 0000070C | 8846FF                    | 	mov	byte [bp-1], al
   934 | 0000070F | 807EFF09                  | 	cmp	byte [bp-1], 9
   935 | 00000713 | 7E0C                      | 	jle	L_clib_69
   936 | 00000715 | 8A46FF                    | 	mov	al, byte [bp-1]
   937 | 00000718 | 98                        | 	cbw
   938 | 00000719 | 83E80A                    | 	sub	ax, 10
   939 | 0000071C | 83C041                    | 	add	ax, 65
   940 | 0000071F | EB07                      | 	jmp	L_clib_70
   941 |          |                           | L_clib_69:
   942 | 00000721 | 8A46FF                    | 	mov	al, byte [bp-1]
   943 | 00000724 | 98                        | 	cbw
   944 | 00000725 | 83C030                    | 	add	ax, 48
   945 |          |                           | L_clib_70:
   946 | 00000728 | 8846FD                    | 	mov	byte [bp-3], al
   947 | 0000072B | 8A4604                    | 	mov	al, byte [bp+4]
   948 | 0000072E | 240F                      | 	and	al, 15
   949 | 00000730 | 8846FF                    | 	mov	byte [bp-1], al
   950 | 00000733 | 807EFF09                  | 	cmp	byte [bp-1], 9
   951 | 00000737 | 7E0C                      | 	jle	L_clib_71
   952 | 00000739 | 8A46FF                    | 	mov	al, byte [bp-1]
   953 | 0000073C | 98                        | 	cbw
   954 | 0000073D | 83E80A                    | 	sub	ax, 10
   955 | 00000740 | 83C041                    | 	add	ax, 65
   956 | 00000743 | EB07                      | 	jmp	L_clib_72
   957 |          |                           | L_clib_71:
   958 | 00000745 | 8A46FF                    | 	mov	al, byte [bp-1]
   959 | 00000748 | 98                        | 	cbw
   960 | 00000749 | 83C030                    | 	add	ax, 48
   961 |          |                           | L_clib_72:
   962 | 0000074C | 8846FE                    | 	mov	byte [bp-2], al
   963 | 0000074F | B80200                    | 	mov	ax, 2
   964 | 00000752 | 50                        | 	push	ax
   965 | 00000753 | 8D46FD                    | 	lea	ax, [bp-3]
   966 | 00000756 | 50                        | 	push	ax
   967 | 00000757 | E892FC                    | 	call	print
   968 | 0000075A | 83C404                    | 	add	sp, 4
   969 | 0000075D | 89EC                      | 	mov	sp, bp
   970 | 0000075F | 5D                        | 	pop	bp
   971 | 00000760 | C3                        | 	ret
   972 |          |                           | L_clib_67:
   973 | 00000761 | 55                        | 	push	bp
   974 | 00000762 | 89E5                      | 	mov	bp, sp
   975 | 00000764 | 83EC04                    | 	sub	sp, 4
   976 | 00000767 | EB97                      | 	jmp	L_clib_68
   977 | 00000769 | 90                        | 	ALIGN	2
   978 |          |                           | printWord:
   979 | 0000076A | EB59                      | 	jmp	L_clib_74
   980 |          |                           | L_clib_75:
   981 | 0000076C | C746FE0300                | 	mov	word [bp-2], 3
   982 | 00000771 | EB3A                      | 	jmp	L_clib_77
   983 |          |                           | L_clib_76:
   984 | 00000773 | 8B4604                    | 	mov	ax, word [bp+4]
   985 | 00000776 | 83E00F                    | 	and	ax, 15
   986 | 00000779 | 8846FD                    | 	mov	byte [bp-3], al
   987 | 0000077C | 807EFD09                  | 	cmp	byte [bp-3], 9
   988 | 00000780 | 7E0C                      | 	jle	L_clib_80
   989 | 00000782 | 8A46FD                    | 	mov	al, byte [bp-3]
   990 | 00000785 | 98                        | 	cbw
   991 | 00000786 | 83E80A                    | 	sub	ax, 10
   992 | 00000789 | 83C041                    | 	add	ax, 65
   993 | 0000078C | EB07                      | 	jmp	L_clib_81
   994 |          |                           | L_clib_80:
   995 | 0000078E | 8A46FD                    | 	mov	al, byte [bp-3]
   996 | 00000791 | 98                        | 	cbw
   997 | 00000792 | 83C030                    | 	add	ax, 48
   998 |          |                           | L_clib_81:
   999 | 00000795 | 8B76FE                    | 	mov	si, word [bp-2]
  1000 | 00000798 | 8D56F9                    | 	lea	dx, [bp-7]
  1001 | 0000079B | 01D6                      | 	add	si, dx
  1002 | 0000079D | 8804                      | 	mov	byte [si], al
  1003 | 0000079F | 8B4604                    | 	mov	ax, word [bp+4]
  1004 | 000007A2 | B90400                    | 	mov	cx, 4
  1005 | 000007A5 | D3F8                      | 	sar	ax, cl
  1006 | 000007A7 | 894604                    | 	mov	word [bp+4], ax
  1007 |          |                           | L_clib_79:
  1008 | 000007AA | FF4EFE                    | 	dec	word [bp-2]
  1009 |          |                           | L_clib_77:
  1010 | 000007AD | 837EFE00                  | 	cmp	word [bp-2], 0
  1011 | 000007B1 | 7DC0                      | 	jge	L_clib_76
  1012 |          |                           | L_clib_78:
  1013 | 000007B3 | B80400                    | 	mov	ax, 4
  1014 | 000007B6 | 50                        | 	push	ax
  1015 | 000007B7 | 8D46F9                    | 	lea	ax, [bp-7]
  1016 | 000007BA | 50                        | 	push	ax
  1017 | 000007BB | E82EFC                    | 	call	print
  1018 | 000007BE | 83C404                    | 	add	sp, 4
  1019 | 000007C1 | 89EC                      | 	mov	sp, bp
  1020 | 000007C3 | 5D                        | 	pop	bp
  1021 | 000007C4 | C3                        | 	ret
  1022 |          |                           | L_clib_74:
  1023 | 000007C5 | 55                        | 	push	bp
  1024 | 000007C6 | 89E5                      | 	mov	bp, sp
  1025 | 000007C8 | 83EC08                    | 	sub	sp, 8
  1026 | 000007CB | EB9F                      | 	jmp	L_clib_75
  1027 | 000007CD | 90                        | 	ALIGN	2
  1028 |          |                           | printDWord:
  1029 | 000007CE | E9AC00                    | 	jmp	L_clib_83
  1030 |          |                           | L_clib_84:
  1031 | 000007D1 | 8D4604                    | 	lea	ax, [bp+4]
  1032 | 000007D4 | 89C6                      | 	mov	si, ax
  1033 | 000007D6 | 8B04                      | 	mov	ax, word [si]
  1034 | 000007D8 | 8946FA                    | 	mov	word [bp-6], ax
  1035 | 000007DB | 8D4604                    | 	lea	ax, [bp+4]
  1036 | 000007DE | 89C6                      | 	mov	si, ax
  1037 | 000007E0 | 83C602                    | 	add	si, 2
  1038 | 000007E3 | 8B04                      | 	mov	ax, word [si]
  1039 | 000007E5 | 8946F8                    | 	mov	word [bp-8], ax
  1040 | 000007E8 | C746FE0300                | 	mov	word [bp-2], 3
  1041 | 000007ED | EB76                      | 	jmp	L_clib_86
  1042 |          |                           | L_clib_85:
  1043 | 000007EF | 8B46FA                    | 	mov	ax, word [bp-6]
  1044 | 000007F2 | 83E00F                    | 	and	ax, 15
  1045 | 000007F5 | 8846FD                    | 	mov	byte [bp-3], al
  1046 | 000007F8 | 807EFD09                  | 	cmp	byte [bp-3], 9
  1047 | 000007FC | 7E0C                      | 	jle	L_clib_89
  1048 | 000007FE | 8A46FD                    | 	mov	al, byte [bp-3]
  1049 | 00000801 | 98                        | 	cbw
  1050 | 00000802 | 83E80A                    | 	sub	ax, 10
  1051 | 00000805 | 83C041                    | 	add	ax, 65
  1052 | 00000808 | EB07                      | 	jmp	L_clib_90
  1053 |          |                           | L_clib_89:
  1054 | 0000080A | 8A46FD                    | 	mov	al, byte [bp-3]
  1055 | 0000080D | 98                        | 	cbw
  1056 | 0000080E | 83C030                    | 	add	ax, 48
  1057 |          |                           | L_clib_90:
  1058 | 00000811 | 8B56FE                    | 	mov	dx, word [bp-2]
  1059 | 00000814 | 83C204                    | 	add	dx, 4
  1060 | 00000817 | 89D6                      | 	mov	si, dx
  1061 | 00000819 | 8D56F0                    | 	lea	dx, [bp-16]
  1062 | 0000081C | 01D6                      | 	add	si, dx
  1063 | 0000081E | 8804                      | 	mov	byte [si], al
  1064 | 00000820 | 8B46FA                    | 	mov	ax, word [bp-6]
  1065 | 00000823 | B90400                    | 	mov	cx, 4
  1066 | 00000826 | D3F8                      | 	sar	ax, cl
  1067 | 00000828 | 8946FA                    | 	mov	word [bp-6], ax
  1068 | 0000082B | 8B46F8                    | 	mov	ax, word [bp-8]
  1069 | 0000082E | 83E00F                    | 	and	ax, 15
  1070 | 00000831 | 8846FD                    | 	mov	byte [bp-3], al
  1071 | 00000834 | 807EFD09                  | 	cmp	byte [bp-3], 9
  1072 | 00000838 | 7E0C                      | 	jle	L_clib_91
  1073 | 0000083A | 8A46FD                    | 	mov	al, byte [bp-3]
  1074 | 0000083D | 98                        | 	cbw
  1075 | 0000083E | 83E80A                    | 	sub	ax, 10
  1076 | 00000841 | 83C041                    | 	add	ax, 65
  1077 | 00000844 | EB07                      | 	jmp	L_clib_92
  1078 |          |                           | L_clib_91:
  1079 | 00000846 | 8A46FD                    | 	mov	al, byte [bp-3]
  1080 | 00000849 | 98                        | 	cbw
  1081 | 0000084A | 83C030                    | 	add	ax, 48
  1082 |          |                           | L_clib_92:
  1083 | 0000084D | 8B76FE                    | 	mov	si, word [bp-2]
  1084 | 00000850 | 8D56F0                    | 	lea	dx, [bp-16]
  1085 | 00000853 | 01D6                      | 	add	si, dx
  1086 | 00000855 | 8804                      | 	mov	byte [si], al
  1087 | 00000857 | 8B46F8                    | 	mov	ax, word [bp-8]
  1088 | 0000085A | B90400                    | 	mov	cx, 4
  1089 | 0000085D | D3F8                      | 	sar	ax, cl
  1090 | 0000085F | 8946F8                    | 	mov	word [bp-8], ax
  1091 |          |                           | L_clib_88:
  1092 | 00000862 | FF4EFE                    | 	dec	word [bp-2]
  1093 |          |                           | L_clib_86:
  1094 | 00000865 | 837EFE00                  | 	cmp	word [bp-2], 0
  1095 | 00000869 | 7D84                      | 	jge	L_clib_85
  1096 |          |                           | L_clib_87:
  1097 | 0000086B | B80800                    | 	mov	ax, 8
  1098 | 0000086E | 50                        | 	push	ax
  1099 | 0000086F | 8D46F0                    | 	lea	ax, [bp-16]
  1100 | 00000872 | 50                        | 	push	ax
  1101 | 00000873 | E876FB                    | 	call	print
  1102 | 00000876 | 83C404                    | 	add	sp, 4
  1103 | 00000879 | 89EC                      | 	mov	sp, bp
  1104 | 0000087B | 5D                        | 	pop	bp
  1105 | 0000087C | C3                        | 	ret
  1106 |          |                           | L_clib_83:
  1107 | 0000087D | 55                        | 	push	bp
  1108 | 0000087E | 89E5                      | 	mov	bp, sp
  1109 | 00000880 | 83EC10                    | 	sub	sp, 16
  1110 | 00000883 | E94BFF                    | 	jmp	L_clib_84
  1111 |          |                           | 
  1112 |          |                           | 	align	2
  1113 |          |                           | SlidePiece:	; void SlidePiece(int ID, int direction)
  1114 | 00000886 | 55                        | 	push	bp
  1115 | 00000887 | 89E5                      | 	mov	bp, sp
  1116 | 00000889 | 50                        | 	push	ax
  1117 | 0000088A | 52                        | 	push	dx
  1118 | 0000088B | B400                      |  	mov	ah, 0		; Slide piece operation
  1119 | 0000088D | 8A4606                    |   	mov	al, [bp+6]	; Move direction (loword only)
  1120 | 00000890 | 8B5604                    | 	mov	dx, [bp+4]	; Move id
  1121 | 00000893 | CD1B                      | 	int	1Bh		; Call Simptris services
  1122 | 00000895 | 5A                        | 	pop	dx
  1123 | 00000896 | 58                        | 	pop	ax
  1124 | 00000897 | 5D                        | 	pop	bp
  1125 | 00000898 | C3                        | 	ret
  1126 |          |                           | RotatePiece:	; void RotatePiece(int ID, int direction)
  1127 | 00000899 | 55                        | 	push	bp
  1128 | 0000089A | 89E5                      | 	mov	bp, sp
  1129 | 0000089C | 50                        | 	push	ax
  1130 | 0000089D | 52                        | 	push	dx
  1131 | 0000089E | B401                      |  	mov	ah, 1		; Rotate piece operation
  1132 | 000008A0 | 8A4606                    |  	mov	al, [bp+6]	; Move direction (loword only)
  1133 | 000008A3 | 8B5604                    | 	mov	dx, [bp+4]	; Move id
  1134 | 000008A6 | CD1B                      | 	int	1Bh		; Call Simptris services
  1135 | 000008A8 | 5A                        | 	pop	dx
  1136 | 000008A9 | 58                        | 	pop	ax
  1137 | 000008AA | 5D                        | 	pop	bp
  1138 | 000008AB | C3                        | 	ret
  1139 |          |                           | SeedSimptris:	; void SeedSimptris(long seed)
  1140 | 000008AC | 55                        | 	push	bp
  1141 | 000008AD | 89E5                      | 	mov	bp, sp
  1142 | 000008AF | 50                        | 	push	ax
  1143 | 000008B0 | 51                        | 	push	cx
  1144 | 000008B1 | 52                        | 	push    dx
  1145 | 000008B2 | B402                      |  	mov	ah, 2		; Seed operation
  1146 | 000008B4 | 8B5604                    | 	mov	dx, [bp+4]	; Move loword of seed
  1147 | 000008B7 | 8B4E06                    | 	mov	cx, [bp+6]	; Move hiword of seed
  1148 | 000008BA | CD1B                      | 	int	1Bh		; Call Simptris services
  1149 | 000008BC | 5A                        | 	pop	dx
  1150 | 000008BD | 59                        | 	pop	cx
  1151 | 000008BE | 58                        | 	pop	ax
  1152 | 000008BF | 5D                        | 	pop	bp
  1153 | 000008C0 | C3                        | 	ret
  1154 |          |                           | StartSimptris:	; void StartSimptris(void)
  1155 | 000008C1 | 50                        | 	push	ax
  1156 | 000008C2 | B403                      |  	mov	ah, 3		; Start Simptris operation
  1157 | 000008C4 | CD1B                      | 	int	1Bh		; Call Simptris services
  1158 | 000008C6 | 58                        | 	pop	ax
  1159 | 000008C7 | C3                        | 	ret
  1160 |          |                           | 
  1161 |          |                           | 
  1162 |          |                           | ; 1    Save the context of whatever was running by pushing all registers onto the stack, except SP, SS, CS, IP, and the flags.
  1163 |          |                           | ; 2    Enable interrupts to allow higher priority IRQs to interrupt.
  1164 |          |                           | ; 3    Run the interrupt handler, which is usually a C function that does the work for this interrupt.
  1165 |          |                           | ; 4    Disable interrupts.
  1166 |          |                           | ; 5    Send the EOI command to the PIC, informing it that the handler is finished.
  1167 |          |                           | ; 6    Restore the context of what was running before the interrupt occurred by popping the registers saved in step 1 off the stack.
  1168 |          |                           | ; 7    Execute the iret instruction. This restores in one atomic operation the values for IP, CS, and the flags, which were automatically saved on the stack by the processor when the interrupt occurred. This effecti
  1169 |          |                           | 
  1170 |          |                           | 
  1171 |          |                           | 
  1172 |          |                           | 
  1173 |          |                           | isr_reset:
  1174 |          |                           | 	; save context
  1175 | 000008C8 | 50                        | 	push ax
  1176 | 000008C9 | 53                        | 	push bx
  1177 | 000008CA | 51                        | 	push cx
  1178 | 000008CB | 52                        | 	push dx
  1179 | 000008CC | 55                        | 	push bp
  1180 | 000008CD | 56                        | 	push si
  1181 | 000008CE | 57                        | 	push di
  1182 | 000008CF | 1E                        | 	push ds
  1183 | 000008D0 | 06                        | 	push es
  1184 |          |                           | 	; Here we test to see if we are the lowest-level interrupt.
  1185 |          |                           | 	; If we are, we need to save the task's stack that we interrupted
  1186 | 000008D1 | A1[8E1D]                  | 	mov ax, [YKISRCallDepth]
  1187 | 000008D4 | 85C0                      | 	test ax, ax
  1188 | 000008D6 | 7506                      | 	jnz isr_reset_not_lowest_interrupt
  1189 |          |                           | 
  1190 |          |                           | 	; Save the SP of the task we interrupted
  1191 | 000008D8 | 8B1E[961A]                | 	mov bx, [YKRdyList]
  1192 | 000008DC | 8927                      | 	mov [bx], sp
  1193 |          |                           | 
  1194 |          |                           | isr_reset_not_lowest_interrupt:
  1195 |          |                           | 
  1196 | 000008DE | E8DB07                    | 	call YKEnterISR
  1197 |          |                           | 	; enable interrupts for higher priority IRQ
  1198 | 000008E1 | FB                        | 	sti	
  1199 |          |                           | 
  1200 |          |                           | 	; run interrupt handler
  1201 |          |                           | 	
  1202 |          |                           | 	; disable interrupts
  1203 |          |                           | 	; sent EOI to PIC
  1204 |          |                           | 	; restore context
  1205 |          |                           | 
  1206 |          |                           | 	; But we don't have to do any of that, because we ARE the highest-priority interrupt
  1207 |          |                           | 	; And it will end the program. So no saving context, no enabling interrupts, 
  1208 |          |                           | 	; and no restoring context.
  1209 | 000008E2 | E80B01                    | 	call c_isr_reset
  1210 |          |                           | 	
  1211 |          |                           | 
  1212 | 000008E5 | FA                        | 	cli
  1213 |          |                           | 	
  1214 | 000008E6 | B020                      | 	mov	al, 0x20
  1215 | 000008E8 | E620                      | 	out 	0x20, al
  1216 |          |                           | 
  1217 |          |                           | 		
  1218 | 000008EA | E8E107                    | 	call YKExitISR
  1219 |          |                           | 	
  1220 | 000008ED | 07                        | 	pop es
  1221 | 000008EE | 1F                        | 	pop ds
  1222 | 000008EF | 5F                        | 	pop di
  1223 | 000008F0 | 5E                        | 	pop si
  1224 | 000008F1 | 5D                        | 	pop bp
  1225 | 000008F2 | 5A                        | 	pop dx
  1226 | 000008F3 | 59                        | 	pop cx
  1227 | 000008F4 | 5B                        | 	pop bx
  1228 | 000008F5 | 58                        | 	pop ax	
  1229 |          |                           | 	
  1230 | 000008F6 | CF                        | 	iret	; This should not even happen.
  1231 |          |                           | 
  1232 |          |                           | 
  1233 |          |                           | 
  1234 |          |                           | isr_keypress:
  1235 |          |                           | 		; Save context
  1236 | 000008F7 | 50                        | 	push ax
  1237 | 000008F8 | 53                        | 	push bx
  1238 | 000008F9 | 51                        | 	push cx
  1239 | 000008FA | 52                        | 	push dx
  1240 | 000008FB | 55                        | 	push bp
  1241 | 000008FC | 56                        | 	push si
  1242 | 000008FD | 57                        | 	push di
  1243 | 000008FE | 1E                        | 	push ds
  1244 | 000008FF | 06                        | 	push es
  1245 |          |                           | 
  1246 |          |                           | 	; Here we test to see if we are the lowest-level interrupt.
  1247 |          |                           | 	; If we are, we need to save the task's stack that we interrupted
  1248 | 00000900 | A1[8E1D]                  | 	mov ax, [YKISRCallDepth]
  1249 | 00000903 | 85C0                      | 	test ax, ax
  1250 | 00000905 | 7506                      | 	jnz isr_keypress_not_lowest_interrupt
  1251 |          |                           | 
  1252 |          |                           | 	; Save the SP of the task we interrupted
  1253 | 00000907 | 8B1E[961A]                | 	mov bx, [YKRdyList]
  1254 | 0000090B | 8927                      | 	mov [bx], sp
  1255 |          |                           | 
  1256 |          |                           | isr_keypress_not_lowest_interrupt:
  1257 |          |                           | 
  1258 | 0000090D | E8AC07                    | 	call YKEnterISR
  1259 |          |                           | 
  1260 |          |                           | 		; Enable interrupts for higher-priority 
  1261 | 00000910 | FB                        | 	sti
  1262 |          |                           | 
  1263 |          |                           | 		; Run interrupt handler
  1264 | 00000911 | E81601                    | 	call c_isr_keypress
  1265 |          |                           | 
  1266 |          |                           | 
  1267 |          |                           | 		; disable interrupts
  1268 | 00000914 | FA                        | 	cli
  1269 |          |                           | 
  1270 |          |                           | 		;send EOI to PIC
  1271 | 00000915 | B020                      | 	mov	al, 0x20	; Load nonspecific EOI value (0x20) into register al
  1272 | 00000917 | E620                      | 	out	0x20, al	; Write EOI to PIC (port 0x20)
  1273 |          |                           | 
  1274 |          |                           | 	
  1275 | 00000919 | E8B207                    | 	call YKExitISR
  1276 |          |                           | 		; Restore context
  1277 | 0000091C | 07                        | 	pop es
  1278 | 0000091D | 1F                        | 	pop ds
  1279 | 0000091E | 5F                        | 	pop di
  1280 | 0000091F | 5E                        | 	pop si
  1281 | 00000920 | 5D                        | 	pop bp
  1282 | 00000921 | 5A                        | 	pop dx
  1283 | 00000922 | 59                        | 	pop cx
  1284 | 00000923 | 5B                        | 	pop bx
  1285 | 00000924 | 58                        | 	pop ax	
  1286 |          |                           | 		; Execute IRET
  1287 | 00000925 | CF                        | 	iret
  1288 |          |                           | 
  1289 |          |                           | 
  1290 |          |                           | 
  1291 |          |                           | isr_tick:
  1292 |          |                           | 		; Save context
  1293 | 00000926 | 50                        | 	push ax
  1294 | 00000927 | 53                        | 	push bx
  1295 | 00000928 | 51                        | 	push cx
  1296 | 00000929 | 52                        | 	push dx
  1297 | 0000092A | 55                        | 	push bp
  1298 | 0000092B | 56                        | 	push si
  1299 | 0000092C | 57                        | 	push di
  1300 | 0000092D | 1E                        | 	push ds
  1301 | 0000092E | 06                        | 	push es
  1302 |          |                           | 	
  1303 |          |                           | 	; Here we test to see if we are the lowest-level interrupt.
  1304 |          |                           | 	; If we are, we need to save the task's stack that we interrupted
  1305 | 0000092F | A1[8E1D]                  | 	mov ax, [YKISRCallDepth]
  1306 | 00000932 | 85C0                      | 	test ax, ax
  1307 | 00000934 | 7506                      | 	jnz isr_tick_not_lowest_interrupt
  1308 |          |                           | 
  1309 |          |                           | 	; Save the SP of the task we interrupted
  1310 | 00000936 | 8B1E[961A]                | 	mov bx, [YKRdyList]
  1311 | 0000093A | 8927                      | 	mov [bx], sp
  1312 |          |                           | 
  1313 |          |                           | isr_tick_not_lowest_interrupt:
  1314 |          |                           | 
  1315 | 0000093C | E87D07                    | 	call YKEnterISR
  1316 |          |                           | 
  1317 |          |                           | 		; Enable interrupts for higher-priority 
  1318 | 0000093F | FB                        | 	sti
  1319 |          |                           | 
  1320 |          |                           | 		; Run interrupt handler
  1321 | 00000940 | E8C100                    | 	call c_isr_tick
  1322 |          |                           | 		; disable interrupts
  1323 | 00000943 | FA                        | 	cli
  1324 |          |                           | 
  1325 |          |                           | 		;send EOI to PIC
  1326 | 00000944 | B020                      | 	mov	al, 0x20	; Load nonspecific EOI value (0x20) into register al
  1327 | 00000946 | E620                      | 	out	0x20, al	; Write EOI to PIC (port 0x20)
  1328 |          |                           | 
  1329 |          |                           | 		
  1330 | 00000948 | E88307                    | 	call YKExitISR
  1331 |          |                           | 		; Restore context
  1332 | 0000094B | 07                        | 	pop es
  1333 | 0000094C | 1F                        | 	pop ds
  1334 | 0000094D | 5F                        | 	pop di
  1335 | 0000094E | 5E                        | 	pop si
  1336 | 0000094F | 5D                        | 	pop bp
  1337 | 00000950 | 5A                        | 	pop dx
  1338 | 00000951 | 59                        | 	pop cx
  1339 | 00000952 | 5B                        | 	pop bx
  1340 | 00000953 | 58                        | 	pop ax
  1341 |          |                           | 
  1342 |          |                           | 	   ; Execute IRET
  1343 | 00000954 | CF                        | 	iret
  1344 |          |                           | 
  1345 |          |                           | ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  1346 |          |                           | ;;;;;;;;;;;;;;;;;;;;;;;;	NEW SIMPTRIS ISRS below		;;;;;;;;;;;;;;;;;;;;;;;;
  1347 |          |                           | ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  1348 |          |                           | ;				 ;
  1349 |          |                           | ;	GAME OVER ISR		 ;
  1350 |          |                           | ;				 ;
  1351 |          |                           | ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  1352 |          |                           | 
  1353 |          |                           | isr_game_over:
  1354 |          |                           | 	; save context
  1355 | 00000955 | 50                        | 	push ax
  1356 | 00000956 | 53                        | 	push bx
  1357 | 00000957 | 51                        | 	push cx
  1358 | 00000958 | 52                        | 	push dx
  1359 | 00000959 | 55                        | 	push bp
  1360 | 0000095A | 56                        | 	push si
  1361 | 0000095B | 57                        | 	push di
  1362 | 0000095C | 1E                        | 	push ds
  1363 | 0000095D | 06                        | 	push es
  1364 |          |                           | 	; Here we test to see if we are the lowest-level interrupt.
  1365 |          |                           | 	; If we are, we need to save the task's stack that we interrupted
  1366 | 0000095E | A1[8E1D]                  | 	mov ax, [YKISRCallDepth]
  1367 | 00000961 | 85C0                      | 	test ax, ax
  1368 | 00000963 | 7506                      | 	jnz isr_game_over_not_lowest_interrupt
  1369 |          |                           | 
  1370 |          |                           | 	; Save the SP of the task we interrupted
  1371 | 00000965 | 8B1E[961A]                | 	mov bx, [YKRdyList]
  1372 | 00000969 | 8927                      | 	mov [bx], sp
  1373 |          |                           | 
  1374 |          |                           | isr_game_over_not_lowest_interrupt:
  1375 |          |                           | 
  1376 | 0000096B | E84E07                    | 	call YKEnterISR
  1377 |          |                           | 
  1378 | 0000096E | FB                        | 	sti ;enable interrupts to allow higher priority IRQs to interrupt
  1379 |          |                           | 
  1380 | 0000096F | E8FC00                    | 	call c_isr_game_over ; (Indicate game over. No new pieces appear)
  1381 |          |                           | 
  1382 | 00000972 | FA                        | 	cli ; disable interrupts
  1383 |          |                           | 
  1384 | 00000973 | B020                      | 	mov	al, 0x20 ;Send EOI command to PIC, informing it that handler is finished
  1385 | 00000975 | E620                      | 	out	0x20, al
  1386 |          |                           | 
  1387 | 00000977 | E85407                    | 	call YKExitISR
  1388 |          |                           | 
  1389 | 0000097A | 07                        | 	pop es	; restores context of what was running b4 interrupt occured
  1390 | 0000097B | 1F                        | 	pop ds
  1391 | 0000097C | 5F                        | 	pop di
  1392 | 0000097D | 5E                        | 	pop si
  1393 | 0000097E | 5D                        | 	pop bp
  1394 | 0000097F | 5A                        | 	pop dx
  1395 | 00000980 | 59                        | 	pop cx
  1396 | 00000981 | 5B                        | 	pop bx
  1397 | 00000982 | 58                        | 	pop ax
  1398 |          |                           | 
  1399 | 00000983 | CF                        | 	iret ; restores values for IP, CS, flags
  1400 |          |                           | 
  1401 |          |                           | ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  1402 |          |                           | ;					;
  1403 |          |                           | ;	     NEW PIECE ISR		;
  1404 |          |                           | ;					;
  1405 |          |                           | ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  1406 |          |                           | 
  1407 |          |                           | isr_new_piece:
  1408 | 00000984 | 50                        | 	push ax ; save context
  1409 | 00000985 | 53                        | 	push bx
  1410 | 00000986 | 51                        | 	push cx
  1411 | 00000987 | 52                        | 	push dx
  1412 | 00000988 | 55                        | 	push bp
  1413 | 00000989 | 56                        | 	push si
  1414 | 0000098A | 57                        | 	push di
  1415 | 0000098B | 1E                        | 	push ds
  1416 | 0000098C | 06                        | 	push es
  1417 |          |                           | 
  1418 |          |                           | 	; Here we test to see if we are the lowest-level interrupt.
  1419 |          |                           | 	; If we are, we need to save the task's stack that we interrupted
  1420 | 0000098D | A1[8E1D]                  | 	mov ax, [YKISRCallDepth]
  1421 | 00000990 | 85C0                      | 	test ax, ax
  1422 | 00000992 | 7506                      | 	jnz isr_new_piece_not_lowest_interrupt
  1423 |          |                           | 
  1424 |          |                           | 	; Save the SP of the task we interrupted
  1425 | 00000994 | 8B1E[961A]                | 	mov bx, [YKRdyList]
  1426 | 00000998 | 8927                      | 	mov [bx], sp
  1427 |          |                           | 
  1428 |          |                           | isr_new_piece_not_lowest_interrupt:
  1429 |          |                           | 
  1430 | 0000099A | E81F07                    | 	call YKEnterISR
  1431 |          |                           | 
  1432 | 0000099D | FB                        | 	sti ;enable interrupts to allow higher priority IRQs to interrupt
  1433 |          |                           | 
  1434 | 0000099E | E81501                    | 	call c_isr_new_piece ; (Indicate that a new piece has appeared on board...)
  1435 |          |                           | 
  1436 | 000009A1 | FA                        | 	cli ; disable interrupts
  1437 |          |                           | 
  1438 | 000009A2 | B020                      | 	mov	al, 0x20 ;Send EOI command to PIC, informing it that handler is finished
  1439 | 000009A4 | E620                      | 	out	0x20, al
  1440 |          |                           | 
  1441 | 000009A6 | E82507                    | 	call YKExitISR
  1442 |          |                           | 
  1443 | 000009A9 | 07                        | 	pop es	; restores context of what was running b4 interrupt occured
  1444 | 000009AA | 1F                        | 	pop ds
  1445 | 000009AB | 5F                        | 	pop di
  1446 | 000009AC | 5E                        | 	pop si
  1447 | 000009AD | 5D                        | 	pop bp
  1448 | 000009AE | 5A                        | 	pop dx
  1449 | 000009AF | 59                        | 	pop cx
  1450 | 000009B0 | 5B                        | 	pop bx
  1451 | 000009B1 | 58                        | 	pop ax
  1452 |          |                           | 
  1453 | 000009B2 | CF                        | 	iret ; restores values for IP, CS, flags
  1454 |          |                           | 
  1455 |          |                           | ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  1456 |          |                           | ;					;
  1457 |          |                           | ;	    RECEIVED ISR		;
  1458 |          |                           | ;					;
  1459 |          |                           | ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  1460 |          |                           | 
  1461 |          |                           | isr_received:
  1462 | 000009B3 | 50                        | 	push ax ; save context
  1463 | 000009B4 | 53                        | 	push bx
  1464 | 000009B5 | 51                        | 	push cx
  1465 | 000009B6 | 52                        | 	push dx
  1466 | 000009B7 | 55                        | 	push bp
  1467 | 000009B8 | 56                        | 	push si
  1468 | 000009B9 | 57                        | 	push di
  1469 | 000009BA | 1E                        | 	push ds
  1470 | 000009BB | 06                        | 	push es
  1471 |          |                           | 	; Here we test to see if we are the lowest-level interrupt.
  1472 |          |                           | 	; If we are, we need to save the task's stack that we interrupted
  1473 | 000009BC | A1[8E1D]                  | 	mov ax, [YKISRCallDepth]
  1474 | 000009BF | 85C0                      | 	test ax, ax
  1475 | 000009C1 | 7506                      | 	jnz isr_received_not_lowest_interrupt
  1476 |          |                           | 
  1477 |          |                           | 	; Save the SP of the task we interrupted
  1478 | 000009C3 | 8B1E[961A]                | 	mov bx, [YKRdyList]
  1479 | 000009C7 | 8927                      | 	mov [bx], sp
  1480 |          |                           | 
  1481 |          |                           | isr_received_not_lowest_interrupt:
  1482 |          |                           | 
  1483 | 000009C9 | E8F006                    | 	call YKEnterISR
  1484 |          |                           | 
  1485 | 000009CC | FB                        | 	sti ;enable interrupts to allow higher priority IRQs to interrupt
  1486 |          |                           | 
  1487 | 000009CD | E89401                    | 	call c_isr_received ; (Indicate that a new piece has appeared on board...)
  1488 |          |                           | 
  1489 | 000009D0 | FA                        | 	cli ; disable interrupts
  1490 |          |                           | 	
  1491 | 000009D1 | B020                      | 	mov	al, 0x20	; Load nonspecific EOI value (0x20) into register al
  1492 | 000009D3 | E620                      | 	out	0x20, al	; Write EOI to PIC (port 0x20)
  1493 |          |                           | 
  1494 | 000009D5 | E8F606                    | 	call YKExitISR
  1495 |          |                           | 
  1496 | 000009D8 | 07                        | 	pop es	; restores context of what was running b4 interrupt occured
  1497 | 000009D9 | 1F                        | 	pop ds
  1498 | 000009DA | 5F                        | 	pop di
  1499 | 000009DB | 5E                        | 	pop si
  1500 | 000009DC | 5D                        | 	pop bp
  1501 | 000009DD | 5A                        | 	pop dx
  1502 | 000009DE | 59                        | 	pop cx
  1503 | 000009DF | 5B                        | 	pop bx
  1504 | 000009E0 | 58                        | 	pop ax
  1505 |          |                           | 
  1506 | 000009E1 | CF                        | 	iret
  1507 |          |                           | 
  1508 |          |                           | ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  1509 |          |                           | ;					;
  1510 |          |                           | ;	     TOUCHDOWN ISR		;
  1511 |          |                           | ;					;
  1512 |          |                           | ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  1513 |          |                           | 
  1514 |          |                           | isr_touchdown:
  1515 |          |                           | 
  1516 | 000009E2 | B020                      | 	mov	al, 0x20	; Load nonspecific EOI value (0x20) into register al
  1517 | 000009E4 | E620                      | 	out	0x20, al	; Write EOI to PIC (port 0x20)
  1518 |          |                           | 
  1519 | 000009E6 | CF                        | 	iret
  1520 |          |                           | 
  1521 |          |                           | 
  1522 |          |                           | ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  1523 |          |                           | ;					;
  1524 |          |                           | ;	       CLEAR ISR		;
  1525 |          |                           | ;					;
  1526 |          |                           | ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  1527 |          |                           | 
  1528 |          |                           | isr_clear:
  1529 |          |                           | 
  1530 | 000009E7 | B020                      | 	mov	al, 0x20	; Load nonspecific EOI value (0x20) into register al
  1531 | 000009E9 | E620                      | 	out	0x20, al	; Write EOI to PIC (port 0x20)
  1532 |          |                           | 
  1533 | 000009EB | CF                        | 	iret
  1534 |          |                           | 
  1535 |          |                           | 
  1536 |          |                           | 
  1537 |          |                           | ; Generated by c86 (BYU-NASM) 5.1 (beta) from myinth.i
  1538 |          |                           | 	CPU	8086
  1539 |          |                           | 	ALIGN	2
  1540 | 000009EC | E9AD1F                    | 	jmp	main	; Jump to program start
  1541 | 000009EF | 90                        | 	ALIGN	2
  1542 |          |                           | c_isr_reset:
  1543 | 000009F0 | EB0D                      | 	jmp	L_myinth_1
  1544 |          |                           | L_myinth_2:
  1545 | 000009F2 | 30C0                      | 	xor	al, al
  1546 | 000009F4 | 50                        | 	push	ax
  1547 | 000009F5 | E8E2F9                    | 	call	exit
  1548 | 000009F8 | 83C402                    | 	add	sp, 2
  1549 | 000009FB | 89EC                      | 	mov	sp, bp
  1550 | 000009FD | 5D                        | 	pop	bp
  1551 | 000009FE | C3                        | 	ret
  1552 |          |                           | L_myinth_1:
  1553 | 000009FF | 55                        | 	push	bp
  1554 | 00000A00 | 89E5                      | 	mov	bp, sp
  1555 | 00000A02 | EBEE                      | 	jmp	L_myinth_2
  1556 |          |                           | 	ALIGN	2
  1557 |          |                           | c_isr_tick:
  1558 | 00000A04 | EB07                      | 	jmp	L_myinth_4
  1559 |          |                           | L_myinth_5:
  1560 | 00000A06 | E89305                    | 	call	YKTickHandler
  1561 | 00000A09 | 89EC                      | 	mov	sp, bp
  1562 | 00000A0B | 5D                        | 	pop	bp
  1563 | 00000A0C | C3                        | 	ret
  1564 |          |                           | L_myinth_4:
  1565 | 00000A0D | 55                        | 	push	bp
  1566 | 00000A0E | 89E5                      | 	mov	bp, sp
  1567 | 00000A10 | EBF4                      | 	jmp	L_myinth_5
  1568 |          |                           | L_myinth_8:
  1569 | 00000A12 | 292049474E4F524544-       | 	DB	") IGNORED",0xA,0
  1570 | 00000A1B | 0A00                      | ...
  1571 |          |                           | L_myinth_7:
  1572 | 00000A1D | 0A4B45595052455353-       | 	DB	0xA,"KEYPRESS (",0
  1573 | 00000A26 | 202800                    | ...
  1574 | 00000A29 | 90                        | 	ALIGN	2
  1575 |          |                           | c_isr_keypress:
  1576 | 00000A2A | EB2F                      | 	jmp	L_myinth_9
  1577 |          |                           | L_myinth_10:
  1578 | 00000A2C | A0[C000]                  | 	mov	al, byte [KeyBuffer]
  1579 | 00000A2F | 8846FF                    | 	mov	byte [bp-1], al
  1580 | 00000A32 | B80B00                    | 	mov	ax, 11
  1581 | 00000A35 | 50                        | 	push	ax
  1582 | 00000A36 | B8[1D0A]                  | 	mov	ax, L_myinth_7
  1583 | 00000A39 | 50                        | 	push	ax
  1584 | 00000A3A | E8AFF9                    | 	call	print
  1585 | 00000A3D | 83C404                    | 	add	sp, 4
  1586 | 00000A40 | FF76FF                    | 	push	word [bp-1]
  1587 | 00000A43 | E8BEF9                    | 	call	printChar
  1588 | 00000A46 | 83C402                    | 	add	sp, 2
  1589 | 00000A49 | B80A00                    | 	mov	ax, 10
  1590 | 00000A4C | 50                        | 	push	ax
  1591 | 00000A4D | B8[120A]                  | 	mov	ax, L_myinth_8
  1592 | 00000A50 | 50                        | 	push	ax
  1593 | 00000A51 | E898F9                    | 	call	print
  1594 | 00000A54 | 83C404                    | 	add	sp, 4
  1595 | 00000A57 | 89EC                      | 	mov	sp, bp
  1596 | 00000A59 | 5D                        | 	pop	bp
  1597 | 00000A5A | C3                        | 	ret
  1598 |          |                           | L_myinth_9:
  1599 | 00000A5B | 55                        | 	push	bp
  1600 | 00000A5C | 89E5                      | 	mov	bp, sp
  1601 | 00000A5E | 51                        | 	push	cx
  1602 | 00000A5F | EBCB                      | 	jmp	L_myinth_10
  1603 |          |                           | L_myinth_12:
  1604 | 00000A61 | 0A47414D45204F5645-       | 	DB	0xA,"GAME OVER",0xA,0
  1605 | 00000A6A | 520A00                    | ...
  1606 | 00000A6D | 90                        | 	ALIGN	2
  1607 |          |                           | c_isr_game_over:
  1608 | 00000A6E | EB17                      | 	jmp	L_myinth_13
  1609 |          |                           | L_myinth_14:
  1610 | 00000A70 | B8[610A]                  | 	mov	ax, L_myinth_12
  1611 | 00000A73 | 50                        | 	push	ax
  1612 | 00000A74 | E8B1F9                    | 	call	printString
  1613 | 00000A77 | 83C402                    | 	add	sp, 2
  1614 | 00000A7A | 30C0                      | 	xor	al, al
  1615 | 00000A7C | 50                        | 	push	ax
  1616 | 00000A7D | E85AF9                    | 	call	exit
  1617 | 00000A80 | 83C402                    | 	add	sp, 2
  1618 | 00000A83 | 89EC                      | 	mov	sp, bp
  1619 | 00000A85 | 5D                        | 	pop	bp
  1620 | 00000A86 | C3                        | 	ret
  1621 |          |                           | L_myinth_13:
  1622 | 00000A87 | 55                        | 	push	bp
  1623 | 00000A88 | 89E5                      | 	mov	bp, sp
  1624 | 00000A8A | EBE4                      | 	jmp	L_myinth_14
  1625 |          |                           | 	ALIGN	2
  1626 |          |                           | L_myinth_16:
  1627 | 00000A8C | 0000                      | 	DW	0
  1628 |          |                           | L_myinth_17:
  1629 | 00000A8E | 0A2A2A2A2A2A6E6577-       | 	DB	0xA,"*****new piece appeared on board*****",0xA,0
  1630 | 00000A97 | 207069656365206170-       | ...
  1631 | 00000AA0 | 706561726564206F6E-       | ...
  1632 | 00000AA9 | 20626F6172642A2A2A-       | ...
  1633 | 00000AB2 | 2A2A0A00                  | ...
  1634 |          |                           | 	ALIGN	2
  1635 |          |                           | c_isr_new_piece:
  1636 | 00000AB6 | E9A200                    | 	jmp	L_myinth_18
  1637 |          |                           | L_myinth_19:
  1638 | 00000AB9 | A1[C200]                  | 	mov	ax, word [NewPieceType]
  1639 | 00000ABC | 8946FE                    | 	mov	word [bp-2], ax
  1640 | 00000ABF | A1[C600]                  | 	mov	ax, word [NewPieceOrientation]
  1641 | 00000AC2 | 8946FC                    | 	mov	word [bp-4], ax
  1642 | 00000AC5 | A1[C400]                  | 	mov	ax, word [NewPieceID]
  1643 | 00000AC8 | 8946FA                    | 	mov	word [bp-6], ax
  1644 | 00000ACB | A1[C800]                  | 	mov	ax, word [NewPieceColumn]
  1645 | 00000ACE | 8946F8                    | 	mov	word [bp-8], ax
  1646 | 00000AD1 | B8[8E0A]                  | 	mov	ax, L_myinth_17
  1647 | 00000AD4 | 50                        | 	push	ax
  1648 | 00000AD5 | E850F9                    | 	call	printString
  1649 | 00000AD8 | 83C402                    | 	add	sp, 2
  1650 | 00000ADB | A1[8C0A]                  | 	mov	ax, word [L_myinth_16]
  1651 | 00000ADE | B90300                    | 	mov	cx, 3
  1652 | 00000AE1 | D3E0                      | 	shl	ax, cl
  1653 | 00000AE3 | 89C6                      | 	mov	si, ax
  1654 | 00000AE5 | 81C6[7036]                | 	add	si, newPieceArray
  1655 | 00000AE9 | 8B46FA                    | 	mov	ax, word [bp-6]
  1656 | 00000AEC | 8904                      | 	mov	word [si], ax
  1657 | 00000AEE | A1[8C0A]                  | 	mov	ax, word [L_myinth_16]
  1658 | 00000AF1 | B90300                    | 	mov	cx, 3
  1659 | 00000AF4 | D3E0                      | 	shl	ax, cl
  1660 | 00000AF6 | 05[7036]                  | 	add	ax, newPieceArray
  1661 | 00000AF9 | 89C6                      | 	mov	si, ax
  1662 | 00000AFB | 83C602                    | 	add	si, 2
  1663 | 00000AFE | 8B46FE                    | 	mov	ax, word [bp-2]
  1664 | 00000B01 | 8904                      | 	mov	word [si], ax
  1665 | 00000B03 | A1[8C0A]                  | 	mov	ax, word [L_myinth_16]
  1666 | 00000B06 | B90300                    | 	mov	cx, 3
  1667 | 00000B09 | D3E0                      | 	shl	ax, cl
  1668 | 00000B0B | 05[7036]                  | 	add	ax, newPieceArray
  1669 | 00000B0E | 89C6                      | 	mov	si, ax
  1670 | 00000B10 | 83C604                    | 	add	si, 4
  1671 | 00000B13 | 8B46FC                    | 	mov	ax, word [bp-4]
  1672 | 00000B16 | 8904                      | 	mov	word [si], ax
  1673 | 00000B18 | A1[8C0A]                  | 	mov	ax, word [L_myinth_16]
  1674 | 00000B1B | B90300                    | 	mov	cx, 3
  1675 | 00000B1E | D3E0                      | 	shl	ax, cl
  1676 | 00000B20 | 05[7036]                  | 	add	ax, newPieceArray
  1677 | 00000B23 | 89C6                      | 	mov	si, ax
  1678 | 00000B25 | 83C606                    | 	add	si, 6
  1679 | 00000B28 | 8B46F8                    | 	mov	ax, word [bp-8]
  1680 | 00000B2B | 8904                      | 	mov	word [si], ax
  1681 | 00000B2D | A1[8C0A]                  | 	mov	ax, word [L_myinth_16]
  1682 | 00000B30 | B90300                    | 	mov	cx, 3
  1683 | 00000B33 | D3E0                      | 	shl	ax, cl
  1684 | 00000B35 | 05[7036]                  | 	add	ax, newPieceArray
  1685 | 00000B38 | 50                        | 	push	ax
  1686 | 00000B39 | FF36[602A]                | 	push	word [newPieceQueuePTR]
  1687 | 00000B3D | E8BA0C                    | 	call	YKQPost
  1688 | 00000B40 | 83C404                    | 	add	sp, 4
  1689 | 00000B43 | A1[8C0A]                  | 	mov	ax, word [L_myinth_16]
  1690 | 00000B46 | 40                        | 	inc	ax
  1691 | 00000B47 | A3[8C0A]                  | 	mov	word [L_myinth_16], ax
  1692 | 00000B4A | 833E[8C0A]28              | 	cmp	word [L_myinth_16], 40
  1693 | 00000B4F | 7506                      | 	jne	L_myinth_20
  1694 | 00000B51 | C706[8C0A]0000            | 	mov	word [L_myinth_16], 0
  1695 |          |                           | L_myinth_20:
  1696 | 00000B57 | 89EC                      | 	mov	sp, bp
  1697 | 00000B59 | 5D                        | 	pop	bp
  1698 | 00000B5A | C3                        | 	ret
  1699 |          |                           | L_myinth_18:
  1700 | 00000B5B | 55                        | 	push	bp
  1701 | 00000B5C | 89E5                      | 	mov	bp, sp
  1702 | 00000B5E | 83EC08                    | 	sub	sp, 8
  1703 | 00000B61 | E955FF                    | 	jmp	L_myinth_19
  1704 |          |                           | 	ALIGN	2
  1705 |          |                           | c_isr_received:
  1706 | 00000B64 | EB12                      | 	jmp	L_myinth_22
  1707 |          |                           | L_myinth_23:
  1708 | 00000B66 | B80100                    | 	mov	ax, 1
  1709 | 00000B69 | 50                        | 	push	ax
  1710 | 00000B6A | FF36[622A]                | 	push	word [pieceMoveEvent]
  1711 | 00000B6E | E8D706                    | 	call	YKEventSet
  1712 | 00000B71 | 83C404                    | 	add	sp, 4
  1713 | 00000B74 | 89EC                      | 	mov	sp, bp
  1714 | 00000B76 | 5D                        | 	pop	bp
  1715 | 00000B77 | C3                        | 	ret
  1716 |          |                           | L_myinth_22:
  1717 | 00000B78 | 55                        | 	push	bp
  1718 | 00000B79 | 89E5                      | 	mov	bp, sp
  1719 | 00000B7B | EBE9                      | 	jmp	L_myinth_23
  1720 |          |                           | ; Generated by c86 (BYU-NASM) 5.1 (beta) from yakc.i
  1721 |          |                           | 	CPU	8086
  1722 | 00000B7D | 90                        | 	ALIGN	2
  1723 | 00000B7E | E91B1E                    | 	jmp	main	; Jump to program start
  1724 |          |                           | started_running:
  1725 | 00000B81 | 00                        | 	DB	0
  1726 |          |                           | 	ALIGN	2
  1727 |          |                           | YKInitialize:
  1728 | 00000B82 | E91501                    | 	jmp	L_yakc_1
  1729 |          |                           | L_yakc_2:
  1730 | 00000B85 | C706[901A]0000            | 	mov	word [YKCtxSwCount], 0
  1731 | 00000B8B | C706[921A]0000            | 	mov	word [YKIdleCount], 0
  1732 | 00000B91 | C706[C81D]0000            | 	mov	word [YKCurrentlyExecuting], 0
  1733 | 00000B97 | C706[8E1D]0000            | 	mov	word [YKISRCallDepth], 0
  1734 | 00000B9D | E82A12                    | 	call	YKEnterMutex
  1735 | 00000BA0 | C706[9C1A][9E1A]          | 	mov	word [YKAvailTCBList], YKTCBArray
  1736 | 00000BA6 | C746FE0000                | 	mov	word [bp-2], 0
  1737 | 00000BAB | EB26                      | 	jmp	L_yakc_4
  1738 |          |                           | L_yakc_3:
  1739 | 00000BAD | 8B46FE                    | 	mov	ax, word [bp-2]
  1740 | 00000BB0 | 40                        | 	inc	ax
  1741 | 00000BB1 | B91800                    | 	mov	cx, 24
  1742 | 00000BB4 | F7E9                      | 	imul	cx
  1743 | 00000BB6 | 05[9E1A]                  | 	add	ax, YKTCBArray
  1744 | 00000BB9 | 50                        | 	push	ax
  1745 | 00000BBA | 8B46FE                    | 	mov	ax, word [bp-2]
  1746 | 00000BBD | B91800                    | 	mov	cx, 24
  1747 | 00000BC0 | F7E9                      | 	imul	cx
  1748 | 00000BC2 | 89C2                      | 	mov	dx, ax
  1749 | 00000BC4 | 81C2[9E1A]                | 	add	dx, YKTCBArray
  1750 | 00000BC8 | 89D6                      | 	mov	si, dx
  1751 | 00000BCA | 83C60A                    | 	add	si, 10
  1752 | 00000BCD | 58                        | 	pop	ax
  1753 | 00000BCE | 8904                      | 	mov	word [si], ax
  1754 |          |                           | L_yakc_6:
  1755 | 00000BD0 | FF46FE                    | 	inc	word [bp-2]
  1756 |          |                           | L_yakc_4:
  1757 | 00000BD3 | 837EFE09                  | 	cmp	word [bp-2], 9
  1758 | 00000BD7 | 7CD4                      | 	jl	L_yakc_3
  1759 |          |                           | L_yakc_5:
  1760 | 00000BD9 | C706[801B]0000            | 	mov	word [(226+YKTCBArray)], 0
  1761 | 00000BDF | C746FE0000                | 	mov	word [bp-2], 0
  1762 | 00000BE4 | EB27                      | 	jmp	L_yakc_8
  1763 |          |                           | L_yakc_7:
  1764 | 00000BE6 | 8B46FE                    | 	mov	ax, word [bp-2]
  1765 | 00000BE9 | D1E0                      | 	shl	ax, 1
  1766 | 00000BEB | D1E0                      | 	shl	ax, 1
  1767 | 00000BED | 05[901D]                  | 	add	ax, YKSEMArray
  1768 | 00000BF0 | 89C6                      | 	mov	si, ax
  1769 | 00000BF2 | 83C602                    | 	add	si, 2
  1770 | 00000BF5 | C7040000                  | 	mov	word [si], 0
  1771 | 00000BF9 | 8B46FE                    | 	mov	ax, word [bp-2]
  1772 | 00000BFC | D1E0                      | 	shl	ax, 1
  1773 | 00000BFE | D1E0                      | 	shl	ax, 1
  1774 | 00000C00 | 89C6                      | 	mov	si, ax
  1775 | 00000C02 | 81C6[901D]                | 	add	si, YKSEMArray
  1776 | 00000C06 | C704F6FF                  | 	mov	word [si], -10
  1777 |          |                           | L_yakc_10:
  1778 | 00000C0A | FF46FE                    | 	inc	word [bp-2]
  1779 |          |                           | L_yakc_8:
  1780 | 00000C0D | 837EFE01                  | 	cmp	word [bp-2], 1
  1781 | 00000C11 | 7CD3                      | 	jl	L_yakc_7
  1782 |          |                           | L_yakc_9:
  1783 | 00000C13 | C746FE0000                | 	mov	word [bp-2], 0
  1784 | 00000C18 | EB65                      | 	jmp	L_yakc_12
  1785 |          |                           | L_yakc_11:
  1786 | 00000C1A | 8B46FE                    | 	mov	ax, word [bp-2]
  1787 | 00000C1D | B90A00                    | 	mov	cx, 10
  1788 | 00000C20 | F7E9                      | 	imul	cx
  1789 | 00000C22 | 89C6                      | 	mov	si, ax
  1790 | 00000C24 | 81C6[941D]                | 	add	si, YKQueueArray
  1791 | 00000C28 | C7040000                  | 	mov	word [si], 0
  1792 | 00000C2C | 8B46FE                    | 	mov	ax, word [bp-2]
  1793 | 00000C2F | B90A00                    | 	mov	cx, 10
  1794 | 00000C32 | F7E9                      | 	imul	cx
  1795 | 00000C34 | 05[941D]                  | 	add	ax, YKQueueArray
  1796 | 00000C37 | 89C6                      | 	mov	si, ax
  1797 | 00000C39 | 83C602                    | 	add	si, 2
  1798 | 00000C3C | C7040000                  | 	mov	word [si], 0
  1799 | 00000C40 | 8B46FE                    | 	mov	ax, word [bp-2]
  1800 | 00000C43 | B90A00                    | 	mov	cx, 10
  1801 | 00000C46 | F7E9                      | 	imul	cx
  1802 | 00000C48 | 05[941D]                  | 	add	ax, YKQueueArray
  1803 | 00000C4B | 89C6                      | 	mov	si, ax
  1804 | 00000C4D | 83C604                    | 	add	si, 4
  1805 | 00000C50 | C7040000                  | 	mov	word [si], 0
  1806 | 00000C54 | 8B46FE                    | 	mov	ax, word [bp-2]
  1807 | 00000C57 | B90A00                    | 	mov	cx, 10
  1808 | 00000C5A | F7E9                      | 	imul	cx
  1809 | 00000C5C | 05[941D]                  | 	add	ax, YKQueueArray
  1810 | 00000C5F | 89C6                      | 	mov	si, ax
  1811 | 00000C61 | 83C606                    | 	add	si, 6
  1812 | 00000C64 | C7040000                  | 	mov	word [si], 0
  1813 | 00000C68 | 8B46FE                    | 	mov	ax, word [bp-2]
  1814 | 00000C6B | B90A00                    | 	mov	cx, 10
  1815 | 00000C6E | F7E9                      | 	imul	cx
  1816 | 00000C70 | 05[941D]                  | 	add	ax, YKQueueArray
  1817 | 00000C73 | 89C6                      | 	mov	si, ax
  1818 | 00000C75 | 83C608                    | 	add	si, 8
  1819 | 00000C78 | C7040000                  | 	mov	word [si], 0
  1820 |          |                           | L_yakc_14:
  1821 | 00000C7C | FF46FE                    | 	inc	word [bp-2]
  1822 |          |                           | L_yakc_12:
  1823 | 00000C7F | 837EFE04                  | 	cmp	word [bp-2], 4
  1824 | 00000C83 | 7C95                      | 	jl	L_yakc_11
  1825 |          |                           | L_yakc_13:
  1826 | 00000C85 | B064                      | 	mov	al, 100
  1827 | 00000C87 | 50                        | 	push	ax
  1828 | 00000C88 | B8[8E1D]                  | 	mov	ax, (idleStack+512)
  1829 | 00000C8B | 50                        | 	push	ax
  1830 | 00000C8C | B8[A20C]                  | 	mov	ax, YKIdleTask
  1831 | 00000C8F | 50                        | 	push	ax
  1832 | 00000C90 | E82B00                    | 	call	YKNewTask
  1833 | 00000C93 | 83C406                    | 	add	sp, 6
  1834 | 00000C96 | 89EC                      | 	mov	sp, bp
  1835 | 00000C98 | 5D                        | 	pop	bp
  1836 | 00000C99 | C3                        | 	ret
  1837 |          |                           | L_yakc_1:
  1838 | 00000C9A | 55                        | 	push	bp
  1839 | 00000C9B | 89E5                      | 	mov	bp, sp
  1840 | 00000C9D | 51                        | 	push	cx
  1841 | 00000C9E | E9E4FE                    | 	jmp	L_yakc_2
  1842 | 00000CA1 | 90                        | 	ALIGN	2
  1843 |          |                           | YKIdleTask:
  1844 | 00000CA2 | EB15                      | 	jmp	L_yakc_16
  1845 |          |                           | L_yakc_17:
  1846 | 00000CA4 | EB0D                      | 	jmp	L_yakc_19
  1847 |          |                           | L_yakc_18:
  1848 | 00000CA6 | E82111                    | 	call	YKEnterMutex
  1849 | 00000CA9 | A1[921A]                  | 	mov	ax, word [YKIdleCount]
  1850 | 00000CAC | 40                        | 	inc	ax
  1851 | 00000CAD | A3[921A]                  | 	mov	word [YKIdleCount], ax
  1852 | 00000CB0 | E81911                    | 	call	YKExitMutex
  1853 |          |                           | L_yakc_19:
  1854 | 00000CB3 | EBF1                      | 	jmp	L_yakc_18
  1855 |          |                           | L_yakc_20:
  1856 | 00000CB5 | 89EC                      | 	mov	sp, bp
  1857 | 00000CB7 | 5D                        | 	pop	bp
  1858 | 00000CB8 | C3                        | 	ret
  1859 |          |                           | L_yakc_16:
  1860 | 00000CB9 | 55                        | 	push	bp
  1861 | 00000CBA | 89E5                      | 	mov	bp, sp
  1862 | 00000CBC | EBE6                      | 	jmp	L_yakc_17
  1863 |          |                           | 	ALIGN	2
  1864 |          |                           | YKNewTask:
  1865 | 00000CBE | E97E01                    | 	jmp	L_yakc_22
  1866 |          |                           | L_yakc_23:
  1867 | 00000CC1 | 8B4606                    | 	mov	ax, word [bp+6]
  1868 | 00000CC4 | 83E802                    | 	sub	ax, 2
  1869 | 00000CC7 | 894606                    | 	mov	word [bp+6], ax
  1870 | 00000CCA | A1[9C1A]                  | 	mov	ax, word [YKAvailTCBList]
  1871 | 00000CCD | 8946FE                    | 	mov	word [bp-2], ax
  1872 | 00000CD0 | 8B76FE                    | 	mov	si, word [bp-2]
  1873 | 00000CD3 | 83C60A                    | 	add	si, 10
  1874 | 00000CD6 | 8B04                      | 	mov	ax, word [si]
  1875 | 00000CD8 | A3[9C1A]                  | 	mov	word [YKAvailTCBList], ax
  1876 | 00000CDB | 8B76FE                    | 	mov	si, word [bp-2]
  1877 | 00000CDE | 83C608                    | 	add	si, 8
  1878 | 00000CE1 | C7040000                  | 	mov	word [si], 0
  1879 | 00000CE5 | 8A4608                    | 	mov	al, byte [bp+8]
  1880 | 00000CE8 | 30E4                      | 	xor	ah, ah
  1881 | 00000CEA | 8B76FE                    | 	mov	si, word [bp-2]
  1882 | 00000CED | 83C606                    | 	add	si, 6
  1883 | 00000CF0 | 8904                      | 	mov	word [si], ax
  1884 | 00000CF2 | E8D510                    | 	call	YKEnterMutex
  1885 | 00000CF5 | A1[961A]                  | 	mov	ax, word [YKRdyList]
  1886 | 00000CF8 | 85C0                      | 	test	ax, ax
  1887 | 00000CFA | 751C                      | 	jne	L_yakc_24
  1888 | 00000CFC | 8B46FE                    | 	mov	ax, word [bp-2]
  1889 | 00000CFF | A3[961A]                  | 	mov	word [YKRdyList], ax
  1890 | 00000D02 | 8B76FE                    | 	mov	si, word [bp-2]
  1891 | 00000D05 | 83C60A                    | 	add	si, 10
  1892 | 00000D08 | C7040000                  | 	mov	word [si], 0
  1893 | 00000D0C | 8B76FE                    | 	mov	si, word [bp-2]
  1894 | 00000D0F | 83C60C                    | 	add	si, 12
  1895 | 00000D12 | C7040000                  | 	mov	word [si], 0
  1896 | 00000D16 | EB6F                      | 	jmp	L_yakc_25
  1897 |          |                           | L_yakc_24:
  1898 | 00000D18 | A1[961A]                  | 	mov	ax, word [YKRdyList]
  1899 | 00000D1B | 8946FC                    | 	mov	word [bp-4], ax
  1900 | 00000D1E | EB0B                      | 	jmp	L_yakc_27
  1901 |          |                           | L_yakc_26:
  1902 | 00000D20 | 8B76FC                    | 	mov	si, word [bp-4]
  1903 | 00000D23 | 83C60A                    | 	add	si, 10
  1904 | 00000D26 | 8B04                      | 	mov	ax, word [si]
  1905 | 00000D28 | 8946FC                    | 	mov	word [bp-4], ax
  1906 |          |                           | L_yakc_27:
  1907 | 00000D2B | 8B76FC                    | 	mov	si, word [bp-4]
  1908 | 00000D2E | 83C606                    | 	add	si, 6
  1909 | 00000D31 | 8B7EFE                    | 	mov	di, word [bp-2]
  1910 | 00000D34 | 83C706                    | 	add	di, 6
  1911 | 00000D37 | 8B05                      | 	mov	ax, word [di]
  1912 | 00000D39 | 3B04                      | 	cmp	ax, word [si]
  1913 | 00000D3B | 7FE3                      | 	jg	L_yakc_26
  1914 |          |                           | L_yakc_28:
  1915 | 00000D3D | 8B76FC                    | 	mov	si, word [bp-4]
  1916 | 00000D40 | 83C60C                    | 	add	si, 12
  1917 | 00000D43 | 8B04                      | 	mov	ax, word [si]
  1918 | 00000D45 | 85C0                      | 	test	ax, ax
  1919 | 00000D47 | 7508                      | 	jne	L_yakc_29
  1920 | 00000D49 | 8B46FE                    | 	mov	ax, word [bp-2]
  1921 | 00000D4C | A3[961A]                  | 	mov	word [YKRdyList], ax
  1922 | 00000D4F | EB10                      | 	jmp	L_yakc_30
  1923 |          |                           | L_yakc_29:
  1924 | 00000D51 | 8B76FC                    | 	mov	si, word [bp-4]
  1925 | 00000D54 | 83C60C                    | 	add	si, 12
  1926 | 00000D57 | 8B34                      | 	mov	si, word [si]
  1927 | 00000D59 | 83C60A                    | 	add	si, 10
  1928 | 00000D5C | 8B46FE                    | 	mov	ax, word [bp-2]
  1929 | 00000D5F | 8904                      | 	mov	word [si], ax
  1930 |          |                           | L_yakc_30:
  1931 | 00000D61 | 8B76FC                    | 	mov	si, word [bp-4]
  1932 | 00000D64 | 83C60C                    | 	add	si, 12
  1933 | 00000D67 | 8B7EFE                    | 	mov	di, word [bp-2]
  1934 | 00000D6A | 83C70C                    | 	add	di, 12
  1935 | 00000D6D | 8B04                      | 	mov	ax, word [si]
  1936 | 00000D6F | 8905                      | 	mov	word [di], ax
  1937 | 00000D71 | 8B76FE                    | 	mov	si, word [bp-2]
  1938 | 00000D74 | 83C60A                    | 	add	si, 10
  1939 | 00000D77 | 8B46FC                    | 	mov	ax, word [bp-4]
  1940 | 00000D7A | 8904                      | 	mov	word [si], ax
  1941 | 00000D7C | 8B76FC                    | 	mov	si, word [bp-4]
  1942 | 00000D7F | 83C60C                    | 	add	si, 12
  1943 | 00000D82 | 8B46FE                    | 	mov	ax, word [bp-2]
  1944 | 00000D85 | 8904                      | 	mov	word [si], ax
  1945 |          |                           | L_yakc_25:
  1946 | 00000D87 | 8B76FE                    | 	mov	si, word [bp-2]
  1947 | 00000D8A | 8B4606                    | 	mov	ax, word [bp+6]
  1948 | 00000D8D | 8904                      | 	mov	word [si], ax
  1949 | 00000D8F | 8B76FE                    | 	mov	si, word [bp-2]
  1950 | 00000D92 | 83C602                    | 	add	si, 2
  1951 | 00000D95 | C7040000                  | 	mov	word [si], 0
  1952 | 00000D99 | 8B76FE                    | 	mov	si, word [bp-2]
  1953 | 00000D9C | 8B04                      | 	mov	ax, word [si]
  1954 | 00000D9E | 83E816                    | 	sub	ax, 22
  1955 | 00000DA1 | 8904                      | 	mov	word [si], ax
  1956 | 00000DA3 | 8B76FE                    | 	mov	si, word [bp-2]
  1957 | 00000DA6 | 8B34                      | 	mov	si, word [si]
  1958 | 00000DA8 | 83C616                    | 	add	si, 22
  1959 | 00000DAB | C7040002                  | 	mov	word [si], 512
  1960 | 00000DAF | 8B76FE                    | 	mov	si, word [bp-2]
  1961 | 00000DB2 | 8B34                      | 	mov	si, word [si]
  1962 | 00000DB4 | 83C614                    | 	add	si, 20
  1963 | 00000DB7 | C7040000                  | 	mov	word [si], 0
  1964 | 00000DBB | 8B76FE                    | 	mov	si, word [bp-2]
  1965 | 00000DBE | 8B34                      | 	mov	si, word [si]
  1966 | 00000DC0 | 83C612                    | 	add	si, 18
  1967 | 00000DC3 | 8B4604                    | 	mov	ax, word [bp+4]
  1968 | 00000DC6 | 8904                      | 	mov	word [si], ax
  1969 | 00000DC8 | 8B76FE                    | 	mov	si, word [bp-2]
  1970 | 00000DCB | 8B34                      | 	mov	si, word [si]
  1971 | 00000DCD | 83C610                    | 	add	si, 16
  1972 | 00000DD0 | C7040000                  | 	mov	word [si], 0
  1973 | 00000DD4 | 8B76FE                    | 	mov	si, word [bp-2]
  1974 | 00000DD7 | 8B34                      | 	mov	si, word [si]
  1975 | 00000DD9 | 83C60E                    | 	add	si, 14
  1976 | 00000DDC | C7040000                  | 	mov	word [si], 0
  1977 | 00000DE0 | 8B76FE                    | 	mov	si, word [bp-2]
  1978 | 00000DE3 | 8B34                      | 	mov	si, word [si]
  1979 | 00000DE5 | 83C60C                    | 	add	si, 12
  1980 | 00000DE8 | C7040000                  | 	mov	word [si], 0
  1981 | 00000DEC | 8B76FE                    | 	mov	si, word [bp-2]
  1982 | 00000DEF | 8B34                      | 	mov	si, word [si]
  1983 | 00000DF1 | 83C60A                    | 	add	si, 10
  1984 | 00000DF4 | C7040000                  | 	mov	word [si], 0
  1985 | 00000DF8 | 8B76FE                    | 	mov	si, word [bp-2]
  1986 | 00000DFB | 8B34                      | 	mov	si, word [si]
  1987 | 00000DFD | 83C608                    | 	add	si, 8
  1988 | 00000E00 | C7040000                  | 	mov	word [si], 0
  1989 | 00000E04 | 8B76FE                    | 	mov	si, word [bp-2]
  1990 | 00000E07 | 8B34                      | 	mov	si, word [si]
  1991 | 00000E09 | 83C606                    | 	add	si, 6
  1992 | 00000E0C | C7040000                  | 	mov	word [si], 0
  1993 | 00000E10 | 8B76FE                    | 	mov	si, word [bp-2]
  1994 | 00000E13 | 8B34                      | 	mov	si, word [si]
  1995 | 00000E15 | 83C604                    | 	add	si, 4
  1996 | 00000E18 | C7040000                  | 	mov	word [si], 0
  1997 | 00000E1C | 8B76FE                    | 	mov	si, word [bp-2]
  1998 | 00000E1F | 8B34                      | 	mov	si, word [si]
  1999 | 00000E21 | 83C602                    | 	add	si, 2
  2000 | 00000E24 | C7040000                  | 	mov	word [si], 0
  2001 | 00000E28 | 8B76FE                    | 	mov	si, word [bp-2]
  2002 | 00000E2B | 8B34                      | 	mov	si, word [si]
  2003 | 00000E2D | C7040000                  | 	mov	word [si], 0
  2004 | 00000E31 | B80100                    | 	mov	ax, 1
  2005 | 00000E34 | 50                        | 	push	ax
  2006 | 00000E35 | E85800                    | 	call	YKScheduler
  2007 | 00000E38 | 83C402                    | 	add	sp, 2
  2008 | 00000E3B | 89EC                      | 	mov	sp, bp
  2009 | 00000E3D | 5D                        | 	pop	bp
  2010 | 00000E3E | C3                        | 	ret
  2011 |          |                           | L_yakc_22:
  2012 | 00000E3F | 55                        | 	push	bp
  2013 | 00000E40 | 89E5                      | 	mov	bp, sp
  2014 | 00000E42 | 83EC04                    | 	sub	sp, 4
  2015 | 00000E45 | E979FE                    | 	jmp	L_yakc_23
  2016 |          |                           | L_yakc_32:
  2017 | 00000E48 | 72756E2063616C6C65-       | 	DB	"run called. Calling the scheduler",0xA,0
  2018 | 00000E51 | 642E2043616C6C696E-       | ...
  2019 | 00000E5A | 672074686520736368-       | ...
  2020 | 00000E63 | 6564756C65720A00          | ...
  2021 | 00000E6B | 90                        | 	ALIGN	2
  2022 |          |                           | YKRun:
  2023 | 00000E6C | EB1C                      | 	jmp	L_yakc_33
  2024 |          |                           | L_yakc_34:
  2025 | 00000E6E | B8[480E]                  | 	mov	ax, L_yakc_32
  2026 | 00000E71 | 50                        | 	push	ax
  2027 | 00000E72 | E8B3F5                    | 	call	printString
  2028 | 00000E75 | 83C402                    | 	add	sp, 2
  2029 | 00000E78 | C606[810B]01              | 	mov	byte [started_running], 1
  2030 | 00000E7D | 31C0                      | 	xor	ax, ax
  2031 | 00000E7F | 50                        | 	push	ax
  2032 | 00000E80 | E80D00                    | 	call	YKScheduler
  2033 | 00000E83 | 83C402                    | 	add	sp, 2
  2034 | 00000E86 | 89EC                      | 	mov	sp, bp
  2035 | 00000E88 | 5D                        | 	pop	bp
  2036 | 00000E89 | C3                        | 	ret
  2037 |          |                           | L_yakc_33:
  2038 | 00000E8A | 55                        | 	push	bp
  2039 | 00000E8B | 89E5                      | 	mov	bp, sp
  2040 | 00000E8D | EBDF                      | 	jmp	L_yakc_34
  2041 | 00000E8F | 90                        | 	ALIGN	2
  2042 |          |                           | YKScheduler:
  2043 | 00000E90 | EB74                      | 	jmp	L_yakc_36
  2044 |          |                           | L_yakc_37:
  2045 | 00000E92 | A1[961A]                  | 	mov	ax, word [YKRdyList]
  2046 | 00000E95 | 8946FE                    | 	mov	word [bp-2], ax
  2047 | 00000E98 | A1[C81D]                  | 	mov	ax, word [YKCurrentlyExecuting]
  2048 | 00000E9B | 8946FC                    | 	mov	word [bp-4], ax
  2049 | 00000E9E | A0[810B]                  | 	mov	al, byte [started_running]
  2050 | 00000EA1 | 84C0                      | 	test	al, al
  2051 | 00000EA3 | 745D                      | 	je	L_yakc_39
  2052 |          |                           | L_yakc_38:
  2053 | 00000EA5 | 8B46FE                    | 	mov	ax, word [bp-2]
  2054 | 00000EA8 | 3B06[C81D]                | 	cmp	ax, word [YKCurrentlyExecuting]
  2055 | 00000EAC | 7454                      | 	je	L_yakc_39
  2056 |          |                           | L_yakc_40:
  2057 | 00000EAE | A1[901A]                  | 	mov	ax, word [YKCtxSwCount]
  2058 | 00000EB1 | 40                        | 	inc	ax
  2059 | 00000EB2 | A3[901A]                  | 	mov	word [YKCtxSwCount], ax
  2060 | 00000EB5 | 8B46FE                    | 	mov	ax, word [bp-2]
  2061 | 00000EB8 | A3[C81D]                  | 	mov	word [YKCurrentlyExecuting], ax
  2062 | 00000EBB | 8B4604                    | 	mov	ax, word [bp+4]
  2063 | 00000EBE | 85C0                      | 	test	ax, ax
  2064 | 00000EC0 | 7520                      | 	jne	L_yakc_41
  2065 | 00000EC2 | 8B76FE                    | 	mov	si, word [bp-2]
  2066 | 00000EC5 | 83C602                    | 	add	si, 2
  2067 | 00000EC8 | FF34                      | 	push	word [si]
  2068 | 00000ECA | 8B76FE                    | 	mov	si, word [bp-2]
  2069 | 00000ECD | FF34                      | 	push	word [si]
  2070 | 00000ECF | B80100                    | 	mov	ax, 1
  2071 | 00000ED2 | 50                        | 	push	ax
  2072 | 00000ED3 | B80100                    | 	mov	ax, 1
  2073 | 00000ED6 | 50                        | 	push	ax
  2074 | 00000ED7 | 31C0                      | 	xor	ax, ax
  2075 | 00000ED9 | 50                        | 	push	ax
  2076 | 00000EDA | E8010F                    | 	call	YKDispatcher_save_context
  2077 | 00000EDD | 83C40A                    | 	add	sp, 10
  2078 | 00000EE0 | EB20                      | 	jmp	L_yakc_42
  2079 |          |                           | L_yakc_41:
  2080 | 00000EE2 | 8B76FE                    | 	mov	si, word [bp-2]
  2081 | 00000EE5 | 83C602                    | 	add	si, 2
  2082 | 00000EE8 | FF34                      | 	push	word [si]
  2083 | 00000EEA | 8B76FE                    | 	mov	si, word [bp-2]
  2084 | 00000EED | FF34                      | 	push	word [si]
  2085 | 00000EEF | 8B46FC                    | 	mov	ax, word [bp-4]
  2086 | 00000EF2 | 83C002                    | 	add	ax, 2
  2087 | 00000EF5 | 50                        | 	push	ax
  2088 | 00000EF6 | FF76FC                    | 	push	word [bp-4]
  2089 | 00000EF9 | FF7604                    | 	push	word [bp+4]
  2090 | 00000EFC | E8DF0E                    | 	call	YKDispatcher_save_context
  2091 | 00000EFF | 83C40A                    | 	add	sp, 10
  2092 |          |                           | L_yakc_42:
  2093 |          |                           | L_yakc_39:
  2094 | 00000F02 | 89EC                      | 	mov	sp, bp
  2095 | 00000F04 | 5D                        | 	pop	bp
  2096 | 00000F05 | C3                        | 	ret
  2097 |          |                           | L_yakc_36:
  2098 | 00000F06 | 55                        | 	push	bp
  2099 | 00000F07 | 89E5                      | 	mov	bp, sp
  2100 | 00000F09 | 83EC04                    | 	sub	sp, 4
  2101 | 00000F0C | EB84                      | 	jmp	L_yakc_37
  2102 |          |                           | 	ALIGN	2
  2103 |          |                           | YKDelayTask:
  2104 | 00000F0E | E98400                    | 	jmp	L_yakc_44
  2105 |          |                           | L_yakc_45:
  2106 | 00000F11 | E8B60E                    | 	call	YKEnterMutex
  2107 | 00000F14 | 8B4604                    | 	mov	ax, word [bp+4]
  2108 | 00000F17 | 85C0                      | 	test	ax, ax
  2109 | 00000F19 | 7464                      | 	je	L_yakc_46
  2110 | 00000F1B | A1[961A]                  | 	mov	ax, word [YKRdyList]
  2111 | 00000F1E | 8946FE                    | 	mov	word [bp-2], ax
  2112 | 00000F21 | 8B76FE                    | 	mov	si, word [bp-2]
  2113 | 00000F24 | 83C60A                    | 	add	si, 10
  2114 | 00000F27 | 8B04                      | 	mov	ax, word [si]
  2115 | 00000F29 | A3[961A]                  | 	mov	word [YKRdyList], ax
  2116 | 00000F2C | 8B76FE                    | 	mov	si, word [bp-2]
  2117 | 00000F2F | 83C60A                    | 	add	si, 10
  2118 | 00000F32 | 8B34                      | 	mov	si, word [si]
  2119 | 00000F34 | 83C60C                    | 	add	si, 12
  2120 | 00000F37 | C7040000                  | 	mov	word [si], 0
  2121 | 00000F3B | 8B76FE                    | 	mov	si, word [bp-2]
  2122 | 00000F3E | 83C60A                    | 	add	si, 10
  2123 | 00000F41 | A1[981A]                  | 	mov	ax, word [YKSuspList]
  2124 | 00000F44 | 8904                      | 	mov	word [si], ax
  2125 | 00000F46 | 8B46FE                    | 	mov	ax, word [bp-2]
  2126 | 00000F49 | A3[981A]                  | 	mov	word [YKSuspList], ax
  2127 | 00000F4C | 8B76FE                    | 	mov	si, word [bp-2]
  2128 | 00000F4F | 83C60C                    | 	add	si, 12
  2129 | 00000F52 | C7040000                  | 	mov	word [si], 0
  2130 | 00000F56 | 8B76FE                    | 	mov	si, word [bp-2]
  2131 | 00000F59 | 83C60A                    | 	add	si, 10
  2132 | 00000F5C | 8B04                      | 	mov	ax, word [si]
  2133 | 00000F5E | 85C0                      | 	test	ax, ax
  2134 | 00000F60 | 7410                      | 	je	L_yakc_47
  2135 | 00000F62 | 8B76FE                    | 	mov	si, word [bp-2]
  2136 | 00000F65 | 83C60A                    | 	add	si, 10
  2137 | 00000F68 | 8B34                      | 	mov	si, word [si]
  2138 | 00000F6A | 83C60C                    | 	add	si, 12
  2139 | 00000F6D | 8B46FE                    | 	mov	ax, word [bp-2]
  2140 | 00000F70 | 8904                      | 	mov	word [si], ax
  2141 |          |                           | L_yakc_47:
  2142 | 00000F72 | 8B76FE                    | 	mov	si, word [bp-2]
  2143 | 00000F75 | 83C608                    | 	add	si, 8
  2144 | 00000F78 | 8B4604                    | 	mov	ax, word [bp+4]
  2145 | 00000F7B | 8904                      | 	mov	word [si], ax
  2146 | 00000F7D | EB05                      | 	jmp	L_yakc_48
  2147 |          |                           | L_yakc_46:
  2148 | 00000F7F | E84A0E                    | 	call	YKExitMutex
  2149 | 00000F82 | EB0D                      | 	jmp	L_yakc_49
  2150 |          |                           | L_yakc_48:
  2151 | 00000F84 | B80100                    | 	mov	ax, 1
  2152 | 00000F87 | 50                        | 	push	ax
  2153 | 00000F88 | E805FF                    | 	call	YKScheduler
  2154 | 00000F8B | 83C402                    | 	add	sp, 2
  2155 | 00000F8E | E83B0E                    | 	call	YKExitMutex
  2156 |          |                           | L_yakc_49:
  2157 | 00000F91 | 89EC                      | 	mov	sp, bp
  2158 | 00000F93 | 5D                        | 	pop	bp
  2159 | 00000F94 | C3                        | 	ret
  2160 |          |                           | L_yakc_44:
  2161 | 00000F95 | 55                        | 	push	bp
  2162 | 00000F96 | 89E5                      | 	mov	bp, sp
  2163 | 00000F98 | 51                        | 	push	cx
  2164 | 00000F99 | E975FF                    | 	jmp	L_yakc_45
  2165 |          |                           | 	ALIGN	2
  2166 |          |                           | YKTickHandler:
  2167 | 00000F9C | E91301                    | 	jmp	L_yakc_51
  2168 |          |                           | L_yakc_52:
  2169 | 00000F9F | A1[981A]                  | 	mov	ax, word [YKSuspList]
  2170 | 00000FA2 | 8946FE                    | 	mov	word [bp-2], ax
  2171 | 00000FA5 | E8220E                    | 	call	YKEnterMutex
  2172 | 00000FA8 | A1[941A]                  | 	mov	ax, word [YKTickNum]
  2173 | 00000FAB | 40                        | 	inc	ax
  2174 | 00000FAC | A3[941A]                  | 	mov	word [YKTickNum], ax
  2175 | 00000FAF | E9EF00                    | 	jmp	L_yakc_54
  2176 |          |                           | L_yakc_53:
  2177 | 00000FB2 | 8B76FE                    | 	mov	si, word [bp-2]
  2178 | 00000FB5 | 83C60A                    | 	add	si, 10
  2179 | 00000FB8 | 8B04                      | 	mov	ax, word [si]
  2180 | 00000FBA | 8946FA                    | 	mov	word [bp-6], ax
  2181 | 00000FBD | 8B76FE                    | 	mov	si, word [bp-2]
  2182 | 00000FC0 | 83C608                    | 	add	si, 8
  2183 | 00000FC3 | 8B04                      | 	mov	ax, word [si]
  2184 | 00000FC5 | 48                        | 	dec	ax
  2185 | 00000FC6 | 8B76FE                    | 	mov	si, word [bp-2]
  2186 | 00000FC9 | 83C608                    | 	add	si, 8
  2187 | 00000FCC | 8904                      | 	mov	word [si], ax
  2188 | 00000FCE | 8B76FE                    | 	mov	si, word [bp-2]
  2189 | 00000FD1 | 83C608                    | 	add	si, 8
  2190 | 00000FD4 | 8B04                      | 	mov	ax, word [si]
  2191 | 00000FD6 | 85C0                      | 	test	ax, ax
  2192 | 00000FD8 | 7403E9BE00                | 	jne	L_yakc_56
  2193 | 00000FDD | 8B76FE                    | 	mov	si, word [bp-2]
  2194 | 00000FE0 | 83C60C                    | 	add	si, 12
  2195 | 00000FE3 | 8B04                      | 	mov	ax, word [si]
  2196 | 00000FE5 | 85C0                      | 	test	ax, ax
  2197 | 00000FE7 | 750D                      | 	jne	L_yakc_57
  2198 | 00000FE9 | 8B76FE                    | 	mov	si, word [bp-2]
  2199 | 00000FEC | 83C60A                    | 	add	si, 10
  2200 | 00000FEF | 8B04                      | 	mov	ax, word [si]
  2201 | 00000FF1 | A3[981A]                  | 	mov	word [YKSuspList], ax
  2202 | 00000FF4 | EB15                      | 	jmp	L_yakc_58
  2203 |          |                           | L_yakc_57:
  2204 | 00000FF6 | 8B76FE                    | 	mov	si, word [bp-2]
  2205 | 00000FF9 | 83C60A                    | 	add	si, 10
  2206 | 00000FFC | 8B7EFE                    | 	mov	di, word [bp-2]
  2207 | 00000FFF | 83C70C                    | 	add	di, 12
  2208 | 00001002 | 8B3D                      | 	mov	di, word [di]
  2209 | 00001004 | 83C70A                    | 	add	di, 10
  2210 | 00001007 | 8B04                      | 	mov	ax, word [si]
  2211 | 00001009 | 8905                      | 	mov	word [di], ax
  2212 |          |                           | L_yakc_58:
  2213 | 0000100B | 8B76FE                    | 	mov	si, word [bp-2]
  2214 | 0000100E | 83C60A                    | 	add	si, 10
  2215 | 00001011 | 8B04                      | 	mov	ax, word [si]
  2216 | 00001013 | 85C0                      | 	test	ax, ax
  2217 | 00001015 | 7415                      | 	je	L_yakc_59
  2218 | 00001017 | 8B76FE                    | 	mov	si, word [bp-2]
  2219 | 0000101A | 83C60C                    | 	add	si, 12
  2220 | 0000101D | 8B7EFE                    | 	mov	di, word [bp-2]
  2221 | 00001020 | 83C70A                    | 	add	di, 10
  2222 | 00001023 | 8B3D                      | 	mov	di, word [di]
  2223 | 00001025 | 83C70C                    | 	add	di, 12
  2224 | 00001028 | 8B04                      | 	mov	ax, word [si]
  2225 | 0000102A | 8905                      | 	mov	word [di], ax
  2226 |          |                           | L_yakc_59:
  2227 | 0000102C | A1[961A]                  | 	mov	ax, word [YKRdyList]
  2228 | 0000102F | 8946FC                    | 	mov	word [bp-4], ax
  2229 | 00001032 | EB0B                      | 	jmp	L_yakc_61
  2230 |          |                           | L_yakc_60:
  2231 | 00001034 | 8B76FC                    | 	mov	si, word [bp-4]
  2232 | 00001037 | 83C60A                    | 	add	si, 10
  2233 | 0000103A | 8B04                      | 	mov	ax, word [si]
  2234 | 0000103C | 8946FC                    | 	mov	word [bp-4], ax
  2235 |          |                           | L_yakc_61:
  2236 | 0000103F | 8B76FC                    | 	mov	si, word [bp-4]
  2237 | 00001042 | 83C606                    | 	add	si, 6
  2238 | 00001045 | 8B7EFE                    | 	mov	di, word [bp-2]
  2239 | 00001048 | 83C706                    | 	add	di, 6
  2240 | 0000104B | 8B05                      | 	mov	ax, word [di]
  2241 | 0000104D | 3B04                      | 	cmp	ax, word [si]
  2242 | 0000104F | 7FE3                      | 	jg	L_yakc_60
  2243 |          |                           | L_yakc_62:
  2244 | 00001051 | 8B76FC                    | 	mov	si, word [bp-4]
  2245 | 00001054 | 83C60C                    | 	add	si, 12
  2246 | 00001057 | 8B04                      | 	mov	ax, word [si]
  2247 | 00001059 | 85C0                      | 	test	ax, ax
  2248 | 0000105B | 7508                      | 	jne	L_yakc_63
  2249 | 0000105D | 8B46FE                    | 	mov	ax, word [bp-2]
  2250 | 00001060 | A3[961A]                  | 	mov	word [YKRdyList], ax
  2251 | 00001063 | EB10                      | 	jmp	L_yakc_64
  2252 |          |                           | L_yakc_63:
  2253 | 00001065 | 8B76FC                    | 	mov	si, word [bp-4]
  2254 | 00001068 | 83C60C                    | 	add	si, 12
  2255 | 0000106B | 8B34                      | 	mov	si, word [si]
  2256 | 0000106D | 83C60A                    | 	add	si, 10
  2257 | 00001070 | 8B46FE                    | 	mov	ax, word [bp-2]
  2258 | 00001073 | 8904                      | 	mov	word [si], ax
  2259 |          |                           | L_yakc_64:
  2260 | 00001075 | 8B76FC                    | 	mov	si, word [bp-4]
  2261 | 00001078 | 83C60C                    | 	add	si, 12
  2262 | 0000107B | 8B7EFE                    | 	mov	di, word [bp-2]
  2263 | 0000107E | 83C70C                    | 	add	di, 12
  2264 | 00001081 | 8B04                      | 	mov	ax, word [si]
  2265 | 00001083 | 8905                      | 	mov	word [di], ax
  2266 | 00001085 | 8B76FE                    | 	mov	si, word [bp-2]
  2267 | 00001088 | 83C60A                    | 	add	si, 10
  2268 | 0000108B | 8B46FC                    | 	mov	ax, word [bp-4]
  2269 | 0000108E | 8904                      | 	mov	word [si], ax
  2270 | 00001090 | 8B76FC                    | 	mov	si, word [bp-4]
  2271 | 00001093 | 83C60C                    | 	add	si, 12
  2272 | 00001096 | 8B46FE                    | 	mov	ax, word [bp-2]
  2273 | 00001099 | 8904                      | 	mov	word [si], ax
  2274 |          |                           | L_yakc_56:
  2275 | 0000109B | 8B46FA                    | 	mov	ax, word [bp-6]
  2276 | 0000109E | 8946FE                    | 	mov	word [bp-2], ax
  2277 |          |                           | L_yakc_54:
  2278 | 000010A1 | 8B46FE                    | 	mov	ax, word [bp-2]
  2279 | 000010A4 | 85C0                      | 	test	ax, ax
  2280 | 000010A6 | 7403E907FF                | 	jne	L_yakc_53
  2281 |          |                           | L_yakc_55:
  2282 | 000010AB | E81E0D                    | 	call	YKExitMutex
  2283 | 000010AE | 89EC                      | 	mov	sp, bp
  2284 | 000010B0 | 5D                        | 	pop	bp
  2285 | 000010B1 | C3                        | 	ret
  2286 |          |                           | L_yakc_51:
  2287 | 000010B2 | 55                        | 	push	bp
  2288 | 000010B3 | 89E5                      | 	mov	bp, sp
  2289 | 000010B5 | 83EC06                    | 	sub	sp, 6
  2290 | 000010B8 | E9E4FE                    | 	jmp	L_yakc_52
  2291 | 000010BB | 90                        | 	ALIGN	2
  2292 |          |                           | YKEnterISR:
  2293 | 000010BC | EB0B                      | 	jmp	L_yakc_66
  2294 |          |                           | L_yakc_67:
  2295 | 000010BE | A1[8E1D]                  | 	mov	ax, word [YKISRCallDepth]
  2296 | 000010C1 | 40                        | 	inc	ax
  2297 | 000010C2 | A3[8E1D]                  | 	mov	word [YKISRCallDepth], ax
  2298 | 000010C5 | 89EC                      | 	mov	sp, bp
  2299 | 000010C7 | 5D                        | 	pop	bp
  2300 | 000010C8 | C3                        | 	ret
  2301 |          |                           | L_yakc_66:
  2302 | 000010C9 | 55                        | 	push	bp
  2303 | 000010CA | 89E5                      | 	mov	bp, sp
  2304 | 000010CC | EBF0                      | 	jmp	L_yakc_67
  2305 |          |                           | 	ALIGN	2
  2306 |          |                           | YKExitISR:
  2307 | 000010CE | EB18                      | 	jmp	L_yakc_69
  2308 |          |                           | L_yakc_70:
  2309 | 000010D0 | A1[8E1D]                  | 	mov	ax, word [YKISRCallDepth]
  2310 | 000010D3 | 48                        | 	dec	ax
  2311 | 000010D4 | A3[8E1D]                  | 	mov	word [YKISRCallDepth], ax
  2312 | 000010D7 | 85C0                      | 	test	ax, ax
  2313 | 000010D9 | 7509                      | 	jne	L_yakc_71
  2314 | 000010DB | 31C0                      | 	xor	ax, ax
  2315 | 000010DD | 50                        | 	push	ax
  2316 | 000010DE | E8AFFD                    | 	call	YKScheduler
  2317 | 000010E1 | 83C402                    | 	add	sp, 2
  2318 |          |                           | L_yakc_71:
  2319 | 000010E4 | 89EC                      | 	mov	sp, bp
  2320 | 000010E6 | 5D                        | 	pop	bp
  2321 | 000010E7 | C3                        | 	ret
  2322 |          |                           | L_yakc_69:
  2323 | 000010E8 | 55                        | 	push	bp
  2324 | 000010E9 | 89E5                      | 	mov	bp, sp
  2325 | 000010EB | EBE3                      | 	jmp	L_yakc_70
  2326 | 000010ED | 90                        | 	ALIGN	2
  2327 |          |                           | YKEventCreate:
  2328 | 000010EE | EB53                      | 	jmp	L_yakc_73
  2329 |          |                           | L_yakc_74:
  2330 | 000010F0 | E8D70C                    | 	call	YKEnterMutex
  2331 | 000010F3 | C746FE0000                | 	mov	word [bp-2], 0
  2332 | 000010F8 | EB03                      | 	jmp	L_yakc_76
  2333 |          |                           | L_yakc_75:
  2334 | 000010FA | FF46FE                    | 	inc	word [bp-2]
  2335 |          |                           | L_yakc_76:
  2336 | 000010FD | 8B46FE                    | 	mov	ax, word [bp-2]
  2337 | 00001100 | D1E0                      | 	shl	ax, 1
  2338 | 00001102 | D1E0                      | 	shl	ax, 1
  2339 | 00001104 | 89C6                      | 	mov	si, ax
  2340 | 00001106 | 81C6[BC1D]                | 	add	si, YKEVENTArray
  2341 | 0000110A | 8B04                      | 	mov	ax, word [si]
  2342 | 0000110C | 85C0                      | 	test	ax, ax
  2343 | 0000110E | 75EA                      | 	jne	L_yakc_75
  2344 |          |                           | L_yakc_77:
  2345 | 00001110 | 8B46FE                    | 	mov	ax, word [bp-2]
  2346 | 00001113 | D1E0                      | 	shl	ax, 1
  2347 | 00001115 | D1E0                      | 	shl	ax, 1
  2348 | 00001117 | 05[BC1D]                  | 	add	ax, YKEVENTArray
  2349 | 0000111A | 89C6                      | 	mov	si, ax
  2350 | 0000111C | 83C602                    | 	add	si, 2
  2351 | 0000111F | 8B4604                    | 	mov	ax, word [bp+4]
  2352 | 00001122 | 8904                      | 	mov	word [si], ax
  2353 | 00001124 | 8B46FE                    | 	mov	ax, word [bp-2]
  2354 | 00001127 | D1E0                      | 	shl	ax, 1
  2355 | 00001129 | D1E0                      | 	shl	ax, 1
  2356 | 0000112B | 89C6                      | 	mov	si, ax
  2357 | 0000112D | 81C6[BC1D]                | 	add	si, YKEVENTArray
  2358 | 00001131 | C7040100                  | 	mov	word [si], 1
  2359 | 00001135 | 8B46FE                    | 	mov	ax, word [bp-2]
  2360 | 00001138 | D1E0                      | 	shl	ax, 1
  2361 | 0000113A | D1E0                      | 	shl	ax, 1
  2362 | 0000113C | 05[BC1D]                  | 	add	ax, YKEVENTArray
  2363 |          |                           | L_yakc_78:
  2364 | 0000113F | 89EC                      | 	mov	sp, bp
  2365 | 00001141 | 5D                        | 	pop	bp
  2366 | 00001142 | C3                        | 	ret
  2367 |          |                           | L_yakc_73:
  2368 | 00001143 | 55                        | 	push	bp
  2369 | 00001144 | 89E5                      | 	mov	bp, sp
  2370 | 00001146 | 51                        | 	push	cx
  2371 | 00001147 | EBA7                      | 	jmp	L_yakc_74
  2372 | 00001149 | 90                        | 	ALIGN	2
  2373 |          |                           | YKEventPend:
  2374 | 0000114A | E9F100                    | 	jmp	L_yakc_80
  2375 |          |                           | L_yakc_81:
  2376 | 0000114D | E87A0C                    | 	call	YKEnterMutex
  2377 | 00001150 | 8B4608                    | 	mov	ax, word [bp+8]
  2378 | 00001153 | 85C0                      | 	test	ax, ax
  2379 | 00001155 | 7523                      | 	jne	L_yakc_82
  2380 | 00001157 | 8B7604                    | 	mov	si, word [bp+4]
  2381 | 0000115A | 83C602                    | 	add	si, 2
  2382 | 0000115D | 8B04                      | 	mov	ax, word [si]
  2383 | 0000115F | 234606                    | 	and	ax, word [bp+6]
  2384 | 00001162 | 7414                      | 	je	L_yakc_83
  2385 | 00001164 | 8B7604                    | 	mov	si, word [bp+4]
  2386 | 00001167 | 83C602                    | 	add	si, 2
  2387 | 0000116A | 8B04                      | 	mov	ax, word [si]
  2388 | 0000116C | 8946FC                    | 	mov	word [bp-4], ax
  2389 | 0000116F | E85A0C                    | 	call	YKExitMutex
  2390 | 00001172 | 8B46FC                    | 	mov	ax, word [bp-4]
  2391 | 00001175 | E9C200                    | 	jmp	L_yakc_84
  2392 |          |                           | L_yakc_83:
  2393 | 00001178 | EB2D                      | 	jmp	L_yakc_85
  2394 |          |                           | L_yakc_82:
  2395 | 0000117A | 8B4606                    | 	mov	ax, word [bp+6]
  2396 | 0000117D | 3B4606                    | 	cmp	ax, word [bp+6]
  2397 | 00001180 | 7404                      | 	je	L_yakc_87
  2398 | 00001182 | 31C0                      | 	xor	ax, ax
  2399 | 00001184 | EB03                      | 	jmp	L_yakc_88
  2400 |          |                           | L_yakc_87:
  2401 | 00001186 | B80100                    | 	mov	ax, 1
  2402 |          |                           | L_yakc_88:
  2403 | 00001189 | 8B7604                    | 	mov	si, word [bp+4]
  2404 | 0000118C | 83C602                    | 	add	si, 2
  2405 | 0000118F | 2304                      | 	and	ax, word [si]
  2406 | 00001191 | 7414                      | 	je	L_yakc_86
  2407 | 00001193 | 8B7604                    | 	mov	si, word [bp+4]
  2408 | 00001196 | 83C602                    | 	add	si, 2
  2409 | 00001199 | 8B04                      | 	mov	ax, word [si]
  2410 | 0000119B | 8946FC                    | 	mov	word [bp-4], ax
  2411 | 0000119E | E82B0C                    | 	call	YKExitMutex
  2412 | 000011A1 | 8B46FC                    | 	mov	ax, word [bp-4]
  2413 | 000011A4 | E99300                    | 	jmp	L_yakc_84
  2414 |          |                           | L_yakc_86:
  2415 |          |                           | L_yakc_85:
  2416 | 000011A7 | A1[961A]                  | 	mov	ax, word [YKRdyList]
  2417 | 000011AA | 8946FE                    | 	mov	word [bp-2], ax
  2418 | 000011AD | 8B76FE                    | 	mov	si, word [bp-2]
  2419 | 000011B0 | 83C60A                    | 	add	si, 10
  2420 | 000011B3 | 8B04                      | 	mov	ax, word [si]
  2421 | 000011B5 | A3[961A]                  | 	mov	word [YKRdyList], ax
  2422 | 000011B8 | 8B76FE                    | 	mov	si, word [bp-2]
  2423 | 000011BB | 83C60A                    | 	add	si, 10
  2424 | 000011BE | 8B34                      | 	mov	si, word [si]
  2425 | 000011C0 | 83C60C                    | 	add	si, 12
  2426 | 000011C3 | C7040000                  | 	mov	word [si], 0
  2427 | 000011C7 | 8B76FE                    | 	mov	si, word [bp-2]
  2428 | 000011CA | 83C60A                    | 	add	si, 10
  2429 | 000011CD | A1[C61D]                  | 	mov	ax, word [YKEventBlockingList]
  2430 | 000011D0 | 8904                      | 	mov	word [si], ax
  2431 | 000011D2 | 8B46FE                    | 	mov	ax, word [bp-2]
  2432 | 000011D5 | A3[C61D]                  | 	mov	word [YKEventBlockingList], ax
  2433 | 000011D8 | 8B76FE                    | 	mov	si, word [bp-2]
  2434 | 000011DB | 83C60C                    | 	add	si, 12
  2435 | 000011DE | C7040000                  | 	mov	word [si], 0
  2436 | 000011E2 | 8B76FE                    | 	mov	si, word [bp-2]
  2437 | 000011E5 | 83C60A                    | 	add	si, 10
  2438 | 000011E8 | 8B04                      | 	mov	ax, word [si]
  2439 | 000011EA | 85C0                      | 	test	ax, ax
  2440 | 000011EC | 7410                      | 	je	L_yakc_89
  2441 | 000011EE | 8B76FE                    | 	mov	si, word [bp-2]
  2442 | 000011F1 | 83C60A                    | 	add	si, 10
  2443 | 000011F4 | 8B34                      | 	mov	si, word [si]
  2444 | 000011F6 | 83C60C                    | 	add	si, 12
  2445 | 000011F9 | 8B46FE                    | 	mov	ax, word [bp-2]
  2446 | 000011FC | 8904                      | 	mov	word [si], ax
  2447 |          |                           | L_yakc_89:
  2448 | 000011FE | 8B76FE                    | 	mov	si, word [bp-2]
  2449 | 00001201 | 83C612                    | 	add	si, 18
  2450 | 00001204 | 8B4604                    | 	mov	ax, word [bp+4]
  2451 | 00001207 | 8904                      | 	mov	word [si], ax
  2452 | 00001209 | 8B76FE                    | 	mov	si, word [bp-2]
  2453 | 0000120C | 83C614                    | 	add	si, 20
  2454 | 0000120F | 8B4606                    | 	mov	ax, word [bp+6]
  2455 | 00001212 | 8904                      | 	mov	word [si], ax
  2456 | 00001214 | 8B76FE                    | 	mov	si, word [bp-2]
  2457 | 00001217 | 83C616                    | 	add	si, 22
  2458 | 0000121A | 8B4608                    | 	mov	ax, word [bp+8]
  2459 | 0000121D | 8904                      | 	mov	word [si], ax
  2460 | 0000121F | B80100                    | 	mov	ax, 1
  2461 | 00001222 | 50                        | 	push	ax
  2462 | 00001223 | E86AFC                    | 	call	YKScheduler
  2463 | 00001226 | 83C402                    | 	add	sp, 2
  2464 | 00001229 | 8B7604                    | 	mov	si, word [bp+4]
  2465 | 0000122C | 83C602                    | 	add	si, 2
  2466 | 0000122F | 8B04                      | 	mov	ax, word [si]
  2467 | 00001231 | 8946FC                    | 	mov	word [bp-4], ax
  2468 | 00001234 | E8950B                    | 	call	YKExitMutex
  2469 | 00001237 | 8B46FC                    | 	mov	ax, word [bp-4]
  2470 |          |                           | L_yakc_84:
  2471 | 0000123A | 89EC                      | 	mov	sp, bp
  2472 | 0000123C | 5D                        | 	pop	bp
  2473 | 0000123D | C3                        | 	ret
  2474 |          |                           | L_yakc_80:
  2475 | 0000123E | 55                        | 	push	bp
  2476 | 0000123F | 89E5                      | 	mov	bp, sp
  2477 | 00001241 | 83EC04                    | 	sub	sp, 4
  2478 | 00001244 | E906FF                    | 	jmp	L_yakc_81
  2479 | 00001247 | 90                        | 	ALIGN	2
  2480 |          |                           | YKEventSet:
  2481 | 00001248 | E99D01                    | 	jmp	L_yakc_91
  2482 |          |                           | L_yakc_92:
  2483 | 0000124B | E87C0B                    | 	call	YKEnterMutex
  2484 | 0000124E | A1[C61D]                  | 	mov	ax, word [YKEventBlockingList]
  2485 | 00001251 | 8946FE                    | 	mov	word [bp-2], ax
  2486 | 00001254 | 8B7604                    | 	mov	si, word [bp+4]
  2487 | 00001257 | 83C602                    | 	add	si, 2
  2488 | 0000125A | 8B04                      | 	mov	ax, word [si]
  2489 | 0000125C | 0B4606                    | 	or	ax, word [bp+6]
  2490 | 0000125F | 8B7604                    | 	mov	si, word [bp+4]
  2491 | 00001262 | 83C602                    | 	add	si, 2
  2492 | 00001265 | 8904                      | 	mov	word [si], ax
  2493 | 00001267 | 8B46FE                    | 	mov	ax, word [bp-2]
  2494 | 0000126A | 85C0                      | 	test	ax, ax
  2495 | 0000126C | 7506                      | 	jne	L_yakc_93
  2496 | 0000126E | E85B0B                    | 	call	YKExitMutex
  2497 | 00001271 | E97001                    | 	jmp	L_yakc_94
  2498 |          |                           | L_yakc_93:
  2499 | 00001274 | E94F01                    | 	jmp	L_yakc_96
  2500 |          |                           | L_yakc_95:
  2501 | 00001277 | 8B76FE                    | 	mov	si, word [bp-2]
  2502 | 0000127A | 83C60A                    | 	add	si, 10
  2503 | 0000127D | 8B04                      | 	mov	ax, word [si]
  2504 | 0000127F | 8946FA                    | 	mov	word [bp-6], ax
  2505 | 00001282 | 8B76FE                    | 	mov	si, word [bp-2]
  2506 | 00001285 | 83C612                    | 	add	si, 18
  2507 | 00001288 | 8B4604                    | 	mov	ax, word [bp+4]
  2508 | 0000128B | 3B04                      | 	cmp	ax, word [si]
  2509 | 0000128D | 7409                      | 	je	L_yakc_98
  2510 | 0000128F | 8B46FA                    | 	mov	ax, word [bp-6]
  2511 | 00001292 | 8946FE                    | 	mov	word [bp-2], ax
  2512 | 00001295 | E92E01                    | 	jmp	L_yakc_96
  2513 |          |                           | L_yakc_98:
  2514 | 00001298 | 8B76FE                    | 	mov	si, word [bp-2]
  2515 | 0000129B | 83C616                    | 	add	si, 22
  2516 | 0000129E | 8B04                      | 	mov	ax, word [si]
  2517 | 000012A0 | 85C0                      | 	test	ax, ax
  2518 | 000012A2 | 7521                      | 	jne	L_yakc_99
  2519 | 000012A4 | 8B7604                    | 	mov	si, word [bp+4]
  2520 | 000012A7 | 83C602                    | 	add	si, 2
  2521 | 000012AA | 8B04                      | 	mov	ax, word [si]
  2522 | 000012AC | 8B76FE                    | 	mov	si, word [bp-2]
  2523 | 000012AF | 83C614                    | 	add	si, 20
  2524 | 000012B2 | 2304                      | 	and	ax, word [si]
  2525 | 000012B4 | 7408                      | 	je	L_yakc_100
  2526 | 000012B6 | 8B46FE                    | 	mov	ax, word [bp-2]
  2527 | 000012B9 | 8946F8                    | 	mov	word [bp-8], ax
  2528 | 000012BC | EB05                      | 	jmp	L_yakc_101
  2529 |          |                           | L_yakc_100:
  2530 | 000012BE | C746F80000                | 	mov	word [bp-8], 0
  2531 |          |                           | L_yakc_101:
  2532 | 000012C3 | EB29                      | 	jmp	L_yakc_102
  2533 |          |                           | L_yakc_99:
  2534 | 000012C5 | 8B7604                    | 	mov	si, word [bp+4]
  2535 | 000012C8 | 83C602                    | 	add	si, 2
  2536 | 000012CB | 8B04                      | 	mov	ax, word [si]
  2537 | 000012CD | 8B76FE                    | 	mov	si, word [bp-2]
  2538 | 000012D0 | 83C614                    | 	add	si, 20
  2539 | 000012D3 | 2304                      | 	and	ax, word [si]
  2540 | 000012D5 | 8B76FE                    | 	mov	si, word [bp-2]
  2541 | 000012D8 | 83C614                    | 	add	si, 20
  2542 | 000012DB | 8B14                      | 	mov	dx, word [si]
  2543 | 000012DD | 39C2                      | 	cmp	dx, ax
  2544 | 000012DF | 7508                      | 	jne	L_yakc_103
  2545 | 000012E1 | 8B46FE                    | 	mov	ax, word [bp-2]
  2546 | 000012E4 | 8946F8                    | 	mov	word [bp-8], ax
  2547 | 000012E7 | EB05                      | 	jmp	L_yakc_104
  2548 |          |                           | L_yakc_103:
  2549 | 000012E9 | C746F80000                | 	mov	word [bp-8], 0
  2550 |          |                           | L_yakc_104:
  2551 |          |                           | L_yakc_102:
  2552 | 000012EE | 8B46F8                    | 	mov	ax, word [bp-8]
  2553 | 000012F1 | 85C0                      | 	test	ax, ax
  2554 | 000012F3 | 7503E9C800                | 	je	L_yakc_105
  2555 | 000012F8 | 8B76F8                    | 	mov	si, word [bp-8]
  2556 | 000012FB | 83C60C                    | 	add	si, 12
  2557 | 000012FE | 8B04                      | 	mov	ax, word [si]
  2558 | 00001300 | 85C0                      | 	test	ax, ax
  2559 | 00001302 | 750D                      | 	jne	L_yakc_106
  2560 | 00001304 | 8B76F8                    | 	mov	si, word [bp-8]
  2561 | 00001307 | 83C60A                    | 	add	si, 10
  2562 | 0000130A | 8B04                      | 	mov	ax, word [si]
  2563 | 0000130C | A3[C61D]                  | 	mov	word [YKEventBlockingList], ax
  2564 | 0000130F | EB15                      | 	jmp	L_yakc_107
  2565 |          |                           | L_yakc_106:
  2566 | 00001311 | 8B76F8                    | 	mov	si, word [bp-8]
  2567 | 00001314 | 83C60A                    | 	add	si, 10
  2568 | 00001317 | 8B7EF8                    | 	mov	di, word [bp-8]
  2569 | 0000131A | 83C70C                    | 	add	di, 12
  2570 | 0000131D | 8B3D                      | 	mov	di, word [di]
  2571 | 0000131F | 83C70A                    | 	add	di, 10
  2572 | 00001322 | 8B04                      | 	mov	ax, word [si]
  2573 | 00001324 | 8905                      | 	mov	word [di], ax
  2574 |          |                           | L_yakc_107:
  2575 | 00001326 | 8B76F8                    | 	mov	si, word [bp-8]
  2576 | 00001329 | 83C60A                    | 	add	si, 10
  2577 | 0000132C | 8B04                      | 	mov	ax, word [si]
  2578 | 0000132E | 85C0                      | 	test	ax, ax
  2579 | 00001330 | 7415                      | 	je	L_yakc_108
  2580 | 00001332 | 8B76F8                    | 	mov	si, word [bp-8]
  2581 | 00001335 | 83C60C                    | 	add	si, 12
  2582 | 00001338 | 8B7EF8                    | 	mov	di, word [bp-8]
  2583 | 0000133B | 83C70A                    | 	add	di, 10
  2584 | 0000133E | 8B3D                      | 	mov	di, word [di]
  2585 | 00001340 | 83C70C                    | 	add	di, 12
  2586 | 00001343 | 8B04                      | 	mov	ax, word [si]
  2587 | 00001345 | 8905                      | 	mov	word [di], ax
  2588 |          |                           | L_yakc_108:
  2589 | 00001347 | A1[961A]                  | 	mov	ax, word [YKRdyList]
  2590 | 0000134A | 8946FC                    | 	mov	word [bp-4], ax
  2591 | 0000134D | EB0B                      | 	jmp	L_yakc_110
  2592 |          |                           | L_yakc_109:
  2593 | 0000134F | 8B76FC                    | 	mov	si, word [bp-4]
  2594 | 00001352 | 83C60A                    | 	add	si, 10
  2595 | 00001355 | 8B04                      | 	mov	ax, word [si]
  2596 | 00001357 | 8946FC                    | 	mov	word [bp-4], ax
  2597 |          |                           | L_yakc_110:
  2598 | 0000135A | 8B76FC                    | 	mov	si, word [bp-4]
  2599 | 0000135D | 83C606                    | 	add	si, 6
  2600 | 00001360 | 8B7EF8                    | 	mov	di, word [bp-8]
  2601 | 00001363 | 83C706                    | 	add	di, 6
  2602 | 00001366 | 8B05                      | 	mov	ax, word [di]
  2603 | 00001368 | 3B04                      | 	cmp	ax, word [si]
  2604 | 0000136A | 7FE3                      | 	jg	L_yakc_109
  2605 |          |                           | L_yakc_111:
  2606 | 0000136C | 8B76FC                    | 	mov	si, word [bp-4]
  2607 | 0000136F | 83C60C                    | 	add	si, 12
  2608 | 00001372 | 8B04                      | 	mov	ax, word [si]
  2609 | 00001374 | 85C0                      | 	test	ax, ax
  2610 | 00001376 | 7508                      | 	jne	L_yakc_112
  2611 | 00001378 | 8B46F8                    | 	mov	ax, word [bp-8]
  2612 | 0000137B | A3[961A]                  | 	mov	word [YKRdyList], ax
  2613 | 0000137E | EB10                      | 	jmp	L_yakc_113
  2614 |          |                           | L_yakc_112:
  2615 | 00001380 | 8B76FC                    | 	mov	si, word [bp-4]
  2616 | 00001383 | 83C60C                    | 	add	si, 12
  2617 | 00001386 | 8B34                      | 	mov	si, word [si]
  2618 | 00001388 | 83C60A                    | 	add	si, 10
  2619 | 0000138B | 8B46F8                    | 	mov	ax, word [bp-8]
  2620 | 0000138E | 8904                      | 	mov	word [si], ax
  2621 |          |                           | L_yakc_113:
  2622 | 00001390 | 8B76FC                    | 	mov	si, word [bp-4]
  2623 | 00001393 | 83C60C                    | 	add	si, 12
  2624 | 00001396 | 8B7EF8                    | 	mov	di, word [bp-8]
  2625 | 00001399 | 83C70C                    | 	add	di, 12
  2626 | 0000139C | 8B04                      | 	mov	ax, word [si]
  2627 | 0000139E | 8905                      | 	mov	word [di], ax
  2628 | 000013A0 | 8B76F8                    | 	mov	si, word [bp-8]
  2629 | 000013A3 | 83C60A                    | 	add	si, 10
  2630 | 000013A6 | 8B46FC                    | 	mov	ax, word [bp-4]
  2631 | 000013A9 | 8904                      | 	mov	word [si], ax
  2632 | 000013AB | 8B76FC                    | 	mov	si, word [bp-4]
  2633 | 000013AE | 83C60C                    | 	add	si, 12
  2634 | 000013B1 | 8B46F8                    | 	mov	ax, word [bp-8]
  2635 | 000013B4 | 8904                      | 	mov	word [si], ax
  2636 | 000013B6 | 8B76F8                    | 	mov	si, word [bp-8]
  2637 | 000013B9 | 83C612                    | 	add	si, 18
  2638 | 000013BC | C7040000                  | 	mov	word [si], 0
  2639 |          |                           | L_yakc_105:
  2640 | 000013C0 | 8B46FA                    | 	mov	ax, word [bp-6]
  2641 | 000013C3 | 8946FE                    | 	mov	word [bp-2], ax
  2642 |          |                           | L_yakc_96:
  2643 | 000013C6 | 8B46FE                    | 	mov	ax, word [bp-2]
  2644 | 000013C9 | 85C0                      | 	test	ax, ax
  2645 | 000013CB | 7403E9A7FE                | 	jne	L_yakc_95
  2646 |          |                           | L_yakc_97:
  2647 | 000013D0 | A1[8E1D]                  | 	mov	ax, word [YKISRCallDepth]
  2648 | 000013D3 | 85C0                      | 	test	ax, ax
  2649 | 000013D5 | 750A                      | 	jne	L_yakc_114
  2650 | 000013D7 | B80100                    | 	mov	ax, 1
  2651 | 000013DA | 50                        | 	push	ax
  2652 | 000013DB | E8B2FA                    | 	call	YKScheduler
  2653 | 000013DE | 83C402                    | 	add	sp, 2
  2654 |          |                           | L_yakc_114:
  2655 | 000013E1 | E8E809                    | 	call	YKExitMutex
  2656 |          |                           | L_yakc_94:
  2657 | 000013E4 | 89EC                      | 	mov	sp, bp
  2658 | 000013E6 | 5D                        | 	pop	bp
  2659 | 000013E7 | C3                        | 	ret
  2660 |          |                           | L_yakc_91:
  2661 | 000013E8 | 55                        | 	push	bp
  2662 | 000013E9 | 89E5                      | 	mov	bp, sp
  2663 | 000013EB | 83EC08                    | 	sub	sp, 8
  2664 | 000013EE | E95AFE                    | 	jmp	L_yakc_92
  2665 | 000013F1 | 90                        | 	ALIGN	2
  2666 |          |                           | YKEventReset:
  2667 | 000013F2 | EB1B                      | 	jmp	L_yakc_116
  2668 |          |                           | L_yakc_117:
  2669 | 000013F4 | 8B7604                    | 	mov	si, word [bp+4]
  2670 | 000013F7 | 83C602                    | 	add	si, 2
  2671 | 000013FA | 8B04                      | 	mov	ax, word [si]
  2672 | 000013FC | 8B5606                    | 	mov	dx, word [bp+6]
  2673 | 000013FF | F7D2                      | 	not	dx
  2674 | 00001401 | 21D0                      | 	and	ax, dx
  2675 | 00001403 | 8B7604                    | 	mov	si, word [bp+4]
  2676 | 00001406 | 83C602                    | 	add	si, 2
  2677 | 00001409 | 8904                      | 	mov	word [si], ax
  2678 | 0000140B | 89EC                      | 	mov	sp, bp
  2679 | 0000140D | 5D                        | 	pop	bp
  2680 | 0000140E | C3                        | 	ret
  2681 |          |                           | L_yakc_116:
  2682 | 0000140F | 55                        | 	push	bp
  2683 | 00001410 | 89E5                      | 	mov	bp, sp
  2684 | 00001412 | EBE0                      | 	jmp	L_yakc_117
  2685 |          |                           | 	ALIGN	2
  2686 |          |                           | YKSemCreate:
  2687 | 00001414 | EB55                      | 	jmp	L_yakc_119
  2688 |          |                           | L_yakc_120:
  2689 | 00001416 | E8B109                    | 	call	YKEnterMutex
  2690 | 00001419 | C746FE0000                | 	mov	word [bp-2], 0
  2691 | 0000141E | EB03                      | 	jmp	L_yakc_122
  2692 |          |                           | L_yakc_121:
  2693 | 00001420 | FF46FE                    | 	inc	word [bp-2]
  2694 |          |                           | L_yakc_122:
  2695 | 00001423 | 8B46FE                    | 	mov	ax, word [bp-2]
  2696 | 00001426 | D1E0                      | 	shl	ax, 1
  2697 | 00001428 | D1E0                      | 	shl	ax, 1
  2698 | 0000142A | 05[901D]                  | 	add	ax, YKSEMArray
  2699 | 0000142D | 89C6                      | 	mov	si, ax
  2700 | 0000142F | 83C602                    | 	add	si, 2
  2701 | 00001432 | 8B04                      | 	mov	ax, word [si]
  2702 | 00001434 | 85C0                      | 	test	ax, ax
  2703 | 00001436 | 75E8                      | 	jne	L_yakc_121
  2704 |          |                           | L_yakc_123:
  2705 | 00001438 | 8B46FE                    | 	mov	ax, word [bp-2]
  2706 | 0000143B | D1E0                      | 	shl	ax, 1
  2707 | 0000143D | D1E0                      | 	shl	ax, 1
  2708 | 0000143F | 89C6                      | 	mov	si, ax
  2709 | 00001441 | 81C6[901D]                | 	add	si, YKSEMArray
  2710 | 00001445 | 8B4604                    | 	mov	ax, word [bp+4]
  2711 | 00001448 | 8904                      | 	mov	word [si], ax
  2712 | 0000144A | 8B46FE                    | 	mov	ax, word [bp-2]
  2713 | 0000144D | D1E0                      | 	shl	ax, 1
  2714 | 0000144F | D1E0                      | 	shl	ax, 1
  2715 | 00001451 | 05[901D]                  | 	add	ax, YKSEMArray
  2716 | 00001454 | 89C6                      | 	mov	si, ax
  2717 | 00001456 | 83C602                    | 	add	si, 2
  2718 | 00001459 | C7040100                  | 	mov	word [si], 1
  2719 | 0000145D | 8B46FE                    | 	mov	ax, word [bp-2]
  2720 | 00001460 | D1E0                      | 	shl	ax, 1
  2721 | 00001462 | D1E0                      | 	shl	ax, 1
  2722 | 00001464 | 05[901D]                  | 	add	ax, YKSEMArray
  2723 |          |                           | L_yakc_124:
  2724 | 00001467 | 89EC                      | 	mov	sp, bp
  2725 | 00001469 | 5D                        | 	pop	bp
  2726 | 0000146A | C3                        | 	ret
  2727 |          |                           | L_yakc_119:
  2728 | 0000146B | 55                        | 	push	bp
  2729 | 0000146C | 89E5                      | 	mov	bp, sp
  2730 | 0000146E | 51                        | 	push	cx
  2731 | 0000146F | EBA5                      | 	jmp	L_yakc_120
  2732 | 00001471 | 90                        | 	ALIGN	2
  2733 |          |                           | YKSemPend:
  2734 | 00001472 | E98C00                    | 	jmp	L_yakc_126
  2735 |          |                           | L_yakc_127:
  2736 | 00001475 | E85209                    | 	call	YKEnterMutex
  2737 | 00001478 | 8B7604                    | 	mov	si, word [bp+4]
  2738 | 0000147B | 8B04                      | 	mov	ax, word [si]
  2739 | 0000147D | 48                        | 	dec	ax
  2740 | 0000147E | 8904                      | 	mov	word [si], ax
  2741 | 00001480 | E84909                    | 	call	YKExitMutex
  2742 | 00001483 | 8B7604                    | 	mov	si, word [bp+4]
  2743 | 00001486 | 833C00                    | 	cmp	word [si], 0
  2744 | 00001489 | 7D72                      | 	jge	L_yakc_129
  2745 |          |                           | L_yakc_128:
  2746 | 0000148B | E83C09                    | 	call	YKEnterMutex
  2747 | 0000148E | A1[961A]                  | 	mov	ax, word [YKRdyList]
  2748 | 00001491 | 8946FE                    | 	mov	word [bp-2], ax
  2749 | 00001494 | 8B76FE                    | 	mov	si, word [bp-2]
  2750 | 00001497 | 83C60A                    | 	add	si, 10
  2751 | 0000149A | 8B04                      | 	mov	ax, word [si]
  2752 | 0000149C | A3[961A]                  | 	mov	word [YKRdyList], ax
  2753 | 0000149F | 8B76FE                    | 	mov	si, word [bp-2]
  2754 | 000014A2 | 83C60A                    | 	add	si, 10
  2755 | 000014A5 | 8B34                      | 	mov	si, word [si]
  2756 | 000014A7 | 83C60C                    | 	add	si, 12
  2757 | 000014AA | C7040000                  | 	mov	word [si], 0
  2758 | 000014AE | 8B76FE                    | 	mov	si, word [bp-2]
  2759 | 000014B1 | 83C60A                    | 	add	si, 10
  2760 | 000014B4 | A1[9A1A]                  | 	mov	ax, word [YKSemaphoreWaitingList]
  2761 | 000014B7 | 8904                      | 	mov	word [si], ax
  2762 | 000014B9 | 8B46FE                    | 	mov	ax, word [bp-2]
  2763 | 000014BC | A3[9A1A]                  | 	mov	word [YKSemaphoreWaitingList], ax
  2764 | 000014BF | 8B76FE                    | 	mov	si, word [bp-2]
  2765 | 000014C2 | 83C60C                    | 	add	si, 12
  2766 | 000014C5 | C7040000                  | 	mov	word [si], 0
  2767 | 000014C9 | 8B76FE                    | 	mov	si, word [bp-2]
  2768 | 000014CC | 83C60A                    | 	add	si, 10
  2769 | 000014CF | 8B04                      | 	mov	ax, word [si]
  2770 | 000014D1 | 85C0                      | 	test	ax, ax
  2771 | 000014D3 | 7410                      | 	je	L_yakc_130
  2772 | 000014D5 | 8B76FE                    | 	mov	si, word [bp-2]
  2773 | 000014D8 | 83C60A                    | 	add	si, 10
  2774 | 000014DB | 8B34                      | 	mov	si, word [si]
  2775 | 000014DD | 83C60C                    | 	add	si, 12
  2776 | 000014E0 | 8B46FE                    | 	mov	ax, word [bp-2]
  2777 | 000014E3 | 8904                      | 	mov	word [si], ax
  2778 |          |                           | L_yakc_130:
  2779 | 000014E5 | 8B76FE                    | 	mov	si, word [bp-2]
  2780 | 000014E8 | 83C60E                    | 	add	si, 14
  2781 | 000014EB | 8B4604                    | 	mov	ax, word [bp+4]
  2782 | 000014EE | 8904                      | 	mov	word [si], ax
  2783 | 000014F0 | B80100                    | 	mov	ax, 1
  2784 | 000014F3 | 50                        | 	push	ax
  2785 | 000014F4 | E899F9                    | 	call	YKScheduler
  2786 | 000014F7 | 83C402                    | 	add	sp, 2
  2787 | 000014FA | E8CF08                    | 	call	YKExitMutex
  2788 |          |                           | L_yakc_129:
  2789 | 000014FD | 89EC                      | 	mov	sp, bp
  2790 | 000014FF | 5D                        | 	pop	bp
  2791 | 00001500 | C3                        | 	ret
  2792 |          |                           | L_yakc_126:
  2793 | 00001501 | 55                        | 	push	bp
  2794 | 00001502 | 89E5                      | 	mov	bp, sp
  2795 | 00001504 | 51                        | 	push	cx
  2796 | 00001505 | E96DFF                    | 	jmp	L_yakc_127
  2797 |          |                           | 	ALIGN	2
  2798 |          |                           | YKSemPost:
  2799 | 00001508 | E94B01                    | 	jmp	L_yakc_132
  2800 |          |                           | L_yakc_133:
  2801 | 0000150B | C746F80000                | 	mov	word [bp-8], 0
  2802 | 00001510 | A1[9A1A]                  | 	mov	ax, word [YKSemaphoreWaitingList]
  2803 | 00001513 | 8946FE                    | 	mov	word [bp-2], ax
  2804 | 00001516 | E8B108                    | 	call	YKEnterMutex
  2805 | 00001519 | 8B7604                    | 	mov	si, word [bp+4]
  2806 | 0000151C | 8B04                      | 	mov	ax, word [si]
  2807 | 0000151E | 40                        | 	inc	ax
  2808 | 0000151F | 8904                      | 	mov	word [si], ax
  2809 | 00001521 | EB3F                      | 	jmp	L_yakc_135
  2810 |          |                           | L_yakc_134:
  2811 | 00001523 | 8B76FE                    | 	mov	si, word [bp-2]
  2812 | 00001526 | 83C60E                    | 	add	si, 14
  2813 | 00001529 | 8B4604                    | 	mov	ax, word [bp+4]
  2814 | 0000152C | 3B04                      | 	cmp	ax, word [si]
  2815 | 0000152E | 7527                      | 	jne	L_yakc_137
  2816 | 00001530 | 8B46F8                    | 	mov	ax, word [bp-8]
  2817 | 00001533 | 85C0                      | 	test	ax, ax
  2818 | 00001535 | 7508                      | 	jne	L_yakc_138
  2819 | 00001537 | 8B46FE                    | 	mov	ax, word [bp-2]
  2820 | 0000153A | 8946F8                    | 	mov	word [bp-8], ax
  2821 | 0000153D | EB18                      | 	jmp	L_yakc_139
  2822 |          |                           | L_yakc_138:
  2823 | 0000153F | 8B76FE                    | 	mov	si, word [bp-2]
  2824 | 00001542 | 83C606                    | 	add	si, 6
  2825 | 00001545 | 8B7EF8                    | 	mov	di, word [bp-8]
  2826 | 00001548 | 83C706                    | 	add	di, 6
  2827 | 0000154B | 8B05                      | 	mov	ax, word [di]
  2828 | 0000154D | 3B04                      | 	cmp	ax, word [si]
  2829 | 0000154F | 7E06                      | 	jle	L_yakc_140
  2830 | 00001551 | 8B46FE                    | 	mov	ax, word [bp-2]
  2831 | 00001554 | 8946F8                    | 	mov	word [bp-8], ax
  2832 |          |                           | L_yakc_140:
  2833 |          |                           | L_yakc_139:
  2834 |          |                           | L_yakc_137:
  2835 | 00001557 | 8B76FE                    | 	mov	si, word [bp-2]
  2836 | 0000155A | 83C60A                    | 	add	si, 10
  2837 | 0000155D | 8B04                      | 	mov	ax, word [si]
  2838 | 0000155F | 8946FE                    | 	mov	word [bp-2], ax
  2839 |          |                           | L_yakc_135:
  2840 | 00001562 | 8B46FE                    | 	mov	ax, word [bp-2]
  2841 | 00001565 | 85C0                      | 	test	ax, ax
  2842 | 00001567 | 75BA                      | 	jne	L_yakc_134
  2843 |          |                           | L_yakc_136:
  2844 | 00001569 | 8B46F8                    | 	mov	ax, word [bp-8]
  2845 | 0000156C | 85C0                      | 	test	ax, ax
  2846 | 0000156E | 7506                      | 	jne	L_yakc_141
  2847 | 00001570 | E85908                    | 	call	YKExitMutex
  2848 | 00001573 | E9DC00                    | 	jmp	L_yakc_142
  2849 |          |                           | L_yakc_141:
  2850 | 00001576 | 8B76F8                    | 	mov	si, word [bp-8]
  2851 | 00001579 | 83C60C                    | 	add	si, 12
  2852 | 0000157C | 8B04                      | 	mov	ax, word [si]
  2853 | 0000157E | 85C0                      | 	test	ax, ax
  2854 | 00001580 | 750D                      | 	jne	L_yakc_143
  2855 | 00001582 | 8B76F8                    | 	mov	si, word [bp-8]
  2856 | 00001585 | 83C60A                    | 	add	si, 10
  2857 | 00001588 | 8B04                      | 	mov	ax, word [si]
  2858 | 0000158A | A3[9A1A]                  | 	mov	word [YKSemaphoreWaitingList], ax
  2859 | 0000158D | EB15                      | 	jmp	L_yakc_144
  2860 |          |                           | L_yakc_143:
  2861 | 0000158F | 8B76F8                    | 	mov	si, word [bp-8]
  2862 | 00001592 | 83C60A                    | 	add	si, 10
  2863 | 00001595 | 8B7EF8                    | 	mov	di, word [bp-8]
  2864 | 00001598 | 83C70C                    | 	add	di, 12
  2865 | 0000159B | 8B3D                      | 	mov	di, word [di]
  2866 | 0000159D | 83C70A                    | 	add	di, 10
  2867 | 000015A0 | 8B04                      | 	mov	ax, word [si]
  2868 | 000015A2 | 8905                      | 	mov	word [di], ax
  2869 |          |                           | L_yakc_144:
  2870 | 000015A4 | 8B76F8                    | 	mov	si, word [bp-8]
  2871 | 000015A7 | 83C60A                    | 	add	si, 10
  2872 | 000015AA | 8B04                      | 	mov	ax, word [si]
  2873 | 000015AC | 85C0                      | 	test	ax, ax
  2874 | 000015AE | 7415                      | 	je	L_yakc_145
  2875 | 000015B0 | 8B76F8                    | 	mov	si, word [bp-8]
  2876 | 000015B3 | 83C60C                    | 	add	si, 12
  2877 | 000015B6 | 8B7EF8                    | 	mov	di, word [bp-8]
  2878 | 000015B9 | 83C70A                    | 	add	di, 10
  2879 | 000015BC | 8B3D                      | 	mov	di, word [di]
  2880 | 000015BE | 83C70C                    | 	add	di, 12
  2881 | 000015C1 | 8B04                      | 	mov	ax, word [si]
  2882 | 000015C3 | 8905                      | 	mov	word [di], ax
  2883 |          |                           | L_yakc_145:
  2884 | 000015C5 | A1[961A]                  | 	mov	ax, word [YKRdyList]
  2885 | 000015C8 | 8946FC                    | 	mov	word [bp-4], ax
  2886 | 000015CB | EB0B                      | 	jmp	L_yakc_147
  2887 |          |                           | L_yakc_146:
  2888 | 000015CD | 8B76FC                    | 	mov	si, word [bp-4]
  2889 | 000015D0 | 83C60A                    | 	add	si, 10
  2890 | 000015D3 | 8B04                      | 	mov	ax, word [si]
  2891 | 000015D5 | 8946FC                    | 	mov	word [bp-4], ax
  2892 |          |                           | L_yakc_147:
  2893 | 000015D8 | 8B76FC                    | 	mov	si, word [bp-4]
  2894 | 000015DB | 83C606                    | 	add	si, 6
  2895 | 000015DE | 8B7EF8                    | 	mov	di, word [bp-8]
  2896 | 000015E1 | 83C706                    | 	add	di, 6
  2897 | 000015E4 | 8B05                      | 	mov	ax, word [di]
  2898 | 000015E6 | 3B04                      | 	cmp	ax, word [si]
  2899 | 000015E8 | 7FE3                      | 	jg	L_yakc_146
  2900 |          |                           | L_yakc_148:
  2901 | 000015EA | 8B76FC                    | 	mov	si, word [bp-4]
  2902 | 000015ED | 83C60C                    | 	add	si, 12
  2903 | 000015F0 | 8B04                      | 	mov	ax, word [si]
  2904 | 000015F2 | 85C0                      | 	test	ax, ax
  2905 | 000015F4 | 7508                      | 	jne	L_yakc_149
  2906 | 000015F6 | 8B46F8                    | 	mov	ax, word [bp-8]
  2907 | 000015F9 | A3[961A]                  | 	mov	word [YKRdyList], ax
  2908 | 000015FC | EB10                      | 	jmp	L_yakc_150
  2909 |          |                           | L_yakc_149:
  2910 | 000015FE | 8B76FC                    | 	mov	si, word [bp-4]
  2911 | 00001601 | 83C60C                    | 	add	si, 12
  2912 | 00001604 | 8B34                      | 	mov	si, word [si]
  2913 | 00001606 | 83C60A                    | 	add	si, 10
  2914 | 00001609 | 8B46F8                    | 	mov	ax, word [bp-8]
  2915 | 0000160C | 8904                      | 	mov	word [si], ax
  2916 |          |                           | L_yakc_150:
  2917 | 0000160E | 8B76FC                    | 	mov	si, word [bp-4]
  2918 | 00001611 | 83C60C                    | 	add	si, 12
  2919 | 00001614 | 8B7EF8                    | 	mov	di, word [bp-8]
  2920 | 00001617 | 83C70C                    | 	add	di, 12
  2921 | 0000161A | 8B04                      | 	mov	ax, word [si]
  2922 | 0000161C | 8905                      | 	mov	word [di], ax
  2923 | 0000161E | 8B76F8                    | 	mov	si, word [bp-8]
  2924 | 00001621 | 83C60A                    | 	add	si, 10
  2925 | 00001624 | 8B46FC                    | 	mov	ax, word [bp-4]
  2926 | 00001627 | 8904                      | 	mov	word [si], ax
  2927 | 00001629 | 8B76FC                    | 	mov	si, word [bp-4]
  2928 | 0000162C | 83C60C                    | 	add	si, 12
  2929 | 0000162F | 8B46F8                    | 	mov	ax, word [bp-8]
  2930 | 00001632 | 8904                      | 	mov	word [si], ax
  2931 | 00001634 | 8B76F8                    | 	mov	si, word [bp-8]
  2932 | 00001637 | 83C60E                    | 	add	si, 14
  2933 | 0000163A | C7040000                  | 	mov	word [si], 0
  2934 | 0000163E | A1[8E1D]                  | 	mov	ax, word [YKISRCallDepth]
  2935 | 00001641 | 85C0                      | 	test	ax, ax
  2936 | 00001643 | 750A                      | 	jne	L_yakc_151
  2937 | 00001645 | B80100                    | 	mov	ax, 1
  2938 | 00001648 | 50                        | 	push	ax
  2939 | 00001649 | E844F8                    | 	call	YKScheduler
  2940 | 0000164C | 83C402                    | 	add	sp, 2
  2941 |          |                           | L_yakc_151:
  2942 | 0000164F | E87A07                    | 	call	YKExitMutex
  2943 |          |                           | L_yakc_142:
  2944 | 00001652 | 89EC                      | 	mov	sp, bp
  2945 | 00001654 | 5D                        | 	pop	bp
  2946 | 00001655 | C3                        | 	ret
  2947 |          |                           | L_yakc_132:
  2948 | 00001656 | 55                        | 	push	bp
  2949 | 00001657 | 89E5                      | 	mov	bp, sp
  2950 | 00001659 | 83EC08                    | 	sub	sp, 8
  2951 | 0000165C | E9ACFE                    | 	jmp	L_yakc_133
  2952 | 0000165F | 90                        | 	ALIGN	2
  2953 |          |                           | YKQCreate:
  2954 | 00001660 | E99400                    | 	jmp	L_yakc_153
  2955 |          |                           | L_yakc_154:
  2956 | 00001663 | E86407                    | 	call	YKEnterMutex
  2957 | 00001666 | C746FE0000                | 	mov	word [bp-2], 0
  2958 | 0000166B | EB03                      | 	jmp	L_yakc_156
  2959 |          |                           | L_yakc_155:
  2960 | 0000166D | FF46FE                    | 	inc	word [bp-2]
  2961 |          |                           | L_yakc_156:
  2962 | 00001670 | 8B46FE                    | 	mov	ax, word [bp-2]
  2963 | 00001673 | B90A00                    | 	mov	cx, 10
  2964 | 00001676 | F7E9                      | 	imul	cx
  2965 | 00001678 | 89C6                      | 	mov	si, ax
  2966 | 0000167A | 81C6[941D]                | 	add	si, YKQueueArray
  2967 | 0000167E | 8B04                      | 	mov	ax, word [si]
  2968 | 00001680 | 85C0                      | 	test	ax, ax
  2969 | 00001682 | 75E9                      | 	jne	L_yakc_155
  2970 |          |                           | L_yakc_157:
  2971 | 00001684 | 8B46FE                    | 	mov	ax, word [bp-2]
  2972 | 00001687 | B90A00                    | 	mov	cx, 10
  2973 | 0000168A | F7E9                      | 	imul	cx
  2974 | 0000168C | 89C6                      | 	mov	si, ax
  2975 | 0000168E | 81C6[941D]                | 	add	si, YKQueueArray
  2976 | 00001692 | 8B4604                    | 	mov	ax, word [bp+4]
  2977 | 00001695 | 8904                      | 	mov	word [si], ax
  2978 | 00001697 | 8B46FE                    | 	mov	ax, word [bp-2]
  2979 | 0000169A | B90A00                    | 	mov	cx, 10
  2980 | 0000169D | F7E9                      | 	imul	cx
  2981 | 0000169F | 05[941D]                  | 	add	ax, YKQueueArray
  2982 | 000016A2 | 89C6                      | 	mov	si, ax
  2983 | 000016A4 | 83C602                    | 	add	si, 2
  2984 | 000016A7 | 8B4606                    | 	mov	ax, word [bp+6]
  2985 | 000016AA | 8904                      | 	mov	word [si], ax
  2986 | 000016AC | 8B46FE                    | 	mov	ax, word [bp-2]
  2987 | 000016AF | B90A00                    | 	mov	cx, 10
  2988 | 000016B2 | F7E9                      | 	imul	cx
  2989 | 000016B4 | 05[941D]                  | 	add	ax, YKQueueArray
  2990 | 000016B7 | 89C6                      | 	mov	si, ax
  2991 | 000016B9 | 83C604                    | 	add	si, 4
  2992 | 000016BC | C7040000                  | 	mov	word [si], 0
  2993 | 000016C0 | 8B46FE                    | 	mov	ax, word [bp-2]
  2994 | 000016C3 | B90A00                    | 	mov	cx, 10
  2995 | 000016C6 | F7E9                      | 	imul	cx
  2996 | 000016C8 | 05[941D]                  | 	add	ax, YKQueueArray
  2997 | 000016CB | 89C6                      | 	mov	si, ax
  2998 | 000016CD | 83C606                    | 	add	si, 6
  2999 | 000016D0 | C7040000                  | 	mov	word [si], 0
  3000 | 000016D4 | 8B46FE                    | 	mov	ax, word [bp-2]
  3001 | 000016D7 | B90A00                    | 	mov	cx, 10
  3002 | 000016DA | F7E9                      | 	imul	cx
  3003 | 000016DC | 05[941D]                  | 	add	ax, YKQueueArray
  3004 | 000016DF | 89C6                      | 	mov	si, ax
  3005 | 000016E1 | 83C608                    | 	add	si, 8
  3006 | 000016E4 | C7040000                  | 	mov	word [si], 0
  3007 | 000016E8 | 8B46FE                    | 	mov	ax, word [bp-2]
  3008 | 000016EB | B90A00                    | 	mov	cx, 10
  3009 | 000016EE | F7E9                      | 	imul	cx
  3010 | 000016F0 | 05[941D]                  | 	add	ax, YKQueueArray
  3011 |          |                           | L_yakc_158:
  3012 | 000016F3 | 89EC                      | 	mov	sp, bp
  3013 | 000016F5 | 5D                        | 	pop	bp
  3014 | 000016F6 | C3                        | 	ret
  3015 |          |                           | L_yakc_153:
  3016 | 000016F7 | 55                        | 	push	bp
  3017 | 000016F8 | 89E5                      | 	mov	bp, sp
  3018 | 000016FA | 51                        | 	push	cx
  3019 | 000016FB | E965FF                    | 	jmp	L_yakc_154
  3020 |          |                           | 	ALIGN	2
  3021 |          |                           | YKQPend:
  3022 | 000016FE | E9D600                    | 	jmp	L_yakc_160
  3023 |          |                           | L_yakc_161:
  3024 | 00001701 | E8C606                    | 	call	YKEnterMutex
  3025 | 00001704 | 8B7604                    | 	mov	si, word [bp+4]
  3026 | 00001707 | 83C608                    | 	add	si, 8
  3027 | 0000170A | 8B04                      | 	mov	ax, word [si]
  3028 | 0000170C | 85C0                      | 	test	ax, ax
  3029 | 0000170E | 756C                      | 	jne	L_yakc_162
  3030 | 00001710 | A1[961A]                  | 	mov	ax, word [YKRdyList]
  3031 | 00001713 | 8946FE                    | 	mov	word [bp-2], ax
  3032 | 00001716 | 8B76FE                    | 	mov	si, word [bp-2]
  3033 | 00001719 | 83C60A                    | 	add	si, 10
  3034 | 0000171C | 8B04                      | 	mov	ax, word [si]
  3035 | 0000171E | A3[961A]                  | 	mov	word [YKRdyList], ax
  3036 | 00001721 | 8B76FE                    | 	mov	si, word [bp-2]
  3037 | 00001724 | 83C60A                    | 	add	si, 10
  3038 | 00001727 | 8B34                      | 	mov	si, word [si]
  3039 | 00001729 | 83C60C                    | 	add	si, 12
  3040 | 0000172C | C7040000                  | 	mov	word [si], 0
  3041 | 00001730 | 8B76FE                    | 	mov	si, word [bp-2]
  3042 | 00001733 | 83C60A                    | 	add	si, 10
  3043 | 00001736 | A1[C41D]                  | 	mov	ax, word [YKQueueWaitingList]
  3044 | 00001739 | 8904                      | 	mov	word [si], ax
  3045 | 0000173B | 8B46FE                    | 	mov	ax, word [bp-2]
  3046 | 0000173E | A3[C41D]                  | 	mov	word [YKQueueWaitingList], ax
  3047 | 00001741 | 8B76FE                    | 	mov	si, word [bp-2]
  3048 | 00001744 | 83C60C                    | 	add	si, 12
  3049 | 00001747 | C7040000                  | 	mov	word [si], 0
  3050 | 0000174B | 8B76FE                    | 	mov	si, word [bp-2]
  3051 | 0000174E | 83C60A                    | 	add	si, 10
  3052 | 00001751 | 8B04                      | 	mov	ax, word [si]
  3053 | 00001753 | 85C0                      | 	test	ax, ax
  3054 | 00001755 | 7410                      | 	je	L_yakc_163
  3055 | 00001757 | 8B76FE                    | 	mov	si, word [bp-2]
  3056 | 0000175A | 83C60A                    | 	add	si, 10
  3057 | 0000175D | 8B34                      | 	mov	si, word [si]
  3058 | 0000175F | 83C60C                    | 	add	si, 12
  3059 | 00001762 | 8B46FE                    | 	mov	ax, word [bp-2]
  3060 | 00001765 | 8904                      | 	mov	word [si], ax
  3061 |          |                           | L_yakc_163:
  3062 | 00001767 | 8B76FE                    | 	mov	si, word [bp-2]
  3063 | 0000176A | 83C610                    | 	add	si, 16
  3064 | 0000176D | 8B4604                    | 	mov	ax, word [bp+4]
  3065 | 00001770 | 8904                      | 	mov	word [si], ax
  3066 | 00001772 | B80100                    | 	mov	ax, 1
  3067 | 00001775 | 50                        | 	push	ax
  3068 | 00001776 | E817F7                    | 	call	YKScheduler
  3069 | 00001779 | 83C402                    | 	add	sp, 2
  3070 |          |                           | L_yakc_162:
  3071 | 0000177C | 8B7604                    | 	mov	si, word [bp+4]
  3072 | 0000177F | 83C604                    | 	add	si, 4
  3073 | 00001782 | 8B04                      | 	mov	ax, word [si]
  3074 | 00001784 | D1E0                      | 	shl	ax, 1
  3075 | 00001786 | 89C6                      | 	mov	si, ax
  3076 | 00001788 | 8B7E04                    | 	mov	di, word [bp+4]
  3077 | 0000178B | 0335                      | 	add	si, word [di]
  3078 | 0000178D | 8B04                      | 	mov	ax, word [si]
  3079 | 0000178F | 8946FC                    | 	mov	word [bp-4], ax
  3080 | 00001792 | 8B7604                    | 	mov	si, word [bp+4]
  3081 | 00001795 | 83C608                    | 	add	si, 8
  3082 | 00001798 | 8B04                      | 	mov	ax, word [si]
  3083 | 0000179A | 48                        | 	dec	ax
  3084 | 0000179B | 8B7604                    | 	mov	si, word [bp+4]
  3085 | 0000179E | 83C608                    | 	add	si, 8
  3086 | 000017A1 | 8904                      | 	mov	word [si], ax
  3087 | 000017A3 | 8B7604                    | 	mov	si, word [bp+4]
  3088 | 000017A6 | 83C604                    | 	add	si, 4
  3089 | 000017A9 | 8B04                      | 	mov	ax, word [si]
  3090 | 000017AB | 40                        | 	inc	ax
  3091 | 000017AC | 8B7604                    | 	mov	si, word [bp+4]
  3092 | 000017AF | 83C602                    | 	add	si, 2
  3093 | 000017B2 | 8B14                      | 	mov	dx, word [si]
  3094 | 000017B4 | 39C2                      | 	cmp	dx, ax
  3095 | 000017B6 | 7E0B                      | 	jle	L_yakc_164
  3096 | 000017B8 | 8B7604                    | 	mov	si, word [bp+4]
  3097 | 000017BB | 83C604                    | 	add	si, 4
  3098 | 000017BE | 8B04                      | 	mov	ax, word [si]
  3099 | 000017C0 | 40                        | 	inc	ax
  3100 | 000017C1 | EB02                      | 	jmp	L_yakc_165
  3101 |          |                           | L_yakc_164:
  3102 | 000017C3 | 31C0                      | 	xor	ax, ax
  3103 |          |                           | L_yakc_165:
  3104 | 000017C5 | 8B7604                    | 	mov	si, word [bp+4]
  3105 | 000017C8 | 83C604                    | 	add	si, 4
  3106 | 000017CB | 8904                      | 	mov	word [si], ax
  3107 | 000017CD | E8FC05                    | 	call	YKExitMutex
  3108 | 000017D0 | 8B46FC                    | 	mov	ax, word [bp-4]
  3109 |          |                           | L_yakc_166:
  3110 | 000017D3 | 89EC                      | 	mov	sp, bp
  3111 | 000017D5 | 5D                        | 	pop	bp
  3112 | 000017D6 | C3                        | 	ret
  3113 |          |                           | L_yakc_160:
  3114 | 000017D7 | 55                        | 	push	bp
  3115 | 000017D8 | 89E5                      | 	mov	bp, sp
  3116 | 000017DA | 83EC04                    | 	sub	sp, 4
  3117 | 000017DD | E921FF                    | 	jmp	L_yakc_161
  3118 |          |                           | L_yakc_168:
  3119 | 000017E0 | 7468696E6B20746865-       | 	DB	"think the queue is full?",0xA,0
  3120 | 000017E9 | 207175657565206973-       | ...
  3121 | 000017F2 | 2066756C6C3F0A00          | ...
  3122 |          |                           | 	ALIGN	2
  3123 |          |                           | YKQPost:
  3124 | 000017FA | E9BE01                    | 	jmp	L_yakc_169
  3125 |          |                           | L_yakc_170:
  3126 | 000017FD | E8CA05                    | 	call	YKEnterMutex
  3127 | 00001800 | 8B7604                    | 	mov	si, word [bp+4]
  3128 | 00001803 | 83C602                    | 	add	si, 2
  3129 | 00001806 | 8B04                      | 	mov	ax, word [si]
  3130 | 00001808 | 48                        | 	dec	ax
  3131 | 00001809 | 8B7604                    | 	mov	si, word [bp+4]
  3132 | 0000180C | 83C608                    | 	add	si, 8
  3133 | 0000180F | 8B14                      | 	mov	dx, word [si]
  3134 | 00001811 | 39C2                      | 	cmp	dx, ax
  3135 | 00001813 | 750F                      | 	jne	L_yakc_171
  3136 | 00001815 | B8[E017]                  | 	mov	ax, L_yakc_168
  3137 | 00001818 | 50                        | 	push	ax
  3138 | 00001819 | E80CEC                    | 	call	printString
  3139 | 0000181C | 83C402                    | 	add	sp, 2
  3140 | 0000181F | 31C0                      | 	xor	ax, ax
  3141 | 00001821 | E99301                    | 	jmp	L_yakc_172
  3142 |          |                           | L_yakc_171:
  3143 | 00001824 | C746FC0000                | 	mov	word [bp-4], 0
  3144 | 00001829 | A1[C41D]                  | 	mov	ax, word [YKQueueWaitingList]
  3145 | 0000182C | 8946FE                    | 	mov	word [bp-2], ax
  3146 | 0000182F | 8B7604                    | 	mov	si, word [bp+4]
  3147 | 00001832 | 83C606                    | 	add	si, 6
  3148 | 00001835 | 8B04                      | 	mov	ax, word [si]
  3149 | 00001837 | D1E0                      | 	shl	ax, 1
  3150 | 00001839 | 89C6                      | 	mov	si, ax
  3151 | 0000183B | 8B7E04                    | 	mov	di, word [bp+4]
  3152 | 0000183E | 0335                      | 	add	si, word [di]
  3153 | 00001840 | 8B4606                    | 	mov	ax, word [bp+6]
  3154 | 00001843 | 8904                      | 	mov	word [si], ax
  3155 | 00001845 | 8B7604                    | 	mov	si, word [bp+4]
  3156 | 00001848 | 83C608                    | 	add	si, 8
  3157 | 0000184B | 8B04                      | 	mov	ax, word [si]
  3158 | 0000184D | 40                        | 	inc	ax
  3159 | 0000184E | 8B7604                    | 	mov	si, word [bp+4]
  3160 | 00001851 | 83C608                    | 	add	si, 8
  3161 | 00001854 | 8904                      | 	mov	word [si], ax
  3162 | 00001856 | 8B7604                    | 	mov	si, word [bp+4]
  3163 | 00001859 | 83C606                    | 	add	si, 6
  3164 | 0000185C | 8B04                      | 	mov	ax, word [si]
  3165 | 0000185E | 40                        | 	inc	ax
  3166 | 0000185F | 8B7604                    | 	mov	si, word [bp+4]
  3167 | 00001862 | 83C602                    | 	add	si, 2
  3168 | 00001865 | 8B14                      | 	mov	dx, word [si]
  3169 | 00001867 | 39C2                      | 	cmp	dx, ax
  3170 | 00001869 | 7E0B                      | 	jle	L_yakc_173
  3171 | 0000186B | 8B7604                    | 	mov	si, word [bp+4]
  3172 | 0000186E | 83C606                    | 	add	si, 6
  3173 | 00001871 | 8B04                      | 	mov	ax, word [si]
  3174 | 00001873 | 40                        | 	inc	ax
  3175 | 00001874 | EB02                      | 	jmp	L_yakc_174
  3176 |          |                           | L_yakc_173:
  3177 | 00001876 | 31C0                      | 	xor	ax, ax
  3178 |          |                           | L_yakc_174:
  3179 | 00001878 | 8B7604                    | 	mov	si, word [bp+4]
  3180 | 0000187B | 83C606                    | 	add	si, 6
  3181 | 0000187E | 8904                      | 	mov	word [si], ax
  3182 | 00001880 | EB3F                      | 	jmp	L_yakc_176
  3183 |          |                           | L_yakc_175:
  3184 | 00001882 | 8B76FE                    | 	mov	si, word [bp-2]
  3185 | 00001885 | 83C610                    | 	add	si, 16
  3186 | 00001888 | 8B4604                    | 	mov	ax, word [bp+4]
  3187 | 0000188B | 3B04                      | 	cmp	ax, word [si]
  3188 | 0000188D | 7527                      | 	jne	L_yakc_178
  3189 | 0000188F | 8B46FC                    | 	mov	ax, word [bp-4]
  3190 | 00001892 | 85C0                      | 	test	ax, ax
  3191 | 00001894 | 7508                      | 	jne	L_yakc_179
  3192 | 00001896 | 8B46FE                    | 	mov	ax, word [bp-2]
  3193 | 00001899 | 8946FC                    | 	mov	word [bp-4], ax
  3194 | 0000189C | EB18                      | 	jmp	L_yakc_180
  3195 |          |                           | L_yakc_179:
  3196 | 0000189E | 8B76FE                    | 	mov	si, word [bp-2]
  3197 | 000018A1 | 83C606                    | 	add	si, 6
  3198 | 000018A4 | 8B7EFC                    | 	mov	di, word [bp-4]
  3199 | 000018A7 | 83C706                    | 	add	di, 6
  3200 | 000018AA | 8B05                      | 	mov	ax, word [di]
  3201 | 000018AC | 3B04                      | 	cmp	ax, word [si]
  3202 | 000018AE | 7E06                      | 	jle	L_yakc_181
  3203 | 000018B0 | 8B46FE                    | 	mov	ax, word [bp-2]
  3204 | 000018B3 | 8946FC                    | 	mov	word [bp-4], ax
  3205 |          |                           | L_yakc_181:
  3206 |          |                           | L_yakc_180:
  3207 |          |                           | L_yakc_178:
  3208 | 000018B6 | 8B76FE                    | 	mov	si, word [bp-2]
  3209 | 000018B9 | 83C60A                    | 	add	si, 10
  3210 | 000018BC | 8B04                      | 	mov	ax, word [si]
  3211 | 000018BE | 8946FE                    | 	mov	word [bp-2], ax
  3212 |          |                           | L_yakc_176:
  3213 | 000018C1 | 8B46FE                    | 	mov	ax, word [bp-2]
  3214 | 000018C4 | 85C0                      | 	test	ax, ax
  3215 | 000018C6 | 75BA                      | 	jne	L_yakc_175
  3216 |          |                           | L_yakc_177:
  3217 | 000018C8 | 8B46FC                    | 	mov	ax, word [bp-4]
  3218 | 000018CB | 85C0                      | 	test	ax, ax
  3219 | 000018CD | 7509                      | 	jne	L_yakc_182
  3220 | 000018CF | E8FA04                    | 	call	YKExitMutex
  3221 | 000018D2 | B80100                    | 	mov	ax, 1
  3222 | 000018D5 | E9DF00                    | 	jmp	L_yakc_172
  3223 |          |                           | L_yakc_182:
  3224 | 000018D8 | 8B76FC                    | 	mov	si, word [bp-4]
  3225 | 000018DB | 83C60C                    | 	add	si, 12
  3226 | 000018DE | 8B04                      | 	mov	ax, word [si]
  3227 | 000018E0 | 85C0                      | 	test	ax, ax
  3228 | 000018E2 | 750D                      | 	jne	L_yakc_183
  3229 | 000018E4 | 8B76FC                    | 	mov	si, word [bp-4]
  3230 | 000018E7 | 83C60A                    | 	add	si, 10
  3231 | 000018EA | 8B04                      | 	mov	ax, word [si]
  3232 | 000018EC | A3[C41D]                  | 	mov	word [YKQueueWaitingList], ax
  3233 | 000018EF | EB15                      | 	jmp	L_yakc_184
  3234 |          |                           | L_yakc_183:
  3235 | 000018F1 | 8B76FC                    | 	mov	si, word [bp-4]
  3236 | 000018F4 | 83C60A                    | 	add	si, 10
  3237 | 000018F7 | 8B7EFC                    | 	mov	di, word [bp-4]
  3238 | 000018FA | 83C70C                    | 	add	di, 12
  3239 | 000018FD | 8B3D                      | 	mov	di, word [di]
  3240 | 000018FF | 83C70A                    | 	add	di, 10
  3241 | 00001902 | 8B04                      | 	mov	ax, word [si]
  3242 | 00001904 | 8905                      | 	mov	word [di], ax
  3243 |          |                           | L_yakc_184:
  3244 | 00001906 | 8B76FC                    | 	mov	si, word [bp-4]
  3245 | 00001909 | 83C60A                    | 	add	si, 10
  3246 | 0000190C | 8B04                      | 	mov	ax, word [si]
  3247 | 0000190E | 85C0                      | 	test	ax, ax
  3248 | 00001910 | 7415                      | 	je	L_yakc_185
  3249 | 00001912 | 8B76FC                    | 	mov	si, word [bp-4]
  3250 | 00001915 | 83C60C                    | 	add	si, 12
  3251 | 00001918 | 8B7EFC                    | 	mov	di, word [bp-4]
  3252 | 0000191B | 83C70A                    | 	add	di, 10
  3253 | 0000191E | 8B3D                      | 	mov	di, word [di]
  3254 | 00001920 | 83C70C                    | 	add	di, 12
  3255 | 00001923 | 8B04                      | 	mov	ax, word [si]
  3256 | 00001925 | 8905                      | 	mov	word [di], ax
  3257 |          |                           | L_yakc_185:
  3258 | 00001927 | A1[961A]                  | 	mov	ax, word [YKRdyList]
  3259 | 0000192A | 8946FE                    | 	mov	word [bp-2], ax
  3260 | 0000192D | EB0B                      | 	jmp	L_yakc_187
  3261 |          |                           | L_yakc_186:
  3262 | 0000192F | 8B76FE                    | 	mov	si, word [bp-2]
  3263 | 00001932 | 83C60A                    | 	add	si, 10
  3264 | 00001935 | 8B04                      | 	mov	ax, word [si]
  3265 | 00001937 | 8946FE                    | 	mov	word [bp-2], ax
  3266 |          |                           | L_yakc_187:
  3267 | 0000193A | 8B76FE                    | 	mov	si, word [bp-2]
  3268 | 0000193D | 83C606                    | 	add	si, 6
  3269 | 00001940 | 8B7EFC                    | 	mov	di, word [bp-4]
  3270 | 00001943 | 83C706                    | 	add	di, 6
  3271 | 00001946 | 8B05                      | 	mov	ax, word [di]
  3272 | 00001948 | 3B04                      | 	cmp	ax, word [si]
  3273 | 0000194A | 7FE3                      | 	jg	L_yakc_186
  3274 |          |                           | L_yakc_188:
  3275 | 0000194C | 8B76FE                    | 	mov	si, word [bp-2]
  3276 | 0000194F | 83C60C                    | 	add	si, 12
  3277 | 00001952 | 8B04                      | 	mov	ax, word [si]
  3278 | 00001954 | 85C0                      | 	test	ax, ax
  3279 | 00001956 | 7508                      | 	jne	L_yakc_189
  3280 | 00001958 | 8B46FC                    | 	mov	ax, word [bp-4]
  3281 | 0000195B | A3[961A]                  | 	mov	word [YKRdyList], ax
  3282 | 0000195E | EB10                      | 	jmp	L_yakc_190
  3283 |          |                           | L_yakc_189:
  3284 | 00001960 | 8B76FE                    | 	mov	si, word [bp-2]
  3285 | 00001963 | 83C60C                    | 	add	si, 12
  3286 | 00001966 | 8B34                      | 	mov	si, word [si]
  3287 | 00001968 | 83C60A                    | 	add	si, 10
  3288 | 0000196B | 8B46FC                    | 	mov	ax, word [bp-4]
  3289 | 0000196E | 8904                      | 	mov	word [si], ax
  3290 |          |                           | L_yakc_190:
  3291 | 00001970 | 8B76FE                    | 	mov	si, word [bp-2]
  3292 | 00001973 | 83C60C                    | 	add	si, 12
  3293 | 00001976 | 8B7EFC                    | 	mov	di, word [bp-4]
  3294 | 00001979 | 83C70C                    | 	add	di, 12
  3295 | 0000197C | 8B04                      | 	mov	ax, word [si]
  3296 | 0000197E | 8905                      | 	mov	word [di], ax
  3297 | 00001980 | 8B76FC                    | 	mov	si, word [bp-4]
  3298 | 00001983 | 83C60A                    | 	add	si, 10
  3299 | 00001986 | 8B46FE                    | 	mov	ax, word [bp-2]
  3300 | 00001989 | 8904                      | 	mov	word [si], ax
  3301 | 0000198B | 8B76FE                    | 	mov	si, word [bp-2]
  3302 | 0000198E | 83C60C                    | 	add	si, 12
  3303 | 00001991 | 8B46FC                    | 	mov	ax, word [bp-4]
  3304 | 00001994 | 8904                      | 	mov	word [si], ax
  3305 | 00001996 | 8B76FC                    | 	mov	si, word [bp-4]
  3306 | 00001999 | 83C610                    | 	add	si, 16
  3307 | 0000199C | C7040000                  | 	mov	word [si], 0
  3308 | 000019A0 | A1[8E1D]                  | 	mov	ax, word [YKISRCallDepth]
  3309 | 000019A3 | 85C0                      | 	test	ax, ax
  3310 | 000019A5 | 750A                      | 	jne	L_yakc_191
  3311 | 000019A7 | B80100                    | 	mov	ax, 1
  3312 | 000019AA | 50                        | 	push	ax
  3313 | 000019AB | E8E2F4                    | 	call	YKScheduler
  3314 | 000019AE | 83C402                    | 	add	sp, 2
  3315 |          |                           | L_yakc_191:
  3316 | 000019B1 | E81804                    | 	call	YKExitMutex
  3317 | 000019B4 | B80100                    | 	mov	ax, 1
  3318 |          |                           | L_yakc_172:
  3319 | 000019B7 | 89EC                      | 	mov	sp, bp
  3320 | 000019B9 | 5D                        | 	pop	bp
  3321 | 000019BA | C3                        | 	ret
  3322 |          |                           | L_yakc_169:
  3323 | 000019BB | 55                        | 	push	bp
  3324 | 000019BC | 89E5                      | 	mov	bp, sp
  3325 | 000019BE | 83EC04                    | 	sub	sp, 4
  3326 | 000019C1 | E939FE                    | 	jmp	L_yakc_170
  3327 |          |                           | L_yakc_197:
  3328 | 000019C4 | 09636F756E743D2000        | 	DB	0x9,"count= ",0
  3329 |          |                           | L_yakc_196:
  3330 | 000019CD | 096E6578745F736C6F-       | 	DB	0x9,"next_slot= ",0
  3331 | 000019D6 | 743D2000                  | ...
  3332 |          |                           | L_yakc_195:
  3333 | 000019DA | 096F6C646573743D20-       | 	DB	0x9,"oldest= ",0
  3334 | 000019E3 | 00                        | ...
  3335 |          |                           | L_yakc_194:
  3336 | 000019E4 | 096C656E6774683D20-       | 	DB	0x9,"length= ",0
  3337 | 000019ED | 00                        | ...
  3338 |          |                           | L_yakc_193:
  3339 | 000019EE | 7072696E74696E6720-       | 	DB	"printing queue ",0
  3340 | 000019F7 | 71756575652000            | ...
  3341 |          |                           | 	ALIGN	2
  3342 |          |                           | printQueue:
  3343 | 000019FE | E98700                    | 	jmp	L_yakc_198
  3344 |          |                           | L_yakc_199:
  3345 | 00001A01 | E8C603                    | 	call	YKEnterMutex
  3346 | 00001A04 | B8[EE19]                  | 	mov	ax, L_yakc_193
  3347 | 00001A07 | 50                        | 	push	ax
  3348 | 00001A08 | E81DEA                    | 	call	printString
  3349 | 00001A0B | 83C402                    | 	add	sp, 2
  3350 | 00001A0E | FF7604                    | 	push	word [bp+4]
  3351 | 00001A11 | E838EA                    | 	call	printInt
  3352 | 00001A14 | 83C402                    | 	add	sp, 2
  3353 | 00001A17 | B8[E419]                  | 	mov	ax, L_yakc_194
  3354 | 00001A1A | 50                        | 	push	ax
  3355 | 00001A1B | E80AEA                    | 	call	printString
  3356 | 00001A1E | 83C402                    | 	add	sp, 2
  3357 | 00001A21 | 8B7604                    | 	mov	si, word [bp+4]
  3358 | 00001A24 | 83C602                    | 	add	si, 2
  3359 | 00001A27 | FF34                      | 	push	word [si]
  3360 | 00001A29 | E820EA                    | 	call	printInt
  3361 | 00001A2C | 83C402                    | 	add	sp, 2
  3362 | 00001A2F | B8[DA19]                  | 	mov	ax, L_yakc_195
  3363 | 00001A32 | 50                        | 	push	ax
  3364 | 00001A33 | E8F2E9                    | 	call	printString
  3365 | 00001A36 | 83C402                    | 	add	sp, 2
  3366 | 00001A39 | 8B7604                    | 	mov	si, word [bp+4]
  3367 | 00001A3C | 83C604                    | 	add	si, 4
  3368 | 00001A3F | FF34                      | 	push	word [si]
  3369 | 00001A41 | E808EA                    | 	call	printInt
  3370 | 00001A44 | 83C402                    | 	add	sp, 2
  3371 | 00001A47 | B8[CD19]                  | 	mov	ax, L_yakc_196
  3372 | 00001A4A | 50                        | 	push	ax
  3373 | 00001A4B | E8DAE9                    | 	call	printString
  3374 | 00001A4E | 83C402                    | 	add	sp, 2
  3375 | 00001A51 | 8B7604                    | 	mov	si, word [bp+4]
  3376 | 00001A54 | 83C606                    | 	add	si, 6
  3377 | 00001A57 | FF34                      | 	push	word [si]
  3378 | 00001A59 | E8F0E9                    | 	call	printInt
  3379 | 00001A5C | 83C402                    | 	add	sp, 2
  3380 | 00001A5F | B8[C419]                  | 	mov	ax, L_yakc_197
  3381 | 00001A62 | 50                        | 	push	ax
  3382 | 00001A63 | E8C2E9                    | 	call	printString
  3383 | 00001A66 | 83C402                    | 	add	sp, 2
  3384 | 00001A69 | 8B7604                    | 	mov	si, word [bp+4]
  3385 | 00001A6C | 83C608                    | 	add	si, 8
  3386 | 00001A6F | FF34                      | 	push	word [si]
  3387 | 00001A71 | E8D8E9                    | 	call	printInt
  3388 | 00001A74 | 83C402                    | 	add	sp, 2
  3389 | 00001A77 | B8[690E]                  | 	mov	ax, (L_yakc_32+33)
  3390 | 00001A7A | 50                        | 	push	ax
  3391 | 00001A7B | E8AAE9                    | 	call	printString
  3392 | 00001A7E | 83C402                    | 	add	sp, 2
  3393 | 00001A81 | E84803                    | 	call	YKExitMutex
  3394 | 00001A84 | 89EC                      | 	mov	sp, bp
  3395 | 00001A86 | 5D                        | 	pop	bp
  3396 | 00001A87 | C3                        | 	ret
  3397 |          |                           | L_yakc_198:
  3398 | 00001A88 | 55                        | 	push	bp
  3399 | 00001A89 | 89E5                      | 	mov	bp, sp
  3400 | 00001A8B | 51                        | 	push	cx
  3401 | 00001A8C | E972FF                    | 	jmp	L_yakc_199
  3402 | 00001A8F | 90                        | 	ALIGN	2
  3403 |          |                           | YKCtxSwCount:
  3404 | 00001A90 | 00<rept>                  | 	TIMES	2 db 0
  3405 |          |                           | YKIdleCount:
  3406 | 00001A92 | 00<rept>                  | 	TIMES	2 db 0
  3407 |          |                           | YKTickNum:
  3408 | 00001A94 | 00<rept>                  | 	TIMES	2 db 0
  3409 |          |                           | YKRdyList:
  3410 | 00001A96 | 00<rept>                  | 	TIMES	2 db 0
  3411 |          |                           | YKSuspList:
  3412 | 00001A98 | 00<rept>                  | 	TIMES	2 db 0
  3413 |          |                           | YKSemaphoreWaitingList:
  3414 | 00001A9A | 00<rept>                  | 	TIMES	2 db 0
  3415 |          |                           | YKAvailTCBList:
  3416 | 00001A9C | 00<rept>                  | 	TIMES	2 db 0
  3417 |          |                           | YKTCBArray:
  3418 | 00001A9E | 00<rept>                  | 	TIMES	240 db 0
  3419 |          |                           | idleStack:
  3420 | 00001B8E | 00<rept>                  | 	TIMES	512 db 0
  3421 |          |                           | YKISRCallDepth:
  3422 | 00001D8E | 00<rept>                  | 	TIMES	2 db 0
  3423 |          |                           | YKSEMArray:
  3424 | 00001D90 | 00<rept>                  | 	TIMES	4 db 0
  3425 |          |                           | YKQueueArray:
  3426 | 00001D94 | 00<rept>                  | 	TIMES	40 db 0
  3427 |          |                           | YKEVENTArray:
  3428 | 00001DBC | 00<rept>                  | 	TIMES	8 db 0
  3429 |          |                           | YKQueueWaitingList:
  3430 | 00001DC4 | 00<rept>                  | 	TIMES	2 db 0
  3431 |          |                           | YKEventBlockingList:
  3432 | 00001DC6 | 00<rept>                  | 	TIMES	2 db 0
  3433 |          |                           | YKCurrentlyExecuting:
  3434 | 00001DC8 | 00<rept>                  | 	TIMES	2 db 0
  3435 |          |                           | ; All kernel routines that are written in assembly are here 
  3436 |          |                           | 
  3437 |          |                           | ; Disables interrupts 
  3438 |          |                           | YKEnterMutex:
  3439 | 00001DCA | FA                        | 	cli	; clear interrupt flag to disable interrupts 
  3440 | 00001DCB | C3                        | 	ret
  3441 |          |                           | 
  3442 |          |                           | ; Enables Interrupts 
  3443 |          |                           | YKExitMutex:
  3444 | 00001DCC | FB                        | 	sti	; set interrupt flag to enable interrupts 
  3445 | 00001DCD | C3                        | 	ret
  3446 |          |                           | 
  3447 |          |                           | YKDispatcher:
  3448 |          |                           | 	; So if we are following andy's design
  3449 |          |                           | 	; we will save context here (if the boolean
  3450 |          |                           | 	; passed to us tells us to)
  3451 |          |                           | 	
  3452 |          |                           | 	; Hmm. Should the proper SS and SP be passed to us as an argument?
  3453 |          |                           | 	; Or shall we fetch them ourselves?
  3454 |          |                           | 
  3455 |          |                           | 
  3456 |          |                           | 	; I am TRYING to move what YKRdyList is pointing at into the stack pointer
  3457 |          |                           | 	; Because what YKRdyList points at is the stack pointer of the most ready task
  3458 |          |                           | 	; Incorrect. The value from the dereferenced YKRdyList needs to be 
  3459 |          |                           | 	; dereferenced again to get the proper stack pointer
  3460 |          |                           | 	;mov SP, [YKRdyList]
  3461 | 00001DCE | 8B1E[961A]                | 	mov BX, [YKRdyList]
  3462 | 00001DD2 | 8B27                      | 	mov SP, word [BX]
  3463 |          |                           | 
  3464 |          |                           | 	; but in any case we need to restore context
  3465 | 00001DD4 | 07                        | 	pop ES
  3466 | 00001DD5 | 1F                        | 	pop DS
  3467 | 00001DD6 | 5F                        | 	pop DI
  3468 | 00001DD7 | 5E                        | 	pop SI
  3469 | 00001DD8 | 5D                        | 	pop BP
  3470 | 00001DD9 | 5A                        | 	pop DX
  3471 | 00001DDA | 59                        | 	pop CX
  3472 | 00001DDB | 5B                        | 	pop BX
  3473 | 00001DDC | 58                        | 	pop AX
  3474 |          |                           | 	; After this- done by reti
  3475 |          |                           | 	; IP
  3476 |          |                           | 	; CS
  3477 |          |                           | 	; flags
  3478 | 00001DDD | CF                        | 	iret
  3479 |          |                           | 
  3480 |          |                           | ; This dispatcher has a bool parameter for whether it needs to save context
  3481 |          |                           | ; @ param: int should_save_context
  3482 |          |                           | ; @ param: int * save_sp_location
  3483 |          |                           | ; @ param: int * save_ss_location
  3484 |          |                           | ; @ param: int * restore_sp_location
  3485 |          |                           | ; @ param: int * restore_ss_location
  3486 |          |                           | YKDispatcher_save_context:
  3487 | 00001DDE | FA                        | cli
  3488 |          |                           | 	; Here is where we will deal with our parameters
  3489 | 00001DDF | 55                        | 	push bp
  3490 | 00001DE0 | 89E5                      | 	mov bp, sp
  3491 |          |                           | ; NOTE: WE DO NOT NEED TO SAVE AX. BECAUSE IT IS THE RETURN REGISTER.
  3492 |          |                           | 
  3493 |          |                           | ;	push ax				; gotta save ax
  3494 | 00001DE2 | 8B4604                    | 	mov ax, word [bp+4]			; getting the bool
  3495 | 00001DE5 | 85C0                      | 	test ax, ax					; if (ax == 0)
  3496 |          |                           | ;	pop ax				; shouldn't mess up flags
  3497 | 00001DE7 | 742A                      | 	jz	restoring_context		; If zero, we do NOT store context
  3498 |          |                           | storing_context:
  3499 | 00001DE9 | 8B4602                    | 	mov AX, [bp+2]	; The return address.
  3500 | 00001DEC | 5D                        | 	pop bp
  3501 | 00001DED | 83C402                    | 	add sp, 2
  3502 |          |                           | 	
  3503 | 00001DF0 | 9C                        | 	pushf
  3504 | 00001DF1 | 0E                        | 	push CS
  3505 |          |                           | 
  3506 |          |                           | ;	mov AX, ending_dispatcher
  3507 |          |                           | ;	push AX
  3508 |          |                           | ;;	mov AX, [SP+4]	; return address now stored at sp+4
  3509 | 00001DF2 | 50                        | 	push AX
  3510 |          |                           | 
  3511 | 00001DF3 | 50                        | 	push AX
  3512 | 00001DF4 | 53                        | 	push BX
  3513 | 00001DF5 | 51                        | 	push CX
  3514 | 00001DF6 | 52                        | 	push DX
  3515 | 00001DF7 | 55                        | 	push BP						; Maybe not?
  3516 | 00001DF8 | 56                        | 	push SI
  3517 | 00001DF9 | 57                        | 	push DI
  3518 | 00001DFA | 1E                        | 	push DS
  3519 | 00001DFB | 06                        | 	push ES
  3520 |          |                           | 
  3521 | 00001DFC | 89E5                      | 	mov bp, sp
  3522 | 00001DFE | 83C514                    | 	add bp, 20
  3523 |          |                           | 
  3524 |          |                           | 	; Now we just need to store SS and SP in the proper TCB. (these are parameters)
  3525 |          |                           | 	; 2nd argument, int * save_sp = [bp+6]
  3526 | 00001E01 | 8B7606                    | 	mov si, word [bp+6]
  3527 | 00001E04 | 8924                      | 	mov word [si], sp
  3528 |          |                           | ;	mov word [bp+6], SP
  3529 |          |                           | 	; 3rd argument, int * save_ss = [bp+8]
  3530 | 00001E06 | 8B7608                    | 	mov si, word [bp+8]
  3531 | 00001E09 | 8C14                      | 	mov word [si], ss
  3532 |          |                           | ;	mov word [bp+8], SS
  3533 |          |                           | 
  3534 |          |                           | 
  3535 | 00001E0B | 8E560C                    | 	mov ss, word[bp+12]
  3536 | 00001E0E | 8B660A                    | 	mov sp, word[bp+10]
  3537 | 00001E11 | EB06                      | 	jmp real_restoring_context
  3538 |          |                           | 	
  3539 |          |                           | restoring_context:
  3540 |          |                           | ;	sp is still pointing at the return address.
  3541 |          |                           | 
  3542 |          |                           | 	; Now we just need to restore SS and SP from the proper TCB. (parameters)
  3543 |          |                           | 	; 5th argument, int * restore_ss = [bp+12]
  3544 |          |                           | 	; 4th argument, int * restore_sp = [bp+10]
  3545 | 00001E13 | 8E560C                    | 	mov ss, word[bp+12]
  3546 | 00001E16 | 8B660A                    | 	mov sp, word[bp+10]
  3547 |          |                           | 
  3548 |          |                           | real_restoring_context:
  3549 | 00001E19 | 07                        | 	pop ES
  3550 | 00001E1A | 1F                        | 	pop DS
  3551 | 00001E1B | 5F                        | 	pop DI
  3552 | 00001E1C | 5E                        | 	pop SI
  3553 | 00001E1D | 5D                        | 	pop BP
  3554 | 00001E1E | 5A                        | 	pop DX
  3555 | 00001E1F | 59                        | 	pop CX
  3556 | 00001E20 | 5B                        | 	pop BX
  3557 | 00001E21 | 58                        | 	pop AX
  3558 | 00001E22 | CF                        | 	iret			; restores CS, IP, and flags. Starts execution at ENDING_IP
  3559 |          |                           | 
  3560 |          |                           | ;;;ending_dispatcher:
  3561 |          |                           | 	; do all the ending crap of the function
  3562 |          |                           | ;;;	mov sp, bp
  3563 |          |                           | ;;;	pop bp
  3564 |          |                           | ;;;	ret				; Takes us back to the scheduler, and context is restored!
  3565 |          |                           | 
  3566 |          |                           | ;
  3567 |          |                           | ; POSSIBLE SOLUITION
  3568 |          |                           | ; Use assembly macro to
  3569 |          |                           | ; in-line all of this
  3570 |          |                           | ; so it doesn't have to 
  3571 |          |                           | ; be a function call
  3572 |          |                           | ;
  3573 |          |                           | ;
  3574 |          |                           | ; (Start stack)
  3575 |          |                           | ;	IP of task
  3576 |          |                           | ;	return address
  3577 |          |                           | ;	[SP points here]
  3578 |          |                           | ; 
  3579 |          |                           | ; (End stack)
  3580 |          |                           | ;	flags
  3581 |          |                           | ;	CS
  3582 |          |                           | ;	IP
  3583 |          |                           | ;	return address
  3584 |          |                           | ;	[SP points here]
  3585 |          |                           | ;
  3586 |          |                           | ;YKSaveFlagsAndCS:
  3587 |          |                           | ;	sub SP, 4
  3588 |          |                           | ;	push DX			; Save DX
  3589 |          |                           | ;	push CX			; Save CX
  3590 |          |                           | ;	mov DX, SP+12	; DX = IP (to original task)
  3591 |          |                           | ;	mov CX, SP+10	; CX = return address (to whomever called me)
  3592 |          |                           | ;	mov SP+8, DX
  3593 |          |                           | ;	mov SP+6, CX
  3594 |          |                           | ;	pop CX			; Restore CX
  3595 |          |                           | ;	pop DX			; Restore DX
  3596 |          |                           | ;
  3597 |          |                           | ;	add SP, 8
  3598 |          |                           | ;	pushf			; push flags into their proper spot
  3599 |          |                           | ;	push CS			; push CS into its proper spot
  3600 |          |                           | ;	sub SP, 4
  3601 |          |                           | ;	
  3602 |          |                           | ;	jmp YKSaveContext	; Now we are ready to save the rest of context
  3603 |          |                           | 
  3604 |          |                           | ; This saves the context on the current stack frame 
  3605 |          |                           | ; We are assuming this is called from an interrupt
  3606 |          |                           | ;	(if it is not, call YKSaveFlagsAndCS instead)
  3607 |          |                           | ; So we already have flags, CS, and IP saved properly
  3608 |          |                           | ;YKSaveContext:
  3609 |          |                           | ;	;SP + 2 (I think) is return address.
  3610 |          |                           | ;	sub SP, 18	; Get ready to save 9 words onto the stack
  3611 |          |                           | ;	push DX
  3612 |          |                           | ;	mov DX, SP + 22	; mov the return address onto SP 
  3613 |          |                           | ;	mov SP+4, DX	; put it at the end of the stack, ready to be popped
  3614 |          |                           | ;	pop DX
  3615 |          |                           | ;	
  3616 |          |                           | ;	mov [SP+20], AX
  3617 |          |                           | ;	mov SP+18, BX
  3618 |          |                           | ;	mov SP+16, CX
  3619 |          |                           | ;	mov SP+14, DX
  3620 |          |                           | ;	mov SP+12, BP
  3621 |          |                           | ;	mov SP+10, SI
  3622 |          |                           | ;	mov SP+8, DI
  3623 |          |                           | ;	mov SP+6, DS
  3624 |          |                           | ;	mov SP+4, ES
  3625 |          |                           | ;;	; Current stack: return address, empty 
  3626 |          |                           | ;;	push AX	; Each 
  3627 |          |                           | ;	push BX	; one  
  3628 |          |                           | ;	push CX	; is  
  3629 |          |                           | ;	push DX	; sp-2 
  3630 |          |                           | ;	; Instruction Pointer - In interrupt, saved already
  3631 |          |                           | ;	; Stack pointer - Need to be saved seperately
  3632 |          |                           | ;	push BP ; Base pointer 
  3633 |          |                           | ;	push SI ; Source index 
  3634 |          |                           | ;	push DI ; Destination index    
  3635 |          |                           | ;	; Code segment - Saved with IP?
  3636 |          |                           | ;	; Stack segment - saved with SP?
  3637 |          |                           | ;	push DS ; Data segment 
  3638 |          |                           | ;	push ES ; Extra segment 
  3639 |          |                           | ;	; Flags - interrupts already save it
  3640 |          |                           | ;	ret
  3641 |          |                           | 
  3642 |          |                           | ; This restores the context FROM the current stack frame 
  3643 |          |                           | ;YKRestoreContext:
  3644 |          |                           | ;	mov AX, SP+20
  3645 |          |                           | ;	mov BX, SP+18
  3646 |          |                           | ;	mov CX, SP+16
  3647 |          |                           | ;	mov DX, SP+14
  3648 |          |                           | ;	mov BP, SP+12
  3649 |          |                           | ;	mov SI, SP+10
  3650 |          |                           | ;	mov DI, SP+8
  3651 |          |                           | ;	mov DS, SP+6
  3652 |          |                           | ;	mov ES, SP+4
  3653 |          |                           | ;
  3654 |          |                           | ;	push DX
  3655 |          |                           | ;	mov DX, SP+4
  3656 |          |                           | ;	mov SP+22 , DX
  3657 |          |                           | ;	pop DX
  3658 |          |                           | ;	add SP, 18
  3659 |          |                           | ;	ret
  3660 |          |                           | 
  3661 |          |                           | ;	add SP, 2	; This deletes the return address saved when we call'ed YKRestoreContext.
  3662 |          |                           | ;	pop ES
  3663 |          |                           | ;	pop DS
  3664 |          |                           | ;	SS
  3665 |          |                           | ;	CS
  3666 |          |                           | ;	pop DI
  3667 |          |                           | ;	pop SI
  3668 |          |                           | ;	pop BP
  3669 |          |                           | ;	SP
  3670 |          |                           | ;	IP
  3671 |          |                           | 
  3672 |          |                           | ;	pop DX
  3673 |          |                           | ;	pop CX
  3674 |          |                           | ;	pop BX
  3675 |          |                           | ;	pop AX
  3676 |          |                           | ;	reti		; This pops IP, CS, and the flags, and goes to the return address.
  3677 |          |                           | 
  3678 |          |                           | ; Generated by c86 (BYU-NASM) 5.1 (beta) from lab8app.i
  3679 |          |                           | 	CPU	8086
  3680 | 00001E23 | 90                        | 	ALIGN	2
  3681 | 00001E24 | E9750B                    | 	jmp	main	; Jump to program start
  3682 | 00001E27 | 90                        | 	ALIGN	2
  3683 |          |                           | getMovePieceQueueArrayIndex:
  3684 | 00001E28 | EB18                      | 	jmp	L_lab8app_1
  3685 |          |                           | L_lab8app_2:
  3686 | 00001E2A | 833E[F038]28              | 	cmp	word [movePieceArrayIndex], 40
  3687 | 00001E2F | 7506                      | 	jne	L_lab8app_3
  3688 | 00001E31 | C706[F038]0000            | 	mov	word [movePieceArrayIndex], 0
  3689 |          |                           | L_lab8app_3:
  3690 | 00001E37 | A1[F038]                  | 	mov	ax, word [movePieceArrayIndex]
  3691 | 00001E3A | FF06[F038]                | 	inc	word [movePieceArrayIndex]
  3692 |          |                           | L_lab8app_4:
  3693 | 00001E3E | 89EC                      | 	mov	sp, bp
  3694 | 00001E40 | 5D                        | 	pop	bp
  3695 | 00001E41 | C3                        | 	ret
  3696 |          |                           | L_lab8app_1:
  3697 | 00001E42 | 55                        | 	push	bp
  3698 | 00001E43 | 89E5                      | 	mov	bp, sp
  3699 | 00001E45 | EBE3                      | 	jmp	L_lab8app_2
  3700 | 00001E47 | 90                        | 	ALIGN	2
  3701 |          |                           | getLowerBucket:
  3702 | 00001E48 | EB59                      | 	jmp	L_lab8app_6
  3703 |          |                           | L_lab8app_7:
  3704 | 00001E4A | C746FE0000                | 	mov	word [bp-2], 0
  3705 | 00001E4F | C746FC0000                | 	mov	word [bp-4], 0
  3706 | 00001E54 | A1[4239]                  | 	mov	ax, word [screen0]
  3707 | 00001E57 | 8946FA                    | 	mov	word [bp-6], ax
  3708 | 00001E5A | A1[4839]                  | 	mov	ax, word [screen3]
  3709 | 00001E5D | 8946F8                    | 	mov	word [bp-8], ax
  3710 | 00001E60 | EB0F                      | 	jmp	L_lab8app_9
  3711 |          |                           | L_lab8app_8:
  3712 | 00001E62 | 8B46FE                    | 	mov	ax, word [bp-2]
  3713 | 00001E65 | 40                        | 	inc	ax
  3714 | 00001E66 | 8946FE                    | 	mov	word [bp-2], ax
  3715 | 00001E69 | 8B46FA                    | 	mov	ax, word [bp-6]
  3716 | 00001E6C | D1E0                      | 	shl	ax, 1
  3717 | 00001E6E | 8946FA                    | 	mov	word [bp-6], ax
  3718 |          |                           | L_lab8app_9:
  3719 | 00001E71 | 8B46FA                    | 	mov	ax, word [bp-6]
  3720 | 00001E74 | 85C0                      | 	test	ax, ax
  3721 | 00001E76 | 75EA                      | 	jne	L_lab8app_8
  3722 |          |                           | L_lab8app_10:
  3723 | 00001E78 | EB0F                      | 	jmp	L_lab8app_12
  3724 |          |                           | L_lab8app_11:
  3725 | 00001E7A | 8B46FC                    | 	mov	ax, word [bp-4]
  3726 | 00001E7D | 40                        | 	inc	ax
  3727 | 00001E7E | 8946FC                    | 	mov	word [bp-4], ax
  3728 | 00001E81 | 8B46F8                    | 	mov	ax, word [bp-8]
  3729 | 00001E84 | D1E0                      | 	shl	ax, 1
  3730 | 00001E86 | 8946F8                    | 	mov	word [bp-8], ax
  3731 |          |                           | L_lab8app_12:
  3732 | 00001E89 | 8B46F8                    | 	mov	ax, word [bp-8]
  3733 | 00001E8C | 85C0                      | 	test	ax, ax
  3734 | 00001E8E | 75EA                      | 	jne	L_lab8app_11
  3735 |          |                           | L_lab8app_13:
  3736 | 00001E90 | 8B46FE                    | 	mov	ax, word [bp-2]
  3737 | 00001E93 | 3B46FC                    | 	cmp	ax, word [bp-4]
  3738 | 00001E96 | 7C04                      | 	jl	L_lab8app_14
  3739 | 00001E98 | 31C0                      | 	xor	ax, ax
  3740 | 00001E9A | EB03                      | 	jmp	L_lab8app_15
  3741 |          |                           | L_lab8app_14:
  3742 | 00001E9C | B80100                    | 	mov	ax, 1
  3743 |          |                           | L_lab8app_15:
  3744 |          |                           | L_lab8app_16:
  3745 | 00001E9F | 89EC                      | 	mov	sp, bp
  3746 | 00001EA1 | 5D                        | 	pop	bp
  3747 | 00001EA2 | C3                        | 	ret
  3748 |          |                           | L_lab8app_6:
  3749 | 00001EA3 | 55                        | 	push	bp
  3750 | 00001EA4 | 89E5                      | 	mov	bp, sp
  3751 | 00001EA6 | 83EC08                    | 	sub	sp, 8
  3752 | 00001EA9 | EB9F                      | 	jmp	L_lab8app_7
  3753 | 00001EAB | 90                        | 	ALIGN	2
  3754 |          |                           | isBucketFlat:
  3755 | 00001EAC | EB4E                      | 	jmp	L_lab8app_18
  3756 |          |                           | L_lab8app_19:
  3757 | 00001EAE | 8B4604                    | 	mov	ax, word [bp+4]
  3758 | 00001EB1 | 85C0                      | 	test	ax, ax
  3759 | 00001EB3 | 740E                      | 	je	L_lab8app_20
  3760 | 00001EB5 | A1[4839]                  | 	mov	ax, word [screen3]
  3761 | 00001EB8 | 8946FE                    | 	mov	word [bp-2], ax
  3762 | 00001EBB | A1[4C39]                  | 	mov	ax, word [screen5]
  3763 | 00001EBE | 8946FC                    | 	mov	word [bp-4], ax
  3764 | 00001EC1 | EB0C                      | 	jmp	L_lab8app_21
  3765 |          |                           | L_lab8app_20:
  3766 | 00001EC3 | A1[4239]                  | 	mov	ax, word [screen0]
  3767 | 00001EC6 | 8946FE                    | 	mov	word [bp-2], ax
  3768 | 00001EC9 | A1[4639]                  | 	mov	ax, word [screen2]
  3769 | 00001ECC | 8946FC                    | 	mov	word [bp-4], ax
  3770 |          |                           | L_lab8app_21:
  3771 | 00001ECF | EB0A                      | 	jmp	L_lab8app_23
  3772 |          |                           | L_lab8app_22:
  3773 | 00001ED1 | 8B46FE                    | 	mov	ax, word [bp-2]
  3774 | 00001ED4 | D1E0                      | 	shl	ax, 1
  3775 | 00001ED6 | 8B46FC                    | 	mov	ax, word [bp-4]
  3776 | 00001ED9 | D1E0                      | 	shl	ax, 1
  3777 |          |                           | L_lab8app_23:
  3778 | 00001EDB | 8B46FE                    | 	mov	ax, word [bp-2]
  3779 | 00001EDE | 85C0                      | 	test	ax, ax
  3780 | 00001EE0 | 7407                      | 	je	L_lab8app_25
  3781 | 00001EE2 | 8B46FC                    | 	mov	ax, word [bp-4]
  3782 | 00001EE5 | 85C0                      | 	test	ax, ax
  3783 | 00001EE7 | 75E8                      | 	jne	L_lab8app_22
  3784 |          |                           | L_lab8app_25:
  3785 |          |                           | L_lab8app_24:
  3786 | 00001EE9 | 8B46FC                    | 	mov	ax, word [bp-4]
  3787 | 00001EEC | 3B46FE                    | 	cmp	ax, word [bp-2]
  3788 | 00001EEF | 7404                      | 	je	L_lab8app_26
  3789 | 00001EF1 | 31C0                      | 	xor	ax, ax
  3790 | 00001EF3 | EB03                      | 	jmp	L_lab8app_27
  3791 |          |                           | L_lab8app_26:
  3792 | 00001EF5 | B80100                    | 	mov	ax, 1
  3793 |          |                           | L_lab8app_27:
  3794 |          |                           | L_lab8app_28:
  3795 | 00001EF8 | 89EC                      | 	mov	sp, bp
  3796 | 00001EFA | 5D                        | 	pop	bp
  3797 | 00001EFB | C3                        | 	ret
  3798 |          |                           | L_lab8app_18:
  3799 | 00001EFC | 55                        | 	push	bp
  3800 | 00001EFD | 89E5                      | 	mov	bp, sp
  3801 | 00001EFF | 83EC04                    | 	sub	sp, 4
  3802 | 00001F02 | EBAA                      | 	jmp	L_lab8app_19
  3803 |          |                           | L_lab8app_30:
  3804 | 00001F04 | 596F75207265616C6C-       | 	DB	"You really want a column not 0-5???",0xA,0
  3805 | 00001F0D | 792077616E74206120-       | ...
  3806 | 00001F16 | 636F6C756D6E206E6F-       | ...
  3807 | 00001F1F | 7420302D353F3F3F0A-       | ...
  3808 | 00001F28 | 00                        | ...
  3809 | 00001F29 | 90                        | 	ALIGN	2
  3810 |          |                           | getLowestSpace:
  3811 | 00001F2A | EB74                      | 	jmp	L_lab8app_31
  3812 |          |                           | L_lab8app_32:
  3813 | 00001F2C | C746FE0000                | 	mov	word [bp-2], 0
  3814 | 00001F31 | 8B4604                    | 	mov	ax, word [bp+4]
  3815 | 00001F34 | 83E800                    | 	sub	ax, 0
  3816 | 00001F37 | 7411                      | 	je	L_lab8app_35
  3817 | 00001F39 | 48                        | 	dec	ax
  3818 | 00001F3A | 7416                      | 	je	L_lab8app_36
  3819 | 00001F3C | 48                        | 	dec	ax
  3820 | 00001F3D | 741B                      | 	je	L_lab8app_37
  3821 | 00001F3F | 48                        | 	dec	ax
  3822 | 00001F40 | 7420                      | 	je	L_lab8app_38
  3823 | 00001F42 | 48                        | 	dec	ax
  3824 | 00001F43 | 7425                      | 	je	L_lab8app_39
  3825 | 00001F45 | 48                        | 	dec	ax
  3826 | 00001F46 | 742A                      | 	je	L_lab8app_40
  3827 | 00001F48 | EB30                      | 	jmp	L_lab8app_34
  3828 |          |                           | L_lab8app_35:
  3829 | 00001F4A | A1[4239]                  | 	mov	ax, word [screen0]
  3830 | 00001F4D | 8946FC                    | 	mov	word [bp-4], ax
  3831 | 00001F50 | EB32                      | 	jmp	L_lab8app_33
  3832 |          |                           | L_lab8app_36:
  3833 | 00001F52 | A1[4439]                  | 	mov	ax, word [screen1]
  3834 | 00001F55 | 8946FC                    | 	mov	word [bp-4], ax
  3835 | 00001F58 | EB2A                      | 	jmp	L_lab8app_33
  3836 |          |                           | L_lab8app_37:
  3837 | 00001F5A | A1[4639]                  | 	mov	ax, word [screen2]
  3838 | 00001F5D | 8946FC                    | 	mov	word [bp-4], ax
  3839 | 00001F60 | EB22                      | 	jmp	L_lab8app_33
  3840 |          |                           | L_lab8app_38:
  3841 | 00001F62 | A1[4839]                  | 	mov	ax, word [screen3]
  3842 | 00001F65 | 8946FC                    | 	mov	word [bp-4], ax
  3843 | 00001F68 | EB1A                      | 	jmp	L_lab8app_33
  3844 |          |                           | L_lab8app_39:
  3845 | 00001F6A | A1[4A39]                  | 	mov	ax, word [screen4]
  3846 | 00001F6D | 8946FC                    | 	mov	word [bp-4], ax
  3847 | 00001F70 | EB12                      | 	jmp	L_lab8app_33
  3848 |          |                           | L_lab8app_40:
  3849 | 00001F72 | A1[4C39]                  | 	mov	ax, word [screen5]
  3850 | 00001F75 | 8946FC                    | 	mov	word [bp-4], ax
  3851 | 00001F78 | EB0A                      | 	jmp	L_lab8app_33
  3852 |          |                           | L_lab8app_34:
  3853 | 00001F7A | B8[041F]                  | 	mov	ax, L_lab8app_30
  3854 | 00001F7D | 50                        | 	push	ax
  3855 | 00001F7E | E8A7E4                    | 	call	printString
  3856 | 00001F81 | 83C402                    | 	add	sp, 2
  3857 |          |                           | L_lab8app_33:
  3858 | 00001F84 | EB0F                      | 	jmp	L_lab8app_42
  3859 |          |                           | L_lab8app_41:
  3860 | 00001F86 | 8B46FE                    | 	mov	ax, word [bp-2]
  3861 | 00001F89 | 40                        | 	inc	ax
  3862 | 00001F8A | 8946FE                    | 	mov	word [bp-2], ax
  3863 | 00001F8D | 8B46FC                    | 	mov	ax, word [bp-4]
  3864 | 00001F90 | D1E0                      | 	shl	ax, 1
  3865 | 00001F92 | 8946FC                    | 	mov	word [bp-4], ax
  3866 |          |                           | L_lab8app_42:
  3867 | 00001F95 | 8B46FC                    | 	mov	ax, word [bp-4]
  3868 | 00001F98 | 85C0                      | 	test	ax, ax
  3869 | 00001F9A | 75EA                      | 	jne	L_lab8app_41
  3870 |          |                           | L_lab8app_43:
  3871 | 00001F9C | 89EC                      | 	mov	sp, bp
  3872 | 00001F9E | 5D                        | 	pop	bp
  3873 | 00001F9F | C3                        | 	ret
  3874 |          |                           | L_lab8app_31:
  3875 | 00001FA0 | 55                        | 	push	bp
  3876 | 00001FA1 | 89E5                      | 	mov	bp, sp
  3877 | 00001FA3 | 83EC04                    | 	sub	sp, 4
  3878 | 00001FA6 | EB84                      | 	jmp	L_lab8app_32
  3879 |          |                           | L_lab8app_45:
  3880 | 00001FA8 | 434F4445204E4F5420-       | 	DB	"CODE NOT WRITTEN :'(",0
  3881 | 00001FB1 | 5752495454454E203A-       | ...
  3882 | 00001FBA | 272800                    | ...
  3883 | 00001FBD | 90                        | 	ALIGN	2
  3884 |          |                           | tryToClearLine:
  3885 | 00001FBE | E98C00                    | 	jmp	L_lab8app_46
  3886 |          |                           | L_lab8app_47:
  3887 | 00001FC1 | B80100                    | 	mov	ax, 1
  3888 | 00001FC4 | 8B4E04                    | 	mov	cx, word [bp+4]
  3889 | 00001FC7 | D3E0                      | 	shl	ax, cl
  3890 | 00001FC9 | 2306[4239]                | 	and	ax, word [screen0]
  3891 | 00001FCD | 747A                      | 	je	L_lab8app_48
  3892 | 00001FCF | B80100                    | 	mov	ax, 1
  3893 | 00001FD2 | D3E0                      | 	shl	ax, cl
  3894 | 00001FD4 | 2306[4439]                | 	and	ax, word [screen1]
  3895 | 00001FD8 | 746F                      | 	je	L_lab8app_48
  3896 | 00001FDA | B80100                    | 	mov	ax, 1
  3897 | 00001FDD | D3E0                      | 	shl	ax, cl
  3898 | 00001FDF | 2306[4639]                | 	and	ax, word [screen2]
  3899 | 00001FE3 | 7464                      | 	je	L_lab8app_48
  3900 | 00001FE5 | B80100                    | 	mov	ax, 1
  3901 | 00001FE8 | D3E0                      | 	shl	ax, cl
  3902 | 00001FEA | 2306[4839]                | 	and	ax, word [screen3]
  3903 | 00001FEE | 7459                      | 	je	L_lab8app_48
  3904 | 00001FF0 | B80100                    | 	mov	ax, 1
  3905 | 00001FF3 | D3E0                      | 	shl	ax, cl
  3906 | 00001FF5 | 2306[4A39]                | 	and	ax, word [screen4]
  3907 | 00001FF9 | 744E                      | 	je	L_lab8app_48
  3908 | 00001FFB | B80100                    | 	mov	ax, 1
  3909 | 00001FFE | D3E0                      | 	shl	ax, cl
  3910 | 00002000 | 2306[4C39]                | 	and	ax, word [screen5]
  3911 | 00002004 | 7443                      | 	je	L_lab8app_48
  3912 | 00002006 | 8B4604                    | 	mov	ax, word [bp+4]
  3913 | 00002009 | 85C0                      | 	test	ax, ax
  3914 | 0000200B | 7532                      | 	jne	L_lab8app_49
  3915 | 0000200D | A1[4239]                  | 	mov	ax, word [screen0]
  3916 | 00002010 | D1E0                      | 	shl	ax, 1
  3917 | 00002012 | A3[4239]                  | 	mov	word [screen0], ax
  3918 | 00002015 | A1[4439]                  | 	mov	ax, word [screen1]
  3919 | 00002018 | D1E0                      | 	shl	ax, 1
  3920 | 0000201A | A3[4439]                  | 	mov	word [screen1], ax
  3921 | 0000201D | A1[4639]                  | 	mov	ax, word [screen2]
  3922 | 00002020 | D1E0                      | 	shl	ax, 1
  3923 | 00002022 | A3[4639]                  | 	mov	word [screen2], ax
  3924 | 00002025 | A1[4839]                  | 	mov	ax, word [screen3]
  3925 | 00002028 | D1E0                      | 	shl	ax, 1
  3926 | 0000202A | A3[4839]                  | 	mov	word [screen3], ax
  3927 | 0000202D | A1[4A39]                  | 	mov	ax, word [screen4]
  3928 | 00002030 | D1E0                      | 	shl	ax, 1
  3929 | 00002032 | A3[4A39]                  | 	mov	word [screen4], ax
  3930 | 00002035 | A1[4C39]                  | 	mov	ax, word [screen5]
  3931 | 00002038 | D1E0                      | 	shl	ax, 1
  3932 | 0000203A | A3[4C39]                  | 	mov	word [screen5], ax
  3933 | 0000203D | EB0A                      | 	jmp	L_lab8app_50
  3934 |          |                           | L_lab8app_49:
  3935 | 0000203F | B8[A81F]                  | 	mov	ax, L_lab8app_45
  3936 | 00002042 | 50                        | 	push	ax
  3937 | 00002043 | E8E2E3                    | 	call	printString
  3938 | 00002046 | 83C402                    | 	add	sp, 2
  3939 |          |                           | L_lab8app_50:
  3940 |          |                           | L_lab8app_48:
  3941 | 00002049 | 89EC                      | 	mov	sp, bp
  3942 | 0000204B | 5D                        | 	pop	bp
  3943 | 0000204C | C3                        | 	ret
  3944 |          |                           | L_lab8app_46:
  3945 | 0000204D | 55                        | 	push	bp
  3946 | 0000204E | 89E5                      | 	mov	bp, sp
  3947 | 00002050 | E96EFF                    | 	jmp	L_lab8app_47
  3948 |          |                           | L_lab8app_52:
  3949 | 00002053 | 63757272656E742042-       | 	DB	"current Board:",0xA,0
  3950 | 0000205C | 6F6172643A0A00            | ...
  3951 | 00002063 | 90                        | 	ALIGN	2
  3952 |          |                           | printBoard:
  3953 | 00002064 | E9D400                    | 	jmp	L_lab8app_53
  3954 |          |                           | L_lab8app_54:
  3955 | 00002067 | B8[5320]                  | 	mov	ax, L_lab8app_52
  3956 | 0000206A | 50                        | 	push	ax
  3957 | 0000206B | E8BAE3                    | 	call	printString
  3958 | 0000206E | 83C402                    | 	add	sp, 2
  3959 | 00002071 | C746FE0000                | 	mov	word [bp-2], 0
  3960 | 00002076 | E9B500                    | 	jmp	L_lab8app_56
  3961 |          |                           | L_lab8app_55:
  3962 | 00002079 | B80100                    | 	mov	ax, 1
  3963 | 0000207C | 8B4EFE                    | 	mov	cx, word [bp-2]
  3964 | 0000207F | D3E0                      | 	shl	ax, cl
  3965 | 00002081 | 2306[4239]                | 	and	ax, word [screen0]
  3966 | 00002085 | 7405                      | 	je	L_lab8app_59
  3967 | 00002087 | B80100                    | 	mov	ax, 1
  3968 | 0000208A | EB02                      | 	jmp	L_lab8app_60
  3969 |          |                           | L_lab8app_59:
  3970 | 0000208C | 31C0                      | 	xor	ax, ax
  3971 |          |                           | L_lab8app_60:
  3972 | 0000208E | 50                        | 	push	ax
  3973 | 0000208F | E8BAE3                    | 	call	printInt
  3974 | 00002092 | 83C402                    | 	add	sp, 2
  3975 | 00002095 | B80100                    | 	mov	ax, 1
  3976 | 00002098 | 8B4EFE                    | 	mov	cx, word [bp-2]
  3977 | 0000209B | D3E0                      | 	shl	ax, cl
  3978 | 0000209D | 2306[4439]                | 	and	ax, word [screen1]
  3979 | 000020A1 | 7405                      | 	je	L_lab8app_61
  3980 | 000020A3 | B80100                    | 	mov	ax, 1
  3981 | 000020A6 | EB02                      | 	jmp	L_lab8app_62
  3982 |          |                           | L_lab8app_61:
  3983 | 000020A8 | 31C0                      | 	xor	ax, ax
  3984 |          |                           | L_lab8app_62:
  3985 | 000020AA | 50                        | 	push	ax
  3986 | 000020AB | E89EE3                    | 	call	printInt
  3987 | 000020AE | 83C402                    | 	add	sp, 2
  3988 | 000020B1 | B80100                    | 	mov	ax, 1
  3989 | 000020B4 | 8B4EFE                    | 	mov	cx, word [bp-2]
  3990 | 000020B7 | D3E0                      | 	shl	ax, cl
  3991 | 000020B9 | 2306[4639]                | 	and	ax, word [screen2]
  3992 | 000020BD | 7405                      | 	je	L_lab8app_63
  3993 | 000020BF | B80100                    | 	mov	ax, 1
  3994 | 000020C2 | EB02                      | 	jmp	L_lab8app_64
  3995 |          |                           | L_lab8app_63:
  3996 | 000020C4 | 31C0                      | 	xor	ax, ax
  3997 |          |                           | L_lab8app_64:
  3998 | 000020C6 | 50                        | 	push	ax
  3999 | 000020C7 | E882E3                    | 	call	printInt
  4000 | 000020CA | 83C402                    | 	add	sp, 2
  4001 | 000020CD | B80100                    | 	mov	ax, 1
  4002 | 000020D0 | 8B4EFE                    | 	mov	cx, word [bp-2]
  4003 | 000020D3 | D3E0                      | 	shl	ax, cl
  4004 | 000020D5 | 2306[4839]                | 	and	ax, word [screen3]
  4005 | 000020D9 | 7405                      | 	je	L_lab8app_65
  4006 | 000020DB | B80100                    | 	mov	ax, 1
  4007 | 000020DE | EB02                      | 	jmp	L_lab8app_66
  4008 |          |                           | L_lab8app_65:
  4009 | 000020E0 | 31C0                      | 	xor	ax, ax
  4010 |          |                           | L_lab8app_66:
  4011 | 000020E2 | 50                        | 	push	ax
  4012 | 000020E3 | E866E3                    | 	call	printInt
  4013 | 000020E6 | 83C402                    | 	add	sp, 2
  4014 | 000020E9 | B80100                    | 	mov	ax, 1
  4015 | 000020EC | 8B4EFE                    | 	mov	cx, word [bp-2]
  4016 | 000020EF | D3E0                      | 	shl	ax, cl
  4017 | 000020F1 | 2306[4A39]                | 	and	ax, word [screen4]
  4018 | 000020F5 | 7405                      | 	je	L_lab8app_67
  4019 | 000020F7 | B80100                    | 	mov	ax, 1
  4020 | 000020FA | EB02                      | 	jmp	L_lab8app_68
  4021 |          |                           | L_lab8app_67:
  4022 | 000020FC | 31C0                      | 	xor	ax, ax
  4023 |          |                           | L_lab8app_68:
  4024 | 000020FE | 50                        | 	push	ax
  4025 | 000020FF | E84AE3                    | 	call	printInt
  4026 | 00002102 | 83C402                    | 	add	sp, 2
  4027 | 00002105 | B80100                    | 	mov	ax, 1
  4028 | 00002108 | 8B4EFE                    | 	mov	cx, word [bp-2]
  4029 | 0000210B | D3E0                      | 	shl	ax, cl
  4030 | 0000210D | 2306[4C39]                | 	and	ax, word [screen5]
  4031 | 00002111 | 7405                      | 	je	L_lab8app_69
  4032 | 00002113 | B80100                    | 	mov	ax, 1
  4033 | 00002116 | EB02                      | 	jmp	L_lab8app_70
  4034 |          |                           | L_lab8app_69:
  4035 | 00002118 | 31C0                      | 	xor	ax, ax
  4036 |          |                           | L_lab8app_70:
  4037 | 0000211A | 50                        | 	push	ax
  4038 | 0000211B | E82EE3                    | 	call	printInt
  4039 | 0000211E | 83C402                    | 	add	sp, 2
  4040 | 00002121 | B8[271F]                  | 	mov	ax, (L_lab8app_30+35)
  4041 | 00002124 | 50                        | 	push	ax
  4042 | 00002125 | E800E3                    | 	call	printString
  4043 | 00002128 | 83C402                    | 	add	sp, 2
  4044 |          |                           | L_lab8app_58:
  4045 | 0000212B | FF46FE                    | 	inc	word [bp-2]
  4046 |          |                           | L_lab8app_56:
  4047 | 0000212E | 837EFE10                  | 	cmp	word [bp-2], 16
  4048 | 00002132 | 7D03E942FF                | 	jl	L_lab8app_55
  4049 |          |                           | L_lab8app_57:
  4050 | 00002137 | 89EC                      | 	mov	sp, bp
  4051 | 00002139 | 5D                        | 	pop	bp
  4052 | 0000213A | C3                        | 	ret
  4053 |          |                           | L_lab8app_53:
  4054 | 0000213B | 55                        | 	push	bp
  4055 | 0000213C | 89E5                      | 	mov	bp, sp
  4056 | 0000213E | 51                        | 	push	cx
  4057 | 0000213F | E925FF                    | 	jmp	L_lab8app_54
  4058 |          |                           | 	ALIGN	2
  4059 |          |                           | getHeightDifference:
  4060 | 00002142 | EB3D                      | 	jmp	L_lab8app_72
  4061 |          |                           | L_lab8app_73:
  4062 | 00002144 | A1[CC00]                  | 	mov	ax, word [ScreenBitMap0]
  4063 | 00002147 | 8946FE                    | 	mov	word [bp-2], ax
  4064 | 0000214A | A1[D200]                  | 	mov	ax, word [ScreenBitMap3]
  4065 | 0000214D | 8946FC                    | 	mov	word [bp-4], ax
  4066 | 00002150 | C746FA0000                | 	mov	word [bp-6], 0
  4067 | 00002155 | C746F80000                | 	mov	word [bp-8], 0
  4068 | 0000215A | EB10                      | 	jmp	L_lab8app_75
  4069 |          |                           | L_lab8app_74:
  4070 | 0000215C | 8B46FE                    | 	mov	ax, word [bp-2]
  4071 | 0000215F | D1F8                      | 	sar	ax, 1
  4072 | 00002161 | 8946FE                    | 	mov	word [bp-2], ax
  4073 | 00002164 | 8B46FC                    | 	mov	ax, word [bp-4]
  4074 | 00002167 | D1F8                      | 	sar	ax, 1
  4075 | 00002169 | 8946FC                    | 	mov	word [bp-4], ax
  4076 |          |                           | L_lab8app_75:
  4077 | 0000216C | 8B46FE                    | 	mov	ax, word [bp-2]
  4078 | 0000216F | 85C0                      | 	test	ax, ax
  4079 | 00002171 | 75E9                      | 	jne	L_lab8app_74
  4080 | 00002173 | 8B46FC                    | 	mov	ax, word [bp-4]
  4081 | 00002176 | 85C0                      | 	test	ax, ax
  4082 | 00002178 | 75E2                      | 	jne	L_lab8app_74
  4083 |          |                           | L_lab8app_76:
  4084 | 0000217A | 8B46FC                    | 	mov	ax, word [bp-4]
  4085 |          |                           | L_lab8app_77:
  4086 | 0000217D | 89EC                      | 	mov	sp, bp
  4087 | 0000217F | 5D                        | 	pop	bp
  4088 | 00002180 | C3                        | 	ret
  4089 |          |                           | L_lab8app_72:
  4090 | 00002181 | 55                        | 	push	bp
  4091 | 00002182 | 89E5                      | 	mov	bp, sp
  4092 | 00002184 | 83EC08                    | 	sub	sp, 8
  4093 | 00002187 | EBBB                      | 	jmp	L_lab8app_73
  4094 | 00002189 | 90                        | 	ALIGN	2
  4095 |          |                           | L_lab8app_79:
  4096 | 0000218A | 0000                      | 	DW	0
  4097 |          |                           | L_lab8app_80:
  4098 | 0000218C | 6E6577506965636554-       | 	DB	"newPieceTask moving!",0xA,0
  4099 | 00002195 | 61736B206D6F76696E-       | ...
  4100 | 0000219E | 67210A00                  | ...
  4101 |          |                           | 	ALIGN	2
  4102 |          |                           | newPieceTask:
  4103 | 000021A2 | E9E405                    | 	jmp	L_lab8app_81
  4104 |          |                           | L_lab8app_82:
  4105 | 000021A5 | B8[8C21]                  | 	mov	ax, L_lab8app_80
  4106 | 000021A8 | 50                        | 	push	ax
  4107 | 000021A9 | E87CE2                    | 	call	printString
  4108 | 000021AC | 83C402                    | 	add	sp, 2
  4109 | 000021AF | E9D005                    | 	jmp	L_lab8app_84
  4110 |          |                           | L_lab8app_83:
  4111 | 000021B2 | FF36[602A]                | 	push	word [newPieceQueuePTR]
  4112 | 000021B6 | E845F5                    | 	call	YKQPend
  4113 | 000021B9 | 83C402                    | 	add	sp, 2
  4114 | 000021BC | 8946FE                    | 	mov	word [bp-2], ax
  4115 | 000021BF | 8B76FE                    | 	mov	si, word [bp-2]
  4116 | 000021C2 | 83C602                    | 	add	si, 2
  4117 | 000021C5 | 833C01                    | 	cmp	word [si], 1
  4118 | 000021C8 | 7403E93C01                | 	jne	L_lab8app_86
  4119 | 000021CD | 8B76FE                    | 	mov	si, word [bp-2]
  4120 | 000021D0 | 83C606                    | 	add	si, 6
  4121 | 000021D3 | 8B04                      | 	mov	ax, word [si]
  4122 | 000021D5 | 8946FA                    | 	mov	word [bp-6], ax
  4123 | 000021D8 | 837EFA05                  | 	cmp	word [bp-6], 5
  4124 | 000021DC | 755B                      | 	jne	L_lab8app_87
  4125 | 000021DE | E847FC                    | 	call	getMovePieceQueueArrayIndex
  4126 | 000021E1 | 8946F8                    | 	mov	word [bp-8], ax
  4127 | 000021E4 | 8B76FE                    | 	mov	si, word [bp-2]
  4128 | 000021E7 | 8B46F8                    | 	mov	ax, word [bp-8]
  4129 | 000021EA | B90600                    | 	mov	cx, 6
  4130 | 000021ED | F7E9                      | 	imul	cx
  4131 | 000021EF | 89C7                      | 	mov	di, ax
  4132 | 000021F1 | 81C7[0038]                | 	add	di, movePieceArray
  4133 | 000021F5 | 8B04                      | 	mov	ax, word [si]
  4134 | 000021F7 | 8905                      | 	mov	word [di], ax
  4135 | 000021F9 | 8B46F8                    | 	mov	ax, word [bp-8]
  4136 | 000021FC | B90600                    | 	mov	cx, 6
  4137 | 000021FF | F7E9                      | 	imul	cx
  4138 | 00002201 | 05[0038]                  | 	add	ax, movePieceArray
  4139 | 00002204 | 89C6                      | 	mov	si, ax
  4140 | 00002206 | 83C604                    | 	add	si, 4
  4141 | 00002209 | C7040000                  | 	mov	word [si], 0
  4142 | 0000220D | 8B46F8                    | 	mov	ax, word [bp-8]
  4143 | 00002210 | B90600                    | 	mov	cx, 6
  4144 | 00002213 | F7E9                      | 	imul	cx
  4145 | 00002215 | 05[0038]                  | 	add	ax, movePieceArray
  4146 | 00002218 | 89C6                      | 	mov	si, ax
  4147 | 0000221A | 83C602                    | 	add	si, 2
  4148 | 0000221D | C704[8608]                | 	mov	word [si], SlidePiece
  4149 | 00002221 | 8B46F8                    | 	mov	ax, word [bp-8]
  4150 | 00002224 | B90600                    | 	mov	cx, 6
  4151 | 00002227 | F7E9                      | 	imul	cx
  4152 | 00002229 | 05[0038]                  | 	add	ax, movePieceArray
  4153 | 0000222C | 50                        | 	push	ax
  4154 | 0000222D | FF36[5E2A]                | 	push	word [movePieceQueuePTR]
  4155 | 00002231 | E8C6F5                    | 	call	YKQPost
  4156 | 00002234 | 83C404                    | 	add	sp, 4
  4157 | 00002237 | EB68                      | 	jmp	L_lab8app_88
  4158 |          |                           | L_lab8app_87:
  4159 | 00002239 | EB60                      | 	jmp	L_lab8app_90
  4160 |          |                           | L_lab8app_89:
  4161 | 0000223B | E8EAFB                    | 	call	getMovePieceQueueArrayIndex
  4162 | 0000223E | 8946F8                    | 	mov	word [bp-8], ax
  4163 | 00002241 | 8B76FE                    | 	mov	si, word [bp-2]
  4164 | 00002244 | 8B46F8                    | 	mov	ax, word [bp-8]
  4165 | 00002247 | B90600                    | 	mov	cx, 6
  4166 | 0000224A | F7E9                      | 	imul	cx
  4167 | 0000224C | 89C7                      | 	mov	di, ax
  4168 | 0000224E | 81C7[0038]                | 	add	di, movePieceArray
  4169 | 00002252 | 8B04                      | 	mov	ax, word [si]
  4170 | 00002254 | 8905                      | 	mov	word [di], ax
  4171 | 00002256 | 8B46F8                    | 	mov	ax, word [bp-8]
  4172 | 00002259 | B90600                    | 	mov	cx, 6
  4173 | 0000225C | F7E9                      | 	imul	cx
  4174 | 0000225E | 05[0038]                  | 	add	ax, movePieceArray
  4175 | 00002261 | 89C6                      | 	mov	si, ax
  4176 | 00002263 | 83C604                    | 	add	si, 4
  4177 | 00002266 | C7040100                  | 	mov	word [si], 1
  4178 | 0000226A | 8B46F8                    | 	mov	ax, word [bp-8]
  4179 | 0000226D | B90600                    | 	mov	cx, 6
  4180 | 00002270 | F7E9                      | 	imul	cx
  4181 | 00002272 | 05[0038]                  | 	add	ax, movePieceArray
  4182 | 00002275 | 89C6                      | 	mov	si, ax
  4183 | 00002277 | 83C602                    | 	add	si, 2
  4184 | 0000227A | C704[8608]                | 	mov	word [si], SlidePiece
  4185 | 0000227E | 8B46FA                    | 	mov	ax, word [bp-6]
  4186 | 00002281 | 40                        | 	inc	ax
  4187 | 00002282 | 8946FA                    | 	mov	word [bp-6], ax
  4188 | 00002285 | 8B46F8                    | 	mov	ax, word [bp-8]
  4189 | 00002288 | B90600                    | 	mov	cx, 6
  4190 | 0000228B | F7E9                      | 	imul	cx
  4191 | 0000228D | 05[0038]                  | 	add	ax, movePieceArray
  4192 | 00002290 | 50                        | 	push	ax
  4193 | 00002291 | FF36[5E2A]                | 	push	word [movePieceQueuePTR]
  4194 | 00002295 | E862F5                    | 	call	YKQPost
  4195 | 00002298 | 83C404                    | 	add	sp, 4
  4196 |          |                           | L_lab8app_90:
  4197 | 0000229B | 837EFA04                  | 	cmp	word [bp-6], 4
  4198 | 0000229F | 7C9A                      | 	jl	L_lab8app_89
  4199 |          |                           | L_lab8app_91:
  4200 |          |                           | L_lab8app_88:
  4201 | 000022A1 | 8B76FE                    | 	mov	si, word [bp-2]
  4202 | 000022A4 | 83C604                    | 	add	si, 4
  4203 | 000022A7 | 8B04                      | 	mov	ax, word [si]
  4204 | 000022A9 | 85C0                      | 	test	ax, ax
  4205 | 000022AB | 7459                      | 	je	L_lab8app_92
  4206 | 000022AD | E878FB                    | 	call	getMovePieceQueueArrayIndex
  4207 | 000022B0 | 8946F8                    | 	mov	word [bp-8], ax
  4208 | 000022B3 | 8B76FE                    | 	mov	si, word [bp-2]
  4209 | 000022B6 | 8B46F8                    | 	mov	ax, word [bp-8]
  4210 | 000022B9 | B90600                    | 	mov	cx, 6
  4211 | 000022BC | F7E9                      | 	imul	cx
  4212 | 000022BE | 89C7                      | 	mov	di, ax
  4213 | 000022C0 | 81C7[0038]                | 	add	di, movePieceArray
  4214 | 000022C4 | 8B04                      | 	mov	ax, word [si]
  4215 | 000022C6 | 8905                      | 	mov	word [di], ax
  4216 | 000022C8 | 8B46F8                    | 	mov	ax, word [bp-8]
  4217 | 000022CB | B90600                    | 	mov	cx, 6
  4218 | 000022CE | F7E9                      | 	imul	cx
  4219 | 000022D0 | 05[0038]                  | 	add	ax, movePieceArray
  4220 | 000022D3 | 89C6                      | 	mov	si, ax
  4221 | 000022D5 | 83C604                    | 	add	si, 4
  4222 | 000022D8 | C7040100                  | 	mov	word [si], 1
  4223 | 000022DC | 8B46F8                    | 	mov	ax, word [bp-8]
  4224 | 000022DF | B90600                    | 	mov	cx, 6
  4225 | 000022E2 | F7E9                      | 	imul	cx
  4226 | 000022E4 | 05[0038]                  | 	add	ax, movePieceArray
  4227 | 000022E7 | 89C6                      | 	mov	si, ax
  4228 | 000022E9 | 83C602                    | 	add	si, 2
  4229 | 000022EC | C704[9908]                | 	mov	word [si], RotatePiece
  4230 | 000022F0 | 8B46F8                    | 	mov	ax, word [bp-8]
  4231 | 000022F3 | B90600                    | 	mov	cx, 6
  4232 | 000022F6 | F7E9                      | 	imul	cx
  4233 | 000022F8 | 05[0038]                  | 	add	ax, movePieceArray
  4234 | 000022FB | 50                        | 	push	ax
  4235 | 000022FC | FF36[5E2A]                | 	push	word [movePieceQueuePTR]
  4236 | 00002300 | E8F7F4                    | 	call	YKQPost
  4237 | 00002303 | 83C404                    | 	add	sp, 4
  4238 |          |                           | L_lab8app_92:
  4239 | 00002306 | E97904                    | 	jmp	L_lab8app_93
  4240 |          |                           | L_lab8app_86:
  4241 | 00002309 | 8B76FE                    | 	mov	si, word [bp-2]
  4242 | 0000230C | 83C606                    | 	add	si, 6
  4243 | 0000230F | 8B04                      | 	mov	ax, word [si]
  4244 | 00002311 | 8946FA                    | 	mov	word [bp-6], ax
  4245 | 00002314 | 837EFA05                  | 	cmp	word [bp-6], 5
  4246 | 00002318 | 7562                      | 	jne	L_lab8app_94
  4247 | 0000231A | E80BFB                    | 	call	getMovePieceQueueArrayIndex
  4248 | 0000231D | 8946F8                    | 	mov	word [bp-8], ax
  4249 | 00002320 | 8B76FE                    | 	mov	si, word [bp-2]
  4250 | 00002323 | 8B46F8                    | 	mov	ax, word [bp-8]
  4251 | 00002326 | B90600                    | 	mov	cx, 6
  4252 | 00002329 | F7E9                      | 	imul	cx
  4253 | 0000232B | 89C7                      | 	mov	di, ax
  4254 | 0000232D | 81C7[0038]                | 	add	di, movePieceArray
  4255 | 00002331 | 8B04                      | 	mov	ax, word [si]
  4256 | 00002333 | 8905                      | 	mov	word [di], ax
  4257 | 00002335 | 8B46F8                    | 	mov	ax, word [bp-8]
  4258 | 00002338 | B90600                    | 	mov	cx, 6
  4259 | 0000233B | F7E9                      | 	imul	cx
  4260 | 0000233D | 05[0038]                  | 	add	ax, movePieceArray
  4261 | 00002340 | 89C6                      | 	mov	si, ax
  4262 | 00002342 | 83C604                    | 	add	si, 4
  4263 | 00002345 | C7040000                  | 	mov	word [si], 0
  4264 | 00002349 | 8B46F8                    | 	mov	ax, word [bp-8]
  4265 | 0000234C | B90600                    | 	mov	cx, 6
  4266 | 0000234F | F7E9                      | 	imul	cx
  4267 | 00002351 | 05[0038]                  | 	add	ax, movePieceArray
  4268 | 00002354 | 89C6                      | 	mov	si, ax
  4269 | 00002356 | 83C602                    | 	add	si, 2
  4270 | 00002359 | C704[8608]                | 	mov	word [si], SlidePiece
  4271 | 0000235D | 8B46FA                    | 	mov	ax, word [bp-6]
  4272 | 00002360 | 48                        | 	dec	ax
  4273 | 00002361 | 8946FA                    | 	mov	word [bp-6], ax
  4274 | 00002364 | 8B46F8                    | 	mov	ax, word [bp-8]
  4275 | 00002367 | B90600                    | 	mov	cx, 6
  4276 | 0000236A | F7E9                      | 	imul	cx
  4277 | 0000236C | 05[0038]                  | 	add	ax, movePieceArray
  4278 | 0000236F | 50                        | 	push	ax
  4279 | 00002370 | FF36[5E2A]                | 	push	word [movePieceQueuePTR]
  4280 | 00002374 | E883F4                    | 	call	YKQPost
  4281 | 00002377 | 83C404                    | 	add	sp, 4
  4282 | 0000237A | EB67                      | 	jmp	L_lab8app_95
  4283 |          |                           | L_lab8app_94:
  4284 | 0000237C | 8B46FA                    | 	mov	ax, word [bp-6]
  4285 | 0000237F | 85C0                      | 	test	ax, ax
  4286 | 00002381 | 7560                      | 	jne	L_lab8app_96
  4287 | 00002383 | E8A2FA                    | 	call	getMovePieceQueueArrayIndex
  4288 | 00002386 | 8946F8                    | 	mov	word [bp-8], ax
  4289 | 00002389 | 8B76FE                    | 	mov	si, word [bp-2]
  4290 | 0000238C | 8B46F8                    | 	mov	ax, word [bp-8]
  4291 | 0000238F | B90600                    | 	mov	cx, 6
  4292 | 00002392 | F7E9                      | 	imul	cx
  4293 | 00002394 | 89C7                      | 	mov	di, ax
  4294 | 00002396 | 81C7[0038]                | 	add	di, movePieceArray
  4295 | 0000239A | 8B04                      | 	mov	ax, word [si]
  4296 | 0000239C | 8905                      | 	mov	word [di], ax
  4297 | 0000239E | 8B46F8                    | 	mov	ax, word [bp-8]
  4298 | 000023A1 | B90600                    | 	mov	cx, 6
  4299 | 000023A4 | F7E9                      | 	imul	cx
  4300 | 000023A6 | 05[0038]                  | 	add	ax, movePieceArray
  4301 | 000023A9 | 89C6                      | 	mov	si, ax
  4302 | 000023AB | 83C604                    | 	add	si, 4
  4303 | 000023AE | C7040100                  | 	mov	word [si], 1
  4304 | 000023B2 | 8B46F8                    | 	mov	ax, word [bp-8]
  4305 | 000023B5 | B90600                    | 	mov	cx, 6
  4306 | 000023B8 | F7E9                      | 	imul	cx
  4307 | 000023BA | 05[0038]                  | 	add	ax, movePieceArray
  4308 | 000023BD | 89C6                      | 	mov	si, ax
  4309 | 000023BF | 83C602                    | 	add	si, 2
  4310 | 000023C2 | C704[8608]                | 	mov	word [si], SlidePiece
  4311 | 000023C6 | 8B46FA                    | 	mov	ax, word [bp-6]
  4312 | 000023C9 | 40                        | 	inc	ax
  4313 | 000023CA | 8946FA                    | 	mov	word [bp-6], ax
  4314 | 000023CD | 8B46F8                    | 	mov	ax, word [bp-8]
  4315 | 000023D0 | B90600                    | 	mov	cx, 6
  4316 | 000023D3 | F7E9                      | 	imul	cx
  4317 | 000023D5 | 05[0038]                  | 	add	ax, movePieceArray
  4318 | 000023D8 | 50                        | 	push	ax
  4319 | 000023D9 | FF36[5E2A]                | 	push	word [movePieceQueuePTR]
  4320 | 000023DD | E81AF4                    | 	call	YKQPost
  4321 | 000023E0 | 83C404                    | 	add	sp, 4
  4322 |          |                           | L_lab8app_96:
  4323 |          |                           | L_lab8app_95:
  4324 | 000023E3 | A1[8A21]                  | 	mov	ax, word [L_lab8app_79]
  4325 | 000023E6 | 85C0                      | 	test	ax, ax
  4326 | 000023E8 | 7403E99601                | 	jne	L_lab8app_97
  4327 | 000023ED | C706[8A21]0100            | 	mov	word [L_lab8app_79], 1
  4328 | 000023F3 | 8B76FE                    | 	mov	si, word [bp-2]
  4329 | 000023F6 | 83C604                    | 	add	si, 4
  4330 | 000023F9 | 8B04                      | 	mov	ax, word [si]
  4331 | 000023FB | 48                        | 	dec	ax
  4332 | 000023FC | 740C                      | 	je	L_lab8app_100
  4333 | 000023FE | 48                        | 	dec	ax
  4334 | 000023FF | 7465                      | 	je	L_lab8app_101
  4335 | 00002401 | 48                        | 	dec	ax
  4336 | 00002402 | 7503E9B800                | 	je	L_lab8app_102
  4337 | 00002407 | E90E01                    | 	jmp	L_lab8app_99
  4338 |          |                           | L_lab8app_100:
  4339 | 0000240A | E81BFA                    | 	call	getMovePieceQueueArrayIndex
  4340 | 0000240D | 8946F8                    | 	mov	word [bp-8], ax
  4341 | 00002410 | 8B76FE                    | 	mov	si, word [bp-2]
  4342 | 00002413 | 8B46F8                    | 	mov	ax, word [bp-8]
  4343 | 00002416 | B90600                    | 	mov	cx, 6
  4344 | 00002419 | F7E9                      | 	imul	cx
  4345 | 0000241B | 89C7                      | 	mov	di, ax
  4346 | 0000241D | 81C7[0038]                | 	add	di, movePieceArray
  4347 | 00002421 | 8B04                      | 	mov	ax, word [si]
  4348 | 00002423 | 8905                      | 	mov	word [di], ax
  4349 | 00002425 | 8B46F8                    | 	mov	ax, word [bp-8]
  4350 | 00002428 | B90600                    | 	mov	cx, 6
  4351 | 0000242B | F7E9                      | 	imul	cx
  4352 | 0000242D | 05[0038]                  | 	add	ax, movePieceArray
  4353 | 00002430 | 89C6                      | 	mov	si, ax
  4354 | 00002432 | 83C604                    | 	add	si, 4
  4355 | 00002435 | C7040100                  | 	mov	word [si], 1
  4356 | 00002439 | 8B46F8                    | 	mov	ax, word [bp-8]
  4357 | 0000243C | B90600                    | 	mov	cx, 6
  4358 | 0000243F | F7E9                      | 	imul	cx
  4359 | 00002441 | 05[0038]                  | 	add	ax, movePieceArray
  4360 | 00002444 | 89C6                      | 	mov	si, ax
  4361 | 00002446 | 83C602                    | 	add	si, 2
  4362 | 00002449 | C704[9908]                | 	mov	word [si], RotatePiece
  4363 | 0000244D | 8B46F8                    | 	mov	ax, word [bp-8]
  4364 | 00002450 | B90600                    | 	mov	cx, 6
  4365 | 00002453 | F7E9                      | 	imul	cx
  4366 | 00002455 | 05[0038]                  | 	add	ax, movePieceArray
  4367 | 00002458 | 50                        | 	push	ax
  4368 | 00002459 | FF36[5E2A]                | 	push	word [movePieceQueuePTR]
  4369 | 0000245D | E89AF3                    | 	call	YKQPost
  4370 | 00002460 | 83C404                    | 	add	sp, 4
  4371 | 00002463 | E9B200                    | 	jmp	L_lab8app_98
  4372 |          |                           | L_lab8app_101:
  4373 | 00002466 | E8BFF9                    | 	call	getMovePieceQueueArrayIndex
  4374 | 00002469 | 8946F8                    | 	mov	word [bp-8], ax
  4375 | 0000246C | 8B76FE                    | 	mov	si, word [bp-2]
  4376 | 0000246F | 8B46F8                    | 	mov	ax, word [bp-8]
  4377 | 00002472 | B90600                    | 	mov	cx, 6
  4378 | 00002475 | F7E9                      | 	imul	cx
  4379 | 00002477 | 89C7                      | 	mov	di, ax
  4380 | 00002479 | 81C7[0038]                | 	add	di, movePieceArray
  4381 | 0000247D | 8B04                      | 	mov	ax, word [si]
  4382 | 0000247F | 8905                      | 	mov	word [di], ax
  4383 | 00002481 | 8B46F8                    | 	mov	ax, word [bp-8]
  4384 | 00002484 | B90600                    | 	mov	cx, 6
  4385 | 00002487 | F7E9                      | 	imul	cx
  4386 | 00002489 | 05[0038]                  | 	add	ax, movePieceArray
  4387 | 0000248C | 89C6                      | 	mov	si, ax
  4388 | 0000248E | 83C604                    | 	add	si, 4
  4389 | 00002491 | C7040000                  | 	mov	word [si], 0
  4390 | 00002495 | 8B46F8                    | 	mov	ax, word [bp-8]
  4391 | 00002498 | B90600                    | 	mov	cx, 6
  4392 | 0000249B | F7E9                      | 	imul	cx
  4393 | 0000249D | 05[0038]                  | 	add	ax, movePieceArray
  4394 | 000024A0 | 89C6                      | 	mov	si, ax
  4395 | 000024A2 | 83C602                    | 	add	si, 2
  4396 | 000024A5 | C704[9908]                | 	mov	word [si], RotatePiece
  4397 | 000024A9 | 8B46F8                    | 	mov	ax, word [bp-8]
  4398 | 000024AC | B90600                    | 	mov	cx, 6
  4399 | 000024AF | F7E9                      | 	imul	cx
  4400 | 000024B1 | 05[0038]                  | 	add	ax, movePieceArray
  4401 | 000024B4 | 50                        | 	push	ax
  4402 | 000024B5 | FF36[5E2A]                | 	push	word [movePieceQueuePTR]
  4403 | 000024B9 | E83EF3                    | 	call	YKQPost
  4404 | 000024BC | 83C404                    | 	add	sp, 4
  4405 |          |                           | L_lab8app_102:
  4406 | 000024BF | E866F9                    | 	call	getMovePieceQueueArrayIndex
  4407 | 000024C2 | 8946F8                    | 	mov	word [bp-8], ax
  4408 | 000024C5 | 8B76FE                    | 	mov	si, word [bp-2]
  4409 | 000024C8 | 8B46F8                    | 	mov	ax, word [bp-8]
  4410 | 000024CB | B90600                    | 	mov	cx, 6
  4411 | 000024CE | F7E9                      | 	imul	cx
  4412 | 000024D0 | 89C7                      | 	mov	di, ax
  4413 | 000024D2 | 81C7[0038]                | 	add	di, movePieceArray
  4414 | 000024D6 | 8B04                      | 	mov	ax, word [si]
  4415 | 000024D8 | 8905                      | 	mov	word [di], ax
  4416 | 000024DA | 8B46F8                    | 	mov	ax, word [bp-8]
  4417 | 000024DD | B90600                    | 	mov	cx, 6
  4418 | 000024E0 | F7E9                      | 	imul	cx
  4419 | 000024E2 | 05[0038]                  | 	add	ax, movePieceArray
  4420 | 000024E5 | 89C6                      | 	mov	si, ax
  4421 | 000024E7 | 83C604                    | 	add	si, 4
  4422 | 000024EA | C7040000                  | 	mov	word [si], 0
  4423 | 000024EE | 8B46F8                    | 	mov	ax, word [bp-8]
  4424 | 000024F1 | B90600                    | 	mov	cx, 6
  4425 | 000024F4 | F7E9                      | 	imul	cx
  4426 | 000024F6 | 05[0038]                  | 	add	ax, movePieceArray
  4427 | 000024F9 | 89C6                      | 	mov	si, ax
  4428 | 000024FB | 83C602                    | 	add	si, 2
  4429 | 000024FE | C704[9908]                | 	mov	word [si], RotatePiece
  4430 | 00002502 | 8B46F8                    | 	mov	ax, word [bp-8]
  4431 | 00002505 | B90600                    | 	mov	cx, 6
  4432 | 00002508 | F7E9                      | 	imul	cx
  4433 | 0000250A | 05[0038]                  | 	add	ax, movePieceArray
  4434 | 0000250D | 50                        | 	push	ax
  4435 | 0000250E | FF36[5E2A]                | 	push	word [movePieceQueuePTR]
  4436 | 00002512 | E8E5F2                    | 	call	YKQPost
  4437 | 00002515 | 83C404                    | 	add	sp, 4
  4438 |          |                           | L_lab8app_99:
  4439 |          |                           | L_lab8app_98:
  4440 | 00002518 | EB60                      | 	jmp	L_lab8app_104
  4441 |          |                           | L_lab8app_103:
  4442 | 0000251A | E80BF9                    | 	call	getMovePieceQueueArrayIndex
  4443 | 0000251D | 8946F8                    | 	mov	word [bp-8], ax
  4444 | 00002520 | 8B76FE                    | 	mov	si, word [bp-2]
  4445 | 00002523 | 8B46F8                    | 	mov	ax, word [bp-8]
  4446 | 00002526 | B90600                    | 	mov	cx, 6
  4447 | 00002529 | F7E9                      | 	imul	cx
  4448 | 0000252B | 89C7                      | 	mov	di, ax
  4449 | 0000252D | 81C7[0038]                | 	add	di, movePieceArray
  4450 | 00002531 | 8B04                      | 	mov	ax, word [si]
  4451 | 00002533 | 8905                      | 	mov	word [di], ax
  4452 | 00002535 | 8B46F8                    | 	mov	ax, word [bp-8]
  4453 | 00002538 | B90600                    | 	mov	cx, 6
  4454 | 0000253B | F7E9                      | 	imul	cx
  4455 | 0000253D | 05[0038]                  | 	add	ax, movePieceArray
  4456 | 00002540 | 89C6                      | 	mov	si, ax
  4457 | 00002542 | 83C604                    | 	add	si, 4
  4458 | 00002545 | C7040000                  | 	mov	word [si], 0
  4459 | 00002549 | 8B46F8                    | 	mov	ax, word [bp-8]
  4460 | 0000254C | B90600                    | 	mov	cx, 6
  4461 | 0000254F | F7E9                      | 	imul	cx
  4462 | 00002551 | 05[0038]                  | 	add	ax, movePieceArray
  4463 | 00002554 | 89C6                      | 	mov	si, ax
  4464 | 00002556 | 83C602                    | 	add	si, 2
  4465 | 00002559 | C704[8608]                | 	mov	word [si], SlidePiece
  4466 | 0000255D | 8B46FA                    | 	mov	ax, word [bp-6]
  4467 | 00002560 | 48                        | 	dec	ax
  4468 | 00002561 | 8946FA                    | 	mov	word [bp-6], ax
  4469 | 00002564 | 8B46F8                    | 	mov	ax, word [bp-8]
  4470 | 00002567 | B90600                    | 	mov	cx, 6
  4471 | 0000256A | F7E9                      | 	imul	cx
  4472 | 0000256C | 05[0038]                  | 	add	ax, movePieceArray
  4473 | 0000256F | 50                        | 	push	ax
  4474 | 00002570 | FF36[5E2A]                | 	push	word [movePieceQueuePTR]
  4475 | 00002574 | E883F2                    | 	call	YKQPost
  4476 | 00002577 | 83C404                    | 	add	sp, 4
  4477 |          |                           | L_lab8app_104:
  4478 | 0000257A | 837EFA00                  | 	cmp	word [bp-6], 0
  4479 | 0000257E | 7F9A                      | 	jg	L_lab8app_103
  4480 |          |                           | L_lab8app_105:
  4481 | 00002580 | E9FF01                    | 	jmp	L_lab8app_106
  4482 |          |                           | L_lab8app_97:
  4483 | 00002583 | C706[8A21]0000            | 	mov	word [L_lab8app_79], 0
  4484 | 00002589 | 8B76FE                    | 	mov	si, word [bp-2]
  4485 | 0000258C | 83C604                    | 	add	si, 4
  4486 | 0000258F | 8B04                      | 	mov	ax, word [si]
  4487 | 00002591 | 83E803                    | 	sub	ax, 3
  4488 | 00002594 | 740E                      | 	je	L_lab8app_109
  4489 | 00002596 | 83E8FD                    | 	sub	ax, -3
  4490 | 00002599 | 7465                      | 	je	L_lab8app_110
  4491 | 0000259B | 48                        | 	dec	ax
  4492 | 0000259C | 7503E9B800                | 	je	L_lab8app_111
  4493 | 000025A1 | E90E01                    | 	jmp	L_lab8app_108
  4494 |          |                           | L_lab8app_109:
  4495 | 000025A4 | E881F8                    | 	call	getMovePieceQueueArrayIndex
  4496 | 000025A7 | 8946F8                    | 	mov	word [bp-8], ax
  4497 | 000025AA | 8B76FE                    | 	mov	si, word [bp-2]
  4498 | 000025AD | 8B46F8                    | 	mov	ax, word [bp-8]
  4499 | 000025B0 | B90600                    | 	mov	cx, 6
  4500 | 000025B3 | F7E9                      | 	imul	cx
  4501 | 000025B5 | 89C7                      | 	mov	di, ax
  4502 | 000025B7 | 81C7[0038]                | 	add	di, movePieceArray
  4503 | 000025BB | 8B04                      | 	mov	ax, word [si]
  4504 | 000025BD | 8905                      | 	mov	word [di], ax
  4505 | 000025BF | 8B46F8                    | 	mov	ax, word [bp-8]
  4506 | 000025C2 | B90600                    | 	mov	cx, 6
  4507 | 000025C5 | F7E9                      | 	imul	cx
  4508 | 000025C7 | 05[0038]                  | 	add	ax, movePieceArray
  4509 | 000025CA | 89C6                      | 	mov	si, ax
  4510 | 000025CC | 83C604                    | 	add	si, 4
  4511 | 000025CF | C7040100                  | 	mov	word [si], 1
  4512 | 000025D3 | 8B46F8                    | 	mov	ax, word [bp-8]
  4513 | 000025D6 | B90600                    | 	mov	cx, 6
  4514 | 000025D9 | F7E9                      | 	imul	cx
  4515 | 000025DB | 05[0038]                  | 	add	ax, movePieceArray
  4516 | 000025DE | 89C6                      | 	mov	si, ax
  4517 | 000025E0 | 83C602                    | 	add	si, 2
  4518 | 000025E3 | C704[9908]                | 	mov	word [si], RotatePiece
  4519 | 000025E7 | 8B46F8                    | 	mov	ax, word [bp-8]
  4520 | 000025EA | B90600                    | 	mov	cx, 6
  4521 | 000025ED | F7E9                      | 	imul	cx
  4522 | 000025EF | 05[0038]                  | 	add	ax, movePieceArray
  4523 | 000025F2 | 50                        | 	push	ax
  4524 | 000025F3 | FF36[5E2A]                | 	push	word [movePieceQueuePTR]
  4525 | 000025F7 | E800F2                    | 	call	YKQPost
  4526 | 000025FA | 83C404                    | 	add	sp, 4
  4527 | 000025FD | E9B200                    | 	jmp	L_lab8app_107
  4528 |          |                           | L_lab8app_110:
  4529 | 00002600 | E825F8                    | 	call	getMovePieceQueueArrayIndex
  4530 | 00002603 | 8946F8                    | 	mov	word [bp-8], ax
  4531 | 00002606 | 8B76FE                    | 	mov	si, word [bp-2]
  4532 | 00002609 | 8B46F8                    | 	mov	ax, word [bp-8]
  4533 | 0000260C | B90600                    | 	mov	cx, 6
  4534 | 0000260F | F7E9                      | 	imul	cx
  4535 | 00002611 | 89C7                      | 	mov	di, ax
  4536 | 00002613 | 81C7[0038]                | 	add	di, movePieceArray
  4537 | 00002617 | 8B04                      | 	mov	ax, word [si]
  4538 | 00002619 | 8905                      | 	mov	word [di], ax
  4539 | 0000261B | 8B46F8                    | 	mov	ax, word [bp-8]
  4540 | 0000261E | B90600                    | 	mov	cx, 6
  4541 | 00002621 | F7E9                      | 	imul	cx
  4542 | 00002623 | 05[0038]                  | 	add	ax, movePieceArray
  4543 | 00002626 | 89C6                      | 	mov	si, ax
  4544 | 00002628 | 83C604                    | 	add	si, 4
  4545 | 0000262B | C7040000                  | 	mov	word [si], 0
  4546 | 0000262F | 8B46F8                    | 	mov	ax, word [bp-8]
  4547 | 00002632 | B90600                    | 	mov	cx, 6
  4548 | 00002635 | F7E9                      | 	imul	cx
  4549 | 00002637 | 05[0038]                  | 	add	ax, movePieceArray
  4550 | 0000263A | 89C6                      | 	mov	si, ax
  4551 | 0000263C | 83C602                    | 	add	si, 2
  4552 | 0000263F | C704[9908]                | 	mov	word [si], RotatePiece
  4553 | 00002643 | 8B46F8                    | 	mov	ax, word [bp-8]
  4554 | 00002646 | B90600                    | 	mov	cx, 6
  4555 | 00002649 | F7E9                      | 	imul	cx
  4556 | 0000264B | 05[0038]                  | 	add	ax, movePieceArray
  4557 | 0000264E | 50                        | 	push	ax
  4558 | 0000264F | FF36[5E2A]                | 	push	word [movePieceQueuePTR]
  4559 | 00002653 | E8A4F1                    | 	call	YKQPost
  4560 | 00002656 | 83C404                    | 	add	sp, 4
  4561 |          |                           | L_lab8app_111:
  4562 | 00002659 | E8CCF7                    | 	call	getMovePieceQueueArrayIndex
  4563 | 0000265C | 8946F8                    | 	mov	word [bp-8], ax
  4564 | 0000265F | 8B76FE                    | 	mov	si, word [bp-2]
  4565 | 00002662 | 8B46F8                    | 	mov	ax, word [bp-8]
  4566 | 00002665 | B90600                    | 	mov	cx, 6
  4567 | 00002668 | F7E9                      | 	imul	cx
  4568 | 0000266A | 89C7                      | 	mov	di, ax
  4569 | 0000266C | 81C7[0038]                | 	add	di, movePieceArray
  4570 | 00002670 | 8B04                      | 	mov	ax, word [si]
  4571 | 00002672 | 8905                      | 	mov	word [di], ax
  4572 | 00002674 | 8B46F8                    | 	mov	ax, word [bp-8]
  4573 | 00002677 | B90600                    | 	mov	cx, 6
  4574 | 0000267A | F7E9                      | 	imul	cx
  4575 | 0000267C | 05[0038]                  | 	add	ax, movePieceArray
  4576 | 0000267F | 89C6                      | 	mov	si, ax
  4577 | 00002681 | 83C604                    | 	add	si, 4
  4578 | 00002684 | C7040000                  | 	mov	word [si], 0
  4579 | 00002688 | 8B46F8                    | 	mov	ax, word [bp-8]
  4580 | 0000268B | B90600                    | 	mov	cx, 6
  4581 | 0000268E | F7E9                      | 	imul	cx
  4582 | 00002690 | 05[0038]                  | 	add	ax, movePieceArray
  4583 | 00002693 | 89C6                      | 	mov	si, ax
  4584 | 00002695 | 83C602                    | 	add	si, 2
  4585 | 00002698 | C704[9908]                | 	mov	word [si], RotatePiece
  4586 | 0000269C | 8B46F8                    | 	mov	ax, word [bp-8]
  4587 | 0000269F | B90600                    | 	mov	cx, 6
  4588 | 000026A2 | F7E9                      | 	imul	cx
  4589 | 000026A4 | 05[0038]                  | 	add	ax, movePieceArray
  4590 | 000026A7 | 50                        | 	push	ax
  4591 | 000026A8 | FF36[5E2A]                | 	push	word [movePieceQueuePTR]
  4592 | 000026AC | E84BF1                    | 	call	YKQPost
  4593 | 000026AF | 83C404                    | 	add	sp, 4
  4594 |          |                           | L_lab8app_108:
  4595 |          |                           | L_lab8app_107:
  4596 | 000026B2 | EB60                      | 	jmp	L_lab8app_113
  4597 |          |                           | L_lab8app_112:
  4598 | 000026B4 | E871F7                    | 	call	getMovePieceQueueArrayIndex
  4599 | 000026B7 | 8946F8                    | 	mov	word [bp-8], ax
  4600 | 000026BA | 8B76FE                    | 	mov	si, word [bp-2]
  4601 | 000026BD | 8B46F8                    | 	mov	ax, word [bp-8]
  4602 | 000026C0 | B90600                    | 	mov	cx, 6
  4603 | 000026C3 | F7E9                      | 	imul	cx
  4604 | 000026C5 | 89C7                      | 	mov	di, ax
  4605 | 000026C7 | 81C7[0038]                | 	add	di, movePieceArray
  4606 | 000026CB | 8B04                      | 	mov	ax, word [si]
  4607 | 000026CD | 8905                      | 	mov	word [di], ax
  4608 | 000026CF | 8B46F8                    | 	mov	ax, word [bp-8]
  4609 | 000026D2 | B90600                    | 	mov	cx, 6
  4610 | 000026D5 | F7E9                      | 	imul	cx
  4611 | 000026D7 | 05[0038]                  | 	add	ax, movePieceArray
  4612 | 000026DA | 89C6                      | 	mov	si, ax
  4613 | 000026DC | 83C604                    | 	add	si, 4
  4614 | 000026DF | C7040000                  | 	mov	word [si], 0
  4615 | 000026E3 | 8B46F8                    | 	mov	ax, word [bp-8]
  4616 | 000026E6 | B90600                    | 	mov	cx, 6
  4617 | 000026E9 | F7E9                      | 	imul	cx
  4618 | 000026EB | 05[0038]                  | 	add	ax, movePieceArray
  4619 | 000026EE | 89C6                      | 	mov	si, ax
  4620 | 000026F0 | 83C602                    | 	add	si, 2
  4621 | 000026F3 | C704[8608]                | 	mov	word [si], SlidePiece
  4622 | 000026F7 | 8B46FA                    | 	mov	ax, word [bp-6]
  4623 | 000026FA | 48                        | 	dec	ax
  4624 | 000026FB | 8946FA                    | 	mov	word [bp-6], ax
  4625 | 000026FE | 8B46F8                    | 	mov	ax, word [bp-8]
  4626 | 00002701 | B90600                    | 	mov	cx, 6
  4627 | 00002704 | F7E9                      | 	imul	cx
  4628 | 00002706 | 05[0038]                  | 	add	ax, movePieceArray
  4629 | 00002709 | 50                        | 	push	ax
  4630 | 0000270A | FF36[5E2A]                | 	push	word [movePieceQueuePTR]
  4631 | 0000270E | E8E9F0                    | 	call	YKQPost
  4632 | 00002711 | 83C404                    | 	add	sp, 4
  4633 |          |                           | L_lab8app_113:
  4634 | 00002714 | 837EFA02                  | 	cmp	word [bp-6], 2
  4635 | 00002718 | 7F9A                      | 	jg	L_lab8app_112
  4636 |          |                           | L_lab8app_114:
  4637 | 0000271A | EB60                      | 	jmp	L_lab8app_116
  4638 |          |                           | L_lab8app_115:
  4639 | 0000271C | E809F7                    | 	call	getMovePieceQueueArrayIndex
  4640 | 0000271F | 8946F8                    | 	mov	word [bp-8], ax
  4641 | 00002722 | 8B76FE                    | 	mov	si, word [bp-2]
  4642 | 00002725 | 8B46F8                    | 	mov	ax, word [bp-8]
  4643 | 00002728 | B90600                    | 	mov	cx, 6
  4644 | 0000272B | F7E9                      | 	imul	cx
  4645 | 0000272D | 89C7                      | 	mov	di, ax
  4646 | 0000272F | 81C7[0038]                | 	add	di, movePieceArray
  4647 | 00002733 | 8B04                      | 	mov	ax, word [si]
  4648 | 00002735 | 8905                      | 	mov	word [di], ax
  4649 | 00002737 | 8B46F8                    | 	mov	ax, word [bp-8]
  4650 | 0000273A | B90600                    | 	mov	cx, 6
  4651 | 0000273D | F7E9                      | 	imul	cx
  4652 | 0000273F | 05[0038]                  | 	add	ax, movePieceArray
  4653 | 00002742 | 89C6                      | 	mov	si, ax
  4654 | 00002744 | 83C604                    | 	add	si, 4
  4655 | 00002747 | C7040100                  | 	mov	word [si], 1
  4656 | 0000274B | 8B46F8                    | 	mov	ax, word [bp-8]
  4657 | 0000274E | B90600                    | 	mov	cx, 6
  4658 | 00002751 | F7E9                      | 	imul	cx
  4659 | 00002753 | 05[0038]                  | 	add	ax, movePieceArray
  4660 | 00002756 | 89C6                      | 	mov	si, ax
  4661 | 00002758 | 83C602                    | 	add	si, 2
  4662 | 0000275B | C704[8608]                | 	mov	word [si], SlidePiece
  4663 | 0000275F | 8B46FA                    | 	mov	ax, word [bp-6]
  4664 | 00002762 | 40                        | 	inc	ax
  4665 | 00002763 | 8946FA                    | 	mov	word [bp-6], ax
  4666 | 00002766 | 8B46F8                    | 	mov	ax, word [bp-8]
  4667 | 00002769 | B90600                    | 	mov	cx, 6
  4668 | 0000276C | F7E9                      | 	imul	cx
  4669 | 0000276E | 05[0038]                  | 	add	ax, movePieceArray
  4670 | 00002771 | 50                        | 	push	ax
  4671 | 00002772 | FF36[5E2A]                | 	push	word [movePieceQueuePTR]
  4672 | 00002776 | E881F0                    | 	call	YKQPost
  4673 | 00002779 | 83C404                    | 	add	sp, 4
  4674 |          |                           | L_lab8app_116:
  4675 | 0000277C | 837EFA02                  | 	cmp	word [bp-6], 2
  4676 | 00002780 | 7C9A                      | 	jl	L_lab8app_115
  4677 |          |                           | L_lab8app_117:
  4678 |          |                           | L_lab8app_106:
  4679 |          |                           | L_lab8app_93:
  4680 |          |                           | L_lab8app_84:
  4681 | 00002782 | E92DFA                    | 	jmp	L_lab8app_83
  4682 |          |                           | L_lab8app_85:
  4683 | 00002785 | 89EC                      | 	mov	sp, bp
  4684 | 00002787 | 5D                        | 	pop	bp
  4685 | 00002788 | C3                        | 	ret
  4686 |          |                           | L_lab8app_81:
  4687 | 00002789 | 55                        | 	push	bp
  4688 | 0000278A | 89E5                      | 	mov	bp, sp
  4689 | 0000278C | 83EC0C                    | 	sub	sp, 12
  4690 | 0000278F | E913FA                    | 	jmp	L_lab8app_82
  4691 |          |                           | L_lab8app_119:
  4692 | 00002792 | 6D6F76655069656365-       | 	DB	"movePieceTask moving!",0xA,0
  4693 | 0000279B | 5461736B206D6F7669-       | ...
  4694 | 000027A4 | 6E67210A00                | ...
  4695 | 000027A9 | 90                        | 	ALIGN	2
  4696 |          |                           | movePieceTask:
  4697 | 000027AA | EB56                      | 	jmp	L_lab8app_120
  4698 |          |                           | L_lab8app_121:
  4699 | 000027AC | B8[9227]                  | 	mov	ax, L_lab8app_119
  4700 | 000027AF | 50                        | 	push	ax
  4701 | 000027B0 | E875DC                    | 	call	printString
  4702 | 000027B3 | 83C402                    | 	add	sp, 2
  4703 | 000027B6 | EB44                      | 	jmp	L_lab8app_123
  4704 |          |                           | L_lab8app_122:
  4705 | 000027B8 | B80100                    | 	mov	ax, 1
  4706 | 000027BB | 50                        | 	push	ax
  4707 | 000027BC | B80100                    | 	mov	ax, 1
  4708 | 000027BF | 50                        | 	push	ax
  4709 | 000027C0 | FF36[622A]                | 	push	word [pieceMoveEvent]
  4710 | 000027C4 | E883E9                    | 	call	YKEventPend
  4711 | 000027C7 | 83C406                    | 	add	sp, 6
  4712 | 000027CA | B80100                    | 	mov	ax, 1
  4713 | 000027CD | 50                        | 	push	ax
  4714 | 000027CE | FF36[622A]                | 	push	word [pieceMoveEvent]
  4715 | 000027D2 | E81DEC                    | 	call	YKEventReset
  4716 | 000027D5 | 83C404                    | 	add	sp, 4
  4717 | 000027D8 | FF36[5E2A]                | 	push	word [movePieceQueuePTR]
  4718 | 000027DC | E81FEF                    | 	call	YKQPend
  4719 | 000027DF | 83C402                    | 	add	sp, 2
  4720 | 000027E2 | 8946FE                    | 	mov	word [bp-2], ax
  4721 | 000027E5 | 8B76FE                    | 	mov	si, word [bp-2]
  4722 | 000027E8 | 83C604                    | 	add	si, 4
  4723 | 000027EB | FF34                      | 	push	word [si]
  4724 | 000027ED | 8B76FE                    | 	mov	si, word [bp-2]
  4725 | 000027F0 | FF34                      | 	push	word [si]
  4726 | 000027F2 | 83C602                    | 	add	si, 2
  4727 | 000027F5 | 8B34                      | 	mov	si, word [si]
  4728 | 000027F7 | FFD6                      | 	call	si
  4729 | 000027F9 | 83C404                    | 	add	sp, 4
  4730 |          |                           | L_lab8app_123:
  4731 | 000027FC | EBBA                      | 	jmp	L_lab8app_122
  4732 |          |                           | L_lab8app_124:
  4733 | 000027FE | 89EC                      | 	mov	sp, bp
  4734 | 00002800 | 5D                        | 	pop	bp
  4735 | 00002801 | C3                        | 	ret
  4736 |          |                           | L_lab8app_120:
  4737 | 00002802 | 55                        | 	push	bp
  4738 | 00002803 | 89E5                      | 	mov	bp, sp
  4739 | 00002805 | 51                        | 	push	cx
  4740 | 00002806 | EBA4                      | 	jmp	L_lab8app_121
  4741 |          |                           | L_lab8app_130:
  4742 | 00002808 | 253E0A00                  | 	DB	"%>",0xA,0
  4743 |          |                           | L_lab8app_129:
  4744 | 0000280C | 2C204350553A2000          | 	DB	", CPU: ",0
  4745 |          |                           | L_lab8app_128:
  4746 | 00002814 | 3C43533A2000              | 	DB	"<CS: ",0
  4747 |          |                           | L_lab8app_127:
  4748 | 0000281A | 44657465726D696E69-       | 	DB	"Determining CPU capacity",0xD,0xA,0
  4749 | 00002823 | 6E6720435055206361-       | ...
  4750 | 0000282C | 7061636974790D0A00        | ...
  4751 |          |                           | L_lab8app_126:
  4752 | 00002835 | 57656C636F6D652074-       | 	DB	"Welcome to the YAK kernel",0xD,0xA,0
  4753 | 0000283E | 6F207468652059414B-       | ...
  4754 | 00002847 | 206B65726E656C0D0A-       | ...
  4755 | 00002850 | 00                        | ...
  4756 | 00002851 | 90                        | 	ALIGN	2
  4757 |          |                           | STask:
  4758 | 00002852 | E9F200                    | 	jmp	L_lab8app_131
  4759 |          |                           | L_lab8app_132:
  4760 | 00002855 | B80100                    | 	mov	ax, 1
  4761 | 00002858 | 50                        | 	push	ax
  4762 | 00002859 | E8B2E6                    | 	call	YKDelayTask
  4763 | 0000285C | 83C402                    | 	add	sp, 2
  4764 | 0000285F | B8[3528]                  | 	mov	ax, L_lab8app_126
  4765 | 00002862 | 50                        | 	push	ax
  4766 | 00002863 | E8C2DB                    | 	call	printString
  4767 | 00002866 | 83C402                    | 	add	sp, 2
  4768 | 00002869 | B8[1A28]                  | 	mov	ax, L_lab8app_127
  4769 | 0000286C | 50                        | 	push	ax
  4770 | 0000286D | E8B8DB                    | 	call	printString
  4771 | 00002870 | 83C402                    | 	add	sp, 2
  4772 | 00002873 | B80100                    | 	mov	ax, 1
  4773 | 00002876 | 50                        | 	push	ax
  4774 | 00002877 | E894E6                    | 	call	YKDelayTask
  4775 | 0000287A | 83C402                    | 	add	sp, 2
  4776 | 0000287D | C706[921A]0000            | 	mov	word [YKIdleCount], 0
  4777 | 00002883 | B80500                    | 	mov	ax, 5
  4778 | 00002886 | 50                        | 	push	ax
  4779 | 00002887 | E884E6                    | 	call	YKDelayTask
  4780 | 0000288A | 83C402                    | 	add	sp, 2
  4781 | 0000288D | A1[921A]                  | 	mov	ax, word [YKIdleCount]
  4782 | 00002890 | 31D2                      | 	xor	dx, dx
  4783 | 00002892 | B91900                    | 	mov	cx, 25
  4784 | 00002895 | F7F1                      | 	div	cx
  4785 | 00002897 | 8946FE                    | 	mov	word [bp-2], ax
  4786 | 0000289A | C706[921A]0000            | 	mov	word [YKIdleCount], 0
  4787 | 000028A0 | B80500                    | 	mov	ax, 5
  4788 | 000028A3 | 31D2                      | 	xor	dx, dx
  4789 | 000028A5 | 52                        | 	push	dx
  4790 | 000028A6 | 50                        | 	push	ax
  4791 | 000028A7 | E802E0                    | 	call	SeedSimptris
  4792 | 000028AA | 83C404                    | 	add	sp, 4
  4793 | 000028AD | B003                      | 	mov	al, 3
  4794 | 000028AF | 50                        | 	push	ax
  4795 | 000028B0 | B8[6C36]                  | 	mov	ax, (newPieceTaskStk+1024)
  4796 | 000028B3 | 50                        | 	push	ax
  4797 | 000028B4 | B8[A221]                  | 	mov	ax, newPieceTask
  4798 | 000028B7 | 50                        | 	push	ax
  4799 | 000028B8 | E803E4                    | 	call	YKNewTask
  4800 | 000028BB | 83C406                    | 	add	sp, 6
  4801 | 000028BE | B005                      | 	mov	al, 5
  4802 | 000028C0 | 50                        | 	push	ax
  4803 | 000028C1 | B8[6832]                  | 	mov	ax, (movePieceTaskStk+1024)
  4804 | 000028C4 | 50                        | 	push	ax
  4805 | 000028C5 | B8[AA27]                  | 	mov	ax, movePieceTask
  4806 | 000028C8 | 50                        | 	push	ax
  4807 | 000028C9 | E8F2E3                    | 	call	YKNewTask
  4808 | 000028CC | 83C406                    | 	add	sp, 6
  4809 | 000028CF | E8EFDF                    | 	call	StartSimptris
  4810 | 000028D2 | EB6D                      | 	jmp	L_lab8app_134
  4811 |          |                           | L_lab8app_133:
  4812 | 000028D4 | B81400                    | 	mov	ax, 20
  4813 | 000028D7 | 50                        | 	push	ax
  4814 | 000028D8 | E833E6                    | 	call	YKDelayTask
  4815 | 000028DB | 83C402                    | 	add	sp, 2
  4816 | 000028DE | E8E9F4                    | 	call	YKEnterMutex
  4817 | 000028E1 | A1[901A]                  | 	mov	ax, word [YKCtxSwCount]
  4818 | 000028E4 | 8946FC                    | 	mov	word [bp-4], ax
  4819 | 000028E7 | A1[921A]                  | 	mov	ax, word [YKIdleCount]
  4820 | 000028EA | 8946FA                    | 	mov	word [bp-6], ax
  4821 | 000028ED | E8DCF4                    | 	call	YKExitMutex
  4822 | 000028F0 | B8[1428]                  | 	mov	ax, L_lab8app_128
  4823 | 000028F3 | 50                        | 	push	ax
  4824 | 000028F4 | E831DB                    | 	call	printString
  4825 | 000028F7 | 83C402                    | 	add	sp, 2
  4826 | 000028FA | FF76FC                    | 	push	word [bp-4]
  4827 | 000028FD | E84CDB                    | 	call	printInt
  4828 | 00002900 | 83C402                    | 	add	sp, 2
  4829 | 00002903 | B8[0C28]                  | 	mov	ax, L_lab8app_129
  4830 | 00002906 | 50                        | 	push	ax
  4831 | 00002907 | E81EDB                    | 	call	printString
  4832 | 0000290A | 83C402                    | 	add	sp, 2
  4833 | 0000290D | 8B46FA                    | 	mov	ax, word [bp-6]
  4834 | 00002910 | 31D2                      | 	xor	dx, dx
  4835 | 00002912 | F776FE                    | 	div	word [bp-2]
  4836 | 00002915 | 8946F8                    | 	mov	word [bp-8], ax
  4837 | 00002918 | B86400                    | 	mov	ax, 100
  4838 | 0000291B | 2B46F8                    | 	sub	ax, word [bp-8]
  4839 | 0000291E | 50                        | 	push	ax
  4840 | 0000291F | E82ADB                    | 	call	printInt
  4841 | 00002922 | 83C402                    | 	add	sp, 2
  4842 | 00002925 | B8[0828]                  | 	mov	ax, L_lab8app_130
  4843 | 00002928 | 50                        | 	push	ax
  4844 | 00002929 | E8FCDA                    | 	call	printString
  4845 | 0000292C | 83C402                    | 	add	sp, 2
  4846 | 0000292F | E898F4                    | 	call	YKEnterMutex
  4847 | 00002932 | C706[901A]0000            | 	mov	word [YKCtxSwCount], 0
  4848 | 00002938 | C706[921A]0000            | 	mov	word [YKIdleCount], 0
  4849 | 0000293E | E88BF4                    | 	call	YKExitMutex
  4850 |          |                           | L_lab8app_134:
  4851 | 00002941 | EB91                      | 	jmp	L_lab8app_133
  4852 |          |                           | L_lab8app_135:
  4853 | 00002943 | 89EC                      | 	mov	sp, bp
  4854 | 00002945 | 5D                        | 	pop	bp
  4855 | 00002946 | C3                        | 	ret
  4856 |          |                           | L_lab8app_131:
  4857 | 00002947 | 55                        | 	push	bp
  4858 | 00002948 | 89E5                      | 	mov	bp, sp
  4859 | 0000294A | 83EC08                    | 	sub	sp, 8
  4860 | 0000294D | E905FF                    | 	jmp	L_lab8app_132
  4861 |          |                           | L_lab8app_141:
  4862 | 00002950 | 0A6D6F766550696563-       | 	DB	0xA,"movePieceQueue: ",0
  4863 | 00002959 | 6551756575653A2000        | ...
  4864 |          |                           | L_lab8app_140:
  4865 | 00002962 | 0A6E65775069656365-       | 	DB	0xA,"newPieceQueue: ",0
  4866 | 0000296B | 51756575653A2000          | ...
  4867 |          |                           | L_lab8app_139:
  4868 | 00002973 | 0A6E65775069656365-       | 	DB	0xA,"newPieceTask: ",0
  4869 | 0000297C | 5461736B3A2000            | ...
  4870 |          |                           | L_lab8app_138:
  4871 | 00002983 | 0A6D6F766550696563-       | 	DB	0xA,"movePieceTask: ",0
  4872 | 0000298C | 655461736B3A2000          | ...
  4873 |          |                           | L_lab8app_137:
  4874 | 00002994 | 535461736B3A2000          | 	DB	"STask: ",0
  4875 |          |                           | 	ALIGN	2
  4876 |          |                           | main:
  4877 | 0000299C | E9B800                    | 	jmp	L_lab8app_142
  4878 |          |                           | L_lab8app_143:
  4879 | 0000299F | E8E0E1                    | 	call	YKInitialize
  4880 | 000029A2 | B82800                    | 	mov	ax, 40
  4881 | 000029A5 | 50                        | 	push	ax
  4882 | 000029A6 | B8[B037]                  | 	mov	ax, newPieceQueue
  4883 | 000029A9 | 50                        | 	push	ax
  4884 | 000029AA | E8B3EC                    | 	call	YKQCreate
  4885 | 000029AD | 83C404                    | 	add	sp, 4
  4886 | 000029B0 | A3[602A]                  | 	mov	word [newPieceQueuePTR], ax
  4887 | 000029B3 | B82800                    | 	mov	ax, 40
  4888 | 000029B6 | 50                        | 	push	ax
  4889 | 000029B7 | B8[F238]                  | 	mov	ax, movePieceQueue
  4890 | 000029BA | 50                        | 	push	ax
  4891 | 000029BB | E8A2EC                    | 	call	YKQCreate
  4892 | 000029BE | 83C404                    | 	add	sp, 4
  4893 | 000029C1 | A3[5E2A]                  | 	mov	word [movePieceQueuePTR], ax
  4894 | 000029C4 | B80100                    | 	mov	ax, 1
  4895 | 000029C7 | 50                        | 	push	ax
  4896 | 000029C8 | E823E7                    | 	call	YKEventCreate
  4897 | 000029CB | 83C402                    | 	add	sp, 2
  4898 | 000029CE | A3[622A]                  | 	mov	word [pieceMoveEvent], ax
  4899 | 000029D1 | B8[9429]                  | 	mov	ax, L_lab8app_137
  4900 | 000029D4 | 50                        | 	push	ax
  4901 | 000029D5 | E850DA                    | 	call	printString
  4902 | 000029D8 | 83C402                    | 	add	sp, 2
  4903 | 000029DB | B8[5228]                  | 	mov	ax, STask
  4904 | 000029DE | 50                        | 	push	ax
  4905 | 000029DF | E86ADA                    | 	call	printInt
  4906 | 000029E2 | 83C402                    | 	add	sp, 2
  4907 | 000029E5 | B8[8329]                  | 	mov	ax, L_lab8app_138
  4908 | 000029E8 | 50                        | 	push	ax
  4909 | 000029E9 | E83CDA                    | 	call	printString
  4910 | 000029EC | 83C402                    | 	add	sp, 2
  4911 | 000029EF | B8[AA27]                  | 	mov	ax, movePieceTask
  4912 | 000029F2 | 50                        | 	push	ax
  4913 | 000029F3 | E856DA                    | 	call	printInt
  4914 | 000029F6 | 83C402                    | 	add	sp, 2
  4915 | 000029F9 | B8[7329]                  | 	mov	ax, L_lab8app_139
  4916 | 000029FC | 50                        | 	push	ax
  4917 | 000029FD | E828DA                    | 	call	printString
  4918 | 00002A00 | 83C402                    | 	add	sp, 2
  4919 | 00002A03 | B8[A221]                  | 	mov	ax, newPieceTask
  4920 | 00002A06 | 50                        | 	push	ax
  4921 | 00002A07 | E842DA                    | 	call	printInt
  4922 | 00002A0A | 83C402                    | 	add	sp, 2
  4923 | 00002A0D | B8[6229]                  | 	mov	ax, L_lab8app_140
  4924 | 00002A10 | 50                        | 	push	ax
  4925 | 00002A11 | E814DA                    | 	call	printString
  4926 | 00002A14 | 83C402                    | 	add	sp, 2
  4927 | 00002A17 | FF36[602A]                | 	push	word [newPieceQueuePTR]
  4928 | 00002A1B | E82EDA                    | 	call	printInt
  4929 | 00002A1E | 83C402                    | 	add	sp, 2
  4930 | 00002A21 | B8[5029]                  | 	mov	ax, L_lab8app_141
  4931 | 00002A24 | 50                        | 	push	ax
  4932 | 00002A25 | E800DA                    | 	call	printString
  4933 | 00002A28 | 83C402                    | 	add	sp, 2
  4934 | 00002A2B | FF36[5E2A]                | 	push	word [movePieceQueuePTR]
  4935 | 00002A2F | E81ADA                    | 	call	printInt
  4936 | 00002A32 | 83C402                    | 	add	sp, 2
  4937 | 00002A35 | B8[271F]                  | 	mov	ax, (L_lab8app_30+35)
  4938 | 00002A38 | 50                        | 	push	ax
  4939 | 00002A39 | E8ECD9                    | 	call	printString
  4940 | 00002A3C | 83C402                    | 	add	sp, 2
  4941 | 00002A3F | 30C0                      | 	xor	al, al
  4942 | 00002A41 | 50                        | 	push	ax
  4943 | 00002A42 | B8[642E]                  | 	mov	ax, (STaskStk+1024)
  4944 | 00002A45 | 50                        | 	push	ax
  4945 | 00002A46 | B8[5228]                  | 	mov	ax, STask
  4946 | 00002A49 | 50                        | 	push	ax
  4947 | 00002A4A | E871E2                    | 	call	YKNewTask
  4948 | 00002A4D | 83C406                    | 	add	sp, 6
  4949 | 00002A50 | E819E4                    | 	call	YKRun
  4950 | 00002A53 | 89EC                      | 	mov	sp, bp
  4951 | 00002A55 | 5D                        | 	pop	bp
  4952 | 00002A56 | C3                        | 	ret
  4953 |          |                           | L_lab8app_142:
  4954 | 00002A57 | 55                        | 	push	bp
  4955 | 00002A58 | 89E5                      | 	mov	bp, sp
  4956 | 00002A5A | E942FF                    | 	jmp	L_lab8app_143
  4957 | 00002A5D | 90                        | 	ALIGN	2
  4958 |          |                           | movePieceQueuePTR:
  4959 | 00002A5E | 00<rept>                  | 	TIMES	2 db 0
  4960 |          |                           | newPieceQueuePTR:
  4961 | 00002A60 | 00<rept>                  | 	TIMES	2 db 0
  4962 |          |                           | pieceMoveEvent:
  4963 | 00002A62 | 00<rept>                  | 	TIMES	2 db 0
  4964 |          |                           | STaskStk:
  4965 | 00002A64 | 00<rept>                  | 	TIMES	1024 db 0
  4966 |          |                           | testintbog:
  4967 | 00002E64 | 00<rept>                  | 	TIMES	2 db 0
  4968 |          |                           | test2:
  4969 | 00002E66 | 00<rept>                  | 	TIMES	2 db 0
  4970 |          |                           | movePieceTaskStk:
  4971 | 00002E68 | 00<rept>                  | 	TIMES	1024 db 0
  4972 |          |                           | test3:
  4973 | 00003268 | 00<rept>                  | 	TIMES	2 db 0
  4974 |          |                           | test4:
  4975 | 0000326A | 00<rept>                  | 	TIMES	2 db 0
  4976 |          |                           | newPieceTaskStk:
  4977 | 0000326C | 00<rept>                  | 	TIMES	1024 db 0
  4978 |          |                           | test5:
  4979 | 0000366C | 00<rept>                  | 	TIMES	2 db 0
  4980 |          |                           | test6:
  4981 | 0000366E | 00<rept>                  | 	TIMES	2 db 0
  4982 |          |                           | newPieceArray:
  4983 | 00003670 | 00<rept>                  | 	TIMES	320 db 0
  4984 |          |                           | newPieceQueue:
  4985 | 000037B0 | 00<rept>                  | 	TIMES	80 db 0
  4986 |          |                           | movePieceArray:
  4987 | 00003800 | 00<rept>                  | 	TIMES	240 db 0
  4988 |          |                           | movePieceArrayIndex:
  4989 | 000038F0 | 00<rept>                  | 	TIMES	2 db 0
  4990 |          |                           | movePieceQueue:
  4991 | 000038F2 | 00<rept>                  | 	TIMES	80 db 0
  4992 |          |                           | screen0:
  4993 | 00003942 | 00<rept>                  | 	TIMES	2 db 0
  4994 |          |                           | screen1:
  4995 | 00003944 | 00<rept>                  | 	TIMES	2 db 0
  4996 |          |                           | screen2:
  4997 | 00003946 | 00<rept>                  | 	TIMES	2 db 0
  4998 |          |                           | screen3:
  4999 | 00003948 | 00<rept>                  | 	TIMES	2 db 0
  5000 |          |                           | screen4:
  5001 | 0000394A | 00<rept>                  | 	TIMES	2 db 0
  5002 |          |                           | screen5:
  5003 | 0000394C | 00<rept>                  | 	TIMES	2 db 0
