 LINE  | ADDRESS  | HEX DUMP                  | ASSEMBLY
-------|----------|---------------------------|----------------------------
     1 |          |                           |         CPU     8086
     2 |          |                           |         ORG     0h
     3 |          |                           | InterruptVectorTable:
     4 |          |                           |         ; Internal x86 Interrupts:
     5 | 00000000 | 00000000                  |         dd      0 ; Reserved (Div err)  ; Int 00h
     6 | 00000004 | 00000000                  |         dd      0 ; Reserved (Step)     ; Int 01h
     7 | 00000008 | 00000000                  |         dd      0 ; Reserved (NMI)      ; Int 02h
     8 | 0000000C | 00000000                  |         dd      0 ; Reserved (Break)    ; Int 03h
     9 | 00000010 | 00000000                  |         dd      0 ; Reserved (Overflow) ; Int 04h
    10 | 00000014 | 00000000                  |         dd      0                       ; Int 05h
    11 | 00000018 | 00000000                  |         dd      0                       ; Int 06h
    12 | 0000001C | 00000000                  |         dd      0                       ; Int 07h
    13 |          |                           |         ; Hardware Interrupts:
    14 | 00000020 | [C8080000]                |         dd      isr_reset ; Reset               ; Int 08h (IRQ 0)
    15 | 00000024 | [26090000]                |         dd      isr_tick ; Tick                ; Int 09h (IRQ 1)
    16 | 00000028 | [F7080000]                |         dd      isr_keypress ; Keyboard            ; Int 0Ah (IRQ 2)
    17 | 0000002C | [55090000]                |         dd      isr_game_over ; Simptris Game Over  ; Int 0Bh (IRQ 3)
    18 | 00000030 | [84090000]                |         dd      isr_new_piece ; Simptris New Piece  ; Int 0Ch (IRQ 4)
    19 | 00000034 | [B3090000]                |         dd      isr_received ; Simptris Received   ; Int 0Dh (IRQ 5)
    20 | 00000038 | [E2090000]                |         dd      isr_touchdown ; Simptris Touchdown  ; Int 0Eh (IRQ 6)
    21 | 0000003C | [E7090000]                |         dd      isr_clear ; Simptris Clear      ; Int 0Fh (IRQ 7)
    22 |          |                           |         ; Software Interrupts:
    23 | 00000040 | 00000000                  |         dd      0 ; Reserved (PC BIOS)  ; Int 10h
    24 | 00000044 | 00000000                  |         dd      0                       ; Int 11h
    25 | 00000048 | 00000000                  |         dd      0                       ; Int 12h
    26 | 0000004C | 00000000                  |         dd      0                       ; Int 13h
    27 | 00000050 | 00000000                  |         dd      0                       ; Int 14h
    28 | 00000054 | 00000000                  |         dd      0                       ; Int 15h
    29 | 00000058 | 00000000                  |         dd      0                       ; Int 16h
    30 | 0000005C | 00000000                  |         dd      0                       ; Int 17h
    31 | 00000060 | 00000000                  |         dd      0                       ; Int 18h
    32 | 00000064 | 00000000                  |         dd      0                       ; Int 19h
    33 | 00000068 | 00000000                  |         dd      0                       ; Int 1Ah
    34 | 0000006C | 00000000                  |         dd      0                       ; Int 1Bh
    35 | 00000070 | 00000000                  |         dd      0                       ; Int 1Ch
    36 | 00000074 | 00000000                  |         dd      0                       ; Int 1Dh
    37 | 00000078 | 00000000                  |         dd      0                       ; Int 1Eh
    38 | 0000007C | 00000000                  |         dd      0                       ; Int 1Fh
    39 | 00000080 | 00000000                  |         dd      0                       ; Int 20h
    40 | 00000084 | 00000000                  |         dd      0 ; Reserved (DOS)      ; Int 21h
    41 | 00000088 | 00000000                  |         dd      0 ; Simptris Services   ; Int 22h
    42 | 0000008C | 00000000                  |         dd      0                       ; Int 23h
    43 | 00000090 | 00000000                  |         dd      0                       ; Int 24h
    44 | 00000094 | 00000000                  |         dd      0                       ; Int 25h
    45 | 00000098 | 00000000                  |         dd      0                       ; Int 26h
    46 | 0000009C | 00000000                  |         dd      0                       ; Int 27h
    47 | 000000A0 | 00000000                  |         dd      0                       ; Int 28h
    48 | 000000A4 | 00000000                  |         dd      0                       ; Int 29h
    49 | 000000A8 | 00000000                  |         dd      0                       ; Int 2Ah
    50 | 000000AC | 00000000                  |         dd      0                       ; Int 2Bh
    51 | 000000B0 | 00000000                  |         dd      0                       ; Int 2Ch
    52 | 000000B4 | 00000000                  |         dd      0                       ; Int 2Dh
    53 | 000000B8 | 00000000                  |         dd      0                       ; Int 2Eh
    54 | 000000BC | 00000000                  |         dd      0                       ; Int 2Fh
    55 |          |                           | KeyBuffer:                              ; Address 0xC0
    56 | 000000C0 | 0000                      |         dw      0
    57 |          |                           | NewPieceType:                           ; Address 0xC2
    58 | 000000C2 | 0000                      |         dw      0
    59 |          |                           | NewPieceID:                             ; Address 0xC4
    60 | 000000C4 | 0000                      |         dw      0
    61 |          |                           | NewPieceOrientation:                    ; Address 0xC6
    62 | 000000C6 | 0000                      |         dw      0
    63 |          |                           | NewPieceColumn:                         ; Address 0xC8
    64 | 000000C8 | 0000                      |         dw      0
    65 |          |                           | TouchdownID:                            ; Address 0xCA
    66 | 000000CA | 0000                      | 	dw	0
    67 |          |                           | ScreenBitMap0:                          ; Address 0xCC
    68 | 000000CC | 0000                      |         dw      0
    69 |          |                           | ScreenBitMap1:
    70 | 000000CE | 0000                      |         dw      0
    71 |          |                           | ScreenBitMap2:
    72 | 000000D0 | 0000                      |         dw      0
    73 |          |                           | ScreenBitMap3:
    74 | 000000D2 | 0000                      |         dw      0
    75 |          |                           | ScreenBitMap4:
    76 | 000000D4 | 0000                      |         dw      0
    77 |          |                           | ScreenBitMap5:
    78 | 000000D6 | 0000                      |         dw      0
    79 | 000000D8 | 00<rept>                  | TIMES   100h-($-$$) db  0               ; Fill up to (but not including) address 100h with 0
    80 | 00000100 | E9C530                    | 	jmp	main
    81 |          |                           | ; This file contains support routines for 32-bit on the 8086.
    82 |          |                           | ; It is intended for use code generated by the C86 compiler.
    83 |          |                           | ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    84 |          |                           | SR_asldiv:			; l1 /= l2
    85 | 00000103 | 55                        | 	push	bp
    86 | 00000104 | 89E5                      | 	mov	bp,sp
    87 | 00000106 | 53                        | 	push	bx
    88 | 00000107 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
    89 | 0000010A | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
    90 | 0000010D | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
    91 | 00000110 | FF7702                    | 	push	word [bx+2]	; Push hi l1
    92 | 00000113 | FF37                      | 	push	word [bx]	; Push lo l1
    93 | 00000115 | E83D01                    | 	call	SR_ldiv
    94 | 00000118 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
    95 | 0000011B | 895702                    | 	mov	[bx+2],dx	; Store result
    96 | 0000011E | 8907                      | 	mov	[bx],ax
    97 | 00000120 | 5B                        | 	pop	bx
    98 | 00000121 | 5D                        | 	pop	bp
    99 | 00000122 | C3                        | 	ret
   100 |          |                           | SR_aslmod:			; l1 %= l2
   101 | 00000123 | 55                        | 	push	bp
   102 | 00000124 | 89E5                      | 	mov	bp,sp
   103 | 00000126 | 53                        | 	push	bx
   104 | 00000127 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
   105 | 0000012A | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
   106 | 0000012D | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
   107 | 00000130 | FF7702                    | 	push	word [bx+2]	; Push hi l1
   108 | 00000133 | FF37                      | 	push	word [bx]	; Push lo l1
   109 | 00000135 | E82C01                    | 	call	SR_lmod
   110 | 00000138 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
   111 | 0000013B | 895702                    | 	mov	[bx+2],dx	; Store result
   112 | 0000013E | 8907                      | 	mov	[bx],ax
   113 | 00000140 | 5B                        | 	pop	bx
   114 | 00000141 | 5D                        | 	pop	bp
   115 | 00000142 | C3                        | 	ret
   116 |          |                           | SR_aslmul:			; l1 *= l2
   117 | 00000143 | 55                        | 	push	bp
   118 | 00000144 | 89E5                      | 	mov	bp,sp
   119 | 00000146 | 53                        | 	push	bx
   120 | 00000147 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
   121 | 0000014A | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
   122 | 0000014D | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
   123 | 00000150 | FF7702                    | 	push	word [bx+2]	; Push hi l1
   124 | 00000153 | FF37                      | 	push	word [bx]	; Push lo l1
   125 | 00000155 | E84002                    | 	call	SR_lmul
   126 | 00000158 | 83C408                    | 	add	sp,8
   127 | 0000015B | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
   128 | 0000015E | 895702                    | 	mov	[bx+2],dx	; Store result
   129 | 00000161 | 8907                      | 	mov	[bx],ax
   130 | 00000163 | 5B                        | 	pop	bx
   131 | 00000164 | 5D                        | 	pop	bp
   132 | 00000165 | C3                        | 	ret
   133 |          |                           | SR_aslshl:			; l1 <<= l2
   134 | 00000166 | 55                        | 	push	bp
   135 | 00000167 | 89E5                      | 	mov	bp,sp
   136 | 00000169 | 53                        | 	push	bx
   137 | 0000016A | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
   138 | 0000016D | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
   139 | 00000170 | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
   140 | 00000173 | FF7702                    | 	push	word [bx+2]	; Push hi l1
   141 | 00000176 | FF37                      | 	push	word [bx]	; Push lo l1
   142 | 00000178 | E88801                    | 	call	SR_lshl
   143 | 0000017B | 83C408                    | 	add	sp,8
   144 | 0000017E | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
   145 | 00000181 | 895702                    | 	mov	[bx+2],dx	; Store result
   146 | 00000184 | 8907                      | 	mov	[bx],ax
   147 | 00000186 | 5B                        | 	pop	bx
   148 | 00000187 | 5D                        | 	pop	bp
   149 | 00000188 | C3                        | 	ret
   150 |          |                           | SR_aslshr:			; l1 >>= l2
   151 | 00000189 | 55                        | 	push	bp
   152 | 0000018A | 89E5                      | 	mov	bp,sp
   153 | 0000018C | 53                        | 	push	bx
   154 | 0000018D | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
   155 | 00000190 | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
   156 | 00000193 | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
   157 | 00000196 | FF7702                    | 	push	word [bx+2]	; Push hi l1
   158 | 00000199 | FF37                      | 	push	word [bx]	; Push lo l1
   159 | 0000019B | E89701                    | 	call	SR_lshr
   160 | 0000019E | 83C408                    | 	add	sp,8
   161 | 000001A1 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
   162 | 000001A4 | 895702                    | 	mov	[bx+2],dx	; Store result
   163 | 000001A7 | 8907                      | 	mov	[bx],ax
   164 | 000001A9 | 5B                        | 	pop	bx
   165 | 000001AA | 5D                        | 	pop	bp
   166 | 000001AB | C3                        | 	ret
   167 |          |                           | 
   168 |          |                           | 
   169 |          |                           | SR_asuldiv:			; u1 /= u2
   170 | 000001AC | 55                        | 	push	bp
   171 | 000001AD | 89E5                      | 	mov	bp,sp
   172 | 000001AF | 53                        | 	push	bx
   173 | 000001B0 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   174 | 000001B3 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   175 | 000001B6 | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   176 | 000001B9 | FF7702                    | 	push	word [bx+2]	; Push hi u1
   177 | 000001BC | FF37                      | 	push	word [bx]	; Push lo u1
   178 | 000001BE | E89B00                    | 	call	SR_uldiv
   179 | 000001C1 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   180 | 000001C4 | 895702                    | 	mov	[bx+2],dx	; Store result
   181 | 000001C7 | 8907                      | 	mov	[bx],ax
   182 | 000001C9 | 5B                        | 	pop	bx
   183 | 000001CA | 5D                        | 	pop	bp
   184 | 000001CB | C3                        | 	ret
   185 |          |                           | SR_asilmod:			; u1 %= u2
   186 | 000001CC | 55                        | 	push	bp
   187 | 000001CD | 89E5                      | 	mov	bp,sp
   188 | 000001CF | 53                        | 	push	bx
   189 | 000001D0 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   190 | 000001D3 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   191 | 000001D6 | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   192 | 000001D9 | FF7702                    | 	push	word [bx+2]	; Push hi u1
   193 | 000001DC | FF37                      | 	push	word [bx]	; Push lo u1
   194 | 000001DE | E88B00                    | 	call	SR_ilmod
   195 | 000001E1 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   196 | 000001E4 | 895702                    | 	mov	[bx+2],dx	; Store result
   197 | 000001E7 | 8907                      | 	mov	[bx],ax
   198 | 000001E9 | 5B                        | 	pop	bx
   199 | 000001EA | 5D                        | 	pop	bp
   200 | 000001EB | C3                        | 	ret
   201 |          |                           | SR_asulmul:			; u1 *= u2
   202 | 000001EC | 55                        | 	push	bp
   203 | 000001ED | 89E5                      | 	mov	bp,sp
   204 | 000001EF | 53                        | 	push	bx
   205 | 000001F0 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   206 | 000001F3 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   207 | 000001F6 | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   208 | 000001F9 | FF7702                    | 	push	word [bx+2]	; Push hi u1
   209 | 000001FC | FF37                      | 	push	word [bx]	; Push lo u1
   210 | 000001FE | E89701                    | 	call	SR_ulmul
   211 | 00000201 | 83C408                    | 	add	sp,8
   212 | 00000204 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   213 | 00000207 | 895702                    | 	mov	[bx+2],dx	; Store result
   214 | 0000020A | 8907                      | 	mov	[bx],ax
   215 | 0000020C | 5B                        | 	pop	bx
   216 | 0000020D | 5D                        | 	pop	bp
   217 | 0000020E | C3                        | 	ret
   218 |          |                           | SR_asulshl:			; u1 << u2
   219 | 0000020F | 55                        | 	push	bp
   220 | 00000210 | 89E5                      | 	mov	bp,sp
   221 | 00000212 | 53                        | 	push	bx
   222 | 00000213 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   223 | 00000216 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   224 | 00000219 | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   225 | 0000021C | FF7702                    | 	push	word [bx+2]	; Push hi u1
   226 | 0000021F | FF37                      | 	push	word [bx]	; Push lo u1
   227 | 00000221 | E8DF00                    | 	call	SR_ulshl
   228 | 00000224 | 83C408                    | 	add	sp,8
   229 | 00000227 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   230 | 0000022A | 895702                    | 	mov	[bx+2],dx	; Store result
   231 | 0000022D | 8907                      | 	mov	[bx],ax
   232 | 0000022F | 5B                        | 	pop	bx
   233 | 00000230 | 5D                        | 	pop	bp
   234 | 00000231 | C3                        | 	ret
   235 |          |                           | SR_asulshr:			; u1 >> u2
   236 | 00000232 | 55                        | 	push	bp
   237 | 00000233 | 89E5                      | 	mov	bp,sp
   238 | 00000235 | 53                        | 	push	bx
   239 | 00000236 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   240 | 00000239 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   241 | 0000023C | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   242 | 0000023F | FF7702                    | 	push	word [bx+2]	; Push hi u1
   243 | 00000242 | FF37                      | 	push	word [bx]	; Push lo u1
   244 | 00000244 | E81F01                    | 	call	SR_ulshr
   245 | 00000247 | 83C408                    | 	add	sp,8
   246 | 0000024A | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   247 | 0000024D | 895702                    | 	mov	[bx+2],dx	; Store result
   248 | 00000250 | 8907                      | 	mov	[bx],ax
   249 | 00000252 | 5B                        | 	pop	bx
   250 | 00000253 | 5D                        | 	pop	bp
   251 | 00000254 | C3                        | 	ret
   252 |          |                           | 
   253 |          |                           | 
   254 |          |                           | ; Main 32-bit routines begin here:
   255 |          |                           | 
   256 |          |                           | SR_ldiv:	; N_LDIV@
   257 | 00000255 | 59                        | 	pop    cx
   258 | 00000256 | 0E                        | 	push   cs
   259 | 00000257 | 51                        | 	push   cx
   260 |          |                           | 	; LDIV@
   261 | 00000258 | 31C9                      | 	xor    cx,cx
   262 | 0000025A | EB16                      | 	jmp    LSR_01
   263 |          |                           | SR_uldiv:	; N_LUDIV@
   264 | 0000025C | 59                        | 	pop    cx
   265 | 0000025D | 0E                        | 	push   cs
   266 | 0000025E | 51                        | 	push   cx
   267 |          |                           | 	; F_LUDIV@
   268 | 0000025F | B90100                    | 	mov    cx,0001
   269 | 00000262 | EB0E                      | 	jmp    LSR_01
   270 |          |                           | SR_lmod:	; N_LMOD@
   271 | 00000264 | 59                        | 	pop    cx
   272 | 00000265 | 0E                        | 	push   cs
   273 | 00000266 | 51                        | 	push   cx
   274 |          |                           | 	; F_LMOD@
   275 | 00000267 | B90200                    | 	mov    cx,0002
   276 | 0000026A | EB06                      | 	jmp    LSR_01
   277 |          |                           | SR_ilmod:	; N_LUMOD@
   278 | 0000026C | 59                        | 	pop    cx
   279 | 0000026D | 0E                        | 	push   cs
   280 | 0000026E | 51                        | 	push   cx
   281 |          |                           | 	; LUMOD@
   282 | 0000026F | B90300                    | 	mov    cx,0003
   283 |          |                           | LSR_01:
   284 | 00000272 | 55                        | 	push   bp
   285 | 00000273 | 56                        | 	push   si
   286 | 00000274 | 57                        | 	push   di
   287 | 00000275 | 89E5                      | 	mov    bp,sp
   288 | 00000277 | 89CF                      | 	mov    di,cx
   289 | 00000279 | 8B460A                    | 	mov    ax,[bp+0Ah]
   290 | 0000027C | 8B560C                    | 	mov    dx,[bp+0Ch]
   291 | 0000027F | 8B5E0E                    | 	mov    bx,[bp+0Eh]
   292 | 00000282 | 8B4E10                    | 	mov    cx,[bp+10h]
   293 | 00000285 | 09C9                      | 	or     cx,cx
   294 | 00000287 | 7508                      | 	jne    LSR_02
   295 | 00000289 | 09D2                      | 	or     dx,dx
   296 | 0000028B | 7469                      | 	je     LSR_10
   297 | 0000028D | 09DB                      | 	or     bx,bx
   298 | 0000028F | 7465                      | 	je     LSR_10
   299 |          |                           | LSR_02:
   300 | 00000291 | F7C70100                  | 	test   di,0001
   301 | 00000295 | 751C                      | 	jne    LSR_04
   302 | 00000297 | 09D2                      | 	or     dx,dx
   303 | 00000299 | 790A                      | 	jns    LSR_03
   304 | 0000029B | F7DA                      | 	neg    dx
   305 | 0000029D | F7D8                      | 	neg    ax
   306 | 0000029F | 83DA00                    | 	sbb    dx,0000
   307 | 000002A2 | 83CF0C                    | 	or     di,000Ch
   308 |          |                           | LSR_03:
   309 | 000002A5 | 09C9                      | 	or     cx,cx
   310 | 000002A7 | 790A                      | 	jns    LSR_04
   311 | 000002A9 | F7D9                      | 	neg    cx
   312 | 000002AB | F7DB                      | 	neg    bx
   313 | 000002AD | 83D900                    | 	sbb    cx,0000
   314 | 000002B0 | 83F704                    | 	xor    di,0004
   315 |          |                           | LSR_04:
   316 | 000002B3 | 89CD                      | 	mov    bp,cx
   317 | 000002B5 | B92000                    | 	mov    cx,0020h
   318 | 000002B8 | 57                        | 	push   di
   319 | 000002B9 | 31FF                      | 	xor    di,di
   320 | 000002BB | 31F6                      | 	xor    si,si
   321 |          |                           | LSR_05:
   322 | 000002BD | D1E0                      | 	shl    ax,1
   323 | 000002BF | D1D2                      | 	rcl    dx,1
   324 | 000002C1 | D1D6                      | 	rcl    si,1
   325 | 000002C3 | D1D7                      | 	rcl    di,1
   326 | 000002C5 | 39EF                      | 	cmp    di,bp
   327 | 000002C7 | 720B                      | 	jb     LSR_07
   328 | 000002C9 | 7704                      | 	ja     LSR_06
   329 | 000002CB | 39DE                      | 	cmp    si,bx
   330 | 000002CD | 7205                      | 	jb     LSR_07
   331 |          |                           | LSR_06:
   332 | 000002CF | 29DE                      | 	sub    si,bx
   333 | 000002D1 | 19EF                      | 	sbb    di,bp
   334 | 000002D3 | 40                        | 	inc    ax
   335 |          |                           | LSR_07:
   336 | 000002D4 | E2E7                      | 	loop   LSR_05
   337 | 000002D6 | 5B                        | 	pop    bx
   338 | 000002D7 | F7C30200                  | 	test   bx,0002
   339 | 000002DB | 7406                      | 	je     LSR_08
   340 | 000002DD | 89F0                      | 	mov    ax,si
   341 | 000002DF | 89FA                      | 	mov    dx,di
   342 | 000002E1 | D1EB                      | 	shr    bx,1
   343 |          |                           | LSR_08:
   344 | 000002E3 | F7C30400                  | 	test   bx,0004h
   345 | 000002E7 | 7407                      | 	je     LSR_09
   346 | 000002E9 | F7DA                      | 	neg    dx
   347 | 000002EB | F7D8                      | 	neg    ax
   348 | 000002ED | 83DA00                    | 	sbb    dx,0000
   349 |          |                           | LSR_09:
   350 | 000002F0 | 5F                        | 	pop    di
   351 | 000002F1 | 5E                        | 	pop    si
   352 | 000002F2 | 5D                        | 	pop    bp
   353 | 000002F3 | CA0800                    | 	retf   0008
   354 |          |                           | LSR_10:
   355 | 000002F6 | F7F3                      | 	div    bx
   356 | 000002F8 | F7C70200                  | 	test   di,0002
   357 | 000002FC | 7401                      | 	je     LSR_11
   358 | 000002FE | 92                        | 	xchg   dx,ax
   359 |          |                           | LSR_11:
   360 | 000002FF | 31D2                      | 	xor    dx,dx
   361 | 00000301 | EBED                      | 	jmp    LSR_09
   362 |          |                           | SR_lshl:	; N_LXLSH@
   363 |          |                           | SR_ulshl:
   364 |          |                           | 	; r = a << b
   365 | 00000303 | 5B                        | 	pop    bx
   366 | 00000304 | 0E                        | 	push   cs
   367 | 00000305 | 53                        | 	push   bx
   368 |          |                           | 
   369 | 00000306 | 55                        | 	push   bp
   370 | 00000307 | 89E5                      | 	mov    bp,sp
   371 |          |                           | 
   372 | 00000309 | 51                        | 	push   cx	; C86 doesn't expect use of cx or bx
   373 |          |                           | 
   374 | 0000030A | 8B4606                    | 	mov    ax, [bp+6]	; pop loword(a)
   375 | 0000030D | 8B5608                    | 	mov    dx, [bp+8]	; pop hiword(a)
   376 | 00000310 | 8B4E0A                    | 	mov    cx, [bp+10]	; pop word(b)
   377 |          |                           | 	
   378 |          |                           | 	; LXLSH@
   379 | 00000313 | 80F910                    | 	cmp    cl,10h
   380 | 00000316 | 7312                      | 	jnb    LSR_12
   381 | 00000318 | 89C3                      | 	mov    bx,ax
   382 | 0000031A | D3E0                      | 	shl    ax,cl
   383 | 0000031C | D3E2                      | 	shl    dx,cl
   384 | 0000031E | F6D9                      | 	neg    cl
   385 | 00000320 | 80C110                    | 	add    cl,10h
   386 | 00000323 | D3EB                      | 	shr    bx,cl
   387 | 00000325 | 09DA                      | 	or     dx,bx
   388 | 00000327 | 59                        | 	pop    cx
   389 | 00000328 | 5D                        | 	pop    bp
   390 | 00000329 | CB                        | 	retf
   391 |          |                           | LSR_12:
   392 | 0000032A | 80E910                    | 	sub    cl,10h
   393 | 0000032D | 92                        | 	xchg   dx,ax
   394 | 0000032E | 31C0                      | 	xor    ax,ax
   395 | 00000330 | D3E2                      | 	shl    dx,cl
   396 | 00000332 | 59                        | 	pop    cx
   397 | 00000333 | 5D                        | 	pop    bp
   398 | 00000334 | CB                        | 	retf
   399 |          |                           | SR_lshr:	; N_LXRSH@
   400 |          |                           | 	; r = a >> b
   401 | 00000335 | 5B                        | 	pop    bx
   402 | 00000336 | 0E                        | 	push   cs
   403 | 00000337 | 53                        | 	push   bx
   404 |          |                           | 
   405 | 00000338 | 55                        | 	push   bp
   406 | 00000339 | 89E5                      | 	mov    bp,sp
   407 |          |                           | 
   408 | 0000033B | 51                        | 	push   cx	; C86 doesn't expect use of cx or bx
   409 |          |                           | 
   410 | 0000033C | 8B4606                    |         mov    ax, [bp+6]	; pop loword(a)
   411 | 0000033F | 8B5608                    | 	mov    dx, [bp+8]	; pop hiword(a)
   412 | 00000342 | 8B4E0A                    | 	mov    cx, [bp+10]	; pop word(b)
   413 |          |                           | 	
   414 |          |                           | 	; LXRSH@
   415 | 00000345 | 80F910                    | 	cmp    cl,10h
   416 | 00000348 | 7312                      | 	jnb    LSR_13
   417 | 0000034A | 89D3                      | 	mov    bx,dx
   418 | 0000034C | D3E8                      | 	shr    ax,cl
   419 | 0000034E | D3FA                      | 	sar    dx,cl
   420 | 00000350 | F6D9                      | 	neg    cl
   421 | 00000352 | 80C110                    | 	add    cl,10h
   422 | 00000355 | D3E3                      | 	shl    bx,cl
   423 | 00000357 | 09D8                      | 	or     ax,bx
   424 | 00000359 | 59                        | 	pop    cx
   425 | 0000035A | 5D                        | 	pop    bp
   426 | 0000035B | CB                        | 	retf
   427 |          |                           | LSR_13:
   428 | 0000035C | 80E910                    | 	sub    cl,10h
   429 | 0000035F | 92                        | 	xchg   dx,ax
   430 | 00000360 | 99                        | 	cwd
   431 | 00000361 | D3F8                      | 	sar    ax,cl
   432 | 00000363 | 59                        | 	pop    cx
   433 | 00000364 | 5D                        | 	pop    bp
   434 | 00000365 | CB                        | 	retf
   435 |          |                           | SR_ulshr:	; N_LXURSH@
   436 |          |                           | 	; r = a >> b
   437 | 00000366 | 5B                        | 	pop    bx
   438 | 00000367 | 0E                        | 	push   cs
   439 | 00000368 | 53                        | 	push   bx
   440 |          |                           | 
   441 | 00000369 | 55                        | 	push   bp
   442 | 0000036A | 89E5                      | 	mov    bp,sp
   443 |          |                           | 
   444 | 0000036C | 51                        | 	push   cx	; C86 doesn't expect use of cx or bx
   445 |          |                           | 
   446 | 0000036D | 8B4606                    |         mov    ax, [bp+6]	; pop loword(a)
   447 | 00000370 | 8B5608                    | 	mov    dx, [bp+8]	; pop hiword(a)
   448 | 00000373 | 8B4E0A                    | 	mov    cx, [bp+10]	; pop word(b)
   449 |          |                           | 	
   450 |          |                           | 	; LXURSH@
   451 | 00000376 | 80F910                    | 	cmp    cl,10h
   452 | 00000379 | 7312                      | 	jnb    LSR_14
   453 | 0000037B | 89D3                      | 	mov    bx,dx
   454 | 0000037D | D3E8                      | 	shr    ax,cl
   455 | 0000037F | D3EA                      | 	shr    dx,cl
   456 | 00000381 | F6D9                      | 	neg    cl
   457 | 00000383 | 80C110                    | 	add    cl,10h
   458 | 00000386 | D3E3                      | 	shl    bx,cl
   459 | 00000388 | 09D8                      | 	or     ax,bx
   460 | 0000038A | 59                        | 	pop    cx
   461 | 0000038B | 5D                        | 	pop    bp
   462 | 0000038C | CB                        | 	retf
   463 |          |                           | LSR_14:
   464 | 0000038D | 80E910                    | 	sub    cl,10h
   465 | 00000390 | 92                        | 	xchg   dx,ax
   466 | 00000391 | 31D2                      | 	xor    dx,dx
   467 | 00000393 | D3E8                      | 	shr    ax,cl
   468 | 00000395 | 59                        | 	pop    cx
   469 | 00000396 | 5D                        | 	pop    bp
   470 | 00000397 | CB                        | 	retf
   471 |          |                           | SR_lmul:	; N_LXMUL@
   472 |          |                           | SR_ulmul:
   473 |          |                           | 	; r = a * b
   474 | 00000398 | 55                        | 	push   bp
   475 | 00000399 | 56                        | 	push   si
   476 | 0000039A | 89E5                      | 	mov    bp,sp
   477 |          |                           | 
   478 | 0000039C | 51                        | 	push   cx	; C86 doesn't expect use of cx or bx
   479 | 0000039D | 53                        | 	push   bx
   480 |          |                           | 
   481 | 0000039E | 8B5E06                    |         mov    bx, [bp+6]	; pop loword(a)
   482 | 000003A1 | 8B4E08                    | 	mov    cx, [bp+8]	; pop hiword(a)
   483 | 000003A4 | 8B460A                    | 	mov    ax, [bp+10]	; pop loword(b)
   484 | 000003A7 | 8B560C                    | 	mov    dx, [bp+12]	; pop hiword(b)
   485 |          |                           | 	
   486 | 000003AA | 96                        | 	xchg   si,ax
   487 | 000003AB | 92                        | 	xchg   dx,ax
   488 | 000003AC | 85C0                      | 	test   ax,ax
   489 | 000003AE | 7402                      | 	je     LSR_15
   490 | 000003B0 | F7E3                      | 	mul    bx
   491 |          |                           | LSR_15:
   492 | 000003B2 | E305                      | 	jcxz   LSR_16
   493 | 000003B4 | 91                        | 	xchg   cx,ax
   494 | 000003B5 | F7E6                      | 	mul    si
   495 | 000003B7 | 01C8                      | 	add    ax,cx
   496 |          |                           | LSR_16:
   497 | 000003B9 | 96                        | 	xchg   si,ax
   498 | 000003BA | F7E3                      | 	mul    bx
   499 | 000003BC | 01F2                      | 	add    dx,si
   500 | 000003BE | 5B                        | 	pop    bx
   501 | 000003BF | 59                        | 	pop    cx
   502 | 000003C0 | 5E                        | 	pop    si
   503 | 000003C1 | 5D                        | 	pop    bp
   504 | 000003C2 | C3                        | 	ret
   505 |          |                           | 
   506 |          |                           | ; Generated by c86 (BYU-NASM) 5.1 (beta) from clib.c
   507 |          |                           | 	CPU	8086
   508 | 000003C3 | 90                        | 	ALIGN	2
   509 | 000003C4 | E9012E                    | 	jmp	main	; Jump to program start
   510 |          |                           | new_line:
   511 | 000003C7 | 0D0A24                    | 	db	13,10,36
   512 |          |                           | 	ALIGN	2
   513 |          |                           | signalEOI:
   514 | 000003CA | EB08                      | 	jmp	L_clib_1
   515 |          |                           | L_clib_2:
   516 | 000003CC | B020                      | 	mov	al, 0x20
   517 | 000003CE | E620                      | 	out	0x20, al
   518 | 000003D0 | 89EC                      | 	mov	sp, bp
   519 | 000003D2 | 5D                        | 	pop	bp
   520 | 000003D3 | C3                        | 	ret
   521 |          |                           | L_clib_1:
   522 | 000003D4 | 55                        | 	push	bp
   523 | 000003D5 | 89E5                      | 	mov	bp, sp
   524 | 000003D7 | EBF3                      | 	jmp	L_clib_2
   525 | 000003D9 | 90                        | 	ALIGN	2
   526 |          |                           | exit:
   527 | 000003DA | EB0B                      | 	jmp	L_clib_4
   528 |          |                           | L_clib_5:
   529 | 000003DC | B44C                      | 	mov	ah, 4Ch
   530 | 000003DE | 8A4604                    | 	mov	al, [bp+4]
   531 | 000003E1 | CD21                      | 	int	21h
   532 | 000003E3 | 89EC                      | 	mov	sp, bp
   533 | 000003E5 | 5D                        | 	pop	bp
   534 | 000003E6 | C3                        | 	ret
   535 |          |                           | L_clib_4:
   536 | 000003E7 | 55                        | 	push	bp
   537 | 000003E8 | 89E5                      | 	mov	bp, sp
   538 | 000003EA | EBF0                      | 	jmp	L_clib_5
   539 |          |                           | 	ALIGN	2
   540 |          |                           | print:
   541 | 000003EC | EB11                      | 	jmp	L_clib_7
   542 |          |                           | L_clib_8:
   543 | 000003EE | B440                      | 	mov	ah, 40h
   544 | 000003F0 | BB0100                    | 	mov	bx, 1
   545 | 000003F3 | 8B4E06                    | 	mov	cx, [bp+6]
   546 | 000003F6 | 8B5604                    | 	mov	dx, [bp+4]
   547 | 000003F9 | CD21                      | 	int	21h
   548 | 000003FB | 89EC                      | 	mov	sp, bp
   549 | 000003FD | 5D                        | 	pop	bp
   550 | 000003FE | C3                        | 	ret
   551 |          |                           | L_clib_7:
   552 | 000003FF | 55                        | 	push	bp
   553 | 00000400 | 89E5                      | 	mov	bp, sp
   554 | 00000402 | EBEA                      | 	jmp	L_clib_8
   555 |          |                           | 	ALIGN	2
   556 |          |                           | printChar:
   557 | 00000404 | EB0B                      | 	jmp	L_clib_10
   558 |          |                           | L_clib_11:
   559 | 00000406 | B402                      | 	mov	ah, 2
   560 | 00000408 | 8A5604                    | 	mov	dl, [bp+4]
   561 | 0000040B | CD21                      | 	int	21h
   562 | 0000040D | 89EC                      | 	mov	sp, bp
   563 | 0000040F | 5D                        | 	pop	bp
   564 | 00000410 | C3                        | 	ret
   565 |          |                           | L_clib_10:
   566 | 00000411 | 55                        | 	push	bp
   567 | 00000412 | 89E5                      | 	mov	bp, sp
   568 | 00000414 | EBF0                      | 	jmp	L_clib_11
   569 |          |                           | 	ALIGN	2
   570 |          |                           | printNewLine:
   571 | 00000416 | EB0B                      | 	jmp	L_clib_13
   572 |          |                           | L_clib_14:
   573 | 00000418 | B409                      | 	mov	ah, 9
   574 | 0000041A | BA[C703]                  | 	mov	dx, new_line
   575 | 0000041D | CD21                      | 	int	21h
   576 | 0000041F | 89EC                      | 	mov	sp, bp
   577 | 00000421 | 5D                        | 	pop	bp
   578 | 00000422 | C3                        | 	ret
   579 |          |                           | L_clib_13:
   580 | 00000423 | 55                        | 	push	bp
   581 | 00000424 | 89E5                      | 	mov	bp, sp
   582 | 00000426 | EBF0                      | 	jmp	L_clib_14
   583 |          |                           | 	ALIGN	2
   584 |          |                           | printString:
   585 | 00000428 | EB1C                      | 	jmp	L_clib_16
   586 |          |                           | L_clib_17:
   587 | 0000042A | 31F6                      | 	xor	si,si
   588 | 0000042C | 8B5E04                    | 	mov	bx, [bp+4]
   589 | 0000042F | EB01                      | 	jmp	printString2
   590 |          |                           | 	printString1:
   591 | 00000431 | 46                        | 	inc	si
   592 |          |                           | 	printString2:
   593 | 00000432 | 803800                    | 	cmp	byte [bx+si],0
   594 | 00000435 | 75FA                      | 	jne	printString1
   595 | 00000437 | 89DA                      | 	mov	dx, bx
   596 | 00000439 | 89F1                      | 	mov	cx, si
   597 | 0000043B | B440                      | 	mov	ah, 40h
   598 | 0000043D | BB0100                    | 	mov	bx, 1
   599 | 00000440 | CD21                      | 	int	21h
   600 | 00000442 | 89EC                      | 	mov	sp, bp
   601 | 00000444 | 5D                        | 	pop	bp
   602 | 00000445 | C3                        | 	ret
   603 |          |                           | L_clib_16:
   604 | 00000446 | 55                        | 	push	bp
   605 | 00000447 | 89E5                      | 	mov	bp, sp
   606 | 00000449 | 51                        | 	push	cx
   607 | 0000044A | EBDE                      | 	jmp	L_clib_17
   608 |          |                           | 	ALIGN	2
   609 |          |                           | printInt:
   610 | 0000044C | E99500                    | 	jmp	L_clib_19
   611 |          |                           | L_clib_20:
   612 | 0000044F | C746FE0000                | 	mov	word [bp-2], 0
   613 | 00000454 | C746FC1027                | 	mov	word [bp-4], 10000
   614 | 00000459 | 837E0400                  | 	cmp	word [bp+4], 0
   615 | 0000045D | 7D0F                      | 	jge	L_clib_21
   616 | 0000045F | C646F62D                  | 	mov	byte [bp-10], 45
   617 | 00000463 | FF46FE                    | 	inc	word [bp-2]
   618 | 00000466 | 8B4604                    | 	mov	ax, word [bp+4]
   619 | 00000469 | F7D8                      | 	neg	ax
   620 | 0000046B | 894604                    | 	mov	word [bp+4], ax
   621 |          |                           | L_clib_21:
   622 | 0000046E | 8B4604                    | 	mov	ax, word [bp+4]
   623 | 00000471 | 85C0                      | 	test	ax, ax
   624 | 00000473 | 7507                      | 	jne	L_clib_22
   625 | 00000475 | C746FC0100                | 	mov	word [bp-4], 1
   626 | 0000047A | EB19                      | 	jmp	L_clib_23
   627 |          |                           | L_clib_22:
   628 | 0000047C | EB0C                      | 	jmp	L_clib_25
   629 |          |                           | L_clib_24:
   630 | 0000047E | 8B46FC                    | 	mov	ax, word [bp-4]
   631 | 00000481 | 99                        | 	cwd
   632 | 00000482 | B90A00                    | 	mov	cx, 10
   633 | 00000485 | F7F9                      | 	idiv	cx
   634 | 00000487 | 8946FC                    | 	mov	word [bp-4], ax
   635 |          |                           | L_clib_25:
   636 | 0000048A | 8B4604                    | 	mov	ax, word [bp+4]
   637 | 0000048D | 99                        | 	cwd
   638 | 0000048E | F77EFC                    | 	idiv	word [bp-4]
   639 | 00000491 | 85C0                      | 	test	ax, ax
   640 | 00000493 | 74E9                      | 	je	L_clib_24
   641 |          |                           | L_clib_26:
   642 |          |                           | L_clib_23:
   643 | 00000495 | EB36                      | 	jmp	L_clib_28
   644 |          |                           | L_clib_27:
   645 | 00000497 | 8B4604                    | 	mov	ax, word [bp+4]
   646 | 0000049A | 31D2                      | 	xor	dx, dx
   647 | 0000049C | F776FC                    | 	div	word [bp-4]
   648 | 0000049F | 0430                      | 	add	al, 48
   649 | 000004A1 | 8B76FE                    | 	mov	si, word [bp-2]
   650 | 000004A4 | 8D56F6                    | 	lea	dx, [bp-10]
   651 | 000004A7 | 01D6                      | 	add	si, dx
   652 | 000004A9 | 8804                      | 	mov	byte [si], al
   653 | 000004AB | FF46FE                    | 	inc	word [bp-2]
   654 | 000004AE | 8B4604                    | 	mov	ax, word [bp+4]
   655 | 000004B1 | 31D2                      | 	xor	dx, dx
   656 | 000004B3 | F776FC                    | 	div	word [bp-4]
   657 | 000004B6 | 89D0                      | 	mov	ax, dx
   658 | 000004B8 | 894604                    | 	mov	word [bp+4], ax
   659 | 000004BB | 8B46FC                    | 	mov	ax, word [bp-4]
   660 | 000004BE | 99                        | 	cwd
   661 | 000004BF | B90A00                    | 	mov	cx, 10
   662 | 000004C2 | F7F9                      | 	idiv	cx
   663 | 000004C4 | 8946FC                    | 	mov	word [bp-4], ax
   664 | 000004C7 | 8B46FC                    | 	mov	ax, word [bp-4]
   665 | 000004CA | 8946FC                    | 	mov	word [bp-4], ax
   666 |          |                           | L_clib_28:
   667 | 000004CD | 837EFC00                  | 	cmp	word [bp-4], 0
   668 | 000004D1 | 7FC4                      | 	jg	L_clib_27
   669 |          |                           | L_clib_29:
   670 | 000004D3 | FF76FE                    | 	push	word [bp-2]
   671 | 000004D6 | 8D46F6                    | 	lea	ax, [bp-10]
   672 | 000004D9 | 50                        | 	push	ax
   673 | 000004DA | E80FFF                    | 	call	print
   674 | 000004DD | 83C404                    | 	add	sp, 4
   675 | 000004E0 | 89EC                      | 	mov	sp, bp
   676 | 000004E2 | 5D                        | 	pop	bp
   677 | 000004E3 | C3                        | 	ret
   678 |          |                           | L_clib_19:
   679 | 000004E4 | 55                        | 	push	bp
   680 | 000004E5 | 89E5                      | 	mov	bp, sp
   681 | 000004E7 | 83EC0A                    | 	sub	sp, 10
   682 | 000004EA | E962FF                    | 	jmp	L_clib_20
   683 | 000004ED | 90                        | 	ALIGN	2
   684 |          |                           | printLong:
   685 | 000004EE | E9D200                    | 	jmp	L_clib_31
   686 |          |                           | L_clib_32:
   687 | 000004F1 | C746FE0000                | 	mov	word [bp-2], 0
   688 | 000004F6 | C746FA00CA                | 	mov	word [bp-6], 51712
   689 | 000004FB | C746FC9A3B                | 	mov	word [bp-4], 15258
   690 | 00000500 | 837E0600                  | 	cmp	word [bp+6], 0
   691 | 00000504 | 7F22                      | 	jg	L_clib_33
   692 | 00000506 | 7C06                      | 	jl	L_clib_34
   693 | 00000508 | 837E0400                  | 	cmp	word [bp+4], 0
   694 | 0000050C | 731A                      | 	jae	L_clib_33
   695 |          |                           | L_clib_34:
   696 | 0000050E | C646EF2D                  | 	mov	byte [bp-17], 45
   697 | 00000512 | FF46FE                    | 	inc	word [bp-2]
   698 | 00000515 | 8B4604                    | 	mov	ax, word [bp+4]
   699 | 00000518 | 8B5606                    | 	mov	dx, word [bp+6]
   700 | 0000051B | F7D8                      | 	neg	ax
   701 | 0000051D | 83D200                    | 	adc	dx, 0
   702 | 00000520 | F7DA                      | 	neg	dx
   703 | 00000522 | 894604                    | 	mov	word [bp+4], ax
   704 | 00000525 | 895606                    | 	mov	word [bp+6], dx
   705 |          |                           | L_clib_33:
   706 | 00000528 | 8B4604                    | 	mov	ax, word [bp+4]
   707 | 0000052B | 8B5606                    | 	mov	dx, word [bp+6]
   708 | 0000052E | 09C2                      | 	or	dx, ax
   709 | 00000530 | 750C                      | 	jne	L_clib_35
   710 | 00000532 | C746FA0100                | 	mov	word [bp-6], 1
   711 | 00000537 | C746FC0000                | 	mov	word [bp-4], 0
   712 | 0000053C | EB23                      | 	jmp	L_clib_36
   713 |          |                           | L_clib_35:
   714 | 0000053E | EB0E                      | 	jmp	L_clib_38
   715 |          |                           | L_clib_37:
   716 | 00000540 | B80A00                    | 	mov	ax, 10
   717 | 00000543 | 31D2                      | 	xor	dx, dx
   718 | 00000545 | 52                        | 	push	dx
   719 | 00000546 | 50                        | 	push	ax
   720 | 00000547 | 8D46FA                    | 	lea	ax, [bp-6]
   721 | 0000054A | 50                        | 	push	ax
   722 | 0000054B | E8B5FB                    | 	call	SR_asldiv
   723 |          |                           | L_clib_38:
   724 | 0000054E | FF76FC                    | 	push	word [bp-4]
   725 | 00000551 | FF76FA                    | 	push	word [bp-6]
   726 | 00000554 | FF7606                    | 	push	word [bp+6]
   727 | 00000557 | FF7604                    | 	push	word [bp+4]
   728 | 0000055A | E8F8FC                    | 	call	SR_ldiv
   729 | 0000055D | 09C2                      | 	or	dx, ax
   730 | 0000055F | 74DF                      | 	je	L_clib_37
   731 |          |                           | L_clib_39:
   732 |          |                           | L_clib_36:
   733 | 00000561 | EB41                      | 	jmp	L_clib_41
   734 |          |                           | L_clib_40:
   735 | 00000563 | FF76FC                    | 	push	word [bp-4]
   736 | 00000566 | FF76FA                    | 	push	word [bp-6]
   737 | 00000569 | FF7606                    | 	push	word [bp+6]
   738 | 0000056C | FF7604                    | 	push	word [bp+4]
   739 | 0000056F | E8EAFC                    | 	call	SR_uldiv
   740 | 00000572 | 0430                      | 	add	al, 48
   741 | 00000574 | 8B76FE                    | 	mov	si, word [bp-2]
   742 | 00000577 | 8D56EF                    | 	lea	dx, [bp-17]
   743 | 0000057A | 01D6                      | 	add	si, dx
   744 | 0000057C | 8804                      | 	mov	byte [si], al
   745 | 0000057E | FF46FE                    | 	inc	word [bp-2]
   746 | 00000581 | FF76FC                    | 	push	word [bp-4]
   747 | 00000584 | FF76FA                    | 	push	word [bp-6]
   748 | 00000587 | FF7606                    | 	push	word [bp+6]
   749 | 0000058A | FF7604                    | 	push	word [bp+4]
   750 | 0000058D | E8D4FC                    | 	call	SR_lmod
   751 | 00000590 | 894604                    | 	mov	word [bp+4], ax
   752 | 00000593 | 895606                    | 	mov	word [bp+6], dx
   753 | 00000596 | B80A00                    | 	mov	ax, 10
   754 | 00000599 | 31D2                      | 	xor	dx, dx
   755 | 0000059B | 52                        | 	push	dx
   756 | 0000059C | 50                        | 	push	ax
   757 | 0000059D | 8D46FA                    | 	lea	ax, [bp-6]
   758 | 000005A0 | 50                        | 	push	ax
   759 | 000005A1 | E85FFB                    | 	call	SR_asldiv
   760 |          |                           | L_clib_41:
   761 | 000005A4 | 837EFC00                  | 	cmp	word [bp-4], 0
   762 | 000005A8 | 7FB9                      | 	jg	L_clib_40
   763 | 000005AA | 7506                      | 	jne	L_clib_43
   764 | 000005AC | 837EFA00                  | 	cmp	word [bp-6], 0
   765 | 000005B0 | 77B1                      | 	ja	L_clib_40
   766 |          |                           | L_clib_43:
   767 |          |                           | L_clib_42:
   768 | 000005B2 | FF76FE                    | 	push	word [bp-2]
   769 | 000005B5 | 8D46EF                    | 	lea	ax, [bp-17]
   770 | 000005B8 | 50                        | 	push	ax
   771 | 000005B9 | E830FE                    | 	call	print
   772 | 000005BC | 83C404                    | 	add	sp, 4
   773 | 000005BF | 89EC                      | 	mov	sp, bp
   774 | 000005C1 | 5D                        | 	pop	bp
   775 | 000005C2 | C3                        | 	ret
   776 |          |                           | L_clib_31:
   777 | 000005C3 | 55                        | 	push	bp
   778 | 000005C4 | 89E5                      | 	mov	bp, sp
   779 | 000005C6 | 83EC12                    | 	sub	sp, 18
   780 | 000005C9 | E925FF                    | 	jmp	L_clib_32
   781 |          |                           | 	ALIGN	2
   782 |          |                           | printUInt:
   783 | 000005CC | EB7C                      | 	jmp	L_clib_45
   784 |          |                           | L_clib_46:
   785 | 000005CE | C746FE0000                | 	mov	word [bp-2], 0
   786 | 000005D3 | C746FC1027                | 	mov	word [bp-4], 10000
   787 | 000005D8 | 8B4604                    | 	mov	ax, word [bp+4]
   788 | 000005DB | 85C0                      | 	test	ax, ax
   789 | 000005DD | 7507                      | 	jne	L_clib_47
   790 | 000005DF | C746FC0100                | 	mov	word [bp-4], 1
   791 | 000005E4 | EB1B                      | 	jmp	L_clib_48
   792 |          |                           | L_clib_47:
   793 | 000005E6 | EB0D                      | 	jmp	L_clib_50
   794 |          |                           | L_clib_49:
   795 | 000005E8 | 8B46FC                    | 	mov	ax, word [bp-4]
   796 | 000005EB | 31D2                      | 	xor	dx, dx
   797 | 000005ED | B90A00                    | 	mov	cx, 10
   798 | 000005F0 | F7F1                      | 	div	cx
   799 | 000005F2 | 8946FC                    | 	mov	word [bp-4], ax
   800 |          |                           | L_clib_50:
   801 | 000005F5 | 8B4604                    | 	mov	ax, word [bp+4]
   802 | 000005F8 | 31D2                      | 	xor	dx, dx
   803 | 000005FA | F776FC                    | 	div	word [bp-4]
   804 | 000005FD | 85C0                      | 	test	ax, ax
   805 | 000005FF | 74E7                      | 	je	L_clib_49
   806 |          |                           | L_clib_51:
   807 |          |                           | L_clib_48:
   808 | 00000601 | EB2F                      | 	jmp	L_clib_53
   809 |          |                           | L_clib_52:
   810 | 00000603 | 8B4604                    | 	mov	ax, word [bp+4]
   811 | 00000606 | 31D2                      | 	xor	dx, dx
   812 | 00000608 | F776FC                    | 	div	word [bp-4]
   813 | 0000060B | 0430                      | 	add	al, 48
   814 | 0000060D | 8B76FE                    | 	mov	si, word [bp-2]
   815 | 00000610 | 8D56F6                    | 	lea	dx, [bp-10]
   816 | 00000613 | 01D6                      | 	add	si, dx
   817 | 00000615 | 8804                      | 	mov	byte [si], al
   818 | 00000617 | FF46FE                    | 	inc	word [bp-2]
   819 | 0000061A | 8B4604                    | 	mov	ax, word [bp+4]
   820 | 0000061D | 31D2                      | 	xor	dx, dx
   821 | 0000061F | F776FC                    | 	div	word [bp-4]
   822 | 00000622 | 895604                    | 	mov	word [bp+4], dx
   823 | 00000625 | 8B46FC                    | 	mov	ax, word [bp-4]
   824 | 00000628 | 31D2                      | 	xor	dx, dx
   825 | 0000062A | B90A00                    | 	mov	cx, 10
   826 | 0000062D | F7F1                      | 	div	cx
   827 | 0000062F | 8946FC                    | 	mov	word [bp-4], ax
   828 |          |                           | L_clib_53:
   829 | 00000632 | 8B46FC                    | 	mov	ax, word [bp-4]
   830 | 00000635 | 85C0                      | 	test	ax, ax
   831 | 00000637 | 75CA                      | 	jne	L_clib_52
   832 |          |                           | L_clib_54:
   833 | 00000639 | FF76FE                    | 	push	word [bp-2]
   834 | 0000063C | 8D46F6                    | 	lea	ax, [bp-10]
   835 | 0000063F | 50                        | 	push	ax
   836 | 00000640 | E8A9FD                    | 	call	print
   837 | 00000643 | 83C404                    | 	add	sp, 4
   838 | 00000646 | 89EC                      | 	mov	sp, bp
   839 | 00000648 | 5D                        | 	pop	bp
   840 | 00000649 | C3                        | 	ret
   841 |          |                           | L_clib_45:
   842 | 0000064A | 55                        | 	push	bp
   843 | 0000064B | 89E5                      | 	mov	bp, sp
   844 | 0000064D | 83EC0A                    | 	sub	sp, 10
   845 | 00000650 | E97BFF                    | 	jmp	L_clib_46
   846 | 00000653 | 90                        | 	ALIGN	2
   847 |          |                           | printULong:
   848 | 00000654 | E99E00                    | 	jmp	L_clib_56
   849 |          |                           | L_clib_57:
   850 | 00000657 | C746FE0000                | 	mov	word [bp-2], 0
   851 | 0000065C | C746FA00CA                | 	mov	word [bp-6], 51712
   852 | 00000661 | C746FC9A3B                | 	mov	word [bp-4], 15258
   853 | 00000666 | 8B4604                    | 	mov	ax, word [bp+4]
   854 | 00000669 | 8B5606                    | 	mov	dx, word [bp+6]
   855 | 0000066C | 09C2                      | 	or	dx, ax
   856 | 0000066E | 750C                      | 	jne	L_clib_58
   857 | 00000670 | C746FA0100                | 	mov	word [bp-6], 1
   858 | 00000675 | C746FC0000                | 	mov	word [bp-4], 0
   859 | 0000067A | EB23                      | 	jmp	L_clib_59
   860 |          |                           | L_clib_58:
   861 | 0000067C | EB0E                      | 	jmp	L_clib_61
   862 |          |                           | L_clib_60:
   863 | 0000067E | B80A00                    | 	mov	ax, 10
   864 | 00000681 | 31D2                      | 	xor	dx, dx
   865 | 00000683 | 52                        | 	push	dx
   866 | 00000684 | 50                        | 	push	ax
   867 | 00000685 | 8D46FA                    | 	lea	ax, [bp-6]
   868 | 00000688 | 50                        | 	push	ax
   869 | 00000689 | E820FB                    | 	call	SR_asuldiv
   870 |          |                           | L_clib_61:
   871 | 0000068C | FF76FC                    | 	push	word [bp-4]
   872 | 0000068F | FF76FA                    | 	push	word [bp-6]
   873 | 00000692 | FF7606                    | 	push	word [bp+6]
   874 | 00000695 | FF7604                    | 	push	word [bp+4]
   875 | 00000698 | E8C1FB                    | 	call	SR_uldiv
   876 | 0000069B | 09C2                      | 	or	dx, ax
   877 | 0000069D | 74DF                      | 	je	L_clib_60
   878 |          |                           | L_clib_62:
   879 |          |                           | L_clib_59:
   880 | 0000069F | EB39                      | 	jmp	L_clib_64
   881 |          |                           | L_clib_63:
   882 | 000006A1 | FF76FC                    | 	push	word [bp-4]
   883 | 000006A4 | FF76FA                    | 	push	word [bp-6]
   884 | 000006A7 | FF7606                    | 	push	word [bp+6]
   885 | 000006AA | FF7604                    | 	push	word [bp+4]
   886 | 000006AD | E8ACFB                    | 	call	SR_uldiv
   887 | 000006B0 | 0430                      | 	add	al, 48
   888 | 000006B2 | 8B76FE                    | 	mov	si, word [bp-2]
   889 | 000006B5 | 8D56EF                    | 	lea	dx, [bp-17]
   890 | 000006B8 | 01D6                      | 	add	si, dx
   891 | 000006BA | 8804                      | 	mov	byte [si], al
   892 | 000006BC | FF46FE                    | 	inc	word [bp-2]
   893 | 000006BF | FF76FC                    | 	push	word [bp-4]
   894 | 000006C2 | FF76FA                    | 	push	word [bp-6]
   895 | 000006C5 | 8D4604                    | 	lea	ax, [bp+4]
   896 | 000006C8 | 50                        | 	push	ax
   897 | 000006C9 | E800FB                    | 	call	SR_asilmod
   898 | 000006CC | B80A00                    | 	mov	ax, 10
   899 | 000006CF | 31D2                      | 	xor	dx, dx
   900 | 000006D1 | 52                        | 	push	dx
   901 | 000006D2 | 50                        | 	push	ax
   902 | 000006D3 | 8D46FA                    | 	lea	ax, [bp-6]
   903 | 000006D6 | 50                        | 	push	ax
   904 | 000006D7 | E8D2FA                    | 	call	SR_asuldiv
   905 |          |                           | L_clib_64:
   906 | 000006DA | 8B46FA                    | 	mov	ax, word [bp-6]
   907 | 000006DD | 8B56FC                    | 	mov	dx, word [bp-4]
   908 | 000006E0 | 09C2                      | 	or	dx, ax
   909 | 000006E2 | 75BD                      | 	jne	L_clib_63
   910 |          |                           | L_clib_65:
   911 | 000006E4 | FF76FE                    | 	push	word [bp-2]
   912 | 000006E7 | 8D46EF                    | 	lea	ax, [bp-17]
   913 | 000006EA | 50                        | 	push	ax
   914 | 000006EB | E8FEFC                    | 	call	print
   915 | 000006EE | 83C404                    | 	add	sp, 4
   916 | 000006F1 | 89EC                      | 	mov	sp, bp
   917 | 000006F3 | 5D                        | 	pop	bp
   918 | 000006F4 | C3                        | 	ret
   919 |          |                           | L_clib_56:
   920 | 000006F5 | 55                        | 	push	bp
   921 | 000006F6 | 89E5                      | 	mov	bp, sp
   922 | 000006F8 | 83EC12                    | 	sub	sp, 18
   923 | 000006FB | E959FF                    | 	jmp	L_clib_57
   924 |          |                           | 	ALIGN	2
   925 |          |                           | printByte:
   926 | 000006FE | EB61                      | 	jmp	L_clib_67
   927 |          |                           | L_clib_68:
   928 | 00000700 | 8A4604                    | 	mov	al, byte [bp+4]
   929 | 00000703 | 98                        | 	cbw
   930 | 00000704 | B90400                    | 	mov	cx, 4
   931 | 00000707 | D3F8                      | 	sar	ax, cl
   932 | 00000709 | 83E00F                    | 	and	ax, 15
   933 | 0000070C | 8846FF                    | 	mov	byte [bp-1], al
   934 | 0000070F | 807EFF09                  | 	cmp	byte [bp-1], 9
   935 | 00000713 | 7E0C                      | 	jle	L_clib_69
   936 | 00000715 | 8A46FF                    | 	mov	al, byte [bp-1]
   937 | 00000718 | 98                        | 	cbw
   938 | 00000719 | 83E80A                    | 	sub	ax, 10
   939 | 0000071C | 83C041                    | 	add	ax, 65
   940 | 0000071F | EB07                      | 	jmp	L_clib_70
   941 |          |                           | L_clib_69:
   942 | 00000721 | 8A46FF                    | 	mov	al, byte [bp-1]
   943 | 00000724 | 98                        | 	cbw
   944 | 00000725 | 83C030                    | 	add	ax, 48
   945 |          |                           | L_clib_70:
   946 | 00000728 | 8846FD                    | 	mov	byte [bp-3], al
   947 | 0000072B | 8A4604                    | 	mov	al, byte [bp+4]
   948 | 0000072E | 240F                      | 	and	al, 15
   949 | 00000730 | 8846FF                    | 	mov	byte [bp-1], al
   950 | 00000733 | 807EFF09                  | 	cmp	byte [bp-1], 9
   951 | 00000737 | 7E0C                      | 	jle	L_clib_71
   952 | 00000739 | 8A46FF                    | 	mov	al, byte [bp-1]
   953 | 0000073C | 98                        | 	cbw
   954 | 0000073D | 83E80A                    | 	sub	ax, 10
   955 | 00000740 | 83C041                    | 	add	ax, 65
   956 | 00000743 | EB07                      | 	jmp	L_clib_72
   957 |          |                           | L_clib_71:
   958 | 00000745 | 8A46FF                    | 	mov	al, byte [bp-1]
   959 | 00000748 | 98                        | 	cbw
   960 | 00000749 | 83C030                    | 	add	ax, 48
   961 |          |                           | L_clib_72:
   962 | 0000074C | 8846FE                    | 	mov	byte [bp-2], al
   963 | 0000074F | B80200                    | 	mov	ax, 2
   964 | 00000752 | 50                        | 	push	ax
   965 | 00000753 | 8D46FD                    | 	lea	ax, [bp-3]
   966 | 00000756 | 50                        | 	push	ax
   967 | 00000757 | E892FC                    | 	call	print
   968 | 0000075A | 83C404                    | 	add	sp, 4
   969 | 0000075D | 89EC                      | 	mov	sp, bp
   970 | 0000075F | 5D                        | 	pop	bp
   971 | 00000760 | C3                        | 	ret
   972 |          |                           | L_clib_67:
   973 | 00000761 | 55                        | 	push	bp
   974 | 00000762 | 89E5                      | 	mov	bp, sp
   975 | 00000764 | 83EC04                    | 	sub	sp, 4
   976 | 00000767 | EB97                      | 	jmp	L_clib_68
   977 | 00000769 | 90                        | 	ALIGN	2
   978 |          |                           | printWord:
   979 | 0000076A | EB59                      | 	jmp	L_clib_74
   980 |          |                           | L_clib_75:
   981 | 0000076C | C746FE0300                | 	mov	word [bp-2], 3
   982 | 00000771 | EB3A                      | 	jmp	L_clib_77
   983 |          |                           | L_clib_76:
   984 | 00000773 | 8B4604                    | 	mov	ax, word [bp+4]
   985 | 00000776 | 83E00F                    | 	and	ax, 15
   986 | 00000779 | 8846FD                    | 	mov	byte [bp-3], al
   987 | 0000077C | 807EFD09                  | 	cmp	byte [bp-3], 9
   988 | 00000780 | 7E0C                      | 	jle	L_clib_80
   989 | 00000782 | 8A46FD                    | 	mov	al, byte [bp-3]
   990 | 00000785 | 98                        | 	cbw
   991 | 00000786 | 83E80A                    | 	sub	ax, 10
   992 | 00000789 | 83C041                    | 	add	ax, 65
   993 | 0000078C | EB07                      | 	jmp	L_clib_81
   994 |          |                           | L_clib_80:
   995 | 0000078E | 8A46FD                    | 	mov	al, byte [bp-3]
   996 | 00000791 | 98                        | 	cbw
   997 | 00000792 | 83C030                    | 	add	ax, 48
   998 |          |                           | L_clib_81:
   999 | 00000795 | 8B76FE                    | 	mov	si, word [bp-2]
  1000 | 00000798 | 8D56F9                    | 	lea	dx, [bp-7]
  1001 | 0000079B | 01D6                      | 	add	si, dx
  1002 | 0000079D | 8804                      | 	mov	byte [si], al
  1003 | 0000079F | 8B4604                    | 	mov	ax, word [bp+4]
  1004 | 000007A2 | B90400                    | 	mov	cx, 4
  1005 | 000007A5 | D3F8                      | 	sar	ax, cl
  1006 | 000007A7 | 894604                    | 	mov	word [bp+4], ax
  1007 |          |                           | L_clib_79:
  1008 | 000007AA | FF4EFE                    | 	dec	word [bp-2]
  1009 |          |                           | L_clib_77:
  1010 | 000007AD | 837EFE00                  | 	cmp	word [bp-2], 0
  1011 | 000007B1 | 7DC0                      | 	jge	L_clib_76
  1012 |          |                           | L_clib_78:
  1013 | 000007B3 | B80400                    | 	mov	ax, 4
  1014 | 000007B6 | 50                        | 	push	ax
  1015 | 000007B7 | 8D46F9                    | 	lea	ax, [bp-7]
  1016 | 000007BA | 50                        | 	push	ax
  1017 | 000007BB | E82EFC                    | 	call	print
  1018 | 000007BE | 83C404                    | 	add	sp, 4
  1019 | 000007C1 | 89EC                      | 	mov	sp, bp
  1020 | 000007C3 | 5D                        | 	pop	bp
  1021 | 000007C4 | C3                        | 	ret
  1022 |          |                           | L_clib_74:
  1023 | 000007C5 | 55                        | 	push	bp
  1024 | 000007C6 | 89E5                      | 	mov	bp, sp
  1025 | 000007C8 | 83EC08                    | 	sub	sp, 8
  1026 | 000007CB | EB9F                      | 	jmp	L_clib_75
  1027 | 000007CD | 90                        | 	ALIGN	2
  1028 |          |                           | printDWord:
  1029 | 000007CE | E9AC00                    | 	jmp	L_clib_83
  1030 |          |                           | L_clib_84:
  1031 | 000007D1 | 8D4604                    | 	lea	ax, [bp+4]
  1032 | 000007D4 | 89C6                      | 	mov	si, ax
  1033 | 000007D6 | 8B04                      | 	mov	ax, word [si]
  1034 | 000007D8 | 8946FA                    | 	mov	word [bp-6], ax
  1035 | 000007DB | 8D4604                    | 	lea	ax, [bp+4]
  1036 | 000007DE | 89C6                      | 	mov	si, ax
  1037 | 000007E0 | 83C602                    | 	add	si, 2
  1038 | 000007E3 | 8B04                      | 	mov	ax, word [si]
  1039 | 000007E5 | 8946F8                    | 	mov	word [bp-8], ax
  1040 | 000007E8 | C746FE0300                | 	mov	word [bp-2], 3
  1041 | 000007ED | EB76                      | 	jmp	L_clib_86
  1042 |          |                           | L_clib_85:
  1043 | 000007EF | 8B46FA                    | 	mov	ax, word [bp-6]
  1044 | 000007F2 | 83E00F                    | 	and	ax, 15
  1045 | 000007F5 | 8846FD                    | 	mov	byte [bp-3], al
  1046 | 000007F8 | 807EFD09                  | 	cmp	byte [bp-3], 9
  1047 | 000007FC | 7E0C                      | 	jle	L_clib_89
  1048 | 000007FE | 8A46FD                    | 	mov	al, byte [bp-3]
  1049 | 00000801 | 98                        | 	cbw
  1050 | 00000802 | 83E80A                    | 	sub	ax, 10
  1051 | 00000805 | 83C041                    | 	add	ax, 65
  1052 | 00000808 | EB07                      | 	jmp	L_clib_90
  1053 |          |                           | L_clib_89:
  1054 | 0000080A | 8A46FD                    | 	mov	al, byte [bp-3]
  1055 | 0000080D | 98                        | 	cbw
  1056 | 0000080E | 83C030                    | 	add	ax, 48
  1057 |          |                           | L_clib_90:
  1058 | 00000811 | 8B56FE                    | 	mov	dx, word [bp-2]
  1059 | 00000814 | 83C204                    | 	add	dx, 4
  1060 | 00000817 | 89D6                      | 	mov	si, dx
  1061 | 00000819 | 8D56F0                    | 	lea	dx, [bp-16]
  1062 | 0000081C | 01D6                      | 	add	si, dx
  1063 | 0000081E | 8804                      | 	mov	byte [si], al
  1064 | 00000820 | 8B46FA                    | 	mov	ax, word [bp-6]
  1065 | 00000823 | B90400                    | 	mov	cx, 4
  1066 | 00000826 | D3F8                      | 	sar	ax, cl
  1067 | 00000828 | 8946FA                    | 	mov	word [bp-6], ax
  1068 | 0000082B | 8B46F8                    | 	mov	ax, word [bp-8]
  1069 | 0000082E | 83E00F                    | 	and	ax, 15
  1070 | 00000831 | 8846FD                    | 	mov	byte [bp-3], al
  1071 | 00000834 | 807EFD09                  | 	cmp	byte [bp-3], 9
  1072 | 00000838 | 7E0C                      | 	jle	L_clib_91
  1073 | 0000083A | 8A46FD                    | 	mov	al, byte [bp-3]
  1074 | 0000083D | 98                        | 	cbw
  1075 | 0000083E | 83E80A                    | 	sub	ax, 10
  1076 | 00000841 | 83C041                    | 	add	ax, 65
  1077 | 00000844 | EB07                      | 	jmp	L_clib_92
  1078 |          |                           | L_clib_91:
  1079 | 00000846 | 8A46FD                    | 	mov	al, byte [bp-3]
  1080 | 00000849 | 98                        | 	cbw
  1081 | 0000084A | 83C030                    | 	add	ax, 48
  1082 |          |                           | L_clib_92:
  1083 | 0000084D | 8B76FE                    | 	mov	si, word [bp-2]
  1084 | 00000850 | 8D56F0                    | 	lea	dx, [bp-16]
  1085 | 00000853 | 01D6                      | 	add	si, dx
  1086 | 00000855 | 8804                      | 	mov	byte [si], al
  1087 | 00000857 | 8B46F8                    | 	mov	ax, word [bp-8]
  1088 | 0000085A | B90400                    | 	mov	cx, 4
  1089 | 0000085D | D3F8                      | 	sar	ax, cl
  1090 | 0000085F | 8946F8                    | 	mov	word [bp-8], ax
  1091 |          |                           | L_clib_88:
  1092 | 00000862 | FF4EFE                    | 	dec	word [bp-2]
  1093 |          |                           | L_clib_86:
  1094 | 00000865 | 837EFE00                  | 	cmp	word [bp-2], 0
  1095 | 00000869 | 7D84                      | 	jge	L_clib_85
  1096 |          |                           | L_clib_87:
  1097 | 0000086B | B80800                    | 	mov	ax, 8
  1098 | 0000086E | 50                        | 	push	ax
  1099 | 0000086F | 8D46F0                    | 	lea	ax, [bp-16]
  1100 | 00000872 | 50                        | 	push	ax
  1101 | 00000873 | E876FB                    | 	call	print
  1102 | 00000876 | 83C404                    | 	add	sp, 4
  1103 | 00000879 | 89EC                      | 	mov	sp, bp
  1104 | 0000087B | 5D                        | 	pop	bp
  1105 | 0000087C | C3                        | 	ret
  1106 |          |                           | L_clib_83:
  1107 | 0000087D | 55                        | 	push	bp
  1108 | 0000087E | 89E5                      | 	mov	bp, sp
  1109 | 00000880 | 83EC10                    | 	sub	sp, 16
  1110 | 00000883 | E94BFF                    | 	jmp	L_clib_84
  1111 |          |                           | 
  1112 |          |                           | 	align	2
  1113 |          |                           | SlidePiece:	; void SlidePiece(int ID, int direction)
  1114 | 00000886 | 55                        | 	push	bp
  1115 | 00000887 | 89E5                      | 	mov	bp, sp
  1116 | 00000889 | 50                        | 	push	ax
  1117 | 0000088A | 52                        | 	push	dx
  1118 | 0000088B | B400                      |  	mov	ah, 0		; Slide piece operation
  1119 | 0000088D | 8A4606                    |   	mov	al, [bp+6]	; Move direction (loword only)
  1120 | 00000890 | 8B5604                    | 	mov	dx, [bp+4]	; Move id
  1121 | 00000893 | CD1B                      | 	int	1Bh		; Call Simptris services
  1122 | 00000895 | 5A                        | 	pop	dx
  1123 | 00000896 | 58                        | 	pop	ax
  1124 | 00000897 | 5D                        | 	pop	bp
  1125 | 00000898 | C3                        | 	ret
  1126 |          |                           | RotatePiece:	; void RotatePiece(int ID, int direction)
  1127 | 00000899 | 55                        | 	push	bp
  1128 | 0000089A | 89E5                      | 	mov	bp, sp
  1129 | 0000089C | 50                        | 	push	ax
  1130 | 0000089D | 52                        | 	push	dx
  1131 | 0000089E | B401                      |  	mov	ah, 1		; Rotate piece operation
  1132 | 000008A0 | 8A4606                    |  	mov	al, [bp+6]	; Move direction (loword only)
  1133 | 000008A3 | 8B5604                    | 	mov	dx, [bp+4]	; Move id
  1134 | 000008A6 | CD1B                      | 	int	1Bh		; Call Simptris services
  1135 | 000008A8 | 5A                        | 	pop	dx
  1136 | 000008A9 | 58                        | 	pop	ax
  1137 | 000008AA | 5D                        | 	pop	bp
  1138 | 000008AB | C3                        | 	ret
  1139 |          |                           | SeedSimptris:	; void SeedSimptris(long seed)
  1140 | 000008AC | 55                        | 	push	bp
  1141 | 000008AD | 89E5                      | 	mov	bp, sp
  1142 | 000008AF | 50                        | 	push	ax
  1143 | 000008B0 | 51                        | 	push	cx
  1144 | 000008B1 | 52                        | 	push    dx
  1145 | 000008B2 | B402                      |  	mov	ah, 2		; Seed operation
  1146 | 000008B4 | 8B5604                    | 	mov	dx, [bp+4]	; Move loword of seed
  1147 | 000008B7 | 8B4E06                    | 	mov	cx, [bp+6]	; Move hiword of seed
  1148 | 000008BA | CD1B                      | 	int	1Bh		; Call Simptris services
  1149 | 000008BC | 5A                        | 	pop	dx
  1150 | 000008BD | 59                        | 	pop	cx
  1151 | 000008BE | 58                        | 	pop	ax
  1152 | 000008BF | 5D                        | 	pop	bp
  1153 | 000008C0 | C3                        | 	ret
  1154 |          |                           | StartSimptris:	; void StartSimptris(void)
  1155 | 000008C1 | 50                        | 	push	ax
  1156 | 000008C2 | B403                      |  	mov	ah, 3		; Start Simptris operation
  1157 | 000008C4 | CD1B                      | 	int	1Bh		; Call Simptris services
  1158 | 000008C6 | 58                        | 	pop	ax
  1159 | 000008C7 | C3                        | 	ret
  1160 |          |                           | 
  1161 |          |                           | 
  1162 |          |                           | ; 1    Save the context of whatever was running by pushing all registers onto the stack, except SP, SS, CS, IP, and the flags.
  1163 |          |                           | ; 2    Enable interrupts to allow higher priority IRQs to interrupt.
  1164 |          |                           | ; 3    Run the interrupt handler, which is usually a C function that does the work for this interrupt.
  1165 |          |                           | ; 4    Disable interrupts.
  1166 |          |                           | ; 5    Send the EOI command to the PIC, informing it that the handler is finished.
  1167 |          |                           | ; 6    Restore the context of what was running before the interrupt occurred by popping the registers saved in step 1 off the stack.
  1168 |          |                           | ; 7    Execute the iret instruction. This restores in one atomic operation the values for IP, CS, and the flags, which were automatically saved on the stack by the processor when the interrupt occurred. This effecti
  1169 |          |                           | 
  1170 |          |                           | 
  1171 |          |                           | 
  1172 |          |                           | 
  1173 |          |                           | isr_reset:
  1174 |          |                           | 	; save context
  1175 | 000008C8 | 50                        | 	push ax
  1176 | 000008C9 | 53                        | 	push bx
  1177 | 000008CA | 51                        | 	push cx
  1178 | 000008CB | 52                        | 	push dx
  1179 | 000008CC | 55                        | 	push bp
  1180 | 000008CD | 56                        | 	push si
  1181 | 000008CE | 57                        | 	push di
  1182 | 000008CF | 1E                        | 	push ds
  1183 | 000008D0 | 06                        | 	push es
  1184 |          |                           | 	; Here we test to see if we are the lowest-level interrupt.
  1185 |          |                           | 	; If we are, we need to save the task's stack that we interrupted
  1186 | 000008D1 | A1[921D]                  | 	mov ax, [YKISRCallDepth]
  1187 | 000008D4 | 85C0                      | 	test ax, ax
  1188 | 000008D6 | 7506                      | 	jnz isr_reset_not_lowest_interrupt
  1189 |          |                           | 
  1190 |          |                           | 	; Save the SP of the task we interrupted
  1191 | 000008D8 | 8B1E[9A1A]                | 	mov bx, [YKRdyList]
  1192 | 000008DC | 8927                      | 	mov [bx], sp
  1193 |          |                           | 
  1194 |          |                           | isr_reset_not_lowest_interrupt:
  1195 |          |                           | 
  1196 | 000008DE | E8DB07                    | 	call YKEnterISR
  1197 |          |                           | 	; enable interrupts for higher priority IRQ
  1198 | 000008E1 | FB                        | 	sti	
  1199 |          |                           | 
  1200 |          |                           | 	; run interrupt handler
  1201 |          |                           | 	
  1202 |          |                           | 	; disable interrupts
  1203 |          |                           | 	; sent EOI to PIC
  1204 |          |                           | 	; restore context
  1205 |          |                           | 
  1206 |          |                           | 	; But we don't have to do any of that, because we ARE the highest-priority interrupt
  1207 |          |                           | 	; And it will end the program. So no saving context, no enabling interrupts, 
  1208 |          |                           | 	; and no restoring context.
  1209 | 000008E2 | E80B01                    | 	call c_isr_reset
  1210 |          |                           | 	
  1211 |          |                           | 
  1212 | 000008E5 | FA                        | 	cli
  1213 |          |                           | 	
  1214 | 000008E6 | B020                      | 	mov	al, 0x20
  1215 | 000008E8 | E620                      | 	out 	0x20, al
  1216 |          |                           | 
  1217 |          |                           | 		
  1218 | 000008EA | E8E107                    | 	call YKExitISR
  1219 |          |                           | 	
  1220 | 000008ED | 07                        | 	pop es
  1221 | 000008EE | 1F                        | 	pop ds
  1222 | 000008EF | 5F                        | 	pop di
  1223 | 000008F0 | 5E                        | 	pop si
  1224 | 000008F1 | 5D                        | 	pop bp
  1225 | 000008F2 | 5A                        | 	pop dx
  1226 | 000008F3 | 59                        | 	pop cx
  1227 | 000008F4 | 5B                        | 	pop bx
  1228 | 000008F5 | 58                        | 	pop ax	
  1229 |          |                           | 	
  1230 | 000008F6 | CF                        | 	iret	; This should not even happen.
  1231 |          |                           | 
  1232 |          |                           | 
  1233 |          |                           | 
  1234 |          |                           | isr_keypress:
  1235 |          |                           | 		; Save context
  1236 | 000008F7 | 50                        | 	push ax
  1237 | 000008F8 | 53                        | 	push bx
  1238 | 000008F9 | 51                        | 	push cx
  1239 | 000008FA | 52                        | 	push dx
  1240 | 000008FB | 55                        | 	push bp
  1241 | 000008FC | 56                        | 	push si
  1242 | 000008FD | 57                        | 	push di
  1243 | 000008FE | 1E                        | 	push ds
  1244 | 000008FF | 06                        | 	push es
  1245 |          |                           | 
  1246 |          |                           | 	; Here we test to see if we are the lowest-level interrupt.
  1247 |          |                           | 	; If we are, we need to save the task's stack that we interrupted
  1248 | 00000900 | A1[921D]                  | 	mov ax, [YKISRCallDepth]
  1249 | 00000903 | 85C0                      | 	test ax, ax
  1250 | 00000905 | 7506                      | 	jnz isr_keypress_not_lowest_interrupt
  1251 |          |                           | 
  1252 |          |                           | 	; Save the SP of the task we interrupted
  1253 | 00000907 | 8B1E[9A1A]                | 	mov bx, [YKRdyList]
  1254 | 0000090B | 8927                      | 	mov [bx], sp
  1255 |          |                           | 
  1256 |          |                           | isr_keypress_not_lowest_interrupt:
  1257 |          |                           | 
  1258 | 0000090D | E8AC07                    | 	call YKEnterISR
  1259 |          |                           | 
  1260 |          |                           | 		; Enable interrupts for higher-priority 
  1261 | 00000910 | FB                        | 	sti
  1262 |          |                           | 
  1263 |          |                           | 		; Run interrupt handler
  1264 | 00000911 | E81601                    | 	call c_isr_keypress
  1265 |          |                           | 
  1266 |          |                           | 
  1267 |          |                           | 		; disable interrupts
  1268 | 00000914 | FA                        | 	cli
  1269 |          |                           | 
  1270 |          |                           | 		;send EOI to PIC
  1271 | 00000915 | B020                      | 	mov	al, 0x20	; Load nonspecific EOI value (0x20) into register al
  1272 | 00000917 | E620                      | 	out	0x20, al	; Write EOI to PIC (port 0x20)
  1273 |          |                           | 
  1274 |          |                           | 	
  1275 | 00000919 | E8B207                    | 	call YKExitISR
  1276 |          |                           | 		; Restore context
  1277 | 0000091C | 07                        | 	pop es
  1278 | 0000091D | 1F                        | 	pop ds
  1279 | 0000091E | 5F                        | 	pop di
  1280 | 0000091F | 5E                        | 	pop si
  1281 | 00000920 | 5D                        | 	pop bp
  1282 | 00000921 | 5A                        | 	pop dx
  1283 | 00000922 | 59                        | 	pop cx
  1284 | 00000923 | 5B                        | 	pop bx
  1285 | 00000924 | 58                        | 	pop ax	
  1286 |          |                           | 		; Execute IRET
  1287 | 00000925 | CF                        | 	iret
  1288 |          |                           | 
  1289 |          |                           | 
  1290 |          |                           | 
  1291 |          |                           | isr_tick:
  1292 |          |                           | 		; Save context
  1293 | 00000926 | 50                        | 	push ax
  1294 | 00000927 | 53                        | 	push bx
  1295 | 00000928 | 51                        | 	push cx
  1296 | 00000929 | 52                        | 	push dx
  1297 | 0000092A | 55                        | 	push bp
  1298 | 0000092B | 56                        | 	push si
  1299 | 0000092C | 57                        | 	push di
  1300 | 0000092D | 1E                        | 	push ds
  1301 | 0000092E | 06                        | 	push es
  1302 |          |                           | 	
  1303 |          |                           | 	; Here we test to see if we are the lowest-level interrupt.
  1304 |          |                           | 	; If we are, we need to save the task's stack that we interrupted
  1305 | 0000092F | A1[921D]                  | 	mov ax, [YKISRCallDepth]
  1306 | 00000932 | 85C0                      | 	test ax, ax
  1307 | 00000934 | 7506                      | 	jnz isr_tick_not_lowest_interrupt
  1308 |          |                           | 
  1309 |          |                           | 	; Save the SP of the task we interrupted
  1310 | 00000936 | 8B1E[9A1A]                | 	mov bx, [YKRdyList]
  1311 | 0000093A | 8927                      | 	mov [bx], sp
  1312 |          |                           | 
  1313 |          |                           | isr_tick_not_lowest_interrupt:
  1314 |          |                           | 
  1315 | 0000093C | E87D07                    | 	call YKEnterISR
  1316 |          |                           | 
  1317 |          |                           | 		; Enable interrupts for higher-priority 
  1318 | 0000093F | FB                        | 	sti
  1319 |          |                           | 
  1320 |          |                           | 		; Run interrupt handler
  1321 | 00000940 | E8C100                    | 	call c_isr_tick
  1322 |          |                           | 		; disable interrupts
  1323 | 00000943 | FA                        | 	cli
  1324 |          |                           | 
  1325 |          |                           | 		;send EOI to PIC
  1326 | 00000944 | B020                      | 	mov	al, 0x20	; Load nonspecific EOI value (0x20) into register al
  1327 | 00000946 | E620                      | 	out	0x20, al	; Write EOI to PIC (port 0x20)
  1328 |          |                           | 
  1329 |          |                           | 		
  1330 | 00000948 | E88307                    | 	call YKExitISR
  1331 |          |                           | 		; Restore context
  1332 | 0000094B | 07                        | 	pop es
  1333 | 0000094C | 1F                        | 	pop ds
  1334 | 0000094D | 5F                        | 	pop di
  1335 | 0000094E | 5E                        | 	pop si
  1336 | 0000094F | 5D                        | 	pop bp
  1337 | 00000950 | 5A                        | 	pop dx
  1338 | 00000951 | 59                        | 	pop cx
  1339 | 00000952 | 5B                        | 	pop bx
  1340 | 00000953 | 58                        | 	pop ax
  1341 |          |                           | 
  1342 |          |                           | 	   ; Execute IRET
  1343 | 00000954 | CF                        | 	iret
  1344 |          |                           | 
  1345 |          |                           | ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  1346 |          |                           | ;;;;;;;;;;;;;;;;;;;;;;;;	NEW SIMPTRIS ISRS below		;;;;;;;;;;;;;;;;;;;;;;;;
  1347 |          |                           | ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  1348 |          |                           | ;				 ;
  1349 |          |                           | ;	GAME OVER ISR		 ;
  1350 |          |                           | ;				 ;
  1351 |          |                           | ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  1352 |          |                           | 
  1353 |          |                           | isr_game_over:
  1354 |          |                           | 	; save context
  1355 | 00000955 | 50                        | 	push ax
  1356 | 00000956 | 53                        | 	push bx
  1357 | 00000957 | 51                        | 	push cx
  1358 | 00000958 | 52                        | 	push dx
  1359 | 00000959 | 55                        | 	push bp
  1360 | 0000095A | 56                        | 	push si
  1361 | 0000095B | 57                        | 	push di
  1362 | 0000095C | 1E                        | 	push ds
  1363 | 0000095D | 06                        | 	push es
  1364 |          |                           | 	; Here we test to see if we are the lowest-level interrupt.
  1365 |          |                           | 	; If we are, we need to save the task's stack that we interrupted
  1366 | 0000095E | A1[921D]                  | 	mov ax, [YKISRCallDepth]
  1367 | 00000961 | 85C0                      | 	test ax, ax
  1368 | 00000963 | 7506                      | 	jnz isr_game_over_not_lowest_interrupt
  1369 |          |                           | 
  1370 |          |                           | 	; Save the SP of the task we interrupted
  1371 | 00000965 | 8B1E[9A1A]                | 	mov bx, [YKRdyList]
  1372 | 00000969 | 8927                      | 	mov [bx], sp
  1373 |          |                           | 
  1374 |          |                           | isr_game_over_not_lowest_interrupt:
  1375 |          |                           | 
  1376 | 0000096B | E84E07                    | 	call YKEnterISR
  1377 |          |                           | 
  1378 | 0000096E | FB                        | 	sti ;enable interrupts to allow higher priority IRQs to interrupt
  1379 |          |                           | 
  1380 | 0000096F | E8FC00                    | 	call c_isr_game_over ; (Indicate game over. No new pieces appear)
  1381 |          |                           | 
  1382 | 00000972 | FA                        | 	cli ; disable interrupts
  1383 |          |                           | 
  1384 | 00000973 | B020                      | 	mov	al, 0x20 ;Send EOI command to PIC, informing it that handler is finished
  1385 | 00000975 | E620                      | 	out	0x20, al
  1386 |          |                           | 
  1387 | 00000977 | E85407                    | 	call YKExitISR
  1388 |          |                           | 
  1389 | 0000097A | 07                        | 	pop es	; restores context of what was running b4 interrupt occured
  1390 | 0000097B | 1F                        | 	pop ds
  1391 | 0000097C | 5F                        | 	pop di
  1392 | 0000097D | 5E                        | 	pop si
  1393 | 0000097E | 5D                        | 	pop bp
  1394 | 0000097F | 5A                        | 	pop dx
  1395 | 00000980 | 59                        | 	pop cx
  1396 | 00000981 | 5B                        | 	pop bx
  1397 | 00000982 | 58                        | 	pop ax
  1398 |          |                           | 
  1399 | 00000983 | CF                        | 	iret ; restores values for IP, CS, flags
  1400 |          |                           | 
  1401 |          |                           | ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  1402 |          |                           | ;					;
  1403 |          |                           | ;	     NEW PIECE ISR		;
  1404 |          |                           | ;					;
  1405 |          |                           | ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  1406 |          |                           | 
  1407 |          |                           | isr_new_piece:
  1408 | 00000984 | 50                        | 	push ax ; save context
  1409 | 00000985 | 53                        | 	push bx
  1410 | 00000986 | 51                        | 	push cx
  1411 | 00000987 | 52                        | 	push dx
  1412 | 00000988 | 55                        | 	push bp
  1413 | 00000989 | 56                        | 	push si
  1414 | 0000098A | 57                        | 	push di
  1415 | 0000098B | 1E                        | 	push ds
  1416 | 0000098C | 06                        | 	push es
  1417 |          |                           | 
  1418 | 0000098D | E82C07                    | 	call YKEnterISR
  1419 |          |                           | 	; Here we test to see if we are the lowest-level interrupt.
  1420 |          |                           | 	; If we are, we need to save the task's stack that we interrupted
  1421 | 00000990 | A1[921D]                  | 	mov ax, [YKISRCallDepth]
  1422 | 00000993 | 85C0                      | 	test ax, ax
  1423 | 00000995 | 7506                      | 	jnz isr_new_piece_not_lowest_interrupt
  1424 |          |                           | 
  1425 |          |                           | 	; Save the SP of the task we interrupted
  1426 | 00000997 | 8B1E[9A1A]                | 	mov bx, [YKRdyList]
  1427 | 0000099B | 8927                      | 	mov [bx], sp
  1428 |          |                           | 
  1429 |          |                           | isr_new_piece_not_lowest_interrupt:
  1430 |          |                           | 
  1431 | 0000099D | FB                        | 	sti ;enable interrupts to allow higher priority IRQs to interrupt
  1432 |          |                           | 
  1433 | 0000099E | E81501                    | 	call c_isr_new_piece ; (Indicate that a new piece has appeared on board...)
  1434 |          |                           | 
  1435 | 000009A1 | FA                        | 	cli ; disable interrupts
  1436 |          |                           | 
  1437 | 000009A2 | B020                      | 	mov	al, 0x20 ;Send EOI command to PIC, informing it that handler is finished
  1438 | 000009A4 | E620                      | 	out	0x20, al
  1439 |          |                           | 
  1440 | 000009A6 | E82507                    | 	call YKExitISR
  1441 |          |                           | 
  1442 | 000009A9 | 07                        | 	pop es	; restores context of what was running b4 interrupt occured
  1443 | 000009AA | 1F                        | 	pop ds
  1444 | 000009AB | 5F                        | 	pop di
  1445 | 000009AC | 5E                        | 	pop si
  1446 | 000009AD | 5D                        | 	pop bp
  1447 | 000009AE | 5A                        | 	pop dx
  1448 | 000009AF | 59                        | 	pop cx
  1449 | 000009B0 | 5B                        | 	pop bx
  1450 | 000009B1 | 58                        | 	pop ax
  1451 |          |                           | 
  1452 | 000009B2 | CF                        | 	iret ; restores values for IP, CS, flags
  1453 |          |                           | 
  1454 |          |                           | ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  1455 |          |                           | ;					;
  1456 |          |                           | ;	    RECEIVED ISR		;
  1457 |          |                           | ;					;
  1458 |          |                           | ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  1459 |          |                           | 
  1460 |          |                           | isr_received:
  1461 | 000009B3 | 50                        | 	push ax ; save context
  1462 | 000009B4 | 53                        | 	push bx
  1463 | 000009B5 | 51                        | 	push cx
  1464 | 000009B6 | 52                        | 	push dx
  1465 | 000009B7 | 55                        | 	push bp
  1466 | 000009B8 | 56                        | 	push si
  1467 | 000009B9 | 57                        | 	push di
  1468 | 000009BA | 1E                        | 	push ds
  1469 | 000009BB | 06                        | 	push es
  1470 |          |                           | 	; Here we test to see if we are the lowest-level interrupt.
  1471 |          |                           | 	; If we are, we need to save the task's stack that we interrupted
  1472 | 000009BC | A1[921D]                  | 	mov ax, [YKISRCallDepth]
  1473 | 000009BF | 85C0                      | 	test ax, ax
  1474 | 000009C1 | 7506                      | 	jnz isr_received_not_lowest_interrupt
  1475 |          |                           | 
  1476 |          |                           | 	; Save the SP of the task we interrupted
  1477 | 000009C3 | 8B1E[9A1A]                | 	mov bx, [YKRdyList]
  1478 | 000009C7 | 8927                      | 	mov [bx], sp
  1479 |          |                           | 
  1480 |          |                           | isr_received_not_lowest_interrupt:
  1481 |          |                           | 
  1482 | 000009C9 | E8F006                    | 	call YKEnterISR
  1483 |          |                           | 
  1484 | 000009CC | FB                        | 	sti ;enable interrupts to allow higher priority IRQs to interrupt
  1485 |          |                           | 
  1486 | 000009CD | E8E600                    | 	call c_isr_new_piece ; (Indicate that a new piece has appeared on board...)
  1487 |          |                           | 
  1488 | 000009D0 | FA                        | 	cli ; disable interrupts
  1489 |          |                           | 	
  1490 | 000009D1 | B020                      | 	mov	al, 0x20	; Load nonspecific EOI value (0x20) into register al
  1491 | 000009D3 | E620                      | 	out	0x20, al	; Write EOI to PIC (port 0x20)
  1492 |          |                           | 
  1493 | 000009D5 | E8F606                    | 	call YKExitISR
  1494 |          |                           | 
  1495 | 000009D8 | 07                        | 	pop es	; restores context of what was running b4 interrupt occured
  1496 | 000009D9 | 1F                        | 	pop ds
  1497 | 000009DA | 5F                        | 	pop di
  1498 | 000009DB | 5E                        | 	pop si
  1499 | 000009DC | 5D                        | 	pop bp
  1500 | 000009DD | 5A                        | 	pop dx
  1501 | 000009DE | 59                        | 	pop cx
  1502 | 000009DF | 5B                        | 	pop bx
  1503 | 000009E0 | 58                        | 	pop ax
  1504 |          |                           | 
  1505 | 000009E1 | CF                        | 	iret
  1506 |          |                           | 
  1507 |          |                           | ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  1508 |          |                           | ;					;
  1509 |          |                           | ;	     TOUCHDOWN ISR		;
  1510 |          |                           | ;					;
  1511 |          |                           | ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  1512 |          |                           | 
  1513 |          |                           | isr_touchdown:
  1514 |          |                           | 
  1515 | 000009E2 | B020                      | 	mov	al, 0x20	; Load nonspecific EOI value (0x20) into register al
  1516 | 000009E4 | E620                      | 	out	0x20, al	; Write EOI to PIC (port 0x20)
  1517 |          |                           | 
  1518 | 000009E6 | CF                        | 	iret
  1519 |          |                           | 
  1520 |          |                           | 
  1521 |          |                           | ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  1522 |          |                           | ;					;
  1523 |          |                           | ;	       CLEAR ISR		;
  1524 |          |                           | ;					;
  1525 |          |                           | ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  1526 |          |                           | 
  1527 |          |                           | isr_clear:
  1528 |          |                           | 
  1529 | 000009E7 | B020                      | 	mov	al, 0x20	; Load nonspecific EOI value (0x20) into register al
  1530 | 000009E9 | E620                      | 	out	0x20, al	; Write EOI to PIC (port 0x20)
  1531 |          |                           | 
  1532 | 000009EB | CF                        | 	iret
  1533 |          |                           | 
  1534 |          |                           | 
  1535 |          |                           | 
  1536 |          |                           | ; Generated by c86 (BYU-NASM) 5.1 (beta) from myinth.i
  1537 |          |                           | 	CPU	8086
  1538 |          |                           | 	ALIGN	2
  1539 | 000009EC | E9D927                    | 	jmp	main	; Jump to program start
  1540 | 000009EF | 90                        | 	ALIGN	2
  1541 |          |                           | c_isr_reset:
  1542 | 000009F0 | EB0D                      | 	jmp	L_myinth_1
  1543 |          |                           | L_myinth_2:
  1544 | 000009F2 | 30C0                      | 	xor	al, al
  1545 | 000009F4 | 50                        | 	push	ax
  1546 | 000009F5 | E8E2F9                    | 	call	exit
  1547 | 000009F8 | 83C402                    | 	add	sp, 2
  1548 | 000009FB | 89EC                      | 	mov	sp, bp
  1549 | 000009FD | 5D                        | 	pop	bp
  1550 | 000009FE | C3                        | 	ret
  1551 |          |                           | L_myinth_1:
  1552 | 000009FF | 55                        | 	push	bp
  1553 | 00000A00 | 89E5                      | 	mov	bp, sp
  1554 | 00000A02 | EBEE                      | 	jmp	L_myinth_2
  1555 |          |                           | 	ALIGN	2
  1556 |          |                           | c_isr_tick:
  1557 | 00000A04 | EB07                      | 	jmp	L_myinth_4
  1558 |          |                           | L_myinth_5:
  1559 | 00000A06 | E89305                    | 	call	YKTickHandler
  1560 | 00000A09 | 89EC                      | 	mov	sp, bp
  1561 | 00000A0B | 5D                        | 	pop	bp
  1562 | 00000A0C | C3                        | 	ret
  1563 |          |                           | L_myinth_4:
  1564 | 00000A0D | 55                        | 	push	bp
  1565 | 00000A0E | 89E5                      | 	mov	bp, sp
  1566 | 00000A10 | EBF4                      | 	jmp	L_myinth_5
  1567 |          |                           | L_myinth_8:
  1568 | 00000A12 | 292049474E4F524544-       | 	DB	") IGNORED",0xA,0
  1569 | 00000A1B | 0A00                      | ...
  1570 |          |                           | L_myinth_7:
  1571 | 00000A1D | 0A4B45595052455353-       | 	DB	0xA,"KEYPRESS (",0
  1572 | 00000A26 | 202800                    | ...
  1573 | 00000A29 | 90                        | 	ALIGN	2
  1574 |          |                           | c_isr_keypress:
  1575 | 00000A2A | EB2F                      | 	jmp	L_myinth_9
  1576 |          |                           | L_myinth_10:
  1577 | 00000A2C | A0[C000]                  | 	mov	al, byte [KeyBuffer]
  1578 | 00000A2F | 8846FF                    | 	mov	byte [bp-1], al
  1579 | 00000A32 | B80B00                    | 	mov	ax, 11
  1580 | 00000A35 | 50                        | 	push	ax
  1581 | 00000A36 | B8[1D0A]                  | 	mov	ax, L_myinth_7
  1582 | 00000A39 | 50                        | 	push	ax
  1583 | 00000A3A | E8AFF9                    | 	call	print
  1584 | 00000A3D | 83C404                    | 	add	sp, 4
  1585 | 00000A40 | FF76FF                    | 	push	word [bp-1]
  1586 | 00000A43 | E8BEF9                    | 	call	printChar
  1587 | 00000A46 | 83C402                    | 	add	sp, 2
  1588 | 00000A49 | B80A00                    | 	mov	ax, 10
  1589 | 00000A4C | 50                        | 	push	ax
  1590 | 00000A4D | B8[120A]                  | 	mov	ax, L_myinth_8
  1591 | 00000A50 | 50                        | 	push	ax
  1592 | 00000A51 | E898F9                    | 	call	print
  1593 | 00000A54 | 83C404                    | 	add	sp, 4
  1594 | 00000A57 | 89EC                      | 	mov	sp, bp
  1595 | 00000A59 | 5D                        | 	pop	bp
  1596 | 00000A5A | C3                        | 	ret
  1597 |          |                           | L_myinth_9:
  1598 | 00000A5B | 55                        | 	push	bp
  1599 | 00000A5C | 89E5                      | 	mov	bp, sp
  1600 | 00000A5E | 51                        | 	push	cx
  1601 | 00000A5F | EBCB                      | 	jmp	L_myinth_10
  1602 |          |                           | L_myinth_12:
  1603 | 00000A61 | 0A47414D45204F5645-       | 	DB	0xA,"GAME OVER",0xA,0
  1604 | 00000A6A | 520A00                    | ...
  1605 | 00000A6D | 90                        | 	ALIGN	2
  1606 |          |                           | c_isr_game_over:
  1607 | 00000A6E | EB17                      | 	jmp	L_myinth_13
  1608 |          |                           | L_myinth_14:
  1609 | 00000A70 | B8[610A]                  | 	mov	ax, L_myinth_12
  1610 | 00000A73 | 50                        | 	push	ax
  1611 | 00000A74 | E8B1F9                    | 	call	printString
  1612 | 00000A77 | 83C402                    | 	add	sp, 2
  1613 | 00000A7A | 30C0                      | 	xor	al, al
  1614 | 00000A7C | 50                        | 	push	ax
  1615 | 00000A7D | E85AF9                    | 	call	exit
  1616 | 00000A80 | 83C402                    | 	add	sp, 2
  1617 | 00000A83 | 89EC                      | 	mov	sp, bp
  1618 | 00000A85 | 5D                        | 	pop	bp
  1619 | 00000A86 | C3                        | 	ret
  1620 |          |                           | L_myinth_13:
  1621 | 00000A87 | 55                        | 	push	bp
  1622 | 00000A88 | 89E5                      | 	mov	bp, sp
  1623 | 00000A8A | EBE4                      | 	jmp	L_myinth_14
  1624 |          |                           | 	ALIGN	2
  1625 |          |                           | L_myinth_16:
  1626 | 00000A8C | 0000                      | 	DW	0
  1627 |          |                           | L_myinth_17:
  1628 | 00000A8E | 0A2A2A2A2A2A6E6577-       | 	DB	0xA,"*****new piece appeared on board*****",0xA,0
  1629 | 00000A97 | 207069656365206170-       | ...
  1630 | 00000AA0 | 706561726564206F6E-       | ...
  1631 | 00000AA9 | 20626F6172642A2A2A-       | ...
  1632 | 00000AB2 | 2A2A0A00                  | ...
  1633 |          |                           | 	ALIGN	2
  1634 |          |                           | c_isr_new_piece:
  1635 | 00000AB6 | E9A200                    | 	jmp	L_myinth_18
  1636 |          |                           | L_myinth_19:
  1637 | 00000AB9 | A1[C200]                  | 	mov	ax, word [NewPieceType]
  1638 | 00000ABC | 8946FE                    | 	mov	word [bp-2], ax
  1639 | 00000ABF | A1[C600]                  | 	mov	ax, word [NewPieceOrientation]
  1640 | 00000AC2 | 8946FC                    | 	mov	word [bp-4], ax
  1641 | 00000AC5 | A1[C400]                  | 	mov	ax, word [NewPieceID]
  1642 | 00000AC8 | 8946FA                    | 	mov	word [bp-6], ax
  1643 | 00000ACB | A1[C800]                  | 	mov	ax, word [NewPieceColumn]
  1644 | 00000ACE | 8946F8                    | 	mov	word [bp-8], ax
  1645 | 00000AD1 | B8[8E0A]                  | 	mov	ax, L_myinth_17
  1646 | 00000AD4 | 50                        | 	push	ax
  1647 | 00000AD5 | E850F9                    | 	call	printString
  1648 | 00000AD8 | 83C402                    | 	add	sp, 2
  1649 | 00000ADB | A1[8C0A]                  | 	mov	ax, word [L_myinth_16]
  1650 | 00000ADE | B90300                    | 	mov	cx, 3
  1651 | 00000AE1 | D3E0                      | 	shl	ax, cl
  1652 | 00000AE3 | 89C6                      | 	mov	si, ax
  1653 | 00000AE5 | 81C6[3E3A]                | 	add	si, newPieceArray
  1654 | 00000AE9 | 8B46FA                    | 	mov	ax, word [bp-6]
  1655 | 00000AEC | 8904                      | 	mov	word [si], ax
  1656 | 00000AEE | A1[8C0A]                  | 	mov	ax, word [L_myinth_16]
  1657 | 00000AF1 | B90300                    | 	mov	cx, 3
  1658 | 00000AF4 | D3E0                      | 	shl	ax, cl
  1659 | 00000AF6 | 05[3E3A]                  | 	add	ax, newPieceArray
  1660 | 00000AF9 | 89C6                      | 	mov	si, ax
  1661 | 00000AFB | 83C602                    | 	add	si, 2
  1662 | 00000AFE | 8B46FE                    | 	mov	ax, word [bp-2]
  1663 | 00000B01 | 8904                      | 	mov	word [si], ax
  1664 | 00000B03 | A1[8C0A]                  | 	mov	ax, word [L_myinth_16]
  1665 | 00000B06 | B90300                    | 	mov	cx, 3
  1666 | 00000B09 | D3E0                      | 	shl	ax, cl
  1667 | 00000B0B | 05[3E3A]                  | 	add	ax, newPieceArray
  1668 | 00000B0E | 89C6                      | 	mov	si, ax
  1669 | 00000B10 | 83C604                    | 	add	si, 4
  1670 | 00000B13 | 8B46FC                    | 	mov	ax, word [bp-4]
  1671 | 00000B16 | 8904                      | 	mov	word [si], ax
  1672 | 00000B18 | A1[8C0A]                  | 	mov	ax, word [L_myinth_16]
  1673 | 00000B1B | B90300                    | 	mov	cx, 3
  1674 | 00000B1E | D3E0                      | 	shl	ax, cl
  1675 | 00000B20 | 05[3E3A]                  | 	add	ax, newPieceArray
  1676 | 00000B23 | 89C6                      | 	mov	si, ax
  1677 | 00000B25 | 83C606                    | 	add	si, 6
  1678 | 00000B28 | 8B46F8                    | 	mov	ax, word [bp-8]
  1679 | 00000B2B | 8904                      | 	mov	word [si], ax
  1680 | 00000B2D | A1[8C0A]                  | 	mov	ax, word [L_myinth_16]
  1681 | 00000B30 | B90300                    | 	mov	cx, 3
  1682 | 00000B33 | D3E0                      | 	shl	ax, cl
  1683 | 00000B35 | 05[3E3A]                  | 	add	ax, newPieceArray
  1684 | 00000B38 | 50                        | 	push	ax
  1685 | 00000B39 | FF36[3A32]                | 	push	word [newPieceQueuePTR]
  1686 | 00000B3D | E8A60C                    | 	call	YKQPost
  1687 | 00000B40 | 83C404                    | 	add	sp, 4
  1688 | 00000B43 | A1[8C0A]                  | 	mov	ax, word [L_myinth_16]
  1689 | 00000B46 | 40                        | 	inc	ax
  1690 | 00000B47 | A3[8C0A]                  | 	mov	word [L_myinth_16], ax
  1691 | 00000B4A | 833E[8C0A]14              | 	cmp	word [L_myinth_16], 20
  1692 | 00000B4F | 7506                      | 	jne	L_myinth_20
  1693 | 00000B51 | C706[8C0A]0000            | 	mov	word [L_myinth_16], 0
  1694 |          |                           | L_myinth_20:
  1695 | 00000B57 | 89EC                      | 	mov	sp, bp
  1696 | 00000B59 | 5D                        | 	pop	bp
  1697 | 00000B5A | C3                        | 	ret
  1698 |          |                           | L_myinth_18:
  1699 | 00000B5B | 55                        | 	push	bp
  1700 | 00000B5C | 89E5                      | 	mov	bp, sp
  1701 | 00000B5E | 83EC08                    | 	sub	sp, 8
  1702 | 00000B61 | E955FF                    | 	jmp	L_myinth_19
  1703 |          |                           | 	ALIGN	2
  1704 |          |                           | c_isr_received:
  1705 | 00000B64 | EB12                      | 	jmp	L_myinth_22
  1706 |          |                           | L_myinth_23:
  1707 | 00000B66 | B80100                    | 	mov	ax, 1
  1708 | 00000B69 | 50                        | 	push	ax
  1709 | 00000B6A | FF36[3C32]                | 	push	word [pieceMoveEvent]
  1710 | 00000B6E | E8D706                    | 	call	YKEventSet
  1711 | 00000B71 | 83C404                    | 	add	sp, 4
  1712 | 00000B74 | 89EC                      | 	mov	sp, bp
  1713 | 00000B76 | 5D                        | 	pop	bp
  1714 | 00000B77 | C3                        | 	ret
  1715 |          |                           | L_myinth_22:
  1716 | 00000B78 | 55                        | 	push	bp
  1717 | 00000B79 | 89E5                      | 	mov	bp, sp
  1718 | 00000B7B | EBE9                      | 	jmp	L_myinth_23
  1719 |          |                           | ; Generated by c86 (BYU-NASM) 5.1 (beta) from yakc.i
  1720 |          |                           | 	CPU	8086
  1721 | 00000B7D | 90                        | 	ALIGN	2
  1722 | 00000B7E | E94726                    | 	jmp	main	; Jump to program start
  1723 |          |                           | started_running:
  1724 | 00000B81 | 00                        | 	DB	0
  1725 |          |                           | 	ALIGN	2
  1726 |          |                           | YKInitialize:
  1727 | 00000B82 | E91501                    | 	jmp	L_yakc_1
  1728 |          |                           | L_yakc_2:
  1729 | 00000B85 | C706[941A]0000            | 	mov	word [YKCtxSwCount], 0
  1730 | 00000B8B | C706[961A]0000            | 	mov	word [YKIdleCount], 0
  1731 | 00000B91 | C706[001E]0000            | 	mov	word [YKCurrentlyExecuting], 0
  1732 | 00000B97 | C706[921D]0000            | 	mov	word [YKISRCallDepth], 0
  1733 | 00000B9D | E86212                    | 	call	YKEnterMutex
  1734 | 00000BA0 | C706[A01A][A21A]          | 	mov	word [YKAvailTCBList], YKTCBArray
  1735 | 00000BA6 | C746FE0000                | 	mov	word [bp-2], 0
  1736 | 00000BAB | EB26                      | 	jmp	L_yakc_4
  1737 |          |                           | L_yakc_3:
  1738 | 00000BAD | 8B46FE                    | 	mov	ax, word [bp-2]
  1739 | 00000BB0 | 40                        | 	inc	ax
  1740 | 00000BB1 | B91800                    | 	mov	cx, 24
  1741 | 00000BB4 | F7E9                      | 	imul	cx
  1742 | 00000BB6 | 05[A21A]                  | 	add	ax, YKTCBArray
  1743 | 00000BB9 | 50                        | 	push	ax
  1744 | 00000BBA | 8B46FE                    | 	mov	ax, word [bp-2]
  1745 | 00000BBD | B91800                    | 	mov	cx, 24
  1746 | 00000BC0 | F7E9                      | 	imul	cx
  1747 | 00000BC2 | 89C2                      | 	mov	dx, ax
  1748 | 00000BC4 | 81C2[A21A]                | 	add	dx, YKTCBArray
  1749 | 00000BC8 | 89D6                      | 	mov	si, dx
  1750 | 00000BCA | 83C60A                    | 	add	si, 10
  1751 | 00000BCD | 58                        | 	pop	ax
  1752 | 00000BCE | 8904                      | 	mov	word [si], ax
  1753 |          |                           | L_yakc_6:
  1754 | 00000BD0 | FF46FE                    | 	inc	word [bp-2]
  1755 |          |                           | L_yakc_4:
  1756 | 00000BD3 | 837EFE09                  | 	cmp	word [bp-2], 9
  1757 | 00000BD7 | 7CD4                      | 	jl	L_yakc_3
  1758 |          |                           | L_yakc_5:
  1759 | 00000BD9 | C706[841B]0000            | 	mov	word [(226+YKTCBArray)], 0
  1760 | 00000BDF | C746FE0000                | 	mov	word [bp-2], 0
  1761 | 00000BE4 | EB27                      | 	jmp	L_yakc_8
  1762 |          |                           | L_yakc_7:
  1763 | 00000BE6 | 8B46FE                    | 	mov	ax, word [bp-2]
  1764 | 00000BE9 | D1E0                      | 	shl	ax, 1
  1765 | 00000BEB | D1E0                      | 	shl	ax, 1
  1766 | 00000BED | 05[941D]                  | 	add	ax, YKSEMArray
  1767 | 00000BF0 | 89C6                      | 	mov	si, ax
  1768 | 00000BF2 | 83C602                    | 	add	si, 2
  1769 | 00000BF5 | C7040000                  | 	mov	word [si], 0
  1770 | 00000BF9 | 8B46FE                    | 	mov	ax, word [bp-2]
  1771 | 00000BFC | D1E0                      | 	shl	ax, 1
  1772 | 00000BFE | D1E0                      | 	shl	ax, 1
  1773 | 00000C00 | 89C6                      | 	mov	si, ax
  1774 | 00000C02 | 81C6[941D]                | 	add	si, YKSEMArray
  1775 | 00000C06 | C704F6FF                  | 	mov	word [si], -10
  1776 |          |                           | L_yakc_10:
  1777 | 00000C0A | FF46FE                    | 	inc	word [bp-2]
  1778 |          |                           | L_yakc_8:
  1779 | 00000C0D | 837EFE13                  | 	cmp	word [bp-2], 19
  1780 | 00000C11 | 7CD3                      | 	jl	L_yakc_7
  1781 |          |                           | L_yakc_9:
  1782 | 00000C13 | C746FE0000                | 	mov	word [bp-2], 0
  1783 | 00000C18 | EB65                      | 	jmp	L_yakc_12
  1784 |          |                           | L_yakc_11:
  1785 | 00000C1A | 8B46FE                    | 	mov	ax, word [bp-2]
  1786 | 00000C1D | B90A00                    | 	mov	cx, 10
  1787 | 00000C20 | F7E9                      | 	imul	cx
  1788 | 00000C22 | 89C6                      | 	mov	si, ax
  1789 | 00000C24 | 81C6[E01D]                | 	add	si, YKQueueArray
  1790 | 00000C28 | C7040000                  | 	mov	word [si], 0
  1791 | 00000C2C | 8B46FE                    | 	mov	ax, word [bp-2]
  1792 | 00000C2F | B90A00                    | 	mov	cx, 10
  1793 | 00000C32 | F7E9                      | 	imul	cx
  1794 | 00000C34 | 05[E01D]                  | 	add	ax, YKQueueArray
  1795 | 00000C37 | 89C6                      | 	mov	si, ax
  1796 | 00000C39 | 83C602                    | 	add	si, 2
  1797 | 00000C3C | C7040000                  | 	mov	word [si], 0
  1798 | 00000C40 | 8B46FE                    | 	mov	ax, word [bp-2]
  1799 | 00000C43 | B90A00                    | 	mov	cx, 10
  1800 | 00000C46 | F7E9                      | 	imul	cx
  1801 | 00000C48 | 05[E01D]                  | 	add	ax, YKQueueArray
  1802 | 00000C4B | 89C6                      | 	mov	si, ax
  1803 | 00000C4D | 83C604                    | 	add	si, 4
  1804 | 00000C50 | C7040000                  | 	mov	word [si], 0
  1805 | 00000C54 | 8B46FE                    | 	mov	ax, word [bp-2]
  1806 | 00000C57 | B90A00                    | 	mov	cx, 10
  1807 | 00000C5A | F7E9                      | 	imul	cx
  1808 | 00000C5C | 05[E01D]                  | 	add	ax, YKQueueArray
  1809 | 00000C5F | 89C6                      | 	mov	si, ax
  1810 | 00000C61 | 83C606                    | 	add	si, 6
  1811 | 00000C64 | C7040000                  | 	mov	word [si], 0
  1812 | 00000C68 | 8B46FE                    | 	mov	ax, word [bp-2]
  1813 | 00000C6B | B90A00                    | 	mov	cx, 10
  1814 | 00000C6E | F7E9                      | 	imul	cx
  1815 | 00000C70 | 05[E01D]                  | 	add	ax, YKQueueArray
  1816 | 00000C73 | 89C6                      | 	mov	si, ax
  1817 | 00000C75 | 83C608                    | 	add	si, 8
  1818 | 00000C78 | C7040000                  | 	mov	word [si], 0
  1819 |          |                           | L_yakc_14:
  1820 | 00000C7C | FF46FE                    | 	inc	word [bp-2]
  1821 |          |                           | L_yakc_12:
  1822 | 00000C7F | 837EFE02                  | 	cmp	word [bp-2], 2
  1823 | 00000C83 | 7C95                      | 	jl	L_yakc_11
  1824 |          |                           | L_yakc_13:
  1825 | 00000C85 | B064                      | 	mov	al, 100
  1826 | 00000C87 | 50                        | 	push	ax
  1827 | 00000C88 | B8[921D]                  | 	mov	ax, (idleStack+512)
  1828 | 00000C8B | 50                        | 	push	ax
  1829 | 00000C8C | B8[A20C]                  | 	mov	ax, YKIdleTask
  1830 | 00000C8F | 50                        | 	push	ax
  1831 | 00000C90 | E82B00                    | 	call	YKNewTask
  1832 | 00000C93 | 83C406                    | 	add	sp, 6
  1833 | 00000C96 | 89EC                      | 	mov	sp, bp
  1834 | 00000C98 | 5D                        | 	pop	bp
  1835 | 00000C99 | C3                        | 	ret
  1836 |          |                           | L_yakc_1:
  1837 | 00000C9A | 55                        | 	push	bp
  1838 | 00000C9B | 89E5                      | 	mov	bp, sp
  1839 | 00000C9D | 51                        | 	push	cx
  1840 | 00000C9E | E9E4FE                    | 	jmp	L_yakc_2
  1841 | 00000CA1 | 90                        | 	ALIGN	2
  1842 |          |                           | YKIdleTask:
  1843 | 00000CA2 | EB15                      | 	jmp	L_yakc_16
  1844 |          |                           | L_yakc_17:
  1845 | 00000CA4 | EB0D                      | 	jmp	L_yakc_19
  1846 |          |                           | L_yakc_18:
  1847 | 00000CA6 | E85911                    | 	call	YKEnterMutex
  1848 | 00000CA9 | A1[961A]                  | 	mov	ax, word [YKIdleCount]
  1849 | 00000CAC | 40                        | 	inc	ax
  1850 | 00000CAD | A3[961A]                  | 	mov	word [YKIdleCount], ax
  1851 | 00000CB0 | E85111                    | 	call	YKExitMutex
  1852 |          |                           | L_yakc_19:
  1853 | 00000CB3 | EBF1                      | 	jmp	L_yakc_18
  1854 |          |                           | L_yakc_20:
  1855 | 00000CB5 | 89EC                      | 	mov	sp, bp
  1856 | 00000CB7 | 5D                        | 	pop	bp
  1857 | 00000CB8 | C3                        | 	ret
  1858 |          |                           | L_yakc_16:
  1859 | 00000CB9 | 55                        | 	push	bp
  1860 | 00000CBA | 89E5                      | 	mov	bp, sp
  1861 | 00000CBC | EBE6                      | 	jmp	L_yakc_17
  1862 |          |                           | 	ALIGN	2
  1863 |          |                           | YKNewTask:
  1864 | 00000CBE | E97E01                    | 	jmp	L_yakc_22
  1865 |          |                           | L_yakc_23:
  1866 | 00000CC1 | 8B4606                    | 	mov	ax, word [bp+6]
  1867 | 00000CC4 | 83E802                    | 	sub	ax, 2
  1868 | 00000CC7 | 894606                    | 	mov	word [bp+6], ax
  1869 | 00000CCA | A1[A01A]                  | 	mov	ax, word [YKAvailTCBList]
  1870 | 00000CCD | 8946FE                    | 	mov	word [bp-2], ax
  1871 | 00000CD0 | 8B76FE                    | 	mov	si, word [bp-2]
  1872 | 00000CD3 | 83C60A                    | 	add	si, 10
  1873 | 00000CD6 | 8B04                      | 	mov	ax, word [si]
  1874 | 00000CD8 | A3[A01A]                  | 	mov	word [YKAvailTCBList], ax
  1875 | 00000CDB | 8B76FE                    | 	mov	si, word [bp-2]
  1876 | 00000CDE | 83C608                    | 	add	si, 8
  1877 | 00000CE1 | C7040000                  | 	mov	word [si], 0
  1878 | 00000CE5 | 8A4608                    | 	mov	al, byte [bp+8]
  1879 | 00000CE8 | 30E4                      | 	xor	ah, ah
  1880 | 00000CEA | 8B76FE                    | 	mov	si, word [bp-2]
  1881 | 00000CED | 83C606                    | 	add	si, 6
  1882 | 00000CF0 | 8904                      | 	mov	word [si], ax
  1883 | 00000CF2 | E80D11                    | 	call	YKEnterMutex
  1884 | 00000CF5 | A1[9A1A]                  | 	mov	ax, word [YKRdyList]
  1885 | 00000CF8 | 85C0                      | 	test	ax, ax
  1886 | 00000CFA | 751C                      | 	jne	L_yakc_24
  1887 | 00000CFC | 8B46FE                    | 	mov	ax, word [bp-2]
  1888 | 00000CFF | A3[9A1A]                  | 	mov	word [YKRdyList], ax
  1889 | 00000D02 | 8B76FE                    | 	mov	si, word [bp-2]
  1890 | 00000D05 | 83C60A                    | 	add	si, 10
  1891 | 00000D08 | C7040000                  | 	mov	word [si], 0
  1892 | 00000D0C | 8B76FE                    | 	mov	si, word [bp-2]
  1893 | 00000D0F | 83C60C                    | 	add	si, 12
  1894 | 00000D12 | C7040000                  | 	mov	word [si], 0
  1895 | 00000D16 | EB6F                      | 	jmp	L_yakc_25
  1896 |          |                           | L_yakc_24:
  1897 | 00000D18 | A1[9A1A]                  | 	mov	ax, word [YKRdyList]
  1898 | 00000D1B | 8946FC                    | 	mov	word [bp-4], ax
  1899 | 00000D1E | EB0B                      | 	jmp	L_yakc_27
  1900 |          |                           | L_yakc_26:
  1901 | 00000D20 | 8B76FC                    | 	mov	si, word [bp-4]
  1902 | 00000D23 | 83C60A                    | 	add	si, 10
  1903 | 00000D26 | 8B04                      | 	mov	ax, word [si]
  1904 | 00000D28 | 8946FC                    | 	mov	word [bp-4], ax
  1905 |          |                           | L_yakc_27:
  1906 | 00000D2B | 8B76FC                    | 	mov	si, word [bp-4]
  1907 | 00000D2E | 83C606                    | 	add	si, 6
  1908 | 00000D31 | 8B7EFE                    | 	mov	di, word [bp-2]
  1909 | 00000D34 | 83C706                    | 	add	di, 6
  1910 | 00000D37 | 8B05                      | 	mov	ax, word [di]
  1911 | 00000D39 | 3B04                      | 	cmp	ax, word [si]
  1912 | 00000D3B | 7FE3                      | 	jg	L_yakc_26
  1913 |          |                           | L_yakc_28:
  1914 | 00000D3D | 8B76FC                    | 	mov	si, word [bp-4]
  1915 | 00000D40 | 83C60C                    | 	add	si, 12
  1916 | 00000D43 | 8B04                      | 	mov	ax, word [si]
  1917 | 00000D45 | 85C0                      | 	test	ax, ax
  1918 | 00000D47 | 7508                      | 	jne	L_yakc_29
  1919 | 00000D49 | 8B46FE                    | 	mov	ax, word [bp-2]
  1920 | 00000D4C | A3[9A1A]                  | 	mov	word [YKRdyList], ax
  1921 | 00000D4F | EB10                      | 	jmp	L_yakc_30
  1922 |          |                           | L_yakc_29:
  1923 | 00000D51 | 8B76FC                    | 	mov	si, word [bp-4]
  1924 | 00000D54 | 83C60C                    | 	add	si, 12
  1925 | 00000D57 | 8B34                      | 	mov	si, word [si]
  1926 | 00000D59 | 83C60A                    | 	add	si, 10
  1927 | 00000D5C | 8B46FE                    | 	mov	ax, word [bp-2]
  1928 | 00000D5F | 8904                      | 	mov	word [si], ax
  1929 |          |                           | L_yakc_30:
  1930 | 00000D61 | 8B76FC                    | 	mov	si, word [bp-4]
  1931 | 00000D64 | 83C60C                    | 	add	si, 12
  1932 | 00000D67 | 8B7EFE                    | 	mov	di, word [bp-2]
  1933 | 00000D6A | 83C70C                    | 	add	di, 12
  1934 | 00000D6D | 8B04                      | 	mov	ax, word [si]
  1935 | 00000D6F | 8905                      | 	mov	word [di], ax
  1936 | 00000D71 | 8B76FE                    | 	mov	si, word [bp-2]
  1937 | 00000D74 | 83C60A                    | 	add	si, 10
  1938 | 00000D77 | 8B46FC                    | 	mov	ax, word [bp-4]
  1939 | 00000D7A | 8904                      | 	mov	word [si], ax
  1940 | 00000D7C | 8B76FC                    | 	mov	si, word [bp-4]
  1941 | 00000D7F | 83C60C                    | 	add	si, 12
  1942 | 00000D82 | 8B46FE                    | 	mov	ax, word [bp-2]
  1943 | 00000D85 | 8904                      | 	mov	word [si], ax
  1944 |          |                           | L_yakc_25:
  1945 | 00000D87 | 8B76FE                    | 	mov	si, word [bp-2]
  1946 | 00000D8A | 8B4606                    | 	mov	ax, word [bp+6]
  1947 | 00000D8D | 8904                      | 	mov	word [si], ax
  1948 | 00000D8F | 8B76FE                    | 	mov	si, word [bp-2]
  1949 | 00000D92 | 83C602                    | 	add	si, 2
  1950 | 00000D95 | C7040000                  | 	mov	word [si], 0
  1951 | 00000D99 | 8B76FE                    | 	mov	si, word [bp-2]
  1952 | 00000D9C | 8B04                      | 	mov	ax, word [si]
  1953 | 00000D9E | 83E816                    | 	sub	ax, 22
  1954 | 00000DA1 | 8904                      | 	mov	word [si], ax
  1955 | 00000DA3 | 8B76FE                    | 	mov	si, word [bp-2]
  1956 | 00000DA6 | 8B34                      | 	mov	si, word [si]
  1957 | 00000DA8 | 83C616                    | 	add	si, 22
  1958 | 00000DAB | C7040002                  | 	mov	word [si], 512
  1959 | 00000DAF | 8B76FE                    | 	mov	si, word [bp-2]
  1960 | 00000DB2 | 8B34                      | 	mov	si, word [si]
  1961 | 00000DB4 | 83C614                    | 	add	si, 20
  1962 | 00000DB7 | C7040000                  | 	mov	word [si], 0
  1963 | 00000DBB | 8B76FE                    | 	mov	si, word [bp-2]
  1964 | 00000DBE | 8B34                      | 	mov	si, word [si]
  1965 | 00000DC0 | 83C612                    | 	add	si, 18
  1966 | 00000DC3 | 8B4604                    | 	mov	ax, word [bp+4]
  1967 | 00000DC6 | 8904                      | 	mov	word [si], ax
  1968 | 00000DC8 | 8B76FE                    | 	mov	si, word [bp-2]
  1969 | 00000DCB | 8B34                      | 	mov	si, word [si]
  1970 | 00000DCD | 83C610                    | 	add	si, 16
  1971 | 00000DD0 | C7040000                  | 	mov	word [si], 0
  1972 | 00000DD4 | 8B76FE                    | 	mov	si, word [bp-2]
  1973 | 00000DD7 | 8B34                      | 	mov	si, word [si]
  1974 | 00000DD9 | 83C60E                    | 	add	si, 14
  1975 | 00000DDC | C7040000                  | 	mov	word [si], 0
  1976 | 00000DE0 | 8B76FE                    | 	mov	si, word [bp-2]
  1977 | 00000DE3 | 8B34                      | 	mov	si, word [si]
  1978 | 00000DE5 | 83C60C                    | 	add	si, 12
  1979 | 00000DE8 | C7040000                  | 	mov	word [si], 0
  1980 | 00000DEC | 8B76FE                    | 	mov	si, word [bp-2]
  1981 | 00000DEF | 8B34                      | 	mov	si, word [si]
  1982 | 00000DF1 | 83C60A                    | 	add	si, 10
  1983 | 00000DF4 | C7040000                  | 	mov	word [si], 0
  1984 | 00000DF8 | 8B76FE                    | 	mov	si, word [bp-2]
  1985 | 00000DFB | 8B34                      | 	mov	si, word [si]
  1986 | 00000DFD | 83C608                    | 	add	si, 8
  1987 | 00000E00 | C7040000                  | 	mov	word [si], 0
  1988 | 00000E04 | 8B76FE                    | 	mov	si, word [bp-2]
  1989 | 00000E07 | 8B34                      | 	mov	si, word [si]
  1990 | 00000E09 | 83C606                    | 	add	si, 6
  1991 | 00000E0C | C7040000                  | 	mov	word [si], 0
  1992 | 00000E10 | 8B76FE                    | 	mov	si, word [bp-2]
  1993 | 00000E13 | 8B34                      | 	mov	si, word [si]
  1994 | 00000E15 | 83C604                    | 	add	si, 4
  1995 | 00000E18 | C7040000                  | 	mov	word [si], 0
  1996 | 00000E1C | 8B76FE                    | 	mov	si, word [bp-2]
  1997 | 00000E1F | 8B34                      | 	mov	si, word [si]
  1998 | 00000E21 | 83C602                    | 	add	si, 2
  1999 | 00000E24 | C7040000                  | 	mov	word [si], 0
  2000 | 00000E28 | 8B76FE                    | 	mov	si, word [bp-2]
  2001 | 00000E2B | 8B34                      | 	mov	si, word [si]
  2002 | 00000E2D | C7040000                  | 	mov	word [si], 0
  2003 | 00000E31 | B80100                    | 	mov	ax, 1
  2004 | 00000E34 | 50                        | 	push	ax
  2005 | 00000E35 | E85800                    | 	call	YKScheduler
  2006 | 00000E38 | 83C402                    | 	add	sp, 2
  2007 | 00000E3B | 89EC                      | 	mov	sp, bp
  2008 | 00000E3D | 5D                        | 	pop	bp
  2009 | 00000E3E | C3                        | 	ret
  2010 |          |                           | L_yakc_22:
  2011 | 00000E3F | 55                        | 	push	bp
  2012 | 00000E40 | 89E5                      | 	mov	bp, sp
  2013 | 00000E42 | 83EC04                    | 	sub	sp, 4
  2014 | 00000E45 | E979FE                    | 	jmp	L_yakc_23
  2015 |          |                           | L_yakc_32:
  2016 | 00000E48 | 72756E2063616C6C65-       | 	DB	"run called. Calling the scheduler",0xA,0
  2017 | 00000E51 | 642E2043616C6C696E-       | ...
  2018 | 00000E5A | 672074686520736368-       | ...
  2019 | 00000E63 | 6564756C65720A00          | ...
  2020 | 00000E6B | 90                        | 	ALIGN	2
  2021 |          |                           | YKRun:
  2022 | 00000E6C | EB1C                      | 	jmp	L_yakc_33
  2023 |          |                           | L_yakc_34:
  2024 | 00000E6E | B8[480E]                  | 	mov	ax, L_yakc_32
  2025 | 00000E71 | 50                        | 	push	ax
  2026 | 00000E72 | E8B3F5                    | 	call	printString
  2027 | 00000E75 | 83C402                    | 	add	sp, 2
  2028 | 00000E78 | C606[810B]01              | 	mov	byte [started_running], 1
  2029 | 00000E7D | 31C0                      | 	xor	ax, ax
  2030 | 00000E7F | 50                        | 	push	ax
  2031 | 00000E80 | E80D00                    | 	call	YKScheduler
  2032 | 00000E83 | 83C402                    | 	add	sp, 2
  2033 | 00000E86 | 89EC                      | 	mov	sp, bp
  2034 | 00000E88 | 5D                        | 	pop	bp
  2035 | 00000E89 | C3                        | 	ret
  2036 |          |                           | L_yakc_33:
  2037 | 00000E8A | 55                        | 	push	bp
  2038 | 00000E8B | 89E5                      | 	mov	bp, sp
  2039 | 00000E8D | EBDF                      | 	jmp	L_yakc_34
  2040 | 00000E8F | 90                        | 	ALIGN	2
  2041 |          |                           | YKScheduler:
  2042 | 00000E90 | EB74                      | 	jmp	L_yakc_36
  2043 |          |                           | L_yakc_37:
  2044 | 00000E92 | A1[9A1A]                  | 	mov	ax, word [YKRdyList]
  2045 | 00000E95 | 8946FE                    | 	mov	word [bp-2], ax
  2046 | 00000E98 | A1[001E]                  | 	mov	ax, word [YKCurrentlyExecuting]
  2047 | 00000E9B | 8946FC                    | 	mov	word [bp-4], ax
  2048 | 00000E9E | A0[810B]                  | 	mov	al, byte [started_running]
  2049 | 00000EA1 | 84C0                      | 	test	al, al
  2050 | 00000EA3 | 745D                      | 	je	L_yakc_39
  2051 |          |                           | L_yakc_38:
  2052 | 00000EA5 | 8B46FE                    | 	mov	ax, word [bp-2]
  2053 | 00000EA8 | 3B06[001E]                | 	cmp	ax, word [YKCurrentlyExecuting]
  2054 | 00000EAC | 7454                      | 	je	L_yakc_39
  2055 |          |                           | L_yakc_40:
  2056 | 00000EAE | A1[941A]                  | 	mov	ax, word [YKCtxSwCount]
  2057 | 00000EB1 | 40                        | 	inc	ax
  2058 | 00000EB2 | A3[941A]                  | 	mov	word [YKCtxSwCount], ax
  2059 | 00000EB5 | 8B46FE                    | 	mov	ax, word [bp-2]
  2060 | 00000EB8 | A3[001E]                  | 	mov	word [YKCurrentlyExecuting], ax
  2061 | 00000EBB | 8B4604                    | 	mov	ax, word [bp+4]
  2062 | 00000EBE | 85C0                      | 	test	ax, ax
  2063 | 00000EC0 | 7520                      | 	jne	L_yakc_41
  2064 | 00000EC2 | 8B76FE                    | 	mov	si, word [bp-2]
  2065 | 00000EC5 | 83C602                    | 	add	si, 2
  2066 | 00000EC8 | FF34                      | 	push	word [si]
  2067 | 00000ECA | 8B76FE                    | 	mov	si, word [bp-2]
  2068 | 00000ECD | FF34                      | 	push	word [si]
  2069 | 00000ECF | B80100                    | 	mov	ax, 1
  2070 | 00000ED2 | 50                        | 	push	ax
  2071 | 00000ED3 | B80100                    | 	mov	ax, 1
  2072 | 00000ED6 | 50                        | 	push	ax
  2073 | 00000ED7 | 31C0                      | 	xor	ax, ax
  2074 | 00000ED9 | 50                        | 	push	ax
  2075 | 00000EDA | E8390F                    | 	call	YKDispatcher_save_context
  2076 | 00000EDD | 83C40A                    | 	add	sp, 10
  2077 | 00000EE0 | EB20                      | 	jmp	L_yakc_42
  2078 |          |                           | L_yakc_41:
  2079 | 00000EE2 | 8B76FE                    | 	mov	si, word [bp-2]
  2080 | 00000EE5 | 83C602                    | 	add	si, 2
  2081 | 00000EE8 | FF34                      | 	push	word [si]
  2082 | 00000EEA | 8B76FE                    | 	mov	si, word [bp-2]
  2083 | 00000EED | FF34                      | 	push	word [si]
  2084 | 00000EEF | 8B46FC                    | 	mov	ax, word [bp-4]
  2085 | 00000EF2 | 83C002                    | 	add	ax, 2
  2086 | 00000EF5 | 50                        | 	push	ax
  2087 | 00000EF6 | FF76FC                    | 	push	word [bp-4]
  2088 | 00000EF9 | FF7604                    | 	push	word [bp+4]
  2089 | 00000EFC | E8170F                    | 	call	YKDispatcher_save_context
  2090 | 00000EFF | 83C40A                    | 	add	sp, 10
  2091 |          |                           | L_yakc_42:
  2092 |          |                           | L_yakc_39:
  2093 | 00000F02 | 89EC                      | 	mov	sp, bp
  2094 | 00000F04 | 5D                        | 	pop	bp
  2095 | 00000F05 | C3                        | 	ret
  2096 |          |                           | L_yakc_36:
  2097 | 00000F06 | 55                        | 	push	bp
  2098 | 00000F07 | 89E5                      | 	mov	bp, sp
  2099 | 00000F09 | 83EC04                    | 	sub	sp, 4
  2100 | 00000F0C | EB84                      | 	jmp	L_yakc_37
  2101 |          |                           | 	ALIGN	2
  2102 |          |                           | YKDelayTask:
  2103 | 00000F0E | E98400                    | 	jmp	L_yakc_44
  2104 |          |                           | L_yakc_45:
  2105 | 00000F11 | E8EE0E                    | 	call	YKEnterMutex
  2106 | 00000F14 | 8B4604                    | 	mov	ax, word [bp+4]
  2107 | 00000F17 | 85C0                      | 	test	ax, ax
  2108 | 00000F19 | 7464                      | 	je	L_yakc_46
  2109 | 00000F1B | A1[9A1A]                  | 	mov	ax, word [YKRdyList]
  2110 | 00000F1E | 8946FE                    | 	mov	word [bp-2], ax
  2111 | 00000F21 | 8B76FE                    | 	mov	si, word [bp-2]
  2112 | 00000F24 | 83C60A                    | 	add	si, 10
  2113 | 00000F27 | 8B04                      | 	mov	ax, word [si]
  2114 | 00000F29 | A3[9A1A]                  | 	mov	word [YKRdyList], ax
  2115 | 00000F2C | 8B76FE                    | 	mov	si, word [bp-2]
  2116 | 00000F2F | 83C60A                    | 	add	si, 10
  2117 | 00000F32 | 8B34                      | 	mov	si, word [si]
  2118 | 00000F34 | 83C60C                    | 	add	si, 12
  2119 | 00000F37 | C7040000                  | 	mov	word [si], 0
  2120 | 00000F3B | 8B76FE                    | 	mov	si, word [bp-2]
  2121 | 00000F3E | 83C60A                    | 	add	si, 10
  2122 | 00000F41 | A1[9C1A]                  | 	mov	ax, word [YKSuspList]
  2123 | 00000F44 | 8904                      | 	mov	word [si], ax
  2124 | 00000F46 | 8B46FE                    | 	mov	ax, word [bp-2]
  2125 | 00000F49 | A3[9C1A]                  | 	mov	word [YKSuspList], ax
  2126 | 00000F4C | 8B76FE                    | 	mov	si, word [bp-2]
  2127 | 00000F4F | 83C60C                    | 	add	si, 12
  2128 | 00000F52 | C7040000                  | 	mov	word [si], 0
  2129 | 00000F56 | 8B76FE                    | 	mov	si, word [bp-2]
  2130 | 00000F59 | 83C60A                    | 	add	si, 10
  2131 | 00000F5C | 8B04                      | 	mov	ax, word [si]
  2132 | 00000F5E | 85C0                      | 	test	ax, ax
  2133 | 00000F60 | 7410                      | 	je	L_yakc_47
  2134 | 00000F62 | 8B76FE                    | 	mov	si, word [bp-2]
  2135 | 00000F65 | 83C60A                    | 	add	si, 10
  2136 | 00000F68 | 8B34                      | 	mov	si, word [si]
  2137 | 00000F6A | 83C60C                    | 	add	si, 12
  2138 | 00000F6D | 8B46FE                    | 	mov	ax, word [bp-2]
  2139 | 00000F70 | 8904                      | 	mov	word [si], ax
  2140 |          |                           | L_yakc_47:
  2141 | 00000F72 | 8B76FE                    | 	mov	si, word [bp-2]
  2142 | 00000F75 | 83C608                    | 	add	si, 8
  2143 | 00000F78 | 8B4604                    | 	mov	ax, word [bp+4]
  2144 | 00000F7B | 8904                      | 	mov	word [si], ax
  2145 | 00000F7D | EB05                      | 	jmp	L_yakc_48
  2146 |          |                           | L_yakc_46:
  2147 | 00000F7F | E8820E                    | 	call	YKExitMutex
  2148 | 00000F82 | EB0D                      | 	jmp	L_yakc_49
  2149 |          |                           | L_yakc_48:
  2150 | 00000F84 | B80100                    | 	mov	ax, 1
  2151 | 00000F87 | 50                        | 	push	ax
  2152 | 00000F88 | E805FF                    | 	call	YKScheduler
  2153 | 00000F8B | 83C402                    | 	add	sp, 2
  2154 | 00000F8E | E8730E                    | 	call	YKExitMutex
  2155 |          |                           | L_yakc_49:
  2156 | 00000F91 | 89EC                      | 	mov	sp, bp
  2157 | 00000F93 | 5D                        | 	pop	bp
  2158 | 00000F94 | C3                        | 	ret
  2159 |          |                           | L_yakc_44:
  2160 | 00000F95 | 55                        | 	push	bp
  2161 | 00000F96 | 89E5                      | 	mov	bp, sp
  2162 | 00000F98 | 51                        | 	push	cx
  2163 | 00000F99 | E975FF                    | 	jmp	L_yakc_45
  2164 |          |                           | 	ALIGN	2
  2165 |          |                           | YKTickHandler:
  2166 | 00000F9C | E91301                    | 	jmp	L_yakc_51
  2167 |          |                           | L_yakc_52:
  2168 | 00000F9F | A1[9C1A]                  | 	mov	ax, word [YKSuspList]
  2169 | 00000FA2 | 8946FE                    | 	mov	word [bp-2], ax
  2170 | 00000FA5 | E85A0E                    | 	call	YKEnterMutex
  2171 | 00000FA8 | A1[981A]                  | 	mov	ax, word [YKTickNum]
  2172 | 00000FAB | 40                        | 	inc	ax
  2173 | 00000FAC | A3[981A]                  | 	mov	word [YKTickNum], ax
  2174 | 00000FAF | E9EF00                    | 	jmp	L_yakc_54
  2175 |          |                           | L_yakc_53:
  2176 | 00000FB2 | 8B76FE                    | 	mov	si, word [bp-2]
  2177 | 00000FB5 | 83C60A                    | 	add	si, 10
  2178 | 00000FB8 | 8B04                      | 	mov	ax, word [si]
  2179 | 00000FBA | 8946FA                    | 	mov	word [bp-6], ax
  2180 | 00000FBD | 8B76FE                    | 	mov	si, word [bp-2]
  2181 | 00000FC0 | 83C608                    | 	add	si, 8
  2182 | 00000FC3 | 8B04                      | 	mov	ax, word [si]
  2183 | 00000FC5 | 48                        | 	dec	ax
  2184 | 00000FC6 | 8B76FE                    | 	mov	si, word [bp-2]
  2185 | 00000FC9 | 83C608                    | 	add	si, 8
  2186 | 00000FCC | 8904                      | 	mov	word [si], ax
  2187 | 00000FCE | 8B76FE                    | 	mov	si, word [bp-2]
  2188 | 00000FD1 | 83C608                    | 	add	si, 8
  2189 | 00000FD4 | 8B04                      | 	mov	ax, word [si]
  2190 | 00000FD6 | 85C0                      | 	test	ax, ax
  2191 | 00000FD8 | 7403E9BE00                | 	jne	L_yakc_56
  2192 | 00000FDD | 8B76FE                    | 	mov	si, word [bp-2]
  2193 | 00000FE0 | 83C60C                    | 	add	si, 12
  2194 | 00000FE3 | 8B04                      | 	mov	ax, word [si]
  2195 | 00000FE5 | 85C0                      | 	test	ax, ax
  2196 | 00000FE7 | 750D                      | 	jne	L_yakc_57
  2197 | 00000FE9 | 8B76FE                    | 	mov	si, word [bp-2]
  2198 | 00000FEC | 83C60A                    | 	add	si, 10
  2199 | 00000FEF | 8B04                      | 	mov	ax, word [si]
  2200 | 00000FF1 | A3[9C1A]                  | 	mov	word [YKSuspList], ax
  2201 | 00000FF4 | EB15                      | 	jmp	L_yakc_58
  2202 |          |                           | L_yakc_57:
  2203 | 00000FF6 | 8B76FE                    | 	mov	si, word [bp-2]
  2204 | 00000FF9 | 83C60A                    | 	add	si, 10
  2205 | 00000FFC | 8B7EFE                    | 	mov	di, word [bp-2]
  2206 | 00000FFF | 83C70C                    | 	add	di, 12
  2207 | 00001002 | 8B3D                      | 	mov	di, word [di]
  2208 | 00001004 | 83C70A                    | 	add	di, 10
  2209 | 00001007 | 8B04                      | 	mov	ax, word [si]
  2210 | 00001009 | 8905                      | 	mov	word [di], ax
  2211 |          |                           | L_yakc_58:
  2212 | 0000100B | 8B76FE                    | 	mov	si, word [bp-2]
  2213 | 0000100E | 83C60A                    | 	add	si, 10
  2214 | 00001011 | 8B04                      | 	mov	ax, word [si]
  2215 | 00001013 | 85C0                      | 	test	ax, ax
  2216 | 00001015 | 7415                      | 	je	L_yakc_59
  2217 | 00001017 | 8B76FE                    | 	mov	si, word [bp-2]
  2218 | 0000101A | 83C60C                    | 	add	si, 12
  2219 | 0000101D | 8B7EFE                    | 	mov	di, word [bp-2]
  2220 | 00001020 | 83C70A                    | 	add	di, 10
  2221 | 00001023 | 8B3D                      | 	mov	di, word [di]
  2222 | 00001025 | 83C70C                    | 	add	di, 12
  2223 | 00001028 | 8B04                      | 	mov	ax, word [si]
  2224 | 0000102A | 8905                      | 	mov	word [di], ax
  2225 |          |                           | L_yakc_59:
  2226 | 0000102C | A1[9A1A]                  | 	mov	ax, word [YKRdyList]
  2227 | 0000102F | 8946FC                    | 	mov	word [bp-4], ax
  2228 | 00001032 | EB0B                      | 	jmp	L_yakc_61
  2229 |          |                           | L_yakc_60:
  2230 | 00001034 | 8B76FC                    | 	mov	si, word [bp-4]
  2231 | 00001037 | 83C60A                    | 	add	si, 10
  2232 | 0000103A | 8B04                      | 	mov	ax, word [si]
  2233 | 0000103C | 8946FC                    | 	mov	word [bp-4], ax
  2234 |          |                           | L_yakc_61:
  2235 | 0000103F | 8B76FC                    | 	mov	si, word [bp-4]
  2236 | 00001042 | 83C606                    | 	add	si, 6
  2237 | 00001045 | 8B7EFE                    | 	mov	di, word [bp-2]
  2238 | 00001048 | 83C706                    | 	add	di, 6
  2239 | 0000104B | 8B05                      | 	mov	ax, word [di]
  2240 | 0000104D | 3B04                      | 	cmp	ax, word [si]
  2241 | 0000104F | 7FE3                      | 	jg	L_yakc_60
  2242 |          |                           | L_yakc_62:
  2243 | 00001051 | 8B76FC                    | 	mov	si, word [bp-4]
  2244 | 00001054 | 83C60C                    | 	add	si, 12
  2245 | 00001057 | 8B04                      | 	mov	ax, word [si]
  2246 | 00001059 | 85C0                      | 	test	ax, ax
  2247 | 0000105B | 7508                      | 	jne	L_yakc_63
  2248 | 0000105D | 8B46FE                    | 	mov	ax, word [bp-2]
  2249 | 00001060 | A3[9A1A]                  | 	mov	word [YKRdyList], ax
  2250 | 00001063 | EB10                      | 	jmp	L_yakc_64
  2251 |          |                           | L_yakc_63:
  2252 | 00001065 | 8B76FC                    | 	mov	si, word [bp-4]
  2253 | 00001068 | 83C60C                    | 	add	si, 12
  2254 | 0000106B | 8B34                      | 	mov	si, word [si]
  2255 | 0000106D | 83C60A                    | 	add	si, 10
  2256 | 00001070 | 8B46FE                    | 	mov	ax, word [bp-2]
  2257 | 00001073 | 8904                      | 	mov	word [si], ax
  2258 |          |                           | L_yakc_64:
  2259 | 00001075 | 8B76FC                    | 	mov	si, word [bp-4]
  2260 | 00001078 | 83C60C                    | 	add	si, 12
  2261 | 0000107B | 8B7EFE                    | 	mov	di, word [bp-2]
  2262 | 0000107E | 83C70C                    | 	add	di, 12
  2263 | 00001081 | 8B04                      | 	mov	ax, word [si]
  2264 | 00001083 | 8905                      | 	mov	word [di], ax
  2265 | 00001085 | 8B76FE                    | 	mov	si, word [bp-2]
  2266 | 00001088 | 83C60A                    | 	add	si, 10
  2267 | 0000108B | 8B46FC                    | 	mov	ax, word [bp-4]
  2268 | 0000108E | 8904                      | 	mov	word [si], ax
  2269 | 00001090 | 8B76FC                    | 	mov	si, word [bp-4]
  2270 | 00001093 | 83C60C                    | 	add	si, 12
  2271 | 00001096 | 8B46FE                    | 	mov	ax, word [bp-2]
  2272 | 00001099 | 8904                      | 	mov	word [si], ax
  2273 |          |                           | L_yakc_56:
  2274 | 0000109B | 8B46FA                    | 	mov	ax, word [bp-6]
  2275 | 0000109E | 8946FE                    | 	mov	word [bp-2], ax
  2276 |          |                           | L_yakc_54:
  2277 | 000010A1 | 8B46FE                    | 	mov	ax, word [bp-2]
  2278 | 000010A4 | 85C0                      | 	test	ax, ax
  2279 | 000010A6 | 7403E907FF                | 	jne	L_yakc_53
  2280 |          |                           | L_yakc_55:
  2281 | 000010AB | E8560D                    | 	call	YKExitMutex
  2282 | 000010AE | 89EC                      | 	mov	sp, bp
  2283 | 000010B0 | 5D                        | 	pop	bp
  2284 | 000010B1 | C3                        | 	ret
  2285 |          |                           | L_yakc_51:
  2286 | 000010B2 | 55                        | 	push	bp
  2287 | 000010B3 | 89E5                      | 	mov	bp, sp
  2288 | 000010B5 | 83EC06                    | 	sub	sp, 6
  2289 | 000010B8 | E9E4FE                    | 	jmp	L_yakc_52
  2290 | 000010BB | 90                        | 	ALIGN	2
  2291 |          |                           | YKEnterISR:
  2292 | 000010BC | EB0B                      | 	jmp	L_yakc_66
  2293 |          |                           | L_yakc_67:
  2294 | 000010BE | A1[921D]                  | 	mov	ax, word [YKISRCallDepth]
  2295 | 000010C1 | 40                        | 	inc	ax
  2296 | 000010C2 | A3[921D]                  | 	mov	word [YKISRCallDepth], ax
  2297 | 000010C5 | 89EC                      | 	mov	sp, bp
  2298 | 000010C7 | 5D                        | 	pop	bp
  2299 | 000010C8 | C3                        | 	ret
  2300 |          |                           | L_yakc_66:
  2301 | 000010C9 | 55                        | 	push	bp
  2302 | 000010CA | 89E5                      | 	mov	bp, sp
  2303 | 000010CC | EBF0                      | 	jmp	L_yakc_67
  2304 |          |                           | 	ALIGN	2
  2305 |          |                           | YKExitISR:
  2306 | 000010CE | EB18                      | 	jmp	L_yakc_69
  2307 |          |                           | L_yakc_70:
  2308 | 000010D0 | A1[921D]                  | 	mov	ax, word [YKISRCallDepth]
  2309 | 000010D3 | 48                        | 	dec	ax
  2310 | 000010D4 | A3[921D]                  | 	mov	word [YKISRCallDepth], ax
  2311 | 000010D7 | 85C0                      | 	test	ax, ax
  2312 | 000010D9 | 7509                      | 	jne	L_yakc_71
  2313 | 000010DB | 31C0                      | 	xor	ax, ax
  2314 | 000010DD | 50                        | 	push	ax
  2315 | 000010DE | E8AFFD                    | 	call	YKScheduler
  2316 | 000010E1 | 83C402                    | 	add	sp, 2
  2317 |          |                           | L_yakc_71:
  2318 | 000010E4 | 89EC                      | 	mov	sp, bp
  2319 | 000010E6 | 5D                        | 	pop	bp
  2320 | 000010E7 | C3                        | 	ret
  2321 |          |                           | L_yakc_69:
  2322 | 000010E8 | 55                        | 	push	bp
  2323 | 000010E9 | 89E5                      | 	mov	bp, sp
  2324 | 000010EB | EBE3                      | 	jmp	L_yakc_70
  2325 | 000010ED | 90                        | 	ALIGN	2
  2326 |          |                           | YKEventCreate:
  2327 | 000010EE | EB53                      | 	jmp	L_yakc_73
  2328 |          |                           | L_yakc_74:
  2329 | 000010F0 | E80F0D                    | 	call	YKEnterMutex
  2330 | 000010F3 | C746FE0000                | 	mov	word [bp-2], 0
  2331 | 000010F8 | EB03                      | 	jmp	L_yakc_76
  2332 |          |                           | L_yakc_75:
  2333 | 000010FA | FF46FE                    | 	inc	word [bp-2]
  2334 |          |                           | L_yakc_76:
  2335 | 000010FD | 8B46FE                    | 	mov	ax, word [bp-2]
  2336 | 00001100 | D1E0                      | 	shl	ax, 1
  2337 | 00001102 | D1E0                      | 	shl	ax, 1
  2338 | 00001104 | 89C6                      | 	mov	si, ax
  2339 | 00001106 | 81C6[F41D]                | 	add	si, YKEVENTArray
  2340 | 0000110A | 8B04                      | 	mov	ax, word [si]
  2341 | 0000110C | 85C0                      | 	test	ax, ax
  2342 | 0000110E | 75EA                      | 	jne	L_yakc_75
  2343 |          |                           | L_yakc_77:
  2344 | 00001110 | 8B46FE                    | 	mov	ax, word [bp-2]
  2345 | 00001113 | D1E0                      | 	shl	ax, 1
  2346 | 00001115 | D1E0                      | 	shl	ax, 1
  2347 | 00001117 | 05[F41D]                  | 	add	ax, YKEVENTArray
  2348 | 0000111A | 89C6                      | 	mov	si, ax
  2349 | 0000111C | 83C602                    | 	add	si, 2
  2350 | 0000111F | 8B4604                    | 	mov	ax, word [bp+4]
  2351 | 00001122 | 8904                      | 	mov	word [si], ax
  2352 | 00001124 | 8B46FE                    | 	mov	ax, word [bp-2]
  2353 | 00001127 | D1E0                      | 	shl	ax, 1
  2354 | 00001129 | D1E0                      | 	shl	ax, 1
  2355 | 0000112B | 89C6                      | 	mov	si, ax
  2356 | 0000112D | 81C6[F41D]                | 	add	si, YKEVENTArray
  2357 | 00001131 | C7040100                  | 	mov	word [si], 1
  2358 | 00001135 | 8B46FE                    | 	mov	ax, word [bp-2]
  2359 | 00001138 | D1E0                      | 	shl	ax, 1
  2360 | 0000113A | D1E0                      | 	shl	ax, 1
  2361 | 0000113C | 05[F41D]                  | 	add	ax, YKEVENTArray
  2362 |          |                           | L_yakc_78:
  2363 | 0000113F | 89EC                      | 	mov	sp, bp
  2364 | 00001141 | 5D                        | 	pop	bp
  2365 | 00001142 | C3                        | 	ret
  2366 |          |                           | L_yakc_73:
  2367 | 00001143 | 55                        | 	push	bp
  2368 | 00001144 | 89E5                      | 	mov	bp, sp
  2369 | 00001146 | 51                        | 	push	cx
  2370 | 00001147 | EBA7                      | 	jmp	L_yakc_74
  2371 | 00001149 | 90                        | 	ALIGN	2
  2372 |          |                           | YKEventPend:
  2373 | 0000114A | E9F100                    | 	jmp	L_yakc_80
  2374 |          |                           | L_yakc_81:
  2375 | 0000114D | E8B20C                    | 	call	YKEnterMutex
  2376 | 00001150 | 8B4608                    | 	mov	ax, word [bp+8]
  2377 | 00001153 | 85C0                      | 	test	ax, ax
  2378 | 00001155 | 7523                      | 	jne	L_yakc_82
  2379 | 00001157 | 8B7604                    | 	mov	si, word [bp+4]
  2380 | 0000115A | 83C602                    | 	add	si, 2
  2381 | 0000115D | 8B04                      | 	mov	ax, word [si]
  2382 | 0000115F | 234606                    | 	and	ax, word [bp+6]
  2383 | 00001162 | 7414                      | 	je	L_yakc_83
  2384 | 00001164 | 8B7604                    | 	mov	si, word [bp+4]
  2385 | 00001167 | 83C602                    | 	add	si, 2
  2386 | 0000116A | 8B04                      | 	mov	ax, word [si]
  2387 | 0000116C | 8946FC                    | 	mov	word [bp-4], ax
  2388 | 0000116F | E8920C                    | 	call	YKExitMutex
  2389 | 00001172 | 8B46FC                    | 	mov	ax, word [bp-4]
  2390 | 00001175 | E9C200                    | 	jmp	L_yakc_84
  2391 |          |                           | L_yakc_83:
  2392 | 00001178 | EB2D                      | 	jmp	L_yakc_85
  2393 |          |                           | L_yakc_82:
  2394 | 0000117A | 8B4606                    | 	mov	ax, word [bp+6]
  2395 | 0000117D | 3B4606                    | 	cmp	ax, word [bp+6]
  2396 | 00001180 | 7404                      | 	je	L_yakc_87
  2397 | 00001182 | 31C0                      | 	xor	ax, ax
  2398 | 00001184 | EB03                      | 	jmp	L_yakc_88
  2399 |          |                           | L_yakc_87:
  2400 | 00001186 | B80100                    | 	mov	ax, 1
  2401 |          |                           | L_yakc_88:
  2402 | 00001189 | 8B7604                    | 	mov	si, word [bp+4]
  2403 | 0000118C | 83C602                    | 	add	si, 2
  2404 | 0000118F | 2304                      | 	and	ax, word [si]
  2405 | 00001191 | 7414                      | 	je	L_yakc_86
  2406 | 00001193 | 8B7604                    | 	mov	si, word [bp+4]
  2407 | 00001196 | 83C602                    | 	add	si, 2
  2408 | 00001199 | 8B04                      | 	mov	ax, word [si]
  2409 | 0000119B | 8946FC                    | 	mov	word [bp-4], ax
  2410 | 0000119E | E8630C                    | 	call	YKExitMutex
  2411 | 000011A1 | 8B46FC                    | 	mov	ax, word [bp-4]
  2412 | 000011A4 | E99300                    | 	jmp	L_yakc_84
  2413 |          |                           | L_yakc_86:
  2414 |          |                           | L_yakc_85:
  2415 | 000011A7 | A1[9A1A]                  | 	mov	ax, word [YKRdyList]
  2416 | 000011AA | 8946FE                    | 	mov	word [bp-2], ax
  2417 | 000011AD | 8B76FE                    | 	mov	si, word [bp-2]
  2418 | 000011B0 | 83C60A                    | 	add	si, 10
  2419 | 000011B3 | 8B04                      | 	mov	ax, word [si]
  2420 | 000011B5 | A3[9A1A]                  | 	mov	word [YKRdyList], ax
  2421 | 000011B8 | 8B76FE                    | 	mov	si, word [bp-2]
  2422 | 000011BB | 83C60A                    | 	add	si, 10
  2423 | 000011BE | 8B34                      | 	mov	si, word [si]
  2424 | 000011C0 | 83C60C                    | 	add	si, 12
  2425 | 000011C3 | C7040000                  | 	mov	word [si], 0
  2426 | 000011C7 | 8B76FE                    | 	mov	si, word [bp-2]
  2427 | 000011CA | 83C60A                    | 	add	si, 10
  2428 | 000011CD | A1[FE1D]                  | 	mov	ax, word [YKEventBlockingList]
  2429 | 000011D0 | 8904                      | 	mov	word [si], ax
  2430 | 000011D2 | 8B46FE                    | 	mov	ax, word [bp-2]
  2431 | 000011D5 | A3[FE1D]                  | 	mov	word [YKEventBlockingList], ax
  2432 | 000011D8 | 8B76FE                    | 	mov	si, word [bp-2]
  2433 | 000011DB | 83C60C                    | 	add	si, 12
  2434 | 000011DE | C7040000                  | 	mov	word [si], 0
  2435 | 000011E2 | 8B76FE                    | 	mov	si, word [bp-2]
  2436 | 000011E5 | 83C60A                    | 	add	si, 10
  2437 | 000011E8 | 8B04                      | 	mov	ax, word [si]
  2438 | 000011EA | 85C0                      | 	test	ax, ax
  2439 | 000011EC | 7410                      | 	je	L_yakc_89
  2440 | 000011EE | 8B76FE                    | 	mov	si, word [bp-2]
  2441 | 000011F1 | 83C60A                    | 	add	si, 10
  2442 | 000011F4 | 8B34                      | 	mov	si, word [si]
  2443 | 000011F6 | 83C60C                    | 	add	si, 12
  2444 | 000011F9 | 8B46FE                    | 	mov	ax, word [bp-2]
  2445 | 000011FC | 8904                      | 	mov	word [si], ax
  2446 |          |                           | L_yakc_89:
  2447 | 000011FE | 8B76FE                    | 	mov	si, word [bp-2]
  2448 | 00001201 | 83C612                    | 	add	si, 18
  2449 | 00001204 | 8B4604                    | 	mov	ax, word [bp+4]
  2450 | 00001207 | 8904                      | 	mov	word [si], ax
  2451 | 00001209 | 8B76FE                    | 	mov	si, word [bp-2]
  2452 | 0000120C | 83C614                    | 	add	si, 20
  2453 | 0000120F | 8B4606                    | 	mov	ax, word [bp+6]
  2454 | 00001212 | 8904                      | 	mov	word [si], ax
  2455 | 00001214 | 8B76FE                    | 	mov	si, word [bp-2]
  2456 | 00001217 | 83C616                    | 	add	si, 22
  2457 | 0000121A | 8B4608                    | 	mov	ax, word [bp+8]
  2458 | 0000121D | 8904                      | 	mov	word [si], ax
  2459 | 0000121F | B80100                    | 	mov	ax, 1
  2460 | 00001222 | 50                        | 	push	ax
  2461 | 00001223 | E86AFC                    | 	call	YKScheduler
  2462 | 00001226 | 83C402                    | 	add	sp, 2
  2463 | 00001229 | 8B7604                    | 	mov	si, word [bp+4]
  2464 | 0000122C | 83C602                    | 	add	si, 2
  2465 | 0000122F | 8B04                      | 	mov	ax, word [si]
  2466 | 00001231 | 8946FC                    | 	mov	word [bp-4], ax
  2467 | 00001234 | E8CD0B                    | 	call	YKExitMutex
  2468 | 00001237 | 8B46FC                    | 	mov	ax, word [bp-4]
  2469 |          |                           | L_yakc_84:
  2470 | 0000123A | 89EC                      | 	mov	sp, bp
  2471 | 0000123C | 5D                        | 	pop	bp
  2472 | 0000123D | C3                        | 	ret
  2473 |          |                           | L_yakc_80:
  2474 | 0000123E | 55                        | 	push	bp
  2475 | 0000123F | 89E5                      | 	mov	bp, sp
  2476 | 00001241 | 83EC04                    | 	sub	sp, 4
  2477 | 00001244 | E906FF                    | 	jmp	L_yakc_81
  2478 | 00001247 | 90                        | 	ALIGN	2
  2479 |          |                           | YKEventSet:
  2480 | 00001248 | E99D01                    | 	jmp	L_yakc_91
  2481 |          |                           | L_yakc_92:
  2482 | 0000124B | E8B40B                    | 	call	YKEnterMutex
  2483 | 0000124E | A1[FE1D]                  | 	mov	ax, word [YKEventBlockingList]
  2484 | 00001251 | 8946FE                    | 	mov	word [bp-2], ax
  2485 | 00001254 | 8B7604                    | 	mov	si, word [bp+4]
  2486 | 00001257 | 83C602                    | 	add	si, 2
  2487 | 0000125A | 8B04                      | 	mov	ax, word [si]
  2488 | 0000125C | 0B4606                    | 	or	ax, word [bp+6]
  2489 | 0000125F | 8B7604                    | 	mov	si, word [bp+4]
  2490 | 00001262 | 83C602                    | 	add	si, 2
  2491 | 00001265 | 8904                      | 	mov	word [si], ax
  2492 | 00001267 | 8B46FE                    | 	mov	ax, word [bp-2]
  2493 | 0000126A | 85C0                      | 	test	ax, ax
  2494 | 0000126C | 7506                      | 	jne	L_yakc_93
  2495 | 0000126E | E8930B                    | 	call	YKExitMutex
  2496 | 00001271 | E97001                    | 	jmp	L_yakc_94
  2497 |          |                           | L_yakc_93:
  2498 | 00001274 | E94F01                    | 	jmp	L_yakc_96
  2499 |          |                           | L_yakc_95:
  2500 | 00001277 | 8B76FE                    | 	mov	si, word [bp-2]
  2501 | 0000127A | 83C60A                    | 	add	si, 10
  2502 | 0000127D | 8B04                      | 	mov	ax, word [si]
  2503 | 0000127F | 8946FA                    | 	mov	word [bp-6], ax
  2504 | 00001282 | 8B76FE                    | 	mov	si, word [bp-2]
  2505 | 00001285 | 83C612                    | 	add	si, 18
  2506 | 00001288 | 8B4604                    | 	mov	ax, word [bp+4]
  2507 | 0000128B | 3B04                      | 	cmp	ax, word [si]
  2508 | 0000128D | 7409                      | 	je	L_yakc_98
  2509 | 0000128F | 8B46FA                    | 	mov	ax, word [bp-6]
  2510 | 00001292 | 8946FE                    | 	mov	word [bp-2], ax
  2511 | 00001295 | E92E01                    | 	jmp	L_yakc_96
  2512 |          |                           | L_yakc_98:
  2513 | 00001298 | 8B76FE                    | 	mov	si, word [bp-2]
  2514 | 0000129B | 83C616                    | 	add	si, 22
  2515 | 0000129E | 8B04                      | 	mov	ax, word [si]
  2516 | 000012A0 | 85C0                      | 	test	ax, ax
  2517 | 000012A2 | 7521                      | 	jne	L_yakc_99
  2518 | 000012A4 | 8B7604                    | 	mov	si, word [bp+4]
  2519 | 000012A7 | 83C602                    | 	add	si, 2
  2520 | 000012AA | 8B04                      | 	mov	ax, word [si]
  2521 | 000012AC | 8B76FE                    | 	mov	si, word [bp-2]
  2522 | 000012AF | 83C614                    | 	add	si, 20
  2523 | 000012B2 | 2304                      | 	and	ax, word [si]
  2524 | 000012B4 | 7408                      | 	je	L_yakc_100
  2525 | 000012B6 | 8B46FE                    | 	mov	ax, word [bp-2]
  2526 | 000012B9 | 8946F8                    | 	mov	word [bp-8], ax
  2527 | 000012BC | EB05                      | 	jmp	L_yakc_101
  2528 |          |                           | L_yakc_100:
  2529 | 000012BE | C746F80000                | 	mov	word [bp-8], 0
  2530 |          |                           | L_yakc_101:
  2531 | 000012C3 | EB29                      | 	jmp	L_yakc_102
  2532 |          |                           | L_yakc_99:
  2533 | 000012C5 | 8B7604                    | 	mov	si, word [bp+4]
  2534 | 000012C8 | 83C602                    | 	add	si, 2
  2535 | 000012CB | 8B04                      | 	mov	ax, word [si]
  2536 | 000012CD | 8B76FE                    | 	mov	si, word [bp-2]
  2537 | 000012D0 | 83C614                    | 	add	si, 20
  2538 | 000012D3 | 2304                      | 	and	ax, word [si]
  2539 | 000012D5 | 8B76FE                    | 	mov	si, word [bp-2]
  2540 | 000012D8 | 83C614                    | 	add	si, 20
  2541 | 000012DB | 8B14                      | 	mov	dx, word [si]
  2542 | 000012DD | 39C2                      | 	cmp	dx, ax
  2543 | 000012DF | 7508                      | 	jne	L_yakc_103
  2544 | 000012E1 | 8B46FE                    | 	mov	ax, word [bp-2]
  2545 | 000012E4 | 8946F8                    | 	mov	word [bp-8], ax
  2546 | 000012E7 | EB05                      | 	jmp	L_yakc_104
  2547 |          |                           | L_yakc_103:
  2548 | 000012E9 | C746F80000                | 	mov	word [bp-8], 0
  2549 |          |                           | L_yakc_104:
  2550 |          |                           | L_yakc_102:
  2551 | 000012EE | 8B46F8                    | 	mov	ax, word [bp-8]
  2552 | 000012F1 | 85C0                      | 	test	ax, ax
  2553 | 000012F3 | 7503E9C800                | 	je	L_yakc_105
  2554 | 000012F8 | 8B76F8                    | 	mov	si, word [bp-8]
  2555 | 000012FB | 83C60C                    | 	add	si, 12
  2556 | 000012FE | 8B04                      | 	mov	ax, word [si]
  2557 | 00001300 | 85C0                      | 	test	ax, ax
  2558 | 00001302 | 750D                      | 	jne	L_yakc_106
  2559 | 00001304 | 8B76F8                    | 	mov	si, word [bp-8]
  2560 | 00001307 | 83C60A                    | 	add	si, 10
  2561 | 0000130A | 8B04                      | 	mov	ax, word [si]
  2562 | 0000130C | A3[FE1D]                  | 	mov	word [YKEventBlockingList], ax
  2563 | 0000130F | EB15                      | 	jmp	L_yakc_107
  2564 |          |                           | L_yakc_106:
  2565 | 00001311 | 8B76F8                    | 	mov	si, word [bp-8]
  2566 | 00001314 | 83C60A                    | 	add	si, 10
  2567 | 00001317 | 8B7EF8                    | 	mov	di, word [bp-8]
  2568 | 0000131A | 83C70C                    | 	add	di, 12
  2569 | 0000131D | 8B3D                      | 	mov	di, word [di]
  2570 | 0000131F | 83C70A                    | 	add	di, 10
  2571 | 00001322 | 8B04                      | 	mov	ax, word [si]
  2572 | 00001324 | 8905                      | 	mov	word [di], ax
  2573 |          |                           | L_yakc_107:
  2574 | 00001326 | 8B76F8                    | 	mov	si, word [bp-8]
  2575 | 00001329 | 83C60A                    | 	add	si, 10
  2576 | 0000132C | 8B04                      | 	mov	ax, word [si]
  2577 | 0000132E | 85C0                      | 	test	ax, ax
  2578 | 00001330 | 7415                      | 	je	L_yakc_108
  2579 | 00001332 | 8B76F8                    | 	mov	si, word [bp-8]
  2580 | 00001335 | 83C60C                    | 	add	si, 12
  2581 | 00001338 | 8B7EF8                    | 	mov	di, word [bp-8]
  2582 | 0000133B | 83C70A                    | 	add	di, 10
  2583 | 0000133E | 8B3D                      | 	mov	di, word [di]
  2584 | 00001340 | 83C70C                    | 	add	di, 12
  2585 | 00001343 | 8B04                      | 	mov	ax, word [si]
  2586 | 00001345 | 8905                      | 	mov	word [di], ax
  2587 |          |                           | L_yakc_108:
  2588 | 00001347 | A1[9A1A]                  | 	mov	ax, word [YKRdyList]
  2589 | 0000134A | 8946FC                    | 	mov	word [bp-4], ax
  2590 | 0000134D | EB0B                      | 	jmp	L_yakc_110
  2591 |          |                           | L_yakc_109:
  2592 | 0000134F | 8B76FC                    | 	mov	si, word [bp-4]
  2593 | 00001352 | 83C60A                    | 	add	si, 10
  2594 | 00001355 | 8B04                      | 	mov	ax, word [si]
  2595 | 00001357 | 8946FC                    | 	mov	word [bp-4], ax
  2596 |          |                           | L_yakc_110:
  2597 | 0000135A | 8B76FC                    | 	mov	si, word [bp-4]
  2598 | 0000135D | 83C606                    | 	add	si, 6
  2599 | 00001360 | 8B7EF8                    | 	mov	di, word [bp-8]
  2600 | 00001363 | 83C706                    | 	add	di, 6
  2601 | 00001366 | 8B05                      | 	mov	ax, word [di]
  2602 | 00001368 | 3B04                      | 	cmp	ax, word [si]
  2603 | 0000136A | 7FE3                      | 	jg	L_yakc_109
  2604 |          |                           | L_yakc_111:
  2605 | 0000136C | 8B76FC                    | 	mov	si, word [bp-4]
  2606 | 0000136F | 83C60C                    | 	add	si, 12
  2607 | 00001372 | 8B04                      | 	mov	ax, word [si]
  2608 | 00001374 | 85C0                      | 	test	ax, ax
  2609 | 00001376 | 7508                      | 	jne	L_yakc_112
  2610 | 00001378 | 8B46F8                    | 	mov	ax, word [bp-8]
  2611 | 0000137B | A3[9A1A]                  | 	mov	word [YKRdyList], ax
  2612 | 0000137E | EB10                      | 	jmp	L_yakc_113
  2613 |          |                           | L_yakc_112:
  2614 | 00001380 | 8B76FC                    | 	mov	si, word [bp-4]
  2615 | 00001383 | 83C60C                    | 	add	si, 12
  2616 | 00001386 | 8B34                      | 	mov	si, word [si]
  2617 | 00001388 | 83C60A                    | 	add	si, 10
  2618 | 0000138B | 8B46F8                    | 	mov	ax, word [bp-8]
  2619 | 0000138E | 8904                      | 	mov	word [si], ax
  2620 |          |                           | L_yakc_113:
  2621 | 00001390 | 8B76FC                    | 	mov	si, word [bp-4]
  2622 | 00001393 | 83C60C                    | 	add	si, 12
  2623 | 00001396 | 8B7EF8                    | 	mov	di, word [bp-8]
  2624 | 00001399 | 83C70C                    | 	add	di, 12
  2625 | 0000139C | 8B04                      | 	mov	ax, word [si]
  2626 | 0000139E | 8905                      | 	mov	word [di], ax
  2627 | 000013A0 | 8B76F8                    | 	mov	si, word [bp-8]
  2628 | 000013A3 | 83C60A                    | 	add	si, 10
  2629 | 000013A6 | 8B46FC                    | 	mov	ax, word [bp-4]
  2630 | 000013A9 | 8904                      | 	mov	word [si], ax
  2631 | 000013AB | 8B76FC                    | 	mov	si, word [bp-4]
  2632 | 000013AE | 83C60C                    | 	add	si, 12
  2633 | 000013B1 | 8B46F8                    | 	mov	ax, word [bp-8]
  2634 | 000013B4 | 8904                      | 	mov	word [si], ax
  2635 | 000013B6 | 8B76F8                    | 	mov	si, word [bp-8]
  2636 | 000013B9 | 83C612                    | 	add	si, 18
  2637 | 000013BC | C7040000                  | 	mov	word [si], 0
  2638 |          |                           | L_yakc_105:
  2639 | 000013C0 | 8B46FA                    | 	mov	ax, word [bp-6]
  2640 | 000013C3 | 8946FE                    | 	mov	word [bp-2], ax
  2641 |          |                           | L_yakc_96:
  2642 | 000013C6 | 8B46FE                    | 	mov	ax, word [bp-2]
  2643 | 000013C9 | 85C0                      | 	test	ax, ax
  2644 | 000013CB | 7403E9A7FE                | 	jne	L_yakc_95
  2645 |          |                           | L_yakc_97:
  2646 | 000013D0 | A1[921D]                  | 	mov	ax, word [YKISRCallDepth]
  2647 | 000013D3 | 85C0                      | 	test	ax, ax
  2648 | 000013D5 | 750A                      | 	jne	L_yakc_114
  2649 | 000013D7 | B80100                    | 	mov	ax, 1
  2650 | 000013DA | 50                        | 	push	ax
  2651 | 000013DB | E8B2FA                    | 	call	YKScheduler
  2652 | 000013DE | 83C402                    | 	add	sp, 2
  2653 |          |                           | L_yakc_114:
  2654 | 000013E1 | E8200A                    | 	call	YKExitMutex
  2655 |          |                           | L_yakc_94:
  2656 | 000013E4 | 89EC                      | 	mov	sp, bp
  2657 | 000013E6 | 5D                        | 	pop	bp
  2658 | 000013E7 | C3                        | 	ret
  2659 |          |                           | L_yakc_91:
  2660 | 000013E8 | 55                        | 	push	bp
  2661 | 000013E9 | 89E5                      | 	mov	bp, sp
  2662 | 000013EB | 83EC08                    | 	sub	sp, 8
  2663 | 000013EE | E95AFE                    | 	jmp	L_yakc_92
  2664 | 000013F1 | 90                        | 	ALIGN	2
  2665 |          |                           | YKEventReset:
  2666 | 000013F2 | EB21                      | 	jmp	L_yakc_116
  2667 |          |                           | L_yakc_117:
  2668 | 000013F4 | E80B0A                    | 	call	YKEnterMutex
  2669 | 000013F7 | 8B7604                    | 	mov	si, word [bp+4]
  2670 | 000013FA | 83C602                    | 	add	si, 2
  2671 | 000013FD | 8B04                      | 	mov	ax, word [si]
  2672 | 000013FF | 8B5606                    | 	mov	dx, word [bp+6]
  2673 | 00001402 | F7D2                      | 	not	dx
  2674 | 00001404 | 21D0                      | 	and	ax, dx
  2675 | 00001406 | 8B7604                    | 	mov	si, word [bp+4]
  2676 | 00001409 | 83C602                    | 	add	si, 2
  2677 | 0000140C | 8904                      | 	mov	word [si], ax
  2678 | 0000140E | E8F309                    | 	call	YKExitMutex
  2679 | 00001411 | 89EC                      | 	mov	sp, bp
  2680 | 00001413 | 5D                        | 	pop	bp
  2681 | 00001414 | C3                        | 	ret
  2682 |          |                           | L_yakc_116:
  2683 | 00001415 | 55                        | 	push	bp
  2684 | 00001416 | 89E5                      | 	mov	bp, sp
  2685 | 00001418 | EBDA                      | 	jmp	L_yakc_117
  2686 |          |                           | 	ALIGN	2
  2687 |          |                           | YKSemCreate:
  2688 | 0000141A | EB55                      | 	jmp	L_yakc_119
  2689 |          |                           | L_yakc_120:
  2690 | 0000141C | E8E309                    | 	call	YKEnterMutex
  2691 | 0000141F | C746FE0000                | 	mov	word [bp-2], 0
  2692 | 00001424 | EB03                      | 	jmp	L_yakc_122
  2693 |          |                           | L_yakc_121:
  2694 | 00001426 | FF46FE                    | 	inc	word [bp-2]
  2695 |          |                           | L_yakc_122:
  2696 | 00001429 | 8B46FE                    | 	mov	ax, word [bp-2]
  2697 | 0000142C | D1E0                      | 	shl	ax, 1
  2698 | 0000142E | D1E0                      | 	shl	ax, 1
  2699 | 00001430 | 05[941D]                  | 	add	ax, YKSEMArray
  2700 | 00001433 | 89C6                      | 	mov	si, ax
  2701 | 00001435 | 83C602                    | 	add	si, 2
  2702 | 00001438 | 8B04                      | 	mov	ax, word [si]
  2703 | 0000143A | 85C0                      | 	test	ax, ax
  2704 | 0000143C | 75E8                      | 	jne	L_yakc_121
  2705 |          |                           | L_yakc_123:
  2706 | 0000143E | 8B46FE                    | 	mov	ax, word [bp-2]
  2707 | 00001441 | D1E0                      | 	shl	ax, 1
  2708 | 00001443 | D1E0                      | 	shl	ax, 1
  2709 | 00001445 | 89C6                      | 	mov	si, ax
  2710 | 00001447 | 81C6[941D]                | 	add	si, YKSEMArray
  2711 | 0000144B | 8B4604                    | 	mov	ax, word [bp+4]
  2712 | 0000144E | 8904                      | 	mov	word [si], ax
  2713 | 00001450 | 8B46FE                    | 	mov	ax, word [bp-2]
  2714 | 00001453 | D1E0                      | 	shl	ax, 1
  2715 | 00001455 | D1E0                      | 	shl	ax, 1
  2716 | 00001457 | 05[941D]                  | 	add	ax, YKSEMArray
  2717 | 0000145A | 89C6                      | 	mov	si, ax
  2718 | 0000145C | 83C602                    | 	add	si, 2
  2719 | 0000145F | C7040100                  | 	mov	word [si], 1
  2720 | 00001463 | 8B46FE                    | 	mov	ax, word [bp-2]
  2721 | 00001466 | D1E0                      | 	shl	ax, 1
  2722 | 00001468 | D1E0                      | 	shl	ax, 1
  2723 | 0000146A | 05[941D]                  | 	add	ax, YKSEMArray
  2724 |          |                           | L_yakc_124:
  2725 | 0000146D | 89EC                      | 	mov	sp, bp
  2726 | 0000146F | 5D                        | 	pop	bp
  2727 | 00001470 | C3                        | 	ret
  2728 |          |                           | L_yakc_119:
  2729 | 00001471 | 55                        | 	push	bp
  2730 | 00001472 | 89E5                      | 	mov	bp, sp
  2731 | 00001474 | 51                        | 	push	cx
  2732 | 00001475 | EBA5                      | 	jmp	L_yakc_120
  2733 | 00001477 | 90                        | 	ALIGN	2
  2734 |          |                           | YKSemPend:
  2735 | 00001478 | E98C00                    | 	jmp	L_yakc_126
  2736 |          |                           | L_yakc_127:
  2737 | 0000147B | E88409                    | 	call	YKEnterMutex
  2738 | 0000147E | 8B7604                    | 	mov	si, word [bp+4]
  2739 | 00001481 | 8B04                      | 	mov	ax, word [si]
  2740 | 00001483 | 48                        | 	dec	ax
  2741 | 00001484 | 8904                      | 	mov	word [si], ax
  2742 | 00001486 | E87B09                    | 	call	YKExitMutex
  2743 | 00001489 | 8B7604                    | 	mov	si, word [bp+4]
  2744 | 0000148C | 833C00                    | 	cmp	word [si], 0
  2745 | 0000148F | 7D72                      | 	jge	L_yakc_129
  2746 |          |                           | L_yakc_128:
  2747 | 00001491 | E86E09                    | 	call	YKEnterMutex
  2748 | 00001494 | A1[9A1A]                  | 	mov	ax, word [YKRdyList]
  2749 | 00001497 | 8946FE                    | 	mov	word [bp-2], ax
  2750 | 0000149A | 8B76FE                    | 	mov	si, word [bp-2]
  2751 | 0000149D | 83C60A                    | 	add	si, 10
  2752 | 000014A0 | 8B04                      | 	mov	ax, word [si]
  2753 | 000014A2 | A3[9A1A]                  | 	mov	word [YKRdyList], ax
  2754 | 000014A5 | 8B76FE                    | 	mov	si, word [bp-2]
  2755 | 000014A8 | 83C60A                    | 	add	si, 10
  2756 | 000014AB | 8B34                      | 	mov	si, word [si]
  2757 | 000014AD | 83C60C                    | 	add	si, 12
  2758 | 000014B0 | C7040000                  | 	mov	word [si], 0
  2759 | 000014B4 | 8B76FE                    | 	mov	si, word [bp-2]
  2760 | 000014B7 | 83C60A                    | 	add	si, 10
  2761 | 000014BA | A1[9E1A]                  | 	mov	ax, word [YKSemaphoreWaitingList]
  2762 | 000014BD | 8904                      | 	mov	word [si], ax
  2763 | 000014BF | 8B46FE                    | 	mov	ax, word [bp-2]
  2764 | 000014C2 | A3[9E1A]                  | 	mov	word [YKSemaphoreWaitingList], ax
  2765 | 000014C5 | 8B76FE                    | 	mov	si, word [bp-2]
  2766 | 000014C8 | 83C60C                    | 	add	si, 12
  2767 | 000014CB | C7040000                  | 	mov	word [si], 0
  2768 | 000014CF | 8B76FE                    | 	mov	si, word [bp-2]
  2769 | 000014D2 | 83C60A                    | 	add	si, 10
  2770 | 000014D5 | 8B04                      | 	mov	ax, word [si]
  2771 | 000014D7 | 85C0                      | 	test	ax, ax
  2772 | 000014D9 | 7410                      | 	je	L_yakc_130
  2773 | 000014DB | 8B76FE                    | 	mov	si, word [bp-2]
  2774 | 000014DE | 83C60A                    | 	add	si, 10
  2775 | 000014E1 | 8B34                      | 	mov	si, word [si]
  2776 | 000014E3 | 83C60C                    | 	add	si, 12
  2777 | 000014E6 | 8B46FE                    | 	mov	ax, word [bp-2]
  2778 | 000014E9 | 8904                      | 	mov	word [si], ax
  2779 |          |                           | L_yakc_130:
  2780 | 000014EB | 8B76FE                    | 	mov	si, word [bp-2]
  2781 | 000014EE | 83C60E                    | 	add	si, 14
  2782 | 000014F1 | 8B4604                    | 	mov	ax, word [bp+4]
  2783 | 000014F4 | 8904                      | 	mov	word [si], ax
  2784 | 000014F6 | B80100                    | 	mov	ax, 1
  2785 | 000014F9 | 50                        | 	push	ax
  2786 | 000014FA | E893F9                    | 	call	YKScheduler
  2787 | 000014FD | 83C402                    | 	add	sp, 2
  2788 | 00001500 | E80109                    | 	call	YKExitMutex
  2789 |          |                           | L_yakc_129:
  2790 | 00001503 | 89EC                      | 	mov	sp, bp
  2791 | 00001505 | 5D                        | 	pop	bp
  2792 | 00001506 | C3                        | 	ret
  2793 |          |                           | L_yakc_126:
  2794 | 00001507 | 55                        | 	push	bp
  2795 | 00001508 | 89E5                      | 	mov	bp, sp
  2796 | 0000150A | 51                        | 	push	cx
  2797 | 0000150B | E96DFF                    | 	jmp	L_yakc_127
  2798 |          |                           | 	ALIGN	2
  2799 |          |                           | YKSemPost:
  2800 | 0000150E | E94B01                    | 	jmp	L_yakc_132
  2801 |          |                           | L_yakc_133:
  2802 | 00001511 | C746F80000                | 	mov	word [bp-8], 0
  2803 | 00001516 | A1[9E1A]                  | 	mov	ax, word [YKSemaphoreWaitingList]
  2804 | 00001519 | 8946FE                    | 	mov	word [bp-2], ax
  2805 | 0000151C | E8E308                    | 	call	YKEnterMutex
  2806 | 0000151F | 8B7604                    | 	mov	si, word [bp+4]
  2807 | 00001522 | 8B04                      | 	mov	ax, word [si]
  2808 | 00001524 | 40                        | 	inc	ax
  2809 | 00001525 | 8904                      | 	mov	word [si], ax
  2810 | 00001527 | EB3F                      | 	jmp	L_yakc_135
  2811 |          |                           | L_yakc_134:
  2812 | 00001529 | 8B76FE                    | 	mov	si, word [bp-2]
  2813 | 0000152C | 83C60E                    | 	add	si, 14
  2814 | 0000152F | 8B4604                    | 	mov	ax, word [bp+4]
  2815 | 00001532 | 3B04                      | 	cmp	ax, word [si]
  2816 | 00001534 | 7527                      | 	jne	L_yakc_137
  2817 | 00001536 | 8B46F8                    | 	mov	ax, word [bp-8]
  2818 | 00001539 | 85C0                      | 	test	ax, ax
  2819 | 0000153B | 7508                      | 	jne	L_yakc_138
  2820 | 0000153D | 8B46FE                    | 	mov	ax, word [bp-2]
  2821 | 00001540 | 8946F8                    | 	mov	word [bp-8], ax
  2822 | 00001543 | EB18                      | 	jmp	L_yakc_139
  2823 |          |                           | L_yakc_138:
  2824 | 00001545 | 8B76FE                    | 	mov	si, word [bp-2]
  2825 | 00001548 | 83C606                    | 	add	si, 6
  2826 | 0000154B | 8B7EF8                    | 	mov	di, word [bp-8]
  2827 | 0000154E | 83C706                    | 	add	di, 6
  2828 | 00001551 | 8B05                      | 	mov	ax, word [di]
  2829 | 00001553 | 3B04                      | 	cmp	ax, word [si]
  2830 | 00001555 | 7E06                      | 	jle	L_yakc_140
  2831 | 00001557 | 8B46FE                    | 	mov	ax, word [bp-2]
  2832 | 0000155A | 8946F8                    | 	mov	word [bp-8], ax
  2833 |          |                           | L_yakc_140:
  2834 |          |                           | L_yakc_139:
  2835 |          |                           | L_yakc_137:
  2836 | 0000155D | 8B76FE                    | 	mov	si, word [bp-2]
  2837 | 00001560 | 83C60A                    | 	add	si, 10
  2838 | 00001563 | 8B04                      | 	mov	ax, word [si]
  2839 | 00001565 | 8946FE                    | 	mov	word [bp-2], ax
  2840 |          |                           | L_yakc_135:
  2841 | 00001568 | 8B46FE                    | 	mov	ax, word [bp-2]
  2842 | 0000156B | 85C0                      | 	test	ax, ax
  2843 | 0000156D | 75BA                      | 	jne	L_yakc_134
  2844 |          |                           | L_yakc_136:
  2845 | 0000156F | 8B46F8                    | 	mov	ax, word [bp-8]
  2846 | 00001572 | 85C0                      | 	test	ax, ax
  2847 | 00001574 | 7506                      | 	jne	L_yakc_141
  2848 | 00001576 | E88B08                    | 	call	YKExitMutex
  2849 | 00001579 | E9DC00                    | 	jmp	L_yakc_142
  2850 |          |                           | L_yakc_141:
  2851 | 0000157C | 8B76F8                    | 	mov	si, word [bp-8]
  2852 | 0000157F | 83C60C                    | 	add	si, 12
  2853 | 00001582 | 8B04                      | 	mov	ax, word [si]
  2854 | 00001584 | 85C0                      | 	test	ax, ax
  2855 | 00001586 | 750D                      | 	jne	L_yakc_143
  2856 | 00001588 | 8B76F8                    | 	mov	si, word [bp-8]
  2857 | 0000158B | 83C60A                    | 	add	si, 10
  2858 | 0000158E | 8B04                      | 	mov	ax, word [si]
  2859 | 00001590 | A3[9E1A]                  | 	mov	word [YKSemaphoreWaitingList], ax
  2860 | 00001593 | EB15                      | 	jmp	L_yakc_144
  2861 |          |                           | L_yakc_143:
  2862 | 00001595 | 8B76F8                    | 	mov	si, word [bp-8]
  2863 | 00001598 | 83C60A                    | 	add	si, 10
  2864 | 0000159B | 8B7EF8                    | 	mov	di, word [bp-8]
  2865 | 0000159E | 83C70C                    | 	add	di, 12
  2866 | 000015A1 | 8B3D                      | 	mov	di, word [di]
  2867 | 000015A3 | 83C70A                    | 	add	di, 10
  2868 | 000015A6 | 8B04                      | 	mov	ax, word [si]
  2869 | 000015A8 | 8905                      | 	mov	word [di], ax
  2870 |          |                           | L_yakc_144:
  2871 | 000015AA | 8B76F8                    | 	mov	si, word [bp-8]
  2872 | 000015AD | 83C60A                    | 	add	si, 10
  2873 | 000015B0 | 8B04                      | 	mov	ax, word [si]
  2874 | 000015B2 | 85C0                      | 	test	ax, ax
  2875 | 000015B4 | 7415                      | 	je	L_yakc_145
  2876 | 000015B6 | 8B76F8                    | 	mov	si, word [bp-8]
  2877 | 000015B9 | 83C60C                    | 	add	si, 12
  2878 | 000015BC | 8B7EF8                    | 	mov	di, word [bp-8]
  2879 | 000015BF | 83C70A                    | 	add	di, 10
  2880 | 000015C2 | 8B3D                      | 	mov	di, word [di]
  2881 | 000015C4 | 83C70C                    | 	add	di, 12
  2882 | 000015C7 | 8B04                      | 	mov	ax, word [si]
  2883 | 000015C9 | 8905                      | 	mov	word [di], ax
  2884 |          |                           | L_yakc_145:
  2885 | 000015CB | A1[9A1A]                  | 	mov	ax, word [YKRdyList]
  2886 | 000015CE | 8946FC                    | 	mov	word [bp-4], ax
  2887 | 000015D1 | EB0B                      | 	jmp	L_yakc_147
  2888 |          |                           | L_yakc_146:
  2889 | 000015D3 | 8B76FC                    | 	mov	si, word [bp-4]
  2890 | 000015D6 | 83C60A                    | 	add	si, 10
  2891 | 000015D9 | 8B04                      | 	mov	ax, word [si]
  2892 | 000015DB | 8946FC                    | 	mov	word [bp-4], ax
  2893 |          |                           | L_yakc_147:
  2894 | 000015DE | 8B76FC                    | 	mov	si, word [bp-4]
  2895 | 000015E1 | 83C606                    | 	add	si, 6
  2896 | 000015E4 | 8B7EF8                    | 	mov	di, word [bp-8]
  2897 | 000015E7 | 83C706                    | 	add	di, 6
  2898 | 000015EA | 8B05                      | 	mov	ax, word [di]
  2899 | 000015EC | 3B04                      | 	cmp	ax, word [si]
  2900 | 000015EE | 7FE3                      | 	jg	L_yakc_146
  2901 |          |                           | L_yakc_148:
  2902 | 000015F0 | 8B76FC                    | 	mov	si, word [bp-4]
  2903 | 000015F3 | 83C60C                    | 	add	si, 12
  2904 | 000015F6 | 8B04                      | 	mov	ax, word [si]
  2905 | 000015F8 | 85C0                      | 	test	ax, ax
  2906 | 000015FA | 7508                      | 	jne	L_yakc_149
  2907 | 000015FC | 8B46F8                    | 	mov	ax, word [bp-8]
  2908 | 000015FF | A3[9A1A]                  | 	mov	word [YKRdyList], ax
  2909 | 00001602 | EB10                      | 	jmp	L_yakc_150
  2910 |          |                           | L_yakc_149:
  2911 | 00001604 | 8B76FC                    | 	mov	si, word [bp-4]
  2912 | 00001607 | 83C60C                    | 	add	si, 12
  2913 | 0000160A | 8B34                      | 	mov	si, word [si]
  2914 | 0000160C | 83C60A                    | 	add	si, 10
  2915 | 0000160F | 8B46F8                    | 	mov	ax, word [bp-8]
  2916 | 00001612 | 8904                      | 	mov	word [si], ax
  2917 |          |                           | L_yakc_150:
  2918 | 00001614 | 8B76FC                    | 	mov	si, word [bp-4]
  2919 | 00001617 | 83C60C                    | 	add	si, 12
  2920 | 0000161A | 8B7EF8                    | 	mov	di, word [bp-8]
  2921 | 0000161D | 83C70C                    | 	add	di, 12
  2922 | 00001620 | 8B04                      | 	mov	ax, word [si]
  2923 | 00001622 | 8905                      | 	mov	word [di], ax
  2924 | 00001624 | 8B76F8                    | 	mov	si, word [bp-8]
  2925 | 00001627 | 83C60A                    | 	add	si, 10
  2926 | 0000162A | 8B46FC                    | 	mov	ax, word [bp-4]
  2927 | 0000162D | 8904                      | 	mov	word [si], ax
  2928 | 0000162F | 8B76FC                    | 	mov	si, word [bp-4]
  2929 | 00001632 | 83C60C                    | 	add	si, 12
  2930 | 00001635 | 8B46F8                    | 	mov	ax, word [bp-8]
  2931 | 00001638 | 8904                      | 	mov	word [si], ax
  2932 | 0000163A | 8B76F8                    | 	mov	si, word [bp-8]
  2933 | 0000163D | 83C60E                    | 	add	si, 14
  2934 | 00001640 | C7040000                  | 	mov	word [si], 0
  2935 | 00001644 | A1[921D]                  | 	mov	ax, word [YKISRCallDepth]
  2936 | 00001647 | 85C0                      | 	test	ax, ax
  2937 | 00001649 | 750A                      | 	jne	L_yakc_151
  2938 | 0000164B | B80100                    | 	mov	ax, 1
  2939 | 0000164E | 50                        | 	push	ax
  2940 | 0000164F | E83EF8                    | 	call	YKScheduler
  2941 | 00001652 | 83C402                    | 	add	sp, 2
  2942 |          |                           | L_yakc_151:
  2943 | 00001655 | E8AC07                    | 	call	YKExitMutex
  2944 |          |                           | L_yakc_142:
  2945 | 00001658 | 89EC                      | 	mov	sp, bp
  2946 | 0000165A | 5D                        | 	pop	bp
  2947 | 0000165B | C3                        | 	ret
  2948 |          |                           | L_yakc_132:
  2949 | 0000165C | 55                        | 	push	bp
  2950 | 0000165D | 89E5                      | 	mov	bp, sp
  2951 | 0000165F | 83EC08                    | 	sub	sp, 8
  2952 | 00001662 | E9ACFE                    | 	jmp	L_yakc_133
  2953 | 00001665 | 90                        | 	ALIGN	2
  2954 |          |                           | YKQCreate:
  2955 | 00001666 | E99400                    | 	jmp	L_yakc_153
  2956 |          |                           | L_yakc_154:
  2957 | 00001669 | E89607                    | 	call	YKEnterMutex
  2958 | 0000166C | C746FE0000                | 	mov	word [bp-2], 0
  2959 | 00001671 | EB03                      | 	jmp	L_yakc_156
  2960 |          |                           | L_yakc_155:
  2961 | 00001673 | FF46FE                    | 	inc	word [bp-2]
  2962 |          |                           | L_yakc_156:
  2963 | 00001676 | 8B46FE                    | 	mov	ax, word [bp-2]
  2964 | 00001679 | B90A00                    | 	mov	cx, 10
  2965 | 0000167C | F7E9                      | 	imul	cx
  2966 | 0000167E | 89C6                      | 	mov	si, ax
  2967 | 00001680 | 81C6[E01D]                | 	add	si, YKQueueArray
  2968 | 00001684 | 8B04                      | 	mov	ax, word [si]
  2969 | 00001686 | 85C0                      | 	test	ax, ax
  2970 | 00001688 | 75E9                      | 	jne	L_yakc_155
  2971 |          |                           | L_yakc_157:
  2972 | 0000168A | 8B46FE                    | 	mov	ax, word [bp-2]
  2973 | 0000168D | B90A00                    | 	mov	cx, 10
  2974 | 00001690 | F7E9                      | 	imul	cx
  2975 | 00001692 | 89C6                      | 	mov	si, ax
  2976 | 00001694 | 81C6[E01D]                | 	add	si, YKQueueArray
  2977 | 00001698 | 8B4604                    | 	mov	ax, word [bp+4]
  2978 | 0000169B | 8904                      | 	mov	word [si], ax
  2979 | 0000169D | 8B46FE                    | 	mov	ax, word [bp-2]
  2980 | 000016A0 | B90A00                    | 	mov	cx, 10
  2981 | 000016A3 | F7E9                      | 	imul	cx
  2982 | 000016A5 | 05[E01D]                  | 	add	ax, YKQueueArray
  2983 | 000016A8 | 89C6                      | 	mov	si, ax
  2984 | 000016AA | 83C602                    | 	add	si, 2
  2985 | 000016AD | 8B4606                    | 	mov	ax, word [bp+6]
  2986 | 000016B0 | 8904                      | 	mov	word [si], ax
  2987 | 000016B2 | 8B46FE                    | 	mov	ax, word [bp-2]
  2988 | 000016B5 | B90A00                    | 	mov	cx, 10
  2989 | 000016B8 | F7E9                      | 	imul	cx
  2990 | 000016BA | 05[E01D]                  | 	add	ax, YKQueueArray
  2991 | 000016BD | 89C6                      | 	mov	si, ax
  2992 | 000016BF | 83C604                    | 	add	si, 4
  2993 | 000016C2 | C7040000                  | 	mov	word [si], 0
  2994 | 000016C6 | 8B46FE                    | 	mov	ax, word [bp-2]
  2995 | 000016C9 | B90A00                    | 	mov	cx, 10
  2996 | 000016CC | F7E9                      | 	imul	cx
  2997 | 000016CE | 05[E01D]                  | 	add	ax, YKQueueArray
  2998 | 000016D1 | 89C6                      | 	mov	si, ax
  2999 | 000016D3 | 83C606                    | 	add	si, 6
  3000 | 000016D6 | C7040000                  | 	mov	word [si], 0
  3001 | 000016DA | 8B46FE                    | 	mov	ax, word [bp-2]
  3002 | 000016DD | B90A00                    | 	mov	cx, 10
  3003 | 000016E0 | F7E9                      | 	imul	cx
  3004 | 000016E2 | 05[E01D]                  | 	add	ax, YKQueueArray
  3005 | 000016E5 | 89C6                      | 	mov	si, ax
  3006 | 000016E7 | 83C608                    | 	add	si, 8
  3007 | 000016EA | C7040000                  | 	mov	word [si], 0
  3008 | 000016EE | 8B46FE                    | 	mov	ax, word [bp-2]
  3009 | 000016F1 | B90A00                    | 	mov	cx, 10
  3010 | 000016F4 | F7E9                      | 	imul	cx
  3011 | 000016F6 | 05[E01D]                  | 	add	ax, YKQueueArray
  3012 |          |                           | L_yakc_158:
  3013 | 000016F9 | 89EC                      | 	mov	sp, bp
  3014 | 000016FB | 5D                        | 	pop	bp
  3015 | 000016FC | C3                        | 	ret
  3016 |          |                           | L_yakc_153:
  3017 | 000016FD | 55                        | 	push	bp
  3018 | 000016FE | 89E5                      | 	mov	bp, sp
  3019 | 00001700 | 51                        | 	push	cx
  3020 | 00001701 | E965FF                    | 	jmp	L_yakc_154
  3021 |          |                           | 	ALIGN	2
  3022 |          |                           | YKQPend:
  3023 | 00001704 | E9D600                    | 	jmp	L_yakc_160
  3024 |          |                           | L_yakc_161:
  3025 | 00001707 | E8F806                    | 	call	YKEnterMutex
  3026 | 0000170A | 8B7604                    | 	mov	si, word [bp+4]
  3027 | 0000170D | 83C608                    | 	add	si, 8
  3028 | 00001710 | 8B04                      | 	mov	ax, word [si]
  3029 | 00001712 | 85C0                      | 	test	ax, ax
  3030 | 00001714 | 756C                      | 	jne	L_yakc_162
  3031 | 00001716 | A1[9A1A]                  | 	mov	ax, word [YKRdyList]
  3032 | 00001719 | 8946FE                    | 	mov	word [bp-2], ax
  3033 | 0000171C | 8B76FE                    | 	mov	si, word [bp-2]
  3034 | 0000171F | 83C60A                    | 	add	si, 10
  3035 | 00001722 | 8B04                      | 	mov	ax, word [si]
  3036 | 00001724 | A3[9A1A]                  | 	mov	word [YKRdyList], ax
  3037 | 00001727 | 8B76FE                    | 	mov	si, word [bp-2]
  3038 | 0000172A | 83C60A                    | 	add	si, 10
  3039 | 0000172D | 8B34                      | 	mov	si, word [si]
  3040 | 0000172F | 83C60C                    | 	add	si, 12
  3041 | 00001732 | C7040000                  | 	mov	word [si], 0
  3042 | 00001736 | 8B76FE                    | 	mov	si, word [bp-2]
  3043 | 00001739 | 83C60A                    | 	add	si, 10
  3044 | 0000173C | A1[FC1D]                  | 	mov	ax, word [YKQueueWaitingList]
  3045 | 0000173F | 8904                      | 	mov	word [si], ax
  3046 | 00001741 | 8B46FE                    | 	mov	ax, word [bp-2]
  3047 | 00001744 | A3[FC1D]                  | 	mov	word [YKQueueWaitingList], ax
  3048 | 00001747 | 8B76FE                    | 	mov	si, word [bp-2]
  3049 | 0000174A | 83C60C                    | 	add	si, 12
  3050 | 0000174D | C7040000                  | 	mov	word [si], 0
  3051 | 00001751 | 8B76FE                    | 	mov	si, word [bp-2]
  3052 | 00001754 | 83C60A                    | 	add	si, 10
  3053 | 00001757 | 8B04                      | 	mov	ax, word [si]
  3054 | 00001759 | 85C0                      | 	test	ax, ax
  3055 | 0000175B | 7410                      | 	je	L_yakc_163
  3056 | 0000175D | 8B76FE                    | 	mov	si, word [bp-2]
  3057 | 00001760 | 83C60A                    | 	add	si, 10
  3058 | 00001763 | 8B34                      | 	mov	si, word [si]
  3059 | 00001765 | 83C60C                    | 	add	si, 12
  3060 | 00001768 | 8B46FE                    | 	mov	ax, word [bp-2]
  3061 | 0000176B | 8904                      | 	mov	word [si], ax
  3062 |          |                           | L_yakc_163:
  3063 | 0000176D | 8B76FE                    | 	mov	si, word [bp-2]
  3064 | 00001770 | 83C610                    | 	add	si, 16
  3065 | 00001773 | 8B4604                    | 	mov	ax, word [bp+4]
  3066 | 00001776 | 8904                      | 	mov	word [si], ax
  3067 | 00001778 | B80100                    | 	mov	ax, 1
  3068 | 0000177B | 50                        | 	push	ax
  3069 | 0000177C | E811F7                    | 	call	YKScheduler
  3070 | 0000177F | 83C402                    | 	add	sp, 2
  3071 |          |                           | L_yakc_162:
  3072 | 00001782 | 8B7604                    | 	mov	si, word [bp+4]
  3073 | 00001785 | 83C604                    | 	add	si, 4
  3074 | 00001788 | 8B04                      | 	mov	ax, word [si]
  3075 | 0000178A | D1E0                      | 	shl	ax, 1
  3076 | 0000178C | 89C6                      | 	mov	si, ax
  3077 | 0000178E | 8B7E04                    | 	mov	di, word [bp+4]
  3078 | 00001791 | 0335                      | 	add	si, word [di]
  3079 | 00001793 | 8B04                      | 	mov	ax, word [si]
  3080 | 00001795 | 8946FC                    | 	mov	word [bp-4], ax
  3081 | 00001798 | 8B7604                    | 	mov	si, word [bp+4]
  3082 | 0000179B | 83C608                    | 	add	si, 8
  3083 | 0000179E | 8B04                      | 	mov	ax, word [si]
  3084 | 000017A0 | 48                        | 	dec	ax
  3085 | 000017A1 | 8B7604                    | 	mov	si, word [bp+4]
  3086 | 000017A4 | 83C608                    | 	add	si, 8
  3087 | 000017A7 | 8904                      | 	mov	word [si], ax
  3088 | 000017A9 | 8B7604                    | 	mov	si, word [bp+4]
  3089 | 000017AC | 83C604                    | 	add	si, 4
  3090 | 000017AF | 8B04                      | 	mov	ax, word [si]
  3091 | 000017B1 | 40                        | 	inc	ax
  3092 | 000017B2 | 8B7604                    | 	mov	si, word [bp+4]
  3093 | 000017B5 | 83C602                    | 	add	si, 2
  3094 | 000017B8 | 8B14                      | 	mov	dx, word [si]
  3095 | 000017BA | 39C2                      | 	cmp	dx, ax
  3096 | 000017BC | 7E0B                      | 	jle	L_yakc_164
  3097 | 000017BE | 8B7604                    | 	mov	si, word [bp+4]
  3098 | 000017C1 | 83C604                    | 	add	si, 4
  3099 | 000017C4 | 8B04                      | 	mov	ax, word [si]
  3100 | 000017C6 | 40                        | 	inc	ax
  3101 | 000017C7 | EB02                      | 	jmp	L_yakc_165
  3102 |          |                           | L_yakc_164:
  3103 | 000017C9 | 31C0                      | 	xor	ax, ax
  3104 |          |                           | L_yakc_165:
  3105 | 000017CB | 8B7604                    | 	mov	si, word [bp+4]
  3106 | 000017CE | 83C604                    | 	add	si, 4
  3107 | 000017D1 | 8904                      | 	mov	word [si], ax
  3108 | 000017D3 | E82E06                    | 	call	YKExitMutex
  3109 | 000017D6 | 8B46FC                    | 	mov	ax, word [bp-4]
  3110 |          |                           | L_yakc_166:
  3111 | 000017D9 | 89EC                      | 	mov	sp, bp
  3112 | 000017DB | 5D                        | 	pop	bp
  3113 | 000017DC | C3                        | 	ret
  3114 |          |                           | L_yakc_160:
  3115 | 000017DD | 55                        | 	push	bp
  3116 | 000017DE | 89E5                      | 	mov	bp, sp
  3117 | 000017E0 | 83EC04                    | 	sub	sp, 4
  3118 | 000017E3 | E921FF                    | 	jmp	L_yakc_161
  3119 |          |                           | 	ALIGN	2
  3120 |          |                           | YKQPost:
  3121 | 000017E6 | E9B401                    | 	jmp	L_yakc_168
  3122 |          |                           | L_yakc_169:
  3123 | 000017E9 | E81606                    | 	call	YKEnterMutex
  3124 | 000017EC | 8B7604                    | 	mov	si, word [bp+4]
  3125 | 000017EF | 83C602                    | 	add	si, 2
  3126 | 000017F2 | 8B04                      | 	mov	ax, word [si]
  3127 | 000017F4 | 48                        | 	dec	ax
  3128 | 000017F5 | 8B7604                    | 	mov	si, word [bp+4]
  3129 | 000017F8 | 83C608                    | 	add	si, 8
  3130 | 000017FB | 8B14                      | 	mov	dx, word [si]
  3131 | 000017FD | 39C2                      | 	cmp	dx, ax
  3132 | 000017FF | 7505                      | 	jne	L_yakc_170
  3133 | 00001801 | 31C0                      | 	xor	ax, ax
  3134 | 00001803 | E99301                    | 	jmp	L_yakc_171
  3135 |          |                           | L_yakc_170:
  3136 | 00001806 | C746FC0000                | 	mov	word [bp-4], 0
  3137 | 0000180B | A1[FC1D]                  | 	mov	ax, word [YKQueueWaitingList]
  3138 | 0000180E | 8946FE                    | 	mov	word [bp-2], ax
  3139 | 00001811 | 8B7604                    | 	mov	si, word [bp+4]
  3140 | 00001814 | 83C606                    | 	add	si, 6
  3141 | 00001817 | 8B04                      | 	mov	ax, word [si]
  3142 | 00001819 | D1E0                      | 	shl	ax, 1
  3143 | 0000181B | 89C6                      | 	mov	si, ax
  3144 | 0000181D | 8B7E04                    | 	mov	di, word [bp+4]
  3145 | 00001820 | 0335                      | 	add	si, word [di]
  3146 | 00001822 | 8B4606                    | 	mov	ax, word [bp+6]
  3147 | 00001825 | 8904                      | 	mov	word [si], ax
  3148 | 00001827 | 8B7604                    | 	mov	si, word [bp+4]
  3149 | 0000182A | 83C608                    | 	add	si, 8
  3150 | 0000182D | 8B04                      | 	mov	ax, word [si]
  3151 | 0000182F | 40                        | 	inc	ax
  3152 | 00001830 | 8B7604                    | 	mov	si, word [bp+4]
  3153 | 00001833 | 83C608                    | 	add	si, 8
  3154 | 00001836 | 8904                      | 	mov	word [si], ax
  3155 | 00001838 | 8B7604                    | 	mov	si, word [bp+4]
  3156 | 0000183B | 83C606                    | 	add	si, 6
  3157 | 0000183E | 8B04                      | 	mov	ax, word [si]
  3158 | 00001840 | 40                        | 	inc	ax
  3159 | 00001841 | 8B7604                    | 	mov	si, word [bp+4]
  3160 | 00001844 | 83C602                    | 	add	si, 2
  3161 | 00001847 | 8B14                      | 	mov	dx, word [si]
  3162 | 00001849 | 39C2                      | 	cmp	dx, ax
  3163 | 0000184B | 7E0B                      | 	jle	L_yakc_172
  3164 | 0000184D | 8B7604                    | 	mov	si, word [bp+4]
  3165 | 00001850 | 83C606                    | 	add	si, 6
  3166 | 00001853 | 8B04                      | 	mov	ax, word [si]
  3167 | 00001855 | 40                        | 	inc	ax
  3168 | 00001856 | EB02                      | 	jmp	L_yakc_173
  3169 |          |                           | L_yakc_172:
  3170 | 00001858 | 31C0                      | 	xor	ax, ax
  3171 |          |                           | L_yakc_173:
  3172 | 0000185A | 8B7604                    | 	mov	si, word [bp+4]
  3173 | 0000185D | 83C606                    | 	add	si, 6
  3174 | 00001860 | 8904                      | 	mov	word [si], ax
  3175 | 00001862 | EB3F                      | 	jmp	L_yakc_175
  3176 |          |                           | L_yakc_174:
  3177 | 00001864 | 8B76FE                    | 	mov	si, word [bp-2]
  3178 | 00001867 | 83C610                    | 	add	si, 16
  3179 | 0000186A | 8B4604                    | 	mov	ax, word [bp+4]
  3180 | 0000186D | 3B04                      | 	cmp	ax, word [si]
  3181 | 0000186F | 7527                      | 	jne	L_yakc_177
  3182 | 00001871 | 8B46FC                    | 	mov	ax, word [bp-4]
  3183 | 00001874 | 85C0                      | 	test	ax, ax
  3184 | 00001876 | 7508                      | 	jne	L_yakc_178
  3185 | 00001878 | 8B46FE                    | 	mov	ax, word [bp-2]
  3186 | 0000187B | 8946FC                    | 	mov	word [bp-4], ax
  3187 | 0000187E | EB18                      | 	jmp	L_yakc_179
  3188 |          |                           | L_yakc_178:
  3189 | 00001880 | 8B76FE                    | 	mov	si, word [bp-2]
  3190 | 00001883 | 83C606                    | 	add	si, 6
  3191 | 00001886 | 8B7EFC                    | 	mov	di, word [bp-4]
  3192 | 00001889 | 83C706                    | 	add	di, 6
  3193 | 0000188C | 8B05                      | 	mov	ax, word [di]
  3194 | 0000188E | 3B04                      | 	cmp	ax, word [si]
  3195 | 00001890 | 7E06                      | 	jle	L_yakc_180
  3196 | 00001892 | 8B46FE                    | 	mov	ax, word [bp-2]
  3197 | 00001895 | 8946FC                    | 	mov	word [bp-4], ax
  3198 |          |                           | L_yakc_180:
  3199 |          |                           | L_yakc_179:
  3200 |          |                           | L_yakc_177:
  3201 | 00001898 | 8B76FE                    | 	mov	si, word [bp-2]
  3202 | 0000189B | 83C60A                    | 	add	si, 10
  3203 | 0000189E | 8B04                      | 	mov	ax, word [si]
  3204 | 000018A0 | 8946FE                    | 	mov	word [bp-2], ax
  3205 |          |                           | L_yakc_175:
  3206 | 000018A3 | 8B46FE                    | 	mov	ax, word [bp-2]
  3207 | 000018A6 | 85C0                      | 	test	ax, ax
  3208 | 000018A8 | 75BA                      | 	jne	L_yakc_174
  3209 |          |                           | L_yakc_176:
  3210 | 000018AA | 8B46FC                    | 	mov	ax, word [bp-4]
  3211 | 000018AD | 85C0                      | 	test	ax, ax
  3212 | 000018AF | 7509                      | 	jne	L_yakc_181
  3213 | 000018B1 | E85005                    | 	call	YKExitMutex
  3214 | 000018B4 | B80100                    | 	mov	ax, 1
  3215 | 000018B7 | E9DF00                    | 	jmp	L_yakc_171
  3216 |          |                           | L_yakc_181:
  3217 | 000018BA | 8B76FC                    | 	mov	si, word [bp-4]
  3218 | 000018BD | 83C60C                    | 	add	si, 12
  3219 | 000018C0 | 8B04                      | 	mov	ax, word [si]
  3220 | 000018C2 | 85C0                      | 	test	ax, ax
  3221 | 000018C4 | 750D                      | 	jne	L_yakc_182
  3222 | 000018C6 | 8B76FC                    | 	mov	si, word [bp-4]
  3223 | 000018C9 | 83C60A                    | 	add	si, 10
  3224 | 000018CC | 8B04                      | 	mov	ax, word [si]
  3225 | 000018CE | A3[FC1D]                  | 	mov	word [YKQueueWaitingList], ax
  3226 | 000018D1 | EB15                      | 	jmp	L_yakc_183
  3227 |          |                           | L_yakc_182:
  3228 | 000018D3 | 8B76FC                    | 	mov	si, word [bp-4]
  3229 | 000018D6 | 83C60A                    | 	add	si, 10
  3230 | 000018D9 | 8B7EFC                    | 	mov	di, word [bp-4]
  3231 | 000018DC | 83C70C                    | 	add	di, 12
  3232 | 000018DF | 8B3D                      | 	mov	di, word [di]
  3233 | 000018E1 | 83C70A                    | 	add	di, 10
  3234 | 000018E4 | 8B04                      | 	mov	ax, word [si]
  3235 | 000018E6 | 8905                      | 	mov	word [di], ax
  3236 |          |                           | L_yakc_183:
  3237 | 000018E8 | 8B76FC                    | 	mov	si, word [bp-4]
  3238 | 000018EB | 83C60A                    | 	add	si, 10
  3239 | 000018EE | 8B04                      | 	mov	ax, word [si]
  3240 | 000018F0 | 85C0                      | 	test	ax, ax
  3241 | 000018F2 | 7415                      | 	je	L_yakc_184
  3242 | 000018F4 | 8B76FC                    | 	mov	si, word [bp-4]
  3243 | 000018F7 | 83C60C                    | 	add	si, 12
  3244 | 000018FA | 8B7EFC                    | 	mov	di, word [bp-4]
  3245 | 000018FD | 83C70A                    | 	add	di, 10
  3246 | 00001900 | 8B3D                      | 	mov	di, word [di]
  3247 | 00001902 | 83C70C                    | 	add	di, 12
  3248 | 00001905 | 8B04                      | 	mov	ax, word [si]
  3249 | 00001907 | 8905                      | 	mov	word [di], ax
  3250 |          |                           | L_yakc_184:
  3251 | 00001909 | A1[9A1A]                  | 	mov	ax, word [YKRdyList]
  3252 | 0000190C | 8946FA                    | 	mov	word [bp-6], ax
  3253 | 0000190F | EB0B                      | 	jmp	L_yakc_186
  3254 |          |                           | L_yakc_185:
  3255 | 00001911 | 8B76FA                    | 	mov	si, word [bp-6]
  3256 | 00001914 | 83C60A                    | 	add	si, 10
  3257 | 00001917 | 8B04                      | 	mov	ax, word [si]
  3258 | 00001919 | 8946FA                    | 	mov	word [bp-6], ax
  3259 |          |                           | L_yakc_186:
  3260 | 0000191C | 8B76FA                    | 	mov	si, word [bp-6]
  3261 | 0000191F | 83C606                    | 	add	si, 6
  3262 | 00001922 | 8B7EFC                    | 	mov	di, word [bp-4]
  3263 | 00001925 | 83C706                    | 	add	di, 6
  3264 | 00001928 | 8B05                      | 	mov	ax, word [di]
  3265 | 0000192A | 3B04                      | 	cmp	ax, word [si]
  3266 | 0000192C | 7FE3                      | 	jg	L_yakc_185
  3267 |          |                           | L_yakc_187:
  3268 | 0000192E | 8B76FA                    | 	mov	si, word [bp-6]
  3269 | 00001931 | 83C60C                    | 	add	si, 12
  3270 | 00001934 | 8B04                      | 	mov	ax, word [si]
  3271 | 00001936 | 85C0                      | 	test	ax, ax
  3272 | 00001938 | 7508                      | 	jne	L_yakc_188
  3273 | 0000193A | 8B46FC                    | 	mov	ax, word [bp-4]
  3274 | 0000193D | A3[9A1A]                  | 	mov	word [YKRdyList], ax
  3275 | 00001940 | EB10                      | 	jmp	L_yakc_189
  3276 |          |                           | L_yakc_188:
  3277 | 00001942 | 8B76FA                    | 	mov	si, word [bp-6]
  3278 | 00001945 | 83C60C                    | 	add	si, 12
  3279 | 00001948 | 8B34                      | 	mov	si, word [si]
  3280 | 0000194A | 83C60A                    | 	add	si, 10
  3281 | 0000194D | 8B46FC                    | 	mov	ax, word [bp-4]
  3282 | 00001950 | 8904                      | 	mov	word [si], ax
  3283 |          |                           | L_yakc_189:
  3284 | 00001952 | 8B76FA                    | 	mov	si, word [bp-6]
  3285 | 00001955 | 83C60C                    | 	add	si, 12
  3286 | 00001958 | 8B7EFC                    | 	mov	di, word [bp-4]
  3287 | 0000195B | 83C70C                    | 	add	di, 12
  3288 | 0000195E | 8B04                      | 	mov	ax, word [si]
  3289 | 00001960 | 8905                      | 	mov	word [di], ax
  3290 | 00001962 | 8B76FC                    | 	mov	si, word [bp-4]
  3291 | 00001965 | 83C60A                    | 	add	si, 10
  3292 | 00001968 | 8B46FA                    | 	mov	ax, word [bp-6]
  3293 | 0000196B | 8904                      | 	mov	word [si], ax
  3294 | 0000196D | 8B76FA                    | 	mov	si, word [bp-6]
  3295 | 00001970 | 83C60C                    | 	add	si, 12
  3296 | 00001973 | 8B46FC                    | 	mov	ax, word [bp-4]
  3297 | 00001976 | 8904                      | 	mov	word [si], ax
  3298 | 00001978 | 8B76FC                    | 	mov	si, word [bp-4]
  3299 | 0000197B | 83C610                    | 	add	si, 16
  3300 | 0000197E | C7040000                  | 	mov	word [si], 0
  3301 | 00001982 | A1[921D]                  | 	mov	ax, word [YKISRCallDepth]
  3302 | 00001985 | 85C0                      | 	test	ax, ax
  3303 | 00001987 | 750A                      | 	jne	L_yakc_190
  3304 | 00001989 | B80100                    | 	mov	ax, 1
  3305 | 0000198C | 50                        | 	push	ax
  3306 | 0000198D | E800F5                    | 	call	YKScheduler
  3307 | 00001990 | 83C402                    | 	add	sp, 2
  3308 |          |                           | L_yakc_190:
  3309 | 00001993 | E86E04                    | 	call	YKExitMutex
  3310 | 00001996 | B80100                    | 	mov	ax, 1
  3311 |          |                           | L_yakc_171:
  3312 | 00001999 | 89EC                      | 	mov	sp, bp
  3313 | 0000199B | 5D                        | 	pop	bp
  3314 | 0000199C | C3                        | 	ret
  3315 |          |                           | L_yakc_168:
  3316 | 0000199D | 55                        | 	push	bp
  3317 | 0000199E | 89E5                      | 	mov	bp, sp
  3318 | 000019A0 | 83EC06                    | 	sub	sp, 6
  3319 | 000019A3 | E943FE                    | 	jmp	L_yakc_169
  3320 |          |                           | L_yakc_197:
  3321 | 000019A6 | 0A09636F756E743D20-       | 	DB	0xA,0x9,"count= ",0
  3322 | 000019AF | 00                        | ...
  3323 |          |                           | L_yakc_196:
  3324 | 000019B0 | 0A096E6578745F736C-       | 	DB	0xA,0x9,"next_slot= ",0
  3325 | 000019B9 | 6F743D2000                | ...
  3326 |          |                           | L_yakc_195:
  3327 | 000019BE | 0A096F6C646573743D-       | 	DB	0xA,0x9,"oldest= ",0
  3328 | 000019C7 | 2000                      | ...
  3329 |          |                           | L_yakc_194:
  3330 | 000019C9 | 0A096C656E6774683D-       | 	DB	0xA,0x9,"length= ",0
  3331 | 000019D2 | 2000                      | ...
  3332 |          |                           | L_yakc_193:
  3333 | 000019D4 | 0A0962617365203D20-       | 	DB	0xA,0x9,"base = ",0
  3334 | 000019DD | 00                        | ...
  3335 |          |                           | L_yakc_192:
  3336 | 000019DE | 7072696E74696E6720-       | 	DB	"printing queue ",0
  3337 | 000019E7 | 71756575652000            | ...
  3338 |          |                           | 	ALIGN	2
  3339 |          |                           | printQueue:
  3340 | 000019EE | E99C00                    | 	jmp	L_yakc_198
  3341 |          |                           | L_yakc_199:
  3342 | 000019F1 | E80E04                    | 	call	YKEnterMutex
  3343 | 000019F4 | B8[DE19]                  | 	mov	ax, L_yakc_192
  3344 | 000019F7 | 50                        | 	push	ax
  3345 | 000019F8 | E82DEA                    | 	call	printString
  3346 | 000019FB | 83C402                    | 	add	sp, 2
  3347 | 000019FE | FF7604                    | 	push	word [bp+4]
  3348 | 00001A01 | E848EA                    | 	call	printInt
  3349 | 00001A04 | 83C402                    | 	add	sp, 2
  3350 | 00001A07 | B8[D419]                  | 	mov	ax, L_yakc_193
  3351 | 00001A0A | 50                        | 	push	ax
  3352 | 00001A0B | E81AEA                    | 	call	printString
  3353 | 00001A0E | 83C402                    | 	add	sp, 2
  3354 | 00001A11 | 8B7604                    | 	mov	si, word [bp+4]
  3355 | 00001A14 | FF34                      | 	push	word [si]
  3356 | 00001A16 | E833EA                    | 	call	printInt
  3357 | 00001A19 | 83C402                    | 	add	sp, 2
  3358 | 00001A1C | B8[C919]                  | 	mov	ax, L_yakc_194
  3359 | 00001A1F | 50                        | 	push	ax
  3360 | 00001A20 | E805EA                    | 	call	printString
  3361 | 00001A23 | 83C402                    | 	add	sp, 2
  3362 | 00001A26 | 8B7604                    | 	mov	si, word [bp+4]
  3363 | 00001A29 | 83C602                    | 	add	si, 2
  3364 | 00001A2C | FF34                      | 	push	word [si]
  3365 | 00001A2E | E81BEA                    | 	call	printInt
  3366 | 00001A31 | 83C402                    | 	add	sp, 2
  3367 | 00001A34 | B8[BE19]                  | 	mov	ax, L_yakc_195
  3368 | 00001A37 | 50                        | 	push	ax
  3369 | 00001A38 | E8EDE9                    | 	call	printString
  3370 | 00001A3B | 83C402                    | 	add	sp, 2
  3371 | 00001A3E | 8B7604                    | 	mov	si, word [bp+4]
  3372 | 00001A41 | 83C604                    | 	add	si, 4
  3373 | 00001A44 | FF34                      | 	push	word [si]
  3374 | 00001A46 | E803EA                    | 	call	printInt
  3375 | 00001A49 | 83C402                    | 	add	sp, 2
  3376 | 00001A4C | B8[B019]                  | 	mov	ax, L_yakc_196
  3377 | 00001A4F | 50                        | 	push	ax
  3378 | 00001A50 | E8D5E9                    | 	call	printString
  3379 | 00001A53 | 83C402                    | 	add	sp, 2
  3380 | 00001A56 | 8B7604                    | 	mov	si, word [bp+4]
  3381 | 00001A59 | 83C606                    | 	add	si, 6
  3382 | 00001A5C | FF34                      | 	push	word [si]
  3383 | 00001A5E | E8EBE9                    | 	call	printInt
  3384 | 00001A61 | 83C402                    | 	add	sp, 2
  3385 | 00001A64 | B8[A619]                  | 	mov	ax, L_yakc_197
  3386 | 00001A67 | 50                        | 	push	ax
  3387 | 00001A68 | E8BDE9                    | 	call	printString
  3388 | 00001A6B | 83C402                    | 	add	sp, 2
  3389 | 00001A6E | 8B7604                    | 	mov	si, word [bp+4]
  3390 | 00001A71 | 83C608                    | 	add	si, 8
  3391 | 00001A74 | FF34                      | 	push	word [si]
  3392 | 00001A76 | E8D3E9                    | 	call	printInt
  3393 | 00001A79 | 83C402                    | 	add	sp, 2
  3394 | 00001A7C | B8[690E]                  | 	mov	ax, (L_yakc_32+33)
  3395 | 00001A7F | 50                        | 	push	ax
  3396 | 00001A80 | E8A5E9                    | 	call	printString
  3397 | 00001A83 | 83C402                    | 	add	sp, 2
  3398 | 00001A86 | E87B03                    | 	call	YKExitMutex
  3399 | 00001A89 | 89EC                      | 	mov	sp, bp
  3400 | 00001A8B | 5D                        | 	pop	bp
  3401 | 00001A8C | C3                        | 	ret
  3402 |          |                           | L_yakc_198:
  3403 | 00001A8D | 55                        | 	push	bp
  3404 | 00001A8E | 89E5                      | 	mov	bp, sp
  3405 | 00001A90 | 51                        | 	push	cx
  3406 | 00001A91 | E95DFF                    | 	jmp	L_yakc_199
  3407 |          |                           | 	ALIGN	2
  3408 |          |                           | YKCtxSwCount:
  3409 | 00001A94 | 00<rept>                  | 	TIMES	2 db 0
  3410 |          |                           | YKIdleCount:
  3411 | 00001A96 | 00<rept>                  | 	TIMES	2 db 0
  3412 |          |                           | YKTickNum:
  3413 | 00001A98 | 00<rept>                  | 	TIMES	2 db 0
  3414 |          |                           | YKRdyList:
  3415 | 00001A9A | 00<rept>                  | 	TIMES	2 db 0
  3416 |          |                           | YKSuspList:
  3417 | 00001A9C | 00<rept>                  | 	TIMES	2 db 0
  3418 |          |                           | YKSemaphoreWaitingList:
  3419 | 00001A9E | 00<rept>                  | 	TIMES	2 db 0
  3420 |          |                           | YKAvailTCBList:
  3421 | 00001AA0 | 00<rept>                  | 	TIMES	2 db 0
  3422 |          |                           | YKTCBArray:
  3423 | 00001AA2 | 00<rept>                  | 	TIMES	240 db 0
  3424 |          |                           | idleStack:
  3425 | 00001B92 | 00<rept>                  | 	TIMES	512 db 0
  3426 |          |                           | YKISRCallDepth:
  3427 | 00001D92 | 00<rept>                  | 	TIMES	2 db 0
  3428 |          |                           | YKSEMArray:
  3429 | 00001D94 | 00<rept>                  | 	TIMES	76 db 0
  3430 |          |                           | YKQueueArray:
  3431 | 00001DE0 | 00<rept>                  | 	TIMES	20 db 0
  3432 |          |                           | YKEVENTArray:
  3433 | 00001DF4 | 00<rept>                  | 	TIMES	8 db 0
  3434 |          |                           | YKQueueWaitingList:
  3435 | 00001DFC | 00<rept>                  | 	TIMES	2 db 0
  3436 |          |                           | YKEventBlockingList:
  3437 | 00001DFE | 00<rept>                  | 	TIMES	2 db 0
  3438 |          |                           | YKCurrentlyExecuting:
  3439 | 00001E00 | 00<rept>                  | 	TIMES	2 db 0
  3440 |          |                           | ; All kernel routines that are written in assembly are here 
  3441 |          |                           | 
  3442 |          |                           | ; Disables interrupts 
  3443 |          |                           | YKEnterMutex:
  3444 | 00001E02 | FA                        | 	cli	; clear interrupt flag to disable interrupts 
  3445 | 00001E03 | C3                        | 	ret
  3446 |          |                           | 
  3447 |          |                           | ; Enables Interrupts 
  3448 |          |                           | YKExitMutex:
  3449 | 00001E04 | FB                        | 	sti	; set interrupt flag to enable interrupts 
  3450 | 00001E05 | C3                        | 	ret
  3451 |          |                           | 
  3452 |          |                           | YKDispatcher:
  3453 |          |                           | 	; So if we are following andy's design
  3454 |          |                           | 	; we will save context here (if the boolean
  3455 |          |                           | 	; passed to us tells us to)
  3456 |          |                           | 	
  3457 |          |                           | 	; Hmm. Should the proper SS and SP be passed to us as an argument?
  3458 |          |                           | 	; Or shall we fetch them ourselves?
  3459 |          |                           | 
  3460 |          |                           | 
  3461 |          |                           | 	; I am TRYING to move what YKRdyList is pointing at into the stack pointer
  3462 |          |                           | 	; Because what YKRdyList points at is the stack pointer of the most ready task
  3463 |          |                           | 	; Incorrect. The value from the dereferenced YKRdyList needs to be 
  3464 |          |                           | 	; dereferenced again to get the proper stack pointer
  3465 |          |                           | 	;mov SP, [YKRdyList]
  3466 | 00001E06 | 8B1E[9A1A]                | 	mov BX, [YKRdyList]
  3467 | 00001E0A | 8B27                      | 	mov SP, word [BX]
  3468 |          |                           | 
  3469 |          |                           | 	; but in any case we need to restore context
  3470 | 00001E0C | 07                        | 	pop ES
  3471 | 00001E0D | 1F                        | 	pop DS
  3472 | 00001E0E | 5F                        | 	pop DI
  3473 | 00001E0F | 5E                        | 	pop SI
  3474 | 00001E10 | 5D                        | 	pop BP
  3475 | 00001E11 | 5A                        | 	pop DX
  3476 | 00001E12 | 59                        | 	pop CX
  3477 | 00001E13 | 5B                        | 	pop BX
  3478 | 00001E14 | 58                        | 	pop AX
  3479 |          |                           | 	; After this- done by reti
  3480 |          |                           | 	; IP
  3481 |          |                           | 	; CS
  3482 |          |                           | 	; flags
  3483 | 00001E15 | CF                        | 	iret
  3484 |          |                           | 
  3485 |          |                           | ; This dispatcher has a bool parameter for whether it needs to save context
  3486 |          |                           | ; @ param: int should_save_context
  3487 |          |                           | ; @ param: int * save_sp_location
  3488 |          |                           | ; @ param: int * save_ss_location
  3489 |          |                           | ; @ param: int * restore_sp_location
  3490 |          |                           | ; @ param: int * restore_ss_location
  3491 |          |                           | YKDispatcher_save_context:
  3492 | 00001E16 | FA                        | cli
  3493 |          |                           | 	; Here is where we will deal with our parameters
  3494 | 00001E17 | 55                        | 	push bp
  3495 | 00001E18 | 89E5                      | 	mov bp, sp
  3496 |          |                           | ; NOTE: WE DO NOT NEED TO SAVE AX. BECAUSE IT IS THE RETURN REGISTER.
  3497 |          |                           | 
  3498 |          |                           | ;	push ax				; gotta save ax
  3499 | 00001E1A | 8B4604                    | 	mov ax, word [bp+4]			; getting the bool
  3500 | 00001E1D | 85C0                      | 	test ax, ax					; if (ax == 0)
  3501 |          |                           | ;	pop ax				; shouldn't mess up flags
  3502 | 00001E1F | 742A                      | 	jz	restoring_context		; If zero, we do NOT store context
  3503 |          |                           | storing_context:
  3504 | 00001E21 | 8B4602                    | 	mov AX, [bp+2]	; The return address.
  3505 | 00001E24 | 5D                        | 	pop bp
  3506 | 00001E25 | 83C402                    | 	add sp, 2
  3507 |          |                           | 	
  3508 | 00001E28 | 9C                        | 	pushf
  3509 | 00001E29 | 0E                        | 	push CS
  3510 |          |                           | 
  3511 |          |                           | ;	mov AX, ending_dispatcher
  3512 |          |                           | ;	push AX
  3513 |          |                           | ;;	mov AX, [SP+4]	; return address now stored at sp+4
  3514 | 00001E2A | 50                        | 	push AX
  3515 |          |                           | 
  3516 | 00001E2B | 50                        | 	push AX
  3517 | 00001E2C | 53                        | 	push BX
  3518 | 00001E2D | 51                        | 	push CX
  3519 | 00001E2E | 52                        | 	push DX
  3520 | 00001E2F | 55                        | 	push BP						; Maybe not?
  3521 | 00001E30 | 56                        | 	push SI
  3522 | 00001E31 | 57                        | 	push DI
  3523 | 00001E32 | 1E                        | 	push DS
  3524 | 00001E33 | 06                        | 	push ES
  3525 |          |                           | 
  3526 | 00001E34 | 89E5                      | 	mov bp, sp
  3527 | 00001E36 | 83C514                    | 	add bp, 20
  3528 |          |                           | 
  3529 |          |                           | 	; Now we just need to store SS and SP in the proper TCB. (these are parameters)
  3530 |          |                           | 	; 2nd argument, int * save_sp = [bp+6]
  3531 | 00001E39 | 8B7606                    | 	mov si, word [bp+6]
  3532 | 00001E3C | 8924                      | 	mov word [si], sp
  3533 |          |                           | ;	mov word [bp+6], SP
  3534 |          |                           | 	; 3rd argument, int * save_ss = [bp+8]
  3535 | 00001E3E | 8B7608                    | 	mov si, word [bp+8]
  3536 | 00001E41 | 8C14                      | 	mov word [si], ss
  3537 |          |                           | ;	mov word [bp+8], SS
  3538 |          |                           | 
  3539 |          |                           | 
  3540 | 00001E43 | 8E560C                    | 	mov ss, word[bp+12]
  3541 | 00001E46 | 8B660A                    | 	mov sp, word[bp+10]
  3542 | 00001E49 | EB06                      | 	jmp real_restoring_context
  3543 |          |                           | 	
  3544 |          |                           | restoring_context:
  3545 |          |                           | ;	sp is still pointing at the return address.
  3546 |          |                           | 
  3547 |          |                           | 	; Now we just need to restore SS and SP from the proper TCB. (parameters)
  3548 |          |                           | 	; 5th argument, int * restore_ss = [bp+12]
  3549 |          |                           | 	; 4th argument, int * restore_sp = [bp+10]
  3550 | 00001E4B | 8E560C                    | 	mov ss, word[bp+12]
  3551 | 00001E4E | 8B660A                    | 	mov sp, word[bp+10]
  3552 |          |                           | 
  3553 |          |                           | real_restoring_context:
  3554 | 00001E51 | 07                        | 	pop ES
  3555 | 00001E52 | 1F                        | 	pop DS
  3556 | 00001E53 | 5F                        | 	pop DI
  3557 | 00001E54 | 5E                        | 	pop SI
  3558 | 00001E55 | 5D                        | 	pop BP
  3559 | 00001E56 | 5A                        | 	pop DX
  3560 | 00001E57 | 59                        | 	pop CX
  3561 | 00001E58 | 5B                        | 	pop BX
  3562 | 00001E59 | 58                        | 	pop AX
  3563 | 00001E5A | CF                        | 	iret			; restores CS, IP, and flags. Starts execution at ENDING_IP
  3564 |          |                           | 
  3565 |          |                           | ;;;ending_dispatcher:
  3566 |          |                           | 	; do all the ending crap of the function
  3567 |          |                           | ;;;	mov sp, bp
  3568 |          |                           | ;;;	pop bp
  3569 |          |                           | ;;;	ret				; Takes us back to the scheduler, and context is restored!
  3570 |          |                           | 
  3571 |          |                           | ;
  3572 |          |                           | ; POSSIBLE SOLUITION
  3573 |          |                           | ; Use assembly macro to
  3574 |          |                           | ; in-line all of this
  3575 |          |                           | ; so it doesn't have to 
  3576 |          |                           | ; be a function call
  3577 |          |                           | ;
  3578 |          |                           | ;
  3579 |          |                           | ; (Start stack)
  3580 |          |                           | ;	IP of task
  3581 |          |                           | ;	return address
  3582 |          |                           | ;	[SP points here]
  3583 |          |                           | ; 
  3584 |          |                           | ; (End stack)
  3585 |          |                           | ;	flags
  3586 |          |                           | ;	CS
  3587 |          |                           | ;	IP
  3588 |          |                           | ;	return address
  3589 |          |                           | ;	[SP points here]
  3590 |          |                           | ;
  3591 |          |                           | ;YKSaveFlagsAndCS:
  3592 |          |                           | ;	sub SP, 4
  3593 |          |                           | ;	push DX			; Save DX
  3594 |          |                           | ;	push CX			; Save CX
  3595 |          |                           | ;	mov DX, SP+12	; DX = IP (to original task)
  3596 |          |                           | ;	mov CX, SP+10	; CX = return address (to whomever called me)
  3597 |          |                           | ;	mov SP+8, DX
  3598 |          |                           | ;	mov SP+6, CX
  3599 |          |                           | ;	pop CX			; Restore CX
  3600 |          |                           | ;	pop DX			; Restore DX
  3601 |          |                           | ;
  3602 |          |                           | ;	add SP, 8
  3603 |          |                           | ;	pushf			; push flags into their proper spot
  3604 |          |                           | ;	push CS			; push CS into its proper spot
  3605 |          |                           | ;	sub SP, 4
  3606 |          |                           | ;	
  3607 |          |                           | ;	jmp YKSaveContext	; Now we are ready to save the rest of context
  3608 |          |                           | 
  3609 |          |                           | ; This saves the context on the current stack frame 
  3610 |          |                           | ; We are assuming this is called from an interrupt
  3611 |          |                           | ;	(if it is not, call YKSaveFlagsAndCS instead)
  3612 |          |                           | ; So we already have flags, CS, and IP saved properly
  3613 |          |                           | ;YKSaveContext:
  3614 |          |                           | ;	;SP + 2 (I think) is return address.
  3615 |          |                           | ;	sub SP, 18	; Get ready to save 9 words onto the stack
  3616 |          |                           | ;	push DX
  3617 |          |                           | ;	mov DX, SP + 22	; mov the return address onto SP 
  3618 |          |                           | ;	mov SP+4, DX	; put it at the end of the stack, ready to be popped
  3619 |          |                           | ;	pop DX
  3620 |          |                           | ;	
  3621 |          |                           | ;	mov [SP+20], AX
  3622 |          |                           | ;	mov SP+18, BX
  3623 |          |                           | ;	mov SP+16, CX
  3624 |          |                           | ;	mov SP+14, DX
  3625 |          |                           | ;	mov SP+12, BP
  3626 |          |                           | ;	mov SP+10, SI
  3627 |          |                           | ;	mov SP+8, DI
  3628 |          |                           | ;	mov SP+6, DS
  3629 |          |                           | ;	mov SP+4, ES
  3630 |          |                           | ;;	; Current stack: return address, empty 
  3631 |          |                           | ;;	push AX	; Each 
  3632 |          |                           | ;	push BX	; one  
  3633 |          |                           | ;	push CX	; is  
  3634 |          |                           | ;	push DX	; sp-2 
  3635 |          |                           | ;	; Instruction Pointer - In interrupt, saved already
  3636 |          |                           | ;	; Stack pointer - Need to be saved seperately
  3637 |          |                           | ;	push BP ; Base pointer 
  3638 |          |                           | ;	push SI ; Source index 
  3639 |          |                           | ;	push DI ; Destination index    
  3640 |          |                           | ;	; Code segment - Saved with IP?
  3641 |          |                           | ;	; Stack segment - saved with SP?
  3642 |          |                           | ;	push DS ; Data segment 
  3643 |          |                           | ;	push ES ; Extra segment 
  3644 |          |                           | ;	; Flags - interrupts already save it
  3645 |          |                           | ;	ret
  3646 |          |                           | 
  3647 |          |                           | ; This restores the context FROM the current stack frame 
  3648 |          |                           | ;YKRestoreContext:
  3649 |          |                           | ;	mov AX, SP+20
  3650 |          |                           | ;	mov BX, SP+18
  3651 |          |                           | ;	mov CX, SP+16
  3652 |          |                           | ;	mov DX, SP+14
  3653 |          |                           | ;	mov BP, SP+12
  3654 |          |                           | ;	mov SI, SP+10
  3655 |          |                           | ;	mov DI, SP+8
  3656 |          |                           | ;	mov DS, SP+6
  3657 |          |                           | ;	mov ES, SP+4
  3658 |          |                           | ;
  3659 |          |                           | ;	push DX
  3660 |          |                           | ;	mov DX, SP+4
  3661 |          |                           | ;	mov SP+22 , DX
  3662 |          |                           | ;	pop DX
  3663 |          |                           | ;	add SP, 18
  3664 |          |                           | ;	ret
  3665 |          |                           | 
  3666 |          |                           | ;	add SP, 2	; This deletes the return address saved when we call'ed YKRestoreContext.
  3667 |          |                           | ;	pop ES
  3668 |          |                           | ;	pop DS
  3669 |          |                           | ;	SS
  3670 |          |                           | ;	CS
  3671 |          |                           | ;	pop DI
  3672 |          |                           | ;	pop SI
  3673 |          |                           | ;	pop BP
  3674 |          |                           | ;	SP
  3675 |          |                           | ;	IP
  3676 |          |                           | 
  3677 |          |                           | ;	pop DX
  3678 |          |                           | ;	pop CX
  3679 |          |                           | ;	pop BX
  3680 |          |                           | ;	pop AX
  3681 |          |                           | ;	reti		; This pops IP, CS, and the flags, and goes to the return address.
  3682 |          |                           | 
  3683 |          |                           | ; Generated by c86 (BYU-NASM) 5.1 (beta) from lab8app.i
  3684 |          |                           | 	CPU	8086
  3685 | 00001E5B | 90                        | 	ALIGN	2
  3686 | 00001E5C | E96913                    | 	jmp	main	; Jump to program start
  3687 | 00001E5F | 90                        | 	ALIGN	2
  3688 |          |                           | getMovePieceQueueArrayIndex:
  3689 | 00001E60 | EB18                      | 	jmp	L_lab8app_1
  3690 |          |                           | L_lab8app_2:
  3691 | 00001E62 | 833E[E23B]28              | 	cmp	word [movePieceArrayIndex], 40
  3692 | 00001E67 | 7506                      | 	jne	L_lab8app_3
  3693 | 00001E69 | C706[E23B]0000            | 	mov	word [movePieceArrayIndex], 0
  3694 |          |                           | L_lab8app_3:
  3695 | 00001E6F | A1[E23B]                  | 	mov	ax, word [movePieceArrayIndex]
  3696 | 00001E72 | FF06[E23B]                | 	inc	word [movePieceArrayIndex]
  3697 |          |                           | L_lab8app_4:
  3698 | 00001E76 | 89EC                      | 	mov	sp, bp
  3699 | 00001E78 | 5D                        | 	pop	bp
  3700 | 00001E79 | C3                        | 	ret
  3701 |          |                           | L_lab8app_1:
  3702 | 00001E7A | 55                        | 	push	bp
  3703 | 00001E7B | 89E5                      | 	mov	bp, sp
  3704 | 00001E7D | EBE3                      | 	jmp	L_lab8app_2
  3705 | 00001E7F | 90                        | 	ALIGN	2
  3706 |          |                           | getLowerBucket:
  3707 | 00001E80 | EB59                      | 	jmp	L_lab8app_6
  3708 |          |                           | L_lab8app_7:
  3709 | 00001E82 | C746FE0000                | 	mov	word [bp-2], 0
  3710 | 00001E87 | C746FC0000                | 	mov	word [bp-4], 0
  3711 | 00001E8C | A1[0C3C]                  | 	mov	ax, word [screen0]
  3712 | 00001E8F | 8946FA                    | 	mov	word [bp-6], ax
  3713 | 00001E92 | A1[123C]                  | 	mov	ax, word [screen3]
  3714 | 00001E95 | 8946F8                    | 	mov	word [bp-8], ax
  3715 | 00001E98 | EB0F                      | 	jmp	L_lab8app_9
  3716 |          |                           | L_lab8app_8:
  3717 | 00001E9A | 8B46FE                    | 	mov	ax, word [bp-2]
  3718 | 00001E9D | 40                        | 	inc	ax
  3719 | 00001E9E | 8946FE                    | 	mov	word [bp-2], ax
  3720 | 00001EA1 | 8B46FA                    | 	mov	ax, word [bp-6]
  3721 | 00001EA4 | D1E0                      | 	shl	ax, 1
  3722 | 00001EA6 | 8946FA                    | 	mov	word [bp-6], ax
  3723 |          |                           | L_lab8app_9:
  3724 | 00001EA9 | 8B46FA                    | 	mov	ax, word [bp-6]
  3725 | 00001EAC | 85C0                      | 	test	ax, ax
  3726 | 00001EAE | 75EA                      | 	jne	L_lab8app_8
  3727 |          |                           | L_lab8app_10:
  3728 | 00001EB0 | EB0F                      | 	jmp	L_lab8app_12
  3729 |          |                           | L_lab8app_11:
  3730 | 00001EB2 | 8B46FC                    | 	mov	ax, word [bp-4]
  3731 | 00001EB5 | 40                        | 	inc	ax
  3732 | 00001EB6 | 8946FC                    | 	mov	word [bp-4], ax
  3733 | 00001EB9 | 8B46F8                    | 	mov	ax, word [bp-8]
  3734 | 00001EBC | D1E0                      | 	shl	ax, 1
  3735 | 00001EBE | 8946F8                    | 	mov	word [bp-8], ax
  3736 |          |                           | L_lab8app_12:
  3737 | 00001EC1 | 8B46F8                    | 	mov	ax, word [bp-8]
  3738 | 00001EC4 | 85C0                      | 	test	ax, ax
  3739 | 00001EC6 | 75EA                      | 	jne	L_lab8app_11
  3740 |          |                           | L_lab8app_13:
  3741 | 00001EC8 | 8B46FE                    | 	mov	ax, word [bp-2]
  3742 | 00001ECB | 3B46FC                    | 	cmp	ax, word [bp-4]
  3743 | 00001ECE | 7C04                      | 	jl	L_lab8app_14
  3744 | 00001ED0 | 31C0                      | 	xor	ax, ax
  3745 | 00001ED2 | EB03                      | 	jmp	L_lab8app_15
  3746 |          |                           | L_lab8app_14:
  3747 | 00001ED4 | B80100                    | 	mov	ax, 1
  3748 |          |                           | L_lab8app_15:
  3749 |          |                           | L_lab8app_16:
  3750 | 00001ED7 | 89EC                      | 	mov	sp, bp
  3751 | 00001ED9 | 5D                        | 	pop	bp
  3752 | 00001EDA | C3                        | 	ret
  3753 |          |                           | L_lab8app_6:
  3754 | 00001EDB | 55                        | 	push	bp
  3755 | 00001EDC | 89E5                      | 	mov	bp, sp
  3756 | 00001EDE | 83EC08                    | 	sub	sp, 8
  3757 | 00001EE1 | EB9F                      | 	jmp	L_lab8app_7
  3758 | 00001EE3 | 90                        | 	ALIGN	2
  3759 |          |                           | isBucketFlat:
  3760 | 00001EE4 | EB4E                      | 	jmp	L_lab8app_18
  3761 |          |                           | L_lab8app_19:
  3762 | 00001EE6 | 8B4604                    | 	mov	ax, word [bp+4]
  3763 | 00001EE9 | 85C0                      | 	test	ax, ax
  3764 | 00001EEB | 740E                      | 	je	L_lab8app_20
  3765 | 00001EED | A1[123C]                  | 	mov	ax, word [screen3]
  3766 | 00001EF0 | 8946FE                    | 	mov	word [bp-2], ax
  3767 | 00001EF3 | A1[163C]                  | 	mov	ax, word [screen5]
  3768 | 00001EF6 | 8946FC                    | 	mov	word [bp-4], ax
  3769 | 00001EF9 | EB0C                      | 	jmp	L_lab8app_21
  3770 |          |                           | L_lab8app_20:
  3771 | 00001EFB | A1[0C3C]                  | 	mov	ax, word [screen0]
  3772 | 00001EFE | 8946FE                    | 	mov	word [bp-2], ax
  3773 | 00001F01 | A1[103C]                  | 	mov	ax, word [screen2]
  3774 | 00001F04 | 8946FC                    | 	mov	word [bp-4], ax
  3775 |          |                           | L_lab8app_21:
  3776 | 00001F07 | EB0A                      | 	jmp	L_lab8app_23
  3777 |          |                           | L_lab8app_22:
  3778 | 00001F09 | 8B46FE                    | 	mov	ax, word [bp-2]
  3779 | 00001F0C | D1E0                      | 	shl	ax, 1
  3780 | 00001F0E | 8B46FC                    | 	mov	ax, word [bp-4]
  3781 | 00001F11 | D1E0                      | 	shl	ax, 1
  3782 |          |                           | L_lab8app_23:
  3783 | 00001F13 | 8B46FE                    | 	mov	ax, word [bp-2]
  3784 | 00001F16 | 85C0                      | 	test	ax, ax
  3785 | 00001F18 | 7407                      | 	je	L_lab8app_25
  3786 | 00001F1A | 8B46FC                    | 	mov	ax, word [bp-4]
  3787 | 00001F1D | 85C0                      | 	test	ax, ax
  3788 | 00001F1F | 75E8                      | 	jne	L_lab8app_22
  3789 |          |                           | L_lab8app_25:
  3790 |          |                           | L_lab8app_24:
  3791 | 00001F21 | 8B46FC                    | 	mov	ax, word [bp-4]
  3792 | 00001F24 | 3B46FE                    | 	cmp	ax, word [bp-2]
  3793 | 00001F27 | 7404                      | 	je	L_lab8app_26
  3794 | 00001F29 | 31C0                      | 	xor	ax, ax
  3795 | 00001F2B | EB03                      | 	jmp	L_lab8app_27
  3796 |          |                           | L_lab8app_26:
  3797 | 00001F2D | B80100                    | 	mov	ax, 1
  3798 |          |                           | L_lab8app_27:
  3799 |          |                           | L_lab8app_28:
  3800 | 00001F30 | 89EC                      | 	mov	sp, bp
  3801 | 00001F32 | 5D                        | 	pop	bp
  3802 | 00001F33 | C3                        | 	ret
  3803 |          |                           | L_lab8app_18:
  3804 | 00001F34 | 55                        | 	push	bp
  3805 | 00001F35 | 89E5                      | 	mov	bp, sp
  3806 | 00001F37 | 83EC04                    | 	sub	sp, 4
  3807 | 00001F3A | EBAA                      | 	jmp	L_lab8app_19
  3808 |          |                           | L_lab8app_30:
  3809 | 00001F3C | 596F75207265616C6C-       | 	DB	"You really want a column not 0-5???",0xA,0
  3810 | 00001F45 | 792077616E74206120-       | ...
  3811 | 00001F4E | 636F6C756D6E206E6F-       | ...
  3812 | 00001F57 | 7420302D353F3F3F0A-       | ...
  3813 | 00001F60 | 00                        | ...
  3814 | 00001F61 | 90                        | 	ALIGN	2
  3815 |          |                           | getLowestSpace:
  3816 | 00001F62 | EB74                      | 	jmp	L_lab8app_31
  3817 |          |                           | L_lab8app_32:
  3818 | 00001F64 | C746FE0000                | 	mov	word [bp-2], 0
  3819 | 00001F69 | 8B4604                    | 	mov	ax, word [bp+4]
  3820 | 00001F6C | 83E800                    | 	sub	ax, 0
  3821 | 00001F6F | 7411                      | 	je	L_lab8app_35
  3822 | 00001F71 | 48                        | 	dec	ax
  3823 | 00001F72 | 7416                      | 	je	L_lab8app_36
  3824 | 00001F74 | 48                        | 	dec	ax
  3825 | 00001F75 | 741B                      | 	je	L_lab8app_37
  3826 | 00001F77 | 48                        | 	dec	ax
  3827 | 00001F78 | 7420                      | 	je	L_lab8app_38
  3828 | 00001F7A | 48                        | 	dec	ax
  3829 | 00001F7B | 7425                      | 	je	L_lab8app_39
  3830 | 00001F7D | 48                        | 	dec	ax
  3831 | 00001F7E | 742A                      | 	je	L_lab8app_40
  3832 | 00001F80 | EB30                      | 	jmp	L_lab8app_34
  3833 |          |                           | L_lab8app_35:
  3834 | 00001F82 | A1[0C3C]                  | 	mov	ax, word [screen0]
  3835 | 00001F85 | 8946FC                    | 	mov	word [bp-4], ax
  3836 | 00001F88 | EB32                      | 	jmp	L_lab8app_33
  3837 |          |                           | L_lab8app_36:
  3838 | 00001F8A | A1[0E3C]                  | 	mov	ax, word [screen1]
  3839 | 00001F8D | 8946FC                    | 	mov	word [bp-4], ax
  3840 | 00001F90 | EB2A                      | 	jmp	L_lab8app_33
  3841 |          |                           | L_lab8app_37:
  3842 | 00001F92 | A1[103C]                  | 	mov	ax, word [screen2]
  3843 | 00001F95 | 8946FC                    | 	mov	word [bp-4], ax
  3844 | 00001F98 | EB22                      | 	jmp	L_lab8app_33
  3845 |          |                           | L_lab8app_38:
  3846 | 00001F9A | A1[123C]                  | 	mov	ax, word [screen3]
  3847 | 00001F9D | 8946FC                    | 	mov	word [bp-4], ax
  3848 | 00001FA0 | EB1A                      | 	jmp	L_lab8app_33
  3849 |          |                           | L_lab8app_39:
  3850 | 00001FA2 | A1[143C]                  | 	mov	ax, word [screen4]
  3851 | 00001FA5 | 8946FC                    | 	mov	word [bp-4], ax
  3852 | 00001FA8 | EB12                      | 	jmp	L_lab8app_33
  3853 |          |                           | L_lab8app_40:
  3854 | 00001FAA | A1[163C]                  | 	mov	ax, word [screen5]
  3855 | 00001FAD | 8946FC                    | 	mov	word [bp-4], ax
  3856 | 00001FB0 | EB0A                      | 	jmp	L_lab8app_33
  3857 |          |                           | L_lab8app_34:
  3858 | 00001FB2 | B8[3C1F]                  | 	mov	ax, L_lab8app_30
  3859 | 00001FB5 | 50                        | 	push	ax
  3860 | 00001FB6 | E86FE4                    | 	call	printString
  3861 | 00001FB9 | 83C402                    | 	add	sp, 2
  3862 |          |                           | L_lab8app_33:
  3863 | 00001FBC | EB0F                      | 	jmp	L_lab8app_42
  3864 |          |                           | L_lab8app_41:
  3865 | 00001FBE | 8B46FE                    | 	mov	ax, word [bp-2]
  3866 | 00001FC1 | 40                        | 	inc	ax
  3867 | 00001FC2 | 8946FE                    | 	mov	word [bp-2], ax
  3868 | 00001FC5 | 8B46FC                    | 	mov	ax, word [bp-4]
  3869 | 00001FC8 | D1E0                      | 	shl	ax, 1
  3870 | 00001FCA | 8946FC                    | 	mov	word [bp-4], ax
  3871 |          |                           | L_lab8app_42:
  3872 | 00001FCD | 8B46FC                    | 	mov	ax, word [bp-4]
  3873 | 00001FD0 | 85C0                      | 	test	ax, ax
  3874 | 00001FD2 | 75EA                      | 	jne	L_lab8app_41
  3875 |          |                           | L_lab8app_43:
  3876 | 00001FD4 | 89EC                      | 	mov	sp, bp
  3877 | 00001FD6 | 5D                        | 	pop	bp
  3878 | 00001FD7 | C3                        | 	ret
  3879 |          |                           | L_lab8app_31:
  3880 | 00001FD8 | 55                        | 	push	bp
  3881 | 00001FD9 | 89E5                      | 	mov	bp, sp
  3882 | 00001FDB | 83EC04                    | 	sub	sp, 4
  3883 | 00001FDE | EB84                      | 	jmp	L_lab8app_32
  3884 |          |                           | L_lab8app_45:
  3885 | 00001FE0 | 434F4445204E4F5420-       | 	DB	"CODE NOT WRITTEN :'(",0
  3886 | 00001FE9 | 5752495454454E203A-       | ...
  3887 | 00001FF2 | 272800                    | ...
  3888 | 00001FF5 | 90                        | 	ALIGN	2
  3889 |          |                           | tryToClearLine:
  3890 | 00001FF6 | E98C00                    | 	jmp	L_lab8app_46
  3891 |          |                           | L_lab8app_47:
  3892 | 00001FF9 | B80100                    | 	mov	ax, 1
  3893 | 00001FFC | 8B4E04                    | 	mov	cx, word [bp+4]
  3894 | 00001FFF | D3E0                      | 	shl	ax, cl
  3895 | 00002001 | 2306[0C3C]                | 	and	ax, word [screen0]
  3896 | 00002005 | 747A                      | 	je	L_lab8app_48
  3897 | 00002007 | B80100                    | 	mov	ax, 1
  3898 | 0000200A | D3E0                      | 	shl	ax, cl
  3899 | 0000200C | 2306[0E3C]                | 	and	ax, word [screen1]
  3900 | 00002010 | 746F                      | 	je	L_lab8app_48
  3901 | 00002012 | B80100                    | 	mov	ax, 1
  3902 | 00002015 | D3E0                      | 	shl	ax, cl
  3903 | 00002017 | 2306[103C]                | 	and	ax, word [screen2]
  3904 | 0000201B | 7464                      | 	je	L_lab8app_48
  3905 | 0000201D | B80100                    | 	mov	ax, 1
  3906 | 00002020 | D3E0                      | 	shl	ax, cl
  3907 | 00002022 | 2306[123C]                | 	and	ax, word [screen3]
  3908 | 00002026 | 7459                      | 	je	L_lab8app_48
  3909 | 00002028 | B80100                    | 	mov	ax, 1
  3910 | 0000202B | D3E0                      | 	shl	ax, cl
  3911 | 0000202D | 2306[143C]                | 	and	ax, word [screen4]
  3912 | 00002031 | 744E                      | 	je	L_lab8app_48
  3913 | 00002033 | B80100                    | 	mov	ax, 1
  3914 | 00002036 | D3E0                      | 	shl	ax, cl
  3915 | 00002038 | 2306[163C]                | 	and	ax, word [screen5]
  3916 | 0000203C | 7443                      | 	je	L_lab8app_48
  3917 | 0000203E | 8B4604                    | 	mov	ax, word [bp+4]
  3918 | 00002041 | 85C0                      | 	test	ax, ax
  3919 | 00002043 | 7532                      | 	jne	L_lab8app_49
  3920 | 00002045 | A1[0C3C]                  | 	mov	ax, word [screen0]
  3921 | 00002048 | D1E0                      | 	shl	ax, 1
  3922 | 0000204A | A3[0C3C]                  | 	mov	word [screen0], ax
  3923 | 0000204D | A1[0E3C]                  | 	mov	ax, word [screen1]
  3924 | 00002050 | D1E0                      | 	shl	ax, 1
  3925 | 00002052 | A3[0E3C]                  | 	mov	word [screen1], ax
  3926 | 00002055 | A1[103C]                  | 	mov	ax, word [screen2]
  3927 | 00002058 | D1E0                      | 	shl	ax, 1
  3928 | 0000205A | A3[103C]                  | 	mov	word [screen2], ax
  3929 | 0000205D | A1[123C]                  | 	mov	ax, word [screen3]
  3930 | 00002060 | D1E0                      | 	shl	ax, 1
  3931 | 00002062 | A3[123C]                  | 	mov	word [screen3], ax
  3932 | 00002065 | A1[143C]                  | 	mov	ax, word [screen4]
  3933 | 00002068 | D1E0                      | 	shl	ax, 1
  3934 | 0000206A | A3[143C]                  | 	mov	word [screen4], ax
  3935 | 0000206D | A1[163C]                  | 	mov	ax, word [screen5]
  3936 | 00002070 | D1E0                      | 	shl	ax, 1
  3937 | 00002072 | A3[163C]                  | 	mov	word [screen5], ax
  3938 | 00002075 | EB0A                      | 	jmp	L_lab8app_50
  3939 |          |                           | L_lab8app_49:
  3940 | 00002077 | B8[E01F]                  | 	mov	ax, L_lab8app_45
  3941 | 0000207A | 50                        | 	push	ax
  3942 | 0000207B | E8AAE3                    | 	call	printString
  3943 | 0000207E | 83C402                    | 	add	sp, 2
  3944 |          |                           | L_lab8app_50:
  3945 |          |                           | L_lab8app_48:
  3946 | 00002081 | 89EC                      | 	mov	sp, bp
  3947 | 00002083 | 5D                        | 	pop	bp
  3948 | 00002084 | C3                        | 	ret
  3949 |          |                           | L_lab8app_46:
  3950 | 00002085 | 55                        | 	push	bp
  3951 | 00002086 | 89E5                      | 	mov	bp, sp
  3952 | 00002088 | E96EFF                    | 	jmp	L_lab8app_47
  3953 |          |                           | L_lab8app_52:
  3954 | 0000208B | 6E6577506965636554-       | 	DB	"newPieceTask moving!",0xA,0
  3955 | 00002094 | 61736B206D6F76696E-       | ...
  3956 | 0000209D | 67210A00                  | ...
  3957 | 000020A1 | 90                        | 	ALIGN	2
  3958 |          |                           | newPieceTask:
  3959 | 000020A2 | E94510                    | 	jmp	L_lab8app_53
  3960 |          |                           | L_lab8app_54:
  3961 | 000020A5 | B8[8B20]                  | 	mov	ax, L_lab8app_52
  3962 | 000020A8 | 50                        | 	push	ax
  3963 | 000020A9 | E87CE3                    | 	call	printString
  3964 | 000020AC | 83C402                    | 	add	sp, 2
  3965 | 000020AF | E80FE8                    | 	call	StartSimptris
  3966 | 000020B2 | E92E10                    | 	jmp	L_lab8app_56
  3967 |          |                           | L_lab8app_55:
  3968 | 000020B5 | FF36[3A32]                | 	push	word [newPieceQueuePTR]
  3969 | 000020B9 | E848F6                    | 	call	YKQPend
  3970 | 000020BC | 83C402                    | 	add	sp, 2
  3971 | 000020BF | 8946FE                    | 	mov	word [bp-2], ax
  3972 | 000020C2 | 8B76FE                    | 	mov	si, word [bp-2]
  3973 | 000020C5 | 83C602                    | 	add	si, 2
  3974 | 000020C8 | 833C01                    | 	cmp	word [si], 1
  3975 | 000020CB | 7403E9B401                | 	jne	L_lab8app_58
  3976 | 000020D0 | E8ADFD                    | 	call	getLowerBucket
  3977 | 000020D3 | 8946FC                    | 	mov	word [bp-4], ax
  3978 | 000020D6 | 8B76FE                    | 	mov	si, word [bp-2]
  3979 | 000020D9 | 83C606                    | 	add	si, 6
  3980 | 000020DC | 8B04                      | 	mov	ax, word [si]
  3981 | 000020DE | 8946FA                    | 	mov	word [bp-6], ax
  3982 | 000020E1 | 8B46FC                    | 	mov	ax, word [bp-4]
  3983 | 000020E4 | 85C0                      | 	test	ax, ax
  3984 | 000020E6 | 7405                      | 	je	L_lab8app_59
  3985 | 000020E8 | B80300                    | 	mov	ax, 3
  3986 | 000020EB | EB02                      | 	jmp	L_lab8app_60
  3987 |          |                           | L_lab8app_59:
  3988 | 000020ED | 31C0                      | 	xor	ax, ax
  3989 |          |                           | L_lab8app_60:
  3990 | 000020EF | 50                        | 	push	ax
  3991 | 000020F0 | E86FFE                    | 	call	getLowestSpace
  3992 | 000020F3 | 83C402                    | 	add	sp, 2
  3993 | 000020F6 | 8946F6                    | 	mov	word [bp-10], ax
  3994 | 000020F9 | 8B46FC                    | 	mov	ax, word [bp-4]
  3995 | 000020FC | 8946F4                    | 	mov	word [bp-12], ax
  3996 | 000020FF | 8B46FC                    | 	mov	ax, word [bp-4]
  3997 | 00002102 | 85C0                      | 	test	ax, ax
  3998 | 00002104 | 7405                      | 	je	L_lab8app_61
  3999 | 00002106 | B80400                    | 	mov	ax, 4
  4000 | 00002109 | EB03                      | 	jmp	L_lab8app_62
  4001 |          |                           | L_lab8app_61:
  4002 | 0000210B | B80100                    | 	mov	ax, 1
  4003 |          |                           | L_lab8app_62:
  4004 | 0000210E | 8946FC                    | 	mov	word [bp-4], ax
  4005 | 00002111 | EB60                      | 	jmp	L_lab8app_64
  4006 |          |                           | L_lab8app_63:
  4007 | 00002113 | E84AFD                    | 	call	getMovePieceQueueArrayIndex
  4008 | 00002116 | 8946F8                    | 	mov	word [bp-8], ax
  4009 | 00002119 | 8B76FE                    | 	mov	si, word [bp-2]
  4010 | 0000211C | 8B46F8                    | 	mov	ax, word [bp-8]
  4011 | 0000211F | B90600                    | 	mov	cx, 6
  4012 | 00002122 | F7E9                      | 	imul	cx
  4013 | 00002124 | 89C7                      | 	mov	di, ax
  4014 | 00002126 | 81C7[F23A]                | 	add	di, movePieceArray
  4015 | 0000212A | 8B04                      | 	mov	ax, word [si]
  4016 | 0000212C | 8905                      | 	mov	word [di], ax
  4017 | 0000212E | 8B46F8                    | 	mov	ax, word [bp-8]
  4018 | 00002131 | B90600                    | 	mov	cx, 6
  4019 | 00002134 | F7E9                      | 	imul	cx
  4020 | 00002136 | 05[F23A]                  | 	add	ax, movePieceArray
  4021 | 00002139 | 89C6                      | 	mov	si, ax
  4022 | 0000213B | 83C604                    | 	add	si, 4
  4023 | 0000213E | C7040100                  | 	mov	word [si], 1
  4024 | 00002142 | 8B46F8                    | 	mov	ax, word [bp-8]
  4025 | 00002145 | B90600                    | 	mov	cx, 6
  4026 | 00002148 | F7E9                      | 	imul	cx
  4027 | 0000214A | 05[F23A]                  | 	add	ax, movePieceArray
  4028 | 0000214D | 89C6                      | 	mov	si, ax
  4029 | 0000214F | 83C602                    | 	add	si, 2
  4030 | 00002152 | C704[8608]                | 	mov	word [si], SlidePiece
  4031 | 00002156 | 8B46FA                    | 	mov	ax, word [bp-6]
  4032 | 00002159 | 40                        | 	inc	ax
  4033 | 0000215A | 8946FA                    | 	mov	word [bp-6], ax
  4034 | 0000215D | 8B46F8                    | 	mov	ax, word [bp-8]
  4035 | 00002160 | B90600                    | 	mov	cx, 6
  4036 | 00002163 | F7E9                      | 	imul	cx
  4037 | 00002165 | 05[F23A]                  | 	add	ax, movePieceArray
  4038 | 00002168 | 50                        | 	push	ax
  4039 | 00002169 | FF36[3832]                | 	push	word [movePieceQueuePTR]
  4040 | 0000216D | E876F6                    | 	call	YKQPost
  4041 | 00002170 | 83C404                    | 	add	sp, 4
  4042 |          |                           | L_lab8app_64:
  4043 | 00002173 | 8B46FC                    | 	mov	ax, word [bp-4]
  4044 | 00002176 | 3B46FA                    | 	cmp	ax, word [bp-6]
  4045 | 00002179 | 7F98                      | 	jg	L_lab8app_63
  4046 |          |                           | L_lab8app_65:
  4047 | 0000217B | EB60                      | 	jmp	L_lab8app_67
  4048 |          |                           | L_lab8app_66:
  4049 | 0000217D | E8E0FC                    | 	call	getMovePieceQueueArrayIndex
  4050 | 00002180 | 8946F8                    | 	mov	word [bp-8], ax
  4051 | 00002183 | 8B76FE                    | 	mov	si, word [bp-2]
  4052 | 00002186 | 8B46F8                    | 	mov	ax, word [bp-8]
  4053 | 00002189 | B90600                    | 	mov	cx, 6
  4054 | 0000218C | F7E9                      | 	imul	cx
  4055 | 0000218E | 89C7                      | 	mov	di, ax
  4056 | 00002190 | 81C7[F23A]                | 	add	di, movePieceArray
  4057 | 00002194 | 8B04                      | 	mov	ax, word [si]
  4058 | 00002196 | 8905                      | 	mov	word [di], ax
  4059 | 00002198 | 8B46F8                    | 	mov	ax, word [bp-8]
  4060 | 0000219B | B90600                    | 	mov	cx, 6
  4061 | 0000219E | F7E9                      | 	imul	cx
  4062 | 000021A0 | 05[F23A]                  | 	add	ax, movePieceArray
  4063 | 000021A3 | 89C6                      | 	mov	si, ax
  4064 | 000021A5 | 83C604                    | 	add	si, 4
  4065 | 000021A8 | C7040000                  | 	mov	word [si], 0
  4066 | 000021AC | 8B46F8                    | 	mov	ax, word [bp-8]
  4067 | 000021AF | B90600                    | 	mov	cx, 6
  4068 | 000021B2 | F7E9                      | 	imul	cx
  4069 | 000021B4 | 05[F23A]                  | 	add	ax, movePieceArray
  4070 | 000021B7 | 89C6                      | 	mov	si, ax
  4071 | 000021B9 | 83C602                    | 	add	si, 2
  4072 | 000021BC | C704[8608]                | 	mov	word [si], SlidePiece
  4073 | 000021C0 | 8B46FA                    | 	mov	ax, word [bp-6]
  4074 | 000021C3 | 48                        | 	dec	ax
  4075 | 000021C4 | 8946FA                    | 	mov	word [bp-6], ax
  4076 | 000021C7 | 8B46F8                    | 	mov	ax, word [bp-8]
  4077 | 000021CA | B90600                    | 	mov	cx, 6
  4078 | 000021CD | F7E9                      | 	imul	cx
  4079 | 000021CF | 05[F23A]                  | 	add	ax, movePieceArray
  4080 | 000021D2 | 50                        | 	push	ax
  4081 | 000021D3 | FF36[3832]                | 	push	word [movePieceQueuePTR]
  4082 | 000021D7 | E80CF6                    | 	call	YKQPost
  4083 | 000021DA | 83C404                    | 	add	sp, 4
  4084 |          |                           | L_lab8app_67:
  4085 | 000021DD | 8B46FC                    | 	mov	ax, word [bp-4]
  4086 | 000021E0 | 3B46FA                    | 	cmp	ax, word [bp-6]
  4087 | 000021E3 | 7C98                      | 	jl	L_lab8app_66
  4088 |          |                           | L_lab8app_68:
  4089 | 000021E5 | 8B76FE                    | 	mov	si, word [bp-2]
  4090 | 000021E8 | 83C604                    | 	add	si, 4
  4091 | 000021EB | 8B04                      | 	mov	ax, word [si]
  4092 | 000021ED | 85C0                      | 	test	ax, ax
  4093 | 000021EF | 7459                      | 	je	L_lab8app_69
  4094 | 000021F1 | E86CFC                    | 	call	getMovePieceQueueArrayIndex
  4095 | 000021F4 | 8946F2                    | 	mov	word [bp-14], ax
  4096 | 000021F7 | 8B76FE                    | 	mov	si, word [bp-2]
  4097 | 000021FA | 8B46F2                    | 	mov	ax, word [bp-14]
  4098 | 000021FD | B90600                    | 	mov	cx, 6
  4099 | 00002200 | F7E9                      | 	imul	cx
  4100 | 00002202 | 89C7                      | 	mov	di, ax
  4101 | 00002204 | 81C7[F23A]                | 	add	di, movePieceArray
  4102 | 00002208 | 8B04                      | 	mov	ax, word [si]
  4103 | 0000220A | 8905                      | 	mov	word [di], ax
  4104 | 0000220C | 8B46F2                    | 	mov	ax, word [bp-14]
  4105 | 0000220F | B90600                    | 	mov	cx, 6
  4106 | 00002212 | F7E9                      | 	imul	cx
  4107 | 00002214 | 05[F23A]                  | 	add	ax, movePieceArray
  4108 | 00002217 | 89C6                      | 	mov	si, ax
  4109 | 00002219 | 83C604                    | 	add	si, 4
  4110 | 0000221C | C7040100                  | 	mov	word [si], 1
  4111 | 00002220 | 8B46F2                    | 	mov	ax, word [bp-14]
  4112 | 00002223 | B90600                    | 	mov	cx, 6
  4113 | 00002226 | F7E9                      | 	imul	cx
  4114 | 00002228 | 05[F23A]                  | 	add	ax, movePieceArray
  4115 | 0000222B | 89C6                      | 	mov	si, ax
  4116 | 0000222D | 83C602                    | 	add	si, 2
  4117 | 00002230 | C704[9908]                | 	mov	word [si], RotatePiece
  4118 | 00002234 | 8B46F2                    | 	mov	ax, word [bp-14]
  4119 | 00002237 | B90600                    | 	mov	cx, 6
  4120 | 0000223A | F7E9                      | 	imul	cx
  4121 | 0000223C | 05[F23A]                  | 	add	ax, movePieceArray
  4122 | 0000223F | 50                        | 	push	ax
  4123 | 00002240 | FF36[3832]                | 	push	word [movePieceQueuePTR]
  4124 | 00002244 | E89FF5                    | 	call	YKQPost
  4125 | 00002247 | 83C404                    | 	add	sp, 4
  4126 |          |                           | L_lab8app_69:
  4127 | 0000224A | 8B46F4                    | 	mov	ax, word [bp-12]
  4128 | 0000224D | 85C0                      | 	test	ax, ax
  4129 | 0000224F | 7527                      | 	jne	L_lab8app_70
  4130 | 00002251 | B80100                    | 	mov	ax, 1
  4131 | 00002254 | 8B4EF6                    | 	mov	cx, word [bp-10]
  4132 | 00002257 | D3E0                      | 	shl	ax, cl
  4133 | 00002259 | 0B06[0C3C]                | 	or	ax, word [screen0]
  4134 | 0000225D | A3[0C3C]                  | 	mov	word [screen0], ax
  4135 | 00002260 | B80100                    | 	mov	ax, 1
  4136 | 00002263 | D3E0                      | 	shl	ax, cl
  4137 | 00002265 | 0B06[0E3C]                | 	or	ax, word [screen1]
  4138 | 00002269 | A3[0E3C]                  | 	mov	word [screen1], ax
  4139 | 0000226C | B80100                    | 	mov	ax, 1
  4140 | 0000226F | D3E0                      | 	shl	ax, cl
  4141 | 00002271 | 0B06[103C]                | 	or	ax, word [screen2]
  4142 | 00002275 | A3[103C]                  | 	mov	word [screen2], ax
  4143 |          |                           | L_lab8app_70:
  4144 | 00002278 | FF76F6                    | 	push	word [bp-10]
  4145 | 0000227B | E878FD                    | 	call	tryToClearLine
  4146 | 0000227E | 83C402                    | 	add	sp, 2
  4147 | 00002281 | E95F0E                    | 	jmp	L_lab8app_71
  4148 |          |                           | L_lab8app_58:
  4149 | 00002284 | E8F9FB                    | 	call	getLowerBucket
  4150 | 00002287 | 8946FC                    | 	mov	word [bp-4], ax
  4151 | 0000228A | 8B76FE                    | 	mov	si, word [bp-2]
  4152 | 0000228D | 83C606                    | 	add	si, 6
  4153 | 00002290 | 8B04                      | 	mov	ax, word [si]
  4154 | 00002292 | 8946FA                    | 	mov	word [bp-6], ax
  4155 | 00002295 | FF76FC                    | 	push	word [bp-4]
  4156 | 00002298 | E849FC                    | 	call	isBucketFlat
  4157 | 0000229B | 83C402                    | 	add	sp, 2
  4158 | 0000229E | 85C0                      | 	test	ax, ax
  4159 | 000022A0 | 7503E98B09                | 	je	L_lab8app_72
  4160 | 000022A5 | 8B46FC                    | 	mov	ax, word [bp-4]
  4161 | 000022A8 | 85C0                      | 	test	ax, ax
  4162 | 000022AA | 7404                      | 	je	L_lab8app_74
  4163 | 000022AC | 31C0                      | 	xor	ax, ax
  4164 | 000022AE | EB03                      | 	jmp	L_lab8app_75
  4165 |          |                           | L_lab8app_74:
  4166 | 000022B0 | B80100                    | 	mov	ax, 1
  4167 |          |                           | L_lab8app_75:
  4168 | 000022B3 | 50                        | 	push	ax
  4169 | 000022B4 | E82DFC                    | 	call	isBucketFlat
  4170 | 000022B7 | 83C402                    | 	add	sp, 2
  4171 | 000022BA | 85C0                      | 	test	ax, ax
  4172 | 000022BC | 7503E9A804                | 	je	L_lab8app_73
  4173 | 000022C1 | 8B46FC                    | 	mov	ax, word [bp-4]
  4174 | 000022C4 | 85C0                      | 	test	ax, ax
  4175 | 000022C6 | 7503E91302                | 	je	L_lab8app_76
  4176 | 000022CB | C746FC0300                | 	mov	word [bp-4], 3
  4177 | 000022D0 | EB60                      | 	jmp	L_lab8app_78
  4178 |          |                           | L_lab8app_77:
  4179 | 000022D2 | E88BFB                    | 	call	getMovePieceQueueArrayIndex
  4180 | 000022D5 | 8946F8                    | 	mov	word [bp-8], ax
  4181 | 000022D8 | 8B76FE                    | 	mov	si, word [bp-2]
  4182 | 000022DB | 8B46F8                    | 	mov	ax, word [bp-8]
  4183 | 000022DE | B90600                    | 	mov	cx, 6
  4184 | 000022E1 | F7E9                      | 	imul	cx
  4185 | 000022E3 | 89C7                      | 	mov	di, ax
  4186 | 000022E5 | 81C7[F23A]                | 	add	di, movePieceArray
  4187 | 000022E9 | 8B04                      | 	mov	ax, word [si]
  4188 | 000022EB | 8905                      | 	mov	word [di], ax
  4189 | 000022ED | 8B46F8                    | 	mov	ax, word [bp-8]
  4190 | 000022F0 | B90600                    | 	mov	cx, 6
  4191 | 000022F3 | F7E9                      | 	imul	cx
  4192 | 000022F5 | 05[F23A]                  | 	add	ax, movePieceArray
  4193 | 000022F8 | 89C6                      | 	mov	si, ax
  4194 | 000022FA | 83C604                    | 	add	si, 4
  4195 | 000022FD | C7040100                  | 	mov	word [si], 1
  4196 | 00002301 | 8B46F8                    | 	mov	ax, word [bp-8]
  4197 | 00002304 | B90600                    | 	mov	cx, 6
  4198 | 00002307 | F7E9                      | 	imul	cx
  4199 | 00002309 | 05[F23A]                  | 	add	ax, movePieceArray
  4200 | 0000230C | 89C6                      | 	mov	si, ax
  4201 | 0000230E | 83C602                    | 	add	si, 2
  4202 | 00002311 | C704[8608]                | 	mov	word [si], SlidePiece
  4203 | 00002315 | 8B46FA                    | 	mov	ax, word [bp-6]
  4204 | 00002318 | 40                        | 	inc	ax
  4205 | 00002319 | 8946FA                    | 	mov	word [bp-6], ax
  4206 | 0000231C | 8B46F8                    | 	mov	ax, word [bp-8]
  4207 | 0000231F | B90600                    | 	mov	cx, 6
  4208 | 00002322 | F7E9                      | 	imul	cx
  4209 | 00002324 | 05[F23A]                  | 	add	ax, movePieceArray
  4210 | 00002327 | 50                        | 	push	ax
  4211 | 00002328 | FF36[3832]                | 	push	word [movePieceQueuePTR]
  4212 | 0000232C | E8B7F4                    | 	call	YKQPost
  4213 | 0000232F | 83C404                    | 	add	sp, 4
  4214 |          |                           | L_lab8app_78:
  4215 | 00002332 | 8B46FC                    | 	mov	ax, word [bp-4]
  4216 | 00002335 | 3B46FA                    | 	cmp	ax, word [bp-6]
  4217 | 00002338 | 7F98                      | 	jg	L_lab8app_77
  4218 |          |                           | L_lab8app_79:
  4219 | 0000233A | EB60                      | 	jmp	L_lab8app_81
  4220 |          |                           | L_lab8app_80:
  4221 | 0000233C | E821FB                    | 	call	getMovePieceQueueArrayIndex
  4222 | 0000233F | 8946F8                    | 	mov	word [bp-8], ax
  4223 | 00002342 | 8B76FE                    | 	mov	si, word [bp-2]
  4224 | 00002345 | 8B46F8                    | 	mov	ax, word [bp-8]
  4225 | 00002348 | B90600                    | 	mov	cx, 6
  4226 | 0000234B | F7E9                      | 	imul	cx
  4227 | 0000234D | 89C7                      | 	mov	di, ax
  4228 | 0000234F | 81C7[F23A]                | 	add	di, movePieceArray
  4229 | 00002353 | 8B04                      | 	mov	ax, word [si]
  4230 | 00002355 | 8905                      | 	mov	word [di], ax
  4231 | 00002357 | 8B46F8                    | 	mov	ax, word [bp-8]
  4232 | 0000235A | B90600                    | 	mov	cx, 6
  4233 | 0000235D | F7E9                      | 	imul	cx
  4234 | 0000235F | 05[F23A]                  | 	add	ax, movePieceArray
  4235 | 00002362 | 89C6                      | 	mov	si, ax
  4236 | 00002364 | 83C604                    | 	add	si, 4
  4237 | 00002367 | C7040000                  | 	mov	word [si], 0
  4238 | 0000236B | 8B46F8                    | 	mov	ax, word [bp-8]
  4239 | 0000236E | B90600                    | 	mov	cx, 6
  4240 | 00002371 | F7E9                      | 	imul	cx
  4241 | 00002373 | 05[F23A]                  | 	add	ax, movePieceArray
  4242 | 00002376 | 89C6                      | 	mov	si, ax
  4243 | 00002378 | 83C602                    | 	add	si, 2
  4244 | 0000237B | C704[8608]                | 	mov	word [si], SlidePiece
  4245 | 0000237F | 8B46FA                    | 	mov	ax, word [bp-6]
  4246 | 00002382 | 48                        | 	dec	ax
  4247 | 00002383 | 8946FA                    | 	mov	word [bp-6], ax
  4248 | 00002386 | 8B46F8                    | 	mov	ax, word [bp-8]
  4249 | 00002389 | B90600                    | 	mov	cx, 6
  4250 | 0000238C | F7E9                      | 	imul	cx
  4251 | 0000238E | 05[F23A]                  | 	add	ax, movePieceArray
  4252 | 00002391 | 50                        | 	push	ax
  4253 | 00002392 | FF36[3832]                | 	push	word [movePieceQueuePTR]
  4254 | 00002396 | E84DF4                    | 	call	YKQPost
  4255 | 00002399 | 83C404                    | 	add	sp, 4
  4256 |          |                           | L_lab8app_81:
  4257 | 0000239C | 8B46FC                    | 	mov	ax, word [bp-4]
  4258 | 0000239F | 3B46FA                    | 	cmp	ax, word [bp-6]
  4259 | 000023A2 | 7C98                      | 	jl	L_lab8app_80
  4260 |          |                           | L_lab8app_82:
  4261 | 000023A4 | 8B76FE                    | 	mov	si, word [bp-2]
  4262 | 000023A7 | 83C604                    | 	add	si, 4
  4263 | 000023AA | 833C03                    | 	cmp	word [si], 3
  4264 | 000023AD | 7559                      | 	jne	L_lab8app_83
  4265 | 000023AF | E8AEFA                    | 	call	getMovePieceQueueArrayIndex
  4266 | 000023B2 | 8946F8                    | 	mov	word [bp-8], ax
  4267 | 000023B5 | 8B76FE                    | 	mov	si, word [bp-2]
  4268 | 000023B8 | 8B46F8                    | 	mov	ax, word [bp-8]
  4269 | 000023BB | B90600                    | 	mov	cx, 6
  4270 | 000023BE | F7E9                      | 	imul	cx
  4271 | 000023C0 | 89C7                      | 	mov	di, ax
  4272 | 000023C2 | 81C7[F23A]                | 	add	di, movePieceArray
  4273 | 000023C6 | 8B04                      | 	mov	ax, word [si]
  4274 | 000023C8 | 8905                      | 	mov	word [di], ax
  4275 | 000023CA | 8B46F8                    | 	mov	ax, word [bp-8]
  4276 | 000023CD | B90600                    | 	mov	cx, 6
  4277 | 000023D0 | F7E9                      | 	imul	cx
  4278 | 000023D2 | 05[F23A]                  | 	add	ax, movePieceArray
  4279 | 000023D5 | 89C6                      | 	mov	si, ax
  4280 | 000023D7 | 83C604                    | 	add	si, 4
  4281 | 000023DA | C7040000                  | 	mov	word [si], 0
  4282 | 000023DE | 8B46F8                    | 	mov	ax, word [bp-8]
  4283 | 000023E1 | B90600                    | 	mov	cx, 6
  4284 | 000023E4 | F7E9                      | 	imul	cx
  4285 | 000023E6 | 05[F23A]                  | 	add	ax, movePieceArray
  4286 | 000023E9 | 89C6                      | 	mov	si, ax
  4287 | 000023EB | 83C602                    | 	add	si, 2
  4288 | 000023EE | C704[9908]                | 	mov	word [si], RotatePiece
  4289 | 000023F2 | 8B46F8                    | 	mov	ax, word [bp-8]
  4290 | 000023F5 | B90600                    | 	mov	cx, 6
  4291 | 000023F8 | F7E9                      | 	imul	cx
  4292 | 000023FA | 05[F23A]                  | 	add	ax, movePieceArray
  4293 | 000023FD | 50                        | 	push	ax
  4294 | 000023FE | FF36[3832]                | 	push	word [movePieceQueuePTR]
  4295 | 00002402 | E8E1F3                    | 	call	YKQPost
  4296 | 00002405 | 83C404                    | 	add	sp, 4
  4297 |          |                           | L_lab8app_83:
  4298 | 00002408 | 8B76FE                    | 	mov	si, word [bp-2]
  4299 | 0000240B | 83C604                    | 	add	si, 4
  4300 | 0000240E | 833C02                    | 	cmp	word [si], 2
  4301 | 00002411 | 7559                      | 	jne	L_lab8app_84
  4302 | 00002413 | E84AFA                    | 	call	getMovePieceQueueArrayIndex
  4303 | 00002416 | 8946F8                    | 	mov	word [bp-8], ax
  4304 | 00002419 | 8B76FE                    | 	mov	si, word [bp-2]
  4305 | 0000241C | 8B46F8                    | 	mov	ax, word [bp-8]
  4306 | 0000241F | B90600                    | 	mov	cx, 6
  4307 | 00002422 | F7E9                      | 	imul	cx
  4308 | 00002424 | 89C7                      | 	mov	di, ax
  4309 | 00002426 | 81C7[F23A]                | 	add	di, movePieceArray
  4310 | 0000242A | 8B04                      | 	mov	ax, word [si]
  4311 | 0000242C | 8905                      | 	mov	word [di], ax
  4312 | 0000242E | 8B46F8                    | 	mov	ax, word [bp-8]
  4313 | 00002431 | B90600                    | 	mov	cx, 6
  4314 | 00002434 | F7E9                      | 	imul	cx
  4315 | 00002436 | 05[F23A]                  | 	add	ax, movePieceArray
  4316 | 00002439 | 89C6                      | 	mov	si, ax
  4317 | 0000243B | 83C604                    | 	add	si, 4
  4318 | 0000243E | C7040100                  | 	mov	word [si], 1
  4319 | 00002442 | 8B46F8                    | 	mov	ax, word [bp-8]
  4320 | 00002445 | B90600                    | 	mov	cx, 6
  4321 | 00002448 | F7E9                      | 	imul	cx
  4322 | 0000244A | 05[F23A]                  | 	add	ax, movePieceArray
  4323 | 0000244D | 89C6                      | 	mov	si, ax
  4324 | 0000244F | 83C602                    | 	add	si, 2
  4325 | 00002452 | C704[9908]                | 	mov	word [si], RotatePiece
  4326 | 00002456 | 8B46F8                    | 	mov	ax, word [bp-8]
  4327 | 00002459 | B90600                    | 	mov	cx, 6
  4328 | 0000245C | F7E9                      | 	imul	cx
  4329 | 0000245E | 05[F23A]                  | 	add	ax, movePieceArray
  4330 | 00002461 | 50                        | 	push	ax
  4331 | 00002462 | FF36[3832]                | 	push	word [movePieceQueuePTR]
  4332 | 00002466 | E87DF3                    | 	call	YKQPost
  4333 | 00002469 | 83C404                    | 	add	sp, 4
  4334 |          |                           | L_lab8app_84:
  4335 | 0000246C | 8B76FE                    | 	mov	si, word [bp-2]
  4336 | 0000246F | 83C604                    | 	add	si, 4
  4337 | 00002472 | 833C02                    | 	cmp	word [si], 2
  4338 | 00002475 | 740B                      | 	je	L_lab8app_86
  4339 | 00002477 | 8B76FE                    | 	mov	si, word [bp-2]
  4340 | 0000247A | 83C604                    | 	add	si, 4
  4341 | 0000247D | 833C01                    | 	cmp	word [si], 1
  4342 | 00002480 | 7559                      | 	jne	L_lab8app_85
  4343 |          |                           | L_lab8app_86:
  4344 | 00002482 | E8DBF9                    | 	call	getMovePieceQueueArrayIndex
  4345 | 00002485 | 8946F8                    | 	mov	word [bp-8], ax
  4346 | 00002488 | 8B76FE                    | 	mov	si, word [bp-2]
  4347 | 0000248B | 8B46F8                    | 	mov	ax, word [bp-8]
  4348 | 0000248E | B90600                    | 	mov	cx, 6
  4349 | 00002491 | F7E9                      | 	imul	cx
  4350 | 00002493 | 89C7                      | 	mov	di, ax
  4351 | 00002495 | 81C7[F23A]                | 	add	di, movePieceArray
  4352 | 00002499 | 8B04                      | 	mov	ax, word [si]
  4353 | 0000249B | 8905                      | 	mov	word [di], ax
  4354 | 0000249D | 8B46F8                    | 	mov	ax, word [bp-8]
  4355 | 000024A0 | B90600                    | 	mov	cx, 6
  4356 | 000024A3 | F7E9                      | 	imul	cx
  4357 | 000024A5 | 05[F23A]                  | 	add	ax, movePieceArray
  4358 | 000024A8 | 89C6                      | 	mov	si, ax
  4359 | 000024AA | 83C604                    | 	add	si, 4
  4360 | 000024AD | C7040100                  | 	mov	word [si], 1
  4361 | 000024B1 | 8B46F8                    | 	mov	ax, word [bp-8]
  4362 | 000024B4 | B90600                    | 	mov	cx, 6
  4363 | 000024B7 | F7E9                      | 	imul	cx
  4364 | 000024B9 | 05[F23A]                  | 	add	ax, movePieceArray
  4365 | 000024BC | 89C6                      | 	mov	si, ax
  4366 | 000024BE | 83C602                    | 	add	si, 2
  4367 | 000024C1 | C704[9908]                | 	mov	word [si], RotatePiece
  4368 | 000024C5 | 8B46F8                    | 	mov	ax, word [bp-8]
  4369 | 000024C8 | B90600                    | 	mov	cx, 6
  4370 | 000024CB | F7E9                      | 	imul	cx
  4371 | 000024CD | 05[F23A]                  | 	add	ax, movePieceArray
  4372 | 000024D0 | 50                        | 	push	ax
  4373 | 000024D1 | FF36[3832]                | 	push	word [movePieceQueuePTR]
  4374 | 000024D5 | E80EF3                    | 	call	YKQPost
  4375 | 000024D8 | 83C404                    | 	add	sp, 4
  4376 |          |                           | L_lab8app_85:
  4377 | 000024DB | E98802                    | 	jmp	L_lab8app_87
  4378 |          |                           | L_lab8app_76:
  4379 | 000024DE | 8B46FA                    | 	mov	ax, word [bp-6]
  4380 | 000024E1 | 85C0                      | 	test	ax, ax
  4381 | 000024E3 | 756E                      | 	jne	L_lab8app_88
  4382 | 000024E5 | 8B76FE                    | 	mov	si, word [bp-2]
  4383 | 000024E8 | 83C604                    | 	add	si, 4
  4384 | 000024EB | 8B04                      | 	mov	ax, word [si]
  4385 | 000024ED | 85C0                      | 	test	ax, ax
  4386 | 000024EF | 7462                      | 	je	L_lab8app_88
  4387 | 000024F1 | E86CF9                    | 	call	getMovePieceQueueArrayIndex
  4388 | 000024F4 | 8946F8                    | 	mov	word [bp-8], ax
  4389 | 000024F7 | 8B76FE                    | 	mov	si, word [bp-2]
  4390 | 000024FA | 8B46F8                    | 	mov	ax, word [bp-8]
  4391 | 000024FD | B90600                    | 	mov	cx, 6
  4392 | 00002500 | F7E9                      | 	imul	cx
  4393 | 00002502 | 89C7                      | 	mov	di, ax
  4394 | 00002504 | 81C7[F23A]                | 	add	di, movePieceArray
  4395 | 00002508 | 8B04                      | 	mov	ax, word [si]
  4396 | 0000250A | 8905                      | 	mov	word [di], ax
  4397 | 0000250C | 8B46F8                    | 	mov	ax, word [bp-8]
  4398 | 0000250F | B90600                    | 	mov	cx, 6
  4399 | 00002512 | F7E9                      | 	imul	cx
  4400 | 00002514 | 05[F23A]                  | 	add	ax, movePieceArray
  4401 | 00002517 | 89C6                      | 	mov	si, ax
  4402 | 00002519 | 83C604                    | 	add	si, 4
  4403 | 0000251C | C7040100                  | 	mov	word [si], 1
  4404 | 00002520 | 8B46F8                    | 	mov	ax, word [bp-8]
  4405 | 00002523 | B90600                    | 	mov	cx, 6
  4406 | 00002526 | F7E9                      | 	imul	cx
  4407 | 00002528 | 05[F23A]                  | 	add	ax, movePieceArray
  4408 | 0000252B | 89C6                      | 	mov	si, ax
  4409 | 0000252D | 83C602                    | 	add	si, 2
  4410 | 00002530 | C704[8608]                | 	mov	word [si], SlidePiece
  4411 | 00002534 | 8B46FA                    | 	mov	ax, word [bp-6]
  4412 | 00002537 | 40                        | 	inc	ax
  4413 | 00002538 | 8946FA                    | 	mov	word [bp-6], ax
  4414 | 0000253B | 8B46F8                    | 	mov	ax, word [bp-8]
  4415 | 0000253E | B90600                    | 	mov	cx, 6
  4416 | 00002541 | F7E9                      | 	imul	cx
  4417 | 00002543 | 05[F23A]                  | 	add	ax, movePieceArray
  4418 | 00002546 | 50                        | 	push	ax
  4419 | 00002547 | FF36[3832]                | 	push	word [movePieceQueuePTR]
  4420 | 0000254B | E898F2                    | 	call	YKQPost
  4421 | 0000254E | 83C404                    | 	add	sp, 4
  4422 | 00002551 | EB72                      | 	jmp	L_lab8app_89
  4423 |          |                           | L_lab8app_88:
  4424 | 00002553 | 837EFA05                  | 	cmp	word [bp-6], 5
  4425 | 00002557 | 756C                      | 	jne	L_lab8app_90
  4426 | 00002559 | 8B76FE                    | 	mov	si, word [bp-2]
  4427 | 0000255C | 83C604                    | 	add	si, 4
  4428 | 0000255F | 8B04                      | 	mov	ax, word [si]
  4429 | 00002561 | 85C0                      | 	test	ax, ax
  4430 | 00002563 | 7460                      | 	je	L_lab8app_90
  4431 | 00002565 | E8F8F8                    | 	call	getMovePieceQueueArrayIndex
  4432 | 00002568 | 8946F8                    | 	mov	word [bp-8], ax
  4433 | 0000256B | 8B76FE                    | 	mov	si, word [bp-2]
  4434 | 0000256E | 8B46F8                    | 	mov	ax, word [bp-8]
  4435 | 00002571 | B90600                    | 	mov	cx, 6
  4436 | 00002574 | F7E9                      | 	imul	cx
  4437 | 00002576 | 89C7                      | 	mov	di, ax
  4438 | 00002578 | 81C7[F23A]                | 	add	di, movePieceArray
  4439 | 0000257C | 8B04                      | 	mov	ax, word [si]
  4440 | 0000257E | 8905                      | 	mov	word [di], ax
  4441 | 00002580 | 8B46F8                    | 	mov	ax, word [bp-8]
  4442 | 00002583 | B90600                    | 	mov	cx, 6
  4443 | 00002586 | F7E9                      | 	imul	cx
  4444 | 00002588 | 05[F23A]                  | 	add	ax, movePieceArray
  4445 | 0000258B | 89C6                      | 	mov	si, ax
  4446 | 0000258D | 83C604                    | 	add	si, 4
  4447 | 00002590 | C7040000                  | 	mov	word [si], 0
  4448 | 00002594 | 8B46F8                    | 	mov	ax, word [bp-8]
  4449 | 00002597 | B90600                    | 	mov	cx, 6
  4450 | 0000259A | F7E9                      | 	imul	cx
  4451 | 0000259C | 05[F23A]                  | 	add	ax, movePieceArray
  4452 | 0000259F | 89C6                      | 	mov	si, ax
  4453 | 000025A1 | 83C602                    | 	add	si, 2
  4454 | 000025A4 | C704[8608]                | 	mov	word [si], SlidePiece
  4455 | 000025A8 | 8B46FA                    | 	mov	ax, word [bp-6]
  4456 | 000025AB | 48                        | 	dec	ax
  4457 | 000025AC | 8946FA                    | 	mov	word [bp-6], ax
  4458 | 000025AF | 8B46F8                    | 	mov	ax, word [bp-8]
  4459 | 000025B2 | B90600                    | 	mov	cx, 6
  4460 | 000025B5 | F7E9                      | 	imul	cx
  4461 | 000025B7 | 05[F23A]                  | 	add	ax, movePieceArray
  4462 | 000025BA | 50                        | 	push	ax
  4463 | 000025BB | FF36[3832]                | 	push	word [movePieceQueuePTR]
  4464 | 000025BF | E824F2                    | 	call	YKQPost
  4465 | 000025C2 | 83C404                    | 	add	sp, 4
  4466 |          |                           | L_lab8app_90:
  4467 |          |                           | L_lab8app_89:
  4468 | 000025C5 | 8B76FE                    | 	mov	si, word [bp-2]
  4469 | 000025C8 | 83C604                    | 	add	si, 4
  4470 | 000025CB | 833C03                    | 	cmp	word [si], 3
  4471 | 000025CE | 7559                      | 	jne	L_lab8app_91
  4472 | 000025D0 | E88DF8                    | 	call	getMovePieceQueueArrayIndex
  4473 | 000025D3 | 8946F8                    | 	mov	word [bp-8], ax
  4474 | 000025D6 | 8B76FE                    | 	mov	si, word [bp-2]
  4475 | 000025D9 | 8B46F8                    | 	mov	ax, word [bp-8]
  4476 | 000025DC | B90600                    | 	mov	cx, 6
  4477 | 000025DF | F7E9                      | 	imul	cx
  4478 | 000025E1 | 89C7                      | 	mov	di, ax
  4479 | 000025E3 | 81C7[F23A]                | 	add	di, movePieceArray
  4480 | 000025E7 | 8B04                      | 	mov	ax, word [si]
  4481 | 000025E9 | 8905                      | 	mov	word [di], ax
  4482 | 000025EB | 8B46F8                    | 	mov	ax, word [bp-8]
  4483 | 000025EE | B90600                    | 	mov	cx, 6
  4484 | 000025F1 | F7E9                      | 	imul	cx
  4485 | 000025F3 | 05[F23A]                  | 	add	ax, movePieceArray
  4486 | 000025F6 | 89C6                      | 	mov	si, ax
  4487 | 000025F8 | 83C604                    | 	add	si, 4
  4488 | 000025FB | C7040000                  | 	mov	word [si], 0
  4489 | 000025FF | 8B46F8                    | 	mov	ax, word [bp-8]
  4490 | 00002602 | B90600                    | 	mov	cx, 6
  4491 | 00002605 | F7E9                      | 	imul	cx
  4492 | 00002607 | 05[F23A]                  | 	add	ax, movePieceArray
  4493 | 0000260A | 89C6                      | 	mov	si, ax
  4494 | 0000260C | 83C602                    | 	add	si, 2
  4495 | 0000260F | C704[9908]                | 	mov	word [si], RotatePiece
  4496 | 00002613 | 8B46F8                    | 	mov	ax, word [bp-8]
  4497 | 00002616 | B90600                    | 	mov	cx, 6
  4498 | 00002619 | F7E9                      | 	imul	cx
  4499 | 0000261B | 05[F23A]                  | 	add	ax, movePieceArray
  4500 | 0000261E | 50                        | 	push	ax
  4501 | 0000261F | FF36[3832]                | 	push	word [movePieceQueuePTR]
  4502 | 00002623 | E8C0F1                    | 	call	YKQPost
  4503 | 00002626 | 83C404                    | 	add	sp, 4
  4504 |          |                           | L_lab8app_91:
  4505 | 00002629 | 8B76FE                    | 	mov	si, word [bp-2]
  4506 | 0000262C | 83C604                    | 	add	si, 4
  4507 | 0000262F | 833C02                    | 	cmp	word [si], 2
  4508 | 00002632 | 7559                      | 	jne	L_lab8app_92
  4509 | 00002634 | E829F8                    | 	call	getMovePieceQueueArrayIndex
  4510 | 00002637 | 8946F8                    | 	mov	word [bp-8], ax
  4511 | 0000263A | 8B76FE                    | 	mov	si, word [bp-2]
  4512 | 0000263D | 8B46F8                    | 	mov	ax, word [bp-8]
  4513 | 00002640 | B90600                    | 	mov	cx, 6
  4514 | 00002643 | F7E9                      | 	imul	cx
  4515 | 00002645 | 89C7                      | 	mov	di, ax
  4516 | 00002647 | 81C7[F23A]                | 	add	di, movePieceArray
  4517 | 0000264B | 8B04                      | 	mov	ax, word [si]
  4518 | 0000264D | 8905                      | 	mov	word [di], ax
  4519 | 0000264F | 8B46F8                    | 	mov	ax, word [bp-8]
  4520 | 00002652 | B90600                    | 	mov	cx, 6
  4521 | 00002655 | F7E9                      | 	imul	cx
  4522 | 00002657 | 05[F23A]                  | 	add	ax, movePieceArray
  4523 | 0000265A | 89C6                      | 	mov	si, ax
  4524 | 0000265C | 83C604                    | 	add	si, 4
  4525 | 0000265F | C7040100                  | 	mov	word [si], 1
  4526 | 00002663 | 8B46F8                    | 	mov	ax, word [bp-8]
  4527 | 00002666 | B90600                    | 	mov	cx, 6
  4528 | 00002669 | F7E9                      | 	imul	cx
  4529 | 0000266B | 05[F23A]                  | 	add	ax, movePieceArray
  4530 | 0000266E | 89C6                      | 	mov	si, ax
  4531 | 00002670 | 83C602                    | 	add	si, 2
  4532 | 00002673 | C704[9908]                | 	mov	word [si], RotatePiece
  4533 | 00002677 | 8B46F8                    | 	mov	ax, word [bp-8]
  4534 | 0000267A | B90600                    | 	mov	cx, 6
  4535 | 0000267D | F7E9                      | 	imul	cx
  4536 | 0000267F | 05[F23A]                  | 	add	ax, movePieceArray
  4537 | 00002682 | 50                        | 	push	ax
  4538 | 00002683 | FF36[3832]                | 	push	word [movePieceQueuePTR]
  4539 | 00002687 | E85CF1                    | 	call	YKQPost
  4540 | 0000268A | 83C404                    | 	add	sp, 4
  4541 |          |                           | L_lab8app_92:
  4542 | 0000268D | 8B76FE                    | 	mov	si, word [bp-2]
  4543 | 00002690 | 83C604                    | 	add	si, 4
  4544 | 00002693 | 833C02                    | 	cmp	word [si], 2
  4545 | 00002696 | 740B                      | 	je	L_lab8app_94
  4546 | 00002698 | 8B76FE                    | 	mov	si, word [bp-2]
  4547 | 0000269B | 83C604                    | 	add	si, 4
  4548 | 0000269E | 833C01                    | 	cmp	word [si], 1
  4549 | 000026A1 | 7559                      | 	jne	L_lab8app_93
  4550 |          |                           | L_lab8app_94:
  4551 | 000026A3 | E8BAF7                    | 	call	getMovePieceQueueArrayIndex
  4552 | 000026A6 | 8946F8                    | 	mov	word [bp-8], ax
  4553 | 000026A9 | 8B76FE                    | 	mov	si, word [bp-2]
  4554 | 000026AC | 8B46F8                    | 	mov	ax, word [bp-8]
  4555 | 000026AF | B90600                    | 	mov	cx, 6
  4556 | 000026B2 | F7E9                      | 	imul	cx
  4557 | 000026B4 | 89C7                      | 	mov	di, ax
  4558 | 000026B6 | 81C7[F23A]                | 	add	di, movePieceArray
  4559 | 000026BA | 8B04                      | 	mov	ax, word [si]
  4560 | 000026BC | 8905                      | 	mov	word [di], ax
  4561 | 000026BE | 8B46F8                    | 	mov	ax, word [bp-8]
  4562 | 000026C1 | B90600                    | 	mov	cx, 6
  4563 | 000026C4 | F7E9                      | 	imul	cx
  4564 | 000026C6 | 05[F23A]                  | 	add	ax, movePieceArray
  4565 | 000026C9 | 89C6                      | 	mov	si, ax
  4566 | 000026CB | 83C604                    | 	add	si, 4
  4567 | 000026CE | C7040100                  | 	mov	word [si], 1
  4568 | 000026D2 | 8B46F8                    | 	mov	ax, word [bp-8]
  4569 | 000026D5 | B90600                    | 	mov	cx, 6
  4570 | 000026D8 | F7E9                      | 	imul	cx
  4571 | 000026DA | 05[F23A]                  | 	add	ax, movePieceArray
  4572 | 000026DD | 89C6                      | 	mov	si, ax
  4573 | 000026DF | 83C602                    | 	add	si, 2
  4574 | 000026E2 | C704[9908]                | 	mov	word [si], RotatePiece
  4575 | 000026E6 | 8B46F8                    | 	mov	ax, word [bp-8]
  4576 | 000026E9 | B90600                    | 	mov	cx, 6
  4577 | 000026EC | F7E9                      | 	imul	cx
  4578 | 000026EE | 05[F23A]                  | 	add	ax, movePieceArray
  4579 | 000026F1 | 50                        | 	push	ax
  4580 | 000026F2 | FF36[3832]                | 	push	word [movePieceQueuePTR]
  4581 | 000026F6 | E8EDF0                    | 	call	YKQPost
  4582 | 000026F9 | 83C404                    | 	add	sp, 4
  4583 |          |                           | L_lab8app_93:
  4584 | 000026FC | EB60                      | 	jmp	L_lab8app_96
  4585 |          |                           | L_lab8app_95:
  4586 | 000026FE | E85FF7                    | 	call	getMovePieceQueueArrayIndex
  4587 | 00002701 | 8946F8                    | 	mov	word [bp-8], ax
  4588 | 00002704 | 8B76FE                    | 	mov	si, word [bp-2]
  4589 | 00002707 | 8B46F8                    | 	mov	ax, word [bp-8]
  4590 | 0000270A | B90600                    | 	mov	cx, 6
  4591 | 0000270D | F7E9                      | 	imul	cx
  4592 | 0000270F | 89C7                      | 	mov	di, ax
  4593 | 00002711 | 81C7[F23A]                | 	add	di, movePieceArray
  4594 | 00002715 | 8B04                      | 	mov	ax, word [si]
  4595 | 00002717 | 8905                      | 	mov	word [di], ax
  4596 | 00002719 | 8B46F8                    | 	mov	ax, word [bp-8]
  4597 | 0000271C | B90600                    | 	mov	cx, 6
  4598 | 0000271F | F7E9                      | 	imul	cx
  4599 | 00002721 | 05[F23A]                  | 	add	ax, movePieceArray
  4600 | 00002724 | 89C6                      | 	mov	si, ax
  4601 | 00002726 | 83C604                    | 	add	si, 4
  4602 | 00002729 | C7040000                  | 	mov	word [si], 0
  4603 | 0000272D | 8B46F8                    | 	mov	ax, word [bp-8]
  4604 | 00002730 | B90600                    | 	mov	cx, 6
  4605 | 00002733 | F7E9                      | 	imul	cx
  4606 | 00002735 | 05[F23A]                  | 	add	ax, movePieceArray
  4607 | 00002738 | 89C6                      | 	mov	si, ax
  4608 | 0000273A | 83C602                    | 	add	si, 2
  4609 | 0000273D | C704[8608]                | 	mov	word [si], SlidePiece
  4610 | 00002741 | 8B46FA                    | 	mov	ax, word [bp-6]
  4611 | 00002744 | 48                        | 	dec	ax
  4612 | 00002745 | 8946FA                    | 	mov	word [bp-6], ax
  4613 | 00002748 | 8B46F8                    | 	mov	ax, word [bp-8]
  4614 | 0000274B | B90600                    | 	mov	cx, 6
  4615 | 0000274E | F7E9                      | 	imul	cx
  4616 | 00002750 | 05[F23A]                  | 	add	ax, movePieceArray
  4617 | 00002753 | 50                        | 	push	ax
  4618 | 00002754 | FF36[3832]                | 	push	word [movePieceQueuePTR]
  4619 | 00002758 | E88BF0                    | 	call	YKQPost
  4620 | 0000275B | 83C404                    | 	add	sp, 4
  4621 |          |                           | L_lab8app_96:
  4622 | 0000275E | 8B46FC                    | 	mov	ax, word [bp-4]
  4623 | 00002761 | 3B46FA                    | 	cmp	ax, word [bp-6]
  4624 | 00002764 | 7C98                      | 	jl	L_lab8app_95
  4625 |          |                           | L_lab8app_97:
  4626 |          |                           | L_lab8app_87:
  4627 | 00002766 | E9C404                    | 	jmp	L_lab8app_98
  4628 |          |                           | L_lab8app_73:
  4629 | 00002769 | 8B46FC                    | 	mov	ax, word [bp-4]
  4630 | 0000276C | 85C0                      | 	test	ax, ax
  4631 | 0000276E | 7404                      | 	je	L_lab8app_99
  4632 | 00002770 | 31C0                      | 	xor	ax, ax
  4633 | 00002772 | EB03                      | 	jmp	L_lab8app_100
  4634 |          |                           | L_lab8app_99:
  4635 | 00002774 | B80100                    | 	mov	ax, 1
  4636 |          |                           | L_lab8app_100:
  4637 | 00002777 | 8946FC                    | 	mov	word [bp-4], ax
  4638 | 0000277A | 8B46FC                    | 	mov	ax, word [bp-4]
  4639 | 0000277D | 85C0                      | 	test	ax, ax
  4640 | 0000277F | 7405                      | 	je	L_lab8app_101
  4641 | 00002781 | B80500                    | 	mov	ax, 5
  4642 | 00002784 | EB03                      | 	jmp	L_lab8app_102
  4643 |          |                           | L_lab8app_101:
  4644 | 00002786 | B80200                    | 	mov	ax, 2
  4645 |          |                           | L_lab8app_102:
  4646 | 00002789 | 8946FC                    | 	mov	word [bp-4], ax
  4647 | 0000278C | 837EFC05                  | 	cmp	word [bp-4], 5
  4648 | 00002790 | 7403E98B02                | 	jne	L_lab8app_103
  4649 | 00002795 | 8B46FA                    | 	mov	ax, word [bp-6]
  4650 | 00002798 | 85C0                      | 	test	ax, ax
  4651 | 0000279A | 756D                      | 	jne	L_lab8app_104
  4652 | 0000279C | 8B76FE                    | 	mov	si, word [bp-2]
  4653 | 0000279F | 83C604                    | 	add	si, 4
  4654 | 000027A2 | 833C02                    | 	cmp	word [si], 2
  4655 | 000027A5 | 7462                      | 	je	L_lab8app_104
  4656 | 000027A7 | E8B6F6                    | 	call	getMovePieceQueueArrayIndex
  4657 | 000027AA | 8946F8                    | 	mov	word [bp-8], ax
  4658 | 000027AD | 8B76FE                    | 	mov	si, word [bp-2]
  4659 | 000027B0 | 8B46F8                    | 	mov	ax, word [bp-8]
  4660 | 000027B3 | B90600                    | 	mov	cx, 6
  4661 | 000027B6 | F7E9                      | 	imul	cx
  4662 | 000027B8 | 89C7                      | 	mov	di, ax
  4663 | 000027BA | 81C7[F23A]                | 	add	di, movePieceArray
  4664 | 000027BE | 8B04                      | 	mov	ax, word [si]
  4665 | 000027C0 | 8905                      | 	mov	word [di], ax
  4666 | 000027C2 | 8B46F8                    | 	mov	ax, word [bp-8]
  4667 | 000027C5 | B90600                    | 	mov	cx, 6
  4668 | 000027C8 | F7E9                      | 	imul	cx
  4669 | 000027CA | 05[F23A]                  | 	add	ax, movePieceArray
  4670 | 000027CD | 89C6                      | 	mov	si, ax
  4671 | 000027CF | 83C604                    | 	add	si, 4
  4672 | 000027D2 | C7040100                  | 	mov	word [si], 1
  4673 | 000027D6 | 8B46F8                    | 	mov	ax, word [bp-8]
  4674 | 000027D9 | B90600                    | 	mov	cx, 6
  4675 | 000027DC | F7E9                      | 	imul	cx
  4676 | 000027DE | 05[F23A]                  | 	add	ax, movePieceArray
  4677 | 000027E1 | 89C6                      | 	mov	si, ax
  4678 | 000027E3 | 83C602                    | 	add	si, 2
  4679 | 000027E6 | C704[8608]                | 	mov	word [si], SlidePiece
  4680 | 000027EA | 8B46FA                    | 	mov	ax, word [bp-6]
  4681 | 000027ED | 40                        | 	inc	ax
  4682 | 000027EE | 8946FA                    | 	mov	word [bp-6], ax
  4683 | 000027F1 | 8B46F8                    | 	mov	ax, word [bp-8]
  4684 | 000027F4 | B90600                    | 	mov	cx, 6
  4685 | 000027F7 | F7E9                      | 	imul	cx
  4686 | 000027F9 | 05[F23A]                  | 	add	ax, movePieceArray
  4687 | 000027FC | 50                        | 	push	ax
  4688 | 000027FD | FF36[3832]                | 	push	word [movePieceQueuePTR]
  4689 | 00002801 | E8E2EF                    | 	call	YKQPost
  4690 | 00002804 | 83C404                    | 	add	sp, 4
  4691 | 00002807 | EB71                      | 	jmp	L_lab8app_105
  4692 |          |                           | L_lab8app_104:
  4693 | 00002809 | 837EFA05                  | 	cmp	word [bp-6], 5
  4694 | 0000280D | 756B                      | 	jne	L_lab8app_106
  4695 | 0000280F | 8B76FE                    | 	mov	si, word [bp-2]
  4696 | 00002812 | 83C604                    | 	add	si, 4
  4697 | 00002815 | 833C02                    | 	cmp	word [si], 2
  4698 | 00002818 | 7460                      | 	je	L_lab8app_106
  4699 | 0000281A | E843F6                    | 	call	getMovePieceQueueArrayIndex
  4700 | 0000281D | 8946F8                    | 	mov	word [bp-8], ax
  4701 | 00002820 | 8B76FE                    | 	mov	si, word [bp-2]
  4702 | 00002823 | 8B46F8                    | 	mov	ax, word [bp-8]
  4703 | 00002826 | B90600                    | 	mov	cx, 6
  4704 | 00002829 | F7E9                      | 	imul	cx
  4705 | 0000282B | 89C7                      | 	mov	di, ax
  4706 | 0000282D | 81C7[F23A]                | 	add	di, movePieceArray
  4707 | 00002831 | 8B04                      | 	mov	ax, word [si]
  4708 | 00002833 | 8905                      | 	mov	word [di], ax
  4709 | 00002835 | 8B46F8                    | 	mov	ax, word [bp-8]
  4710 | 00002838 | B90600                    | 	mov	cx, 6
  4711 | 0000283B | F7E9                      | 	imul	cx
  4712 | 0000283D | 05[F23A]                  | 	add	ax, movePieceArray
  4713 | 00002840 | 89C6                      | 	mov	si, ax
  4714 | 00002842 | 83C604                    | 	add	si, 4
  4715 | 00002845 | C7040000                  | 	mov	word [si], 0
  4716 | 00002849 | 8B46F8                    | 	mov	ax, word [bp-8]
  4717 | 0000284C | B90600                    | 	mov	cx, 6
  4718 | 0000284F | F7E9                      | 	imul	cx
  4719 | 00002851 | 05[F23A]                  | 	add	ax, movePieceArray
  4720 | 00002854 | 89C6                      | 	mov	si, ax
  4721 | 00002856 | 83C602                    | 	add	si, 2
  4722 | 00002859 | C704[8608]                | 	mov	word [si], SlidePiece
  4723 | 0000285D | 8B46FA                    | 	mov	ax, word [bp-6]
  4724 | 00002860 | 48                        | 	dec	ax
  4725 | 00002861 | 8946FA                    | 	mov	word [bp-6], ax
  4726 | 00002864 | 8B46F8                    | 	mov	ax, word [bp-8]
  4727 | 00002867 | B90600                    | 	mov	cx, 6
  4728 | 0000286A | F7E9                      | 	imul	cx
  4729 | 0000286C | 05[F23A]                  | 	add	ax, movePieceArray
  4730 | 0000286F | 50                        | 	push	ax
  4731 | 00002870 | FF36[3832]                | 	push	word [movePieceQueuePTR]
  4732 | 00002874 | E86FEF                    | 	call	YKQPost
  4733 | 00002877 | 83C404                    | 	add	sp, 4
  4734 |          |                           | L_lab8app_106:
  4735 |          |                           | L_lab8app_105:
  4736 | 0000287A | 8B76FE                    | 	mov	si, word [bp-2]
  4737 | 0000287D | 83C604                    | 	add	si, 4
  4738 | 00002880 | 833C01                    | 	cmp	word [si], 1
  4739 | 00002883 | 7559                      | 	jne	L_lab8app_107
  4740 | 00002885 | E8D8F5                    | 	call	getMovePieceQueueArrayIndex
  4741 | 00002888 | 8946F8                    | 	mov	word [bp-8], ax
  4742 | 0000288B | 8B76FE                    | 	mov	si, word [bp-2]
  4743 | 0000288E | 8B46F8                    | 	mov	ax, word [bp-8]
  4744 | 00002891 | B90600                    | 	mov	cx, 6
  4745 | 00002894 | F7E9                      | 	imul	cx
  4746 | 00002896 | 89C7                      | 	mov	di, ax
  4747 | 00002898 | 81C7[F23A]                | 	add	di, movePieceArray
  4748 | 0000289C | 8B04                      | 	mov	ax, word [si]
  4749 | 0000289E | 8905                      | 	mov	word [di], ax
  4750 | 000028A0 | 8B46F8                    | 	mov	ax, word [bp-8]
  4751 | 000028A3 | B90600                    | 	mov	cx, 6
  4752 | 000028A6 | F7E9                      | 	imul	cx
  4753 | 000028A8 | 05[F23A]                  | 	add	ax, movePieceArray
  4754 | 000028AB | 89C6                      | 	mov	si, ax
  4755 | 000028AD | 83C604                    | 	add	si, 4
  4756 | 000028B0 | C7040000                  | 	mov	word [si], 0
  4757 | 000028B4 | 8B46F8                    | 	mov	ax, word [bp-8]
  4758 | 000028B7 | B90600                    | 	mov	cx, 6
  4759 | 000028BA | F7E9                      | 	imul	cx
  4760 | 000028BC | 05[F23A]                  | 	add	ax, movePieceArray
  4761 | 000028BF | 89C6                      | 	mov	si, ax
  4762 | 000028C1 | 83C602                    | 	add	si, 2
  4763 | 000028C4 | C704[9908]                | 	mov	word [si], RotatePiece
  4764 | 000028C8 | 8B46F8                    | 	mov	ax, word [bp-8]
  4765 | 000028CB | B90600                    | 	mov	cx, 6
  4766 | 000028CE | F7E9                      | 	imul	cx
  4767 | 000028D0 | 05[F23A]                  | 	add	ax, movePieceArray
  4768 | 000028D3 | 50                        | 	push	ax
  4769 | 000028D4 | FF36[3832]                | 	push	word [movePieceQueuePTR]
  4770 | 000028D8 | E80BEF                    | 	call	YKQPost
  4771 | 000028DB | 83C404                    | 	add	sp, 4
  4772 |          |                           | L_lab8app_107:
  4773 | 000028DE | 8B76FE                    | 	mov	si, word [bp-2]
  4774 | 000028E1 | 83C604                    | 	add	si, 4
  4775 | 000028E4 | 8B04                      | 	mov	ax, word [si]
  4776 | 000028E6 | 85C0                      | 	test	ax, ax
  4777 | 000028E8 | 7559                      | 	jne	L_lab8app_108
  4778 | 000028EA | E873F5                    | 	call	getMovePieceQueueArrayIndex
  4779 | 000028ED | 8946F8                    | 	mov	word [bp-8], ax
  4780 | 000028F0 | 8B76FE                    | 	mov	si, word [bp-2]
  4781 | 000028F3 | 8B46F8                    | 	mov	ax, word [bp-8]
  4782 | 000028F6 | B90600                    | 	mov	cx, 6
  4783 | 000028F9 | F7E9                      | 	imul	cx
  4784 | 000028FB | 89C7                      | 	mov	di, ax
  4785 | 000028FD | 81C7[F23A]                | 	add	di, movePieceArray
  4786 | 00002901 | 8B04                      | 	mov	ax, word [si]
  4787 | 00002903 | 8905                      | 	mov	word [di], ax
  4788 | 00002905 | 8B46F8                    | 	mov	ax, word [bp-8]
  4789 | 00002908 | B90600                    | 	mov	cx, 6
  4790 | 0000290B | F7E9                      | 	imul	cx
  4791 | 0000290D | 05[F23A]                  | 	add	ax, movePieceArray
  4792 | 00002910 | 89C6                      | 	mov	si, ax
  4793 | 00002912 | 83C604                    | 	add	si, 4
  4794 | 00002915 | C7040100                  | 	mov	word [si], 1
  4795 | 00002919 | 8B46F8                    | 	mov	ax, word [bp-8]
  4796 | 0000291C | B90600                    | 	mov	cx, 6
  4797 | 0000291F | F7E9                      | 	imul	cx
  4798 | 00002921 | 05[F23A]                  | 	add	ax, movePieceArray
  4799 | 00002924 | 89C6                      | 	mov	si, ax
  4800 | 00002926 | 83C602                    | 	add	si, 2
  4801 | 00002929 | C704[9908]                | 	mov	word [si], RotatePiece
  4802 | 0000292D | 8B46F8                    | 	mov	ax, word [bp-8]
  4803 | 00002930 | B90600                    | 	mov	cx, 6
  4804 | 00002933 | F7E9                      | 	imul	cx
  4805 | 00002935 | 05[F23A]                  | 	add	ax, movePieceArray
  4806 | 00002938 | 50                        | 	push	ax
  4807 | 00002939 | FF36[3832]                | 	push	word [movePieceQueuePTR]
  4808 | 0000293D | E8A6EE                    | 	call	YKQPost
  4809 | 00002940 | 83C404                    | 	add	sp, 4
  4810 |          |                           | L_lab8app_108:
  4811 | 00002943 | 8B76FE                    | 	mov	si, word [bp-2]
  4812 | 00002946 | 83C604                    | 	add	si, 4
  4813 | 00002949 | 8B04                      | 	mov	ax, word [si]
  4814 | 0000294B | 85C0                      | 	test	ax, ax
  4815 | 0000294D | 740B                      | 	je	L_lab8app_110
  4816 | 0000294F | 8B76FE                    | 	mov	si, word [bp-2]
  4817 | 00002952 | 83C604                    | 	add	si, 4
  4818 | 00002955 | 833C03                    | 	cmp	word [si], 3
  4819 | 00002958 | 7559                      | 	jne	L_lab8app_109
  4820 |          |                           | L_lab8app_110:
  4821 | 0000295A | E803F5                    | 	call	getMovePieceQueueArrayIndex
  4822 | 0000295D | 8946F8                    | 	mov	word [bp-8], ax
  4823 | 00002960 | 8B76FE                    | 	mov	si, word [bp-2]
  4824 | 00002963 | 8B46F8                    | 	mov	ax, word [bp-8]
  4825 | 00002966 | B90600                    | 	mov	cx, 6
  4826 | 00002969 | F7E9                      | 	imul	cx
  4827 | 0000296B | 89C7                      | 	mov	di, ax
  4828 | 0000296D | 81C7[F23A]                | 	add	di, movePieceArray
  4829 | 00002971 | 8B04                      | 	mov	ax, word [si]
  4830 | 00002973 | 8905                      | 	mov	word [di], ax
  4831 | 00002975 | 8B46F8                    | 	mov	ax, word [bp-8]
  4832 | 00002978 | B90600                    | 	mov	cx, 6
  4833 | 0000297B | F7E9                      | 	imul	cx
  4834 | 0000297D | 05[F23A]                  | 	add	ax, movePieceArray
  4835 | 00002980 | 89C6                      | 	mov	si, ax
  4836 | 00002982 | 83C604                    | 	add	si, 4
  4837 | 00002985 | C7040100                  | 	mov	word [si], 1
  4838 | 00002989 | 8B46F8                    | 	mov	ax, word [bp-8]
  4839 | 0000298C | B90600                    | 	mov	cx, 6
  4840 | 0000298F | F7E9                      | 	imul	cx
  4841 | 00002991 | 05[F23A]                  | 	add	ax, movePieceArray
  4842 | 00002994 | 89C6                      | 	mov	si, ax
  4843 | 00002996 | 83C602                    | 	add	si, 2
  4844 | 00002999 | C704[9908]                | 	mov	word [si], RotatePiece
  4845 | 0000299D | 8B46F8                    | 	mov	ax, word [bp-8]
  4846 | 000029A0 | B90600                    | 	mov	cx, 6
  4847 | 000029A3 | F7E9                      | 	imul	cx
  4848 | 000029A5 | 05[F23A]                  | 	add	ax, movePieceArray
  4849 | 000029A8 | 50                        | 	push	ax
  4850 | 000029A9 | FF36[3832]                | 	push	word [movePieceQueuePTR]
  4851 | 000029AD | E836EE                    | 	call	YKQPost
  4852 | 000029B0 | 83C404                    | 	add	sp, 4
  4853 |          |                           | L_lab8app_109:
  4854 | 000029B3 | EB60                      | 	jmp	L_lab8app_112
  4855 |          |                           | L_lab8app_111:
  4856 | 000029B5 | E8A8F4                    | 	call	getMovePieceQueueArrayIndex
  4857 | 000029B8 | 8946F8                    | 	mov	word [bp-8], ax
  4858 | 000029BB | 8B76FE                    | 	mov	si, word [bp-2]
  4859 | 000029BE | 8B46F8                    | 	mov	ax, word [bp-8]
  4860 | 000029C1 | B90600                    | 	mov	cx, 6
  4861 | 000029C4 | F7E9                      | 	imul	cx
  4862 | 000029C6 | 89C7                      | 	mov	di, ax
  4863 | 000029C8 | 81C7[F23A]                | 	add	di, movePieceArray
  4864 | 000029CC | 8B04                      | 	mov	ax, word [si]
  4865 | 000029CE | 8905                      | 	mov	word [di], ax
  4866 | 000029D0 | 8B46F8                    | 	mov	ax, word [bp-8]
  4867 | 000029D3 | B90600                    | 	mov	cx, 6
  4868 | 000029D6 | F7E9                      | 	imul	cx
  4869 | 000029D8 | 05[F23A]                  | 	add	ax, movePieceArray
  4870 | 000029DB | 89C6                      | 	mov	si, ax
  4871 | 000029DD | 83C604                    | 	add	si, 4
  4872 | 000029E0 | C7040100                  | 	mov	word [si], 1
  4873 | 000029E4 | 8B46F8                    | 	mov	ax, word [bp-8]
  4874 | 000029E7 | B90600                    | 	mov	cx, 6
  4875 | 000029EA | F7E9                      | 	imul	cx
  4876 | 000029EC | 05[F23A]                  | 	add	ax, movePieceArray
  4877 | 000029EF | 89C6                      | 	mov	si, ax
  4878 | 000029F1 | 83C602                    | 	add	si, 2
  4879 | 000029F4 | C704[8608]                | 	mov	word [si], SlidePiece
  4880 | 000029F8 | 8B46FA                    | 	mov	ax, word [bp-6]
  4881 | 000029FB | 40                        | 	inc	ax
  4882 | 000029FC | 8946FA                    | 	mov	word [bp-6], ax
  4883 | 000029FF | 8B46F8                    | 	mov	ax, word [bp-8]
  4884 | 00002A02 | B90600                    | 	mov	cx, 6
  4885 | 00002A05 | F7E9                      | 	imul	cx
  4886 | 00002A07 | 05[F23A]                  | 	add	ax, movePieceArray
  4887 | 00002A0A | 50                        | 	push	ax
  4888 | 00002A0B | FF36[3832]                | 	push	word [movePieceQueuePTR]
  4889 | 00002A0F | E8D4ED                    | 	call	YKQPost
  4890 | 00002A12 | 83C404                    | 	add	sp, 4
  4891 |          |                           | L_lab8app_112:
  4892 | 00002A15 | 8B46FC                    | 	mov	ax, word [bp-4]
  4893 | 00002A18 | 3B46FA                    | 	cmp	ax, word [bp-6]
  4894 | 00002A1B | 7F98                      | 	jg	L_lab8app_111
  4895 |          |                           | L_lab8app_113:
  4896 | 00002A1D | E90D02                    | 	jmp	L_lab8app_114
  4897 |          |                           | L_lab8app_103:
  4898 | 00002A20 | EB60                      | 	jmp	L_lab8app_116
  4899 |          |                           | L_lab8app_115:
  4900 | 00002A22 | E83BF4                    | 	call	getMovePieceQueueArrayIndex
  4901 | 00002A25 | 8946F8                    | 	mov	word [bp-8], ax
  4902 | 00002A28 | 8B76FE                    | 	mov	si, word [bp-2]
  4903 | 00002A2B | 8B46F8                    | 	mov	ax, word [bp-8]
  4904 | 00002A2E | B90600                    | 	mov	cx, 6
  4905 | 00002A31 | F7E9                      | 	imul	cx
  4906 | 00002A33 | 89C7                      | 	mov	di, ax
  4907 | 00002A35 | 81C7[F23A]                | 	add	di, movePieceArray
  4908 | 00002A39 | 8B04                      | 	mov	ax, word [si]
  4909 | 00002A3B | 8905                      | 	mov	word [di], ax
  4910 | 00002A3D | 8B46F8                    | 	mov	ax, word [bp-8]
  4911 | 00002A40 | B90600                    | 	mov	cx, 6
  4912 | 00002A43 | F7E9                      | 	imul	cx
  4913 | 00002A45 | 05[F23A]                  | 	add	ax, movePieceArray
  4914 | 00002A48 | 89C6                      | 	mov	si, ax
  4915 | 00002A4A | 83C604                    | 	add	si, 4
  4916 | 00002A4D | C7040100                  | 	mov	word [si], 1
  4917 | 00002A51 | 8B46F8                    | 	mov	ax, word [bp-8]
  4918 | 00002A54 | B90600                    | 	mov	cx, 6
  4919 | 00002A57 | F7E9                      | 	imul	cx
  4920 | 00002A59 | 05[F23A]                  | 	add	ax, movePieceArray
  4921 | 00002A5C | 89C6                      | 	mov	si, ax
  4922 | 00002A5E | 83C602                    | 	add	si, 2
  4923 | 00002A61 | C704[8608]                | 	mov	word [si], SlidePiece
  4924 | 00002A65 | 8B46FA                    | 	mov	ax, word [bp-6]
  4925 | 00002A68 | 40                        | 	inc	ax
  4926 | 00002A69 | 8946FA                    | 	mov	word [bp-6], ax
  4927 | 00002A6C | 8B46F8                    | 	mov	ax, word [bp-8]
  4928 | 00002A6F | B90600                    | 	mov	cx, 6
  4929 | 00002A72 | F7E9                      | 	imul	cx
  4930 | 00002A74 | 05[F23A]                  | 	add	ax, movePieceArray
  4931 | 00002A77 | 50                        | 	push	ax
  4932 | 00002A78 | FF36[3832]                | 	push	word [movePieceQueuePTR]
  4933 | 00002A7C | E867ED                    | 	call	YKQPost
  4934 | 00002A7F | 83C404                    | 	add	sp, 4
  4935 |          |                           | L_lab8app_116:
  4936 | 00002A82 | 8B46FC                    | 	mov	ax, word [bp-4]
  4937 | 00002A85 | 3B46FA                    | 	cmp	ax, word [bp-6]
  4938 | 00002A88 | 7F98                      | 	jg	L_lab8app_115
  4939 |          |                           | L_lab8app_117:
  4940 | 00002A8A | EB60                      | 	jmp	L_lab8app_119
  4941 |          |                           | L_lab8app_118:
  4942 | 00002A8C | E8D1F3                    | 	call	getMovePieceQueueArrayIndex
  4943 | 00002A8F | 8946F8                    | 	mov	word [bp-8], ax
  4944 | 00002A92 | 8B76FE                    | 	mov	si, word [bp-2]
  4945 | 00002A95 | 8B46F8                    | 	mov	ax, word [bp-8]
  4946 | 00002A98 | B90600                    | 	mov	cx, 6
  4947 | 00002A9B | F7E9                      | 	imul	cx
  4948 | 00002A9D | 89C7                      | 	mov	di, ax
  4949 | 00002A9F | 81C7[F23A]                | 	add	di, movePieceArray
  4950 | 00002AA3 | 8B04                      | 	mov	ax, word [si]
  4951 | 00002AA5 | 8905                      | 	mov	word [di], ax
  4952 | 00002AA7 | 8B46F8                    | 	mov	ax, word [bp-8]
  4953 | 00002AAA | B90600                    | 	mov	cx, 6
  4954 | 00002AAD | F7E9                      | 	imul	cx
  4955 | 00002AAF | 05[F23A]                  | 	add	ax, movePieceArray
  4956 | 00002AB2 | 89C6                      | 	mov	si, ax
  4957 | 00002AB4 | 83C604                    | 	add	si, 4
  4958 | 00002AB7 | C7040000                  | 	mov	word [si], 0
  4959 | 00002ABB | 8B46F8                    | 	mov	ax, word [bp-8]
  4960 | 00002ABE | B90600                    | 	mov	cx, 6
  4961 | 00002AC1 | F7E9                      | 	imul	cx
  4962 | 00002AC3 | 05[F23A]                  | 	add	ax, movePieceArray
  4963 | 00002AC6 | 89C6                      | 	mov	si, ax
  4964 | 00002AC8 | 83C602                    | 	add	si, 2
  4965 | 00002ACB | C704[8608]                | 	mov	word [si], SlidePiece
  4966 | 00002ACF | 8B46FA                    | 	mov	ax, word [bp-6]
  4967 | 00002AD2 | 48                        | 	dec	ax
  4968 | 00002AD3 | 8946FA                    | 	mov	word [bp-6], ax
  4969 | 00002AD6 | 8B46F8                    | 	mov	ax, word [bp-8]
  4970 | 00002AD9 | B90600                    | 	mov	cx, 6
  4971 | 00002ADC | F7E9                      | 	imul	cx
  4972 | 00002ADE | 05[F23A]                  | 	add	ax, movePieceArray
  4973 | 00002AE1 | 50                        | 	push	ax
  4974 | 00002AE2 | FF36[3832]                | 	push	word [movePieceQueuePTR]
  4975 | 00002AE6 | E8FDEC                    | 	call	YKQPost
  4976 | 00002AE9 | 83C404                    | 	add	sp, 4
  4977 |          |                           | L_lab8app_119:
  4978 | 00002AEC | 8B46FC                    | 	mov	ax, word [bp-4]
  4979 | 00002AEF | 3B46FA                    | 	cmp	ax, word [bp-6]
  4980 | 00002AF2 | 7C98                      | 	jl	L_lab8app_118
  4981 |          |                           | L_lab8app_120:
  4982 | 00002AF4 | 8B76FE                    | 	mov	si, word [bp-2]
  4983 | 00002AF7 | 83C604                    | 	add	si, 4
  4984 | 00002AFA | 833C01                    | 	cmp	word [si], 1
  4985 | 00002AFD | 7559                      | 	jne	L_lab8app_121
  4986 | 00002AFF | E85EF3                    | 	call	getMovePieceQueueArrayIndex
  4987 | 00002B02 | 8946F8                    | 	mov	word [bp-8], ax
  4988 | 00002B05 | 8B76FE                    | 	mov	si, word [bp-2]
  4989 | 00002B08 | 8B46F8                    | 	mov	ax, word [bp-8]
  4990 | 00002B0B | B90600                    | 	mov	cx, 6
  4991 | 00002B0E | F7E9                      | 	imul	cx
  4992 | 00002B10 | 89C7                      | 	mov	di, ax
  4993 | 00002B12 | 81C7[F23A]                | 	add	di, movePieceArray
  4994 | 00002B16 | 8B04                      | 	mov	ax, word [si]
  4995 | 00002B18 | 8905                      | 	mov	word [di], ax
  4996 | 00002B1A | 8B46F8                    | 	mov	ax, word [bp-8]
  4997 | 00002B1D | B90600                    | 	mov	cx, 6
  4998 | 00002B20 | F7E9                      | 	imul	cx
  4999 | 00002B22 | 05[F23A]                  | 	add	ax, movePieceArray
  5000 | 00002B25 | 89C6                      | 	mov	si, ax
  5001 | 00002B27 | 83C604                    | 	add	si, 4
  5002 | 00002B2A | C7040000                  | 	mov	word [si], 0
  5003 | 00002B2E | 8B46F8                    | 	mov	ax, word [bp-8]
  5004 | 00002B31 | B90600                    | 	mov	cx, 6
  5005 | 00002B34 | F7E9                      | 	imul	cx
  5006 | 00002B36 | 05[F23A]                  | 	add	ax, movePieceArray
  5007 | 00002B39 | 89C6                      | 	mov	si, ax
  5008 | 00002B3B | 83C602                    | 	add	si, 2
  5009 | 00002B3E | C704[9908]                | 	mov	word [si], RotatePiece
  5010 | 00002B42 | 8B46F8                    | 	mov	ax, word [bp-8]
  5011 | 00002B45 | B90600                    | 	mov	cx, 6
  5012 | 00002B48 | F7E9                      | 	imul	cx
  5013 | 00002B4A | 05[F23A]                  | 	add	ax, movePieceArray
  5014 | 00002B4D | 50                        | 	push	ax
  5015 | 00002B4E | FF36[3832]                | 	push	word [movePieceQueuePTR]
  5016 | 00002B52 | E891EC                    | 	call	YKQPost
  5017 | 00002B55 | 83C404                    | 	add	sp, 4
  5018 |          |                           | L_lab8app_121:
  5019 | 00002B58 | 8B76FE                    | 	mov	si, word [bp-2]
  5020 | 00002B5B | 83C604                    | 	add	si, 4
  5021 | 00002B5E | 8B04                      | 	mov	ax, word [si]
  5022 | 00002B60 | 85C0                      | 	test	ax, ax
  5023 | 00002B62 | 7559                      | 	jne	L_lab8app_122
  5024 | 00002B64 | E8F9F2                    | 	call	getMovePieceQueueArrayIndex
  5025 | 00002B67 | 8946F8                    | 	mov	word [bp-8], ax
  5026 | 00002B6A | 8B76FE                    | 	mov	si, word [bp-2]
  5027 | 00002B6D | 8B46F8                    | 	mov	ax, word [bp-8]
  5028 | 00002B70 | B90600                    | 	mov	cx, 6
  5029 | 00002B73 | F7E9                      | 	imul	cx
  5030 | 00002B75 | 89C7                      | 	mov	di, ax
  5031 | 00002B77 | 81C7[F23A]                | 	add	di, movePieceArray
  5032 | 00002B7B | 8B04                      | 	mov	ax, word [si]
  5033 | 00002B7D | 8905                      | 	mov	word [di], ax
  5034 | 00002B7F | 8B46F8                    | 	mov	ax, word [bp-8]
  5035 | 00002B82 | B90600                    | 	mov	cx, 6
  5036 | 00002B85 | F7E9                      | 	imul	cx
  5037 | 00002B87 | 05[F23A]                  | 	add	ax, movePieceArray
  5038 | 00002B8A | 89C6                      | 	mov	si, ax
  5039 | 00002B8C | 83C604                    | 	add	si, 4
  5040 | 00002B8F | C7040100                  | 	mov	word [si], 1
  5041 | 00002B93 | 8B46F8                    | 	mov	ax, word [bp-8]
  5042 | 00002B96 | B90600                    | 	mov	cx, 6
  5043 | 00002B99 | F7E9                      | 	imul	cx
  5044 | 00002B9B | 05[F23A]                  | 	add	ax, movePieceArray
  5045 | 00002B9E | 89C6                      | 	mov	si, ax
  5046 | 00002BA0 | 83C602                    | 	add	si, 2
  5047 | 00002BA3 | C704[9908]                | 	mov	word [si], RotatePiece
  5048 | 00002BA7 | 8B46F8                    | 	mov	ax, word [bp-8]
  5049 | 00002BAA | B90600                    | 	mov	cx, 6
  5050 | 00002BAD | F7E9                      | 	imul	cx
  5051 | 00002BAF | 05[F23A]                  | 	add	ax, movePieceArray
  5052 | 00002BB2 | 50                        | 	push	ax
  5053 | 00002BB3 | FF36[3832]                | 	push	word [movePieceQueuePTR]
  5054 | 00002BB7 | E82CEC                    | 	call	YKQPost
  5055 | 00002BBA | 83C404                    | 	add	sp, 4
  5056 |          |                           | L_lab8app_122:
  5057 | 00002BBD | 8B76FE                    | 	mov	si, word [bp-2]
  5058 | 00002BC0 | 83C604                    | 	add	si, 4
  5059 | 00002BC3 | 8B04                      | 	mov	ax, word [si]
  5060 | 00002BC5 | 85C0                      | 	test	ax, ax
  5061 | 00002BC7 | 740B                      | 	je	L_lab8app_124
  5062 | 00002BC9 | 8B76FE                    | 	mov	si, word [bp-2]
  5063 | 00002BCC | 83C604                    | 	add	si, 4
  5064 | 00002BCF | 833C03                    | 	cmp	word [si], 3
  5065 | 00002BD2 | 7559                      | 	jne	L_lab8app_123
  5066 |          |                           | L_lab8app_124:
  5067 | 00002BD4 | E889F2                    | 	call	getMovePieceQueueArrayIndex
  5068 | 00002BD7 | 8946F8                    | 	mov	word [bp-8], ax
  5069 | 00002BDA | 8B76FE                    | 	mov	si, word [bp-2]
  5070 | 00002BDD | 8B46F8                    | 	mov	ax, word [bp-8]
  5071 | 00002BE0 | B90600                    | 	mov	cx, 6
  5072 | 00002BE3 | F7E9                      | 	imul	cx
  5073 | 00002BE5 | 89C7                      | 	mov	di, ax
  5074 | 00002BE7 | 81C7[F23A]                | 	add	di, movePieceArray
  5075 | 00002BEB | 8B04                      | 	mov	ax, word [si]
  5076 | 00002BED | 8905                      | 	mov	word [di], ax
  5077 | 00002BEF | 8B46F8                    | 	mov	ax, word [bp-8]
  5078 | 00002BF2 | B90600                    | 	mov	cx, 6
  5079 | 00002BF5 | F7E9                      | 	imul	cx
  5080 | 00002BF7 | 05[F23A]                  | 	add	ax, movePieceArray
  5081 | 00002BFA | 89C6                      | 	mov	si, ax
  5082 | 00002BFC | 83C604                    | 	add	si, 4
  5083 | 00002BFF | C7040100                  | 	mov	word [si], 1
  5084 | 00002C03 | 8B46F8                    | 	mov	ax, word [bp-8]
  5085 | 00002C06 | B90600                    | 	mov	cx, 6
  5086 | 00002C09 | F7E9                      | 	imul	cx
  5087 | 00002C0B | 05[F23A]                  | 	add	ax, movePieceArray
  5088 | 00002C0E | 89C6                      | 	mov	si, ax
  5089 | 00002C10 | 83C602                    | 	add	si, 2
  5090 | 00002C13 | C704[9908]                | 	mov	word [si], RotatePiece
  5091 | 00002C17 | 8B46F8                    | 	mov	ax, word [bp-8]
  5092 | 00002C1A | B90600                    | 	mov	cx, 6
  5093 | 00002C1D | F7E9                      | 	imul	cx
  5094 | 00002C1F | 05[F23A]                  | 	add	ax, movePieceArray
  5095 | 00002C22 | 50                        | 	push	ax
  5096 | 00002C23 | FF36[3832]                | 	push	word [movePieceQueuePTR]
  5097 | 00002C27 | E8BCEB                    | 	call	YKQPost
  5098 | 00002C2A | 83C404                    | 	add	sp, 4
  5099 |          |                           | L_lab8app_123:
  5100 |          |                           | L_lab8app_114:
  5101 |          |                           | L_lab8app_98:
  5102 | 00002C2D | E9B304                    | 	jmp	L_lab8app_125
  5103 |          |                           | L_lab8app_72:
  5104 | 00002C30 | 8B46FC                    | 	mov	ax, word [bp-4]
  5105 | 00002C33 | 85C0                      | 	test	ax, ax
  5106 | 00002C35 | 7405                      | 	je	L_lab8app_126
  5107 | 00002C37 | B80500                    | 	mov	ax, 5
  5108 | 00002C3A | EB03                      | 	jmp	L_lab8app_127
  5109 |          |                           | L_lab8app_126:
  5110 | 00002C3C | B80200                    | 	mov	ax, 2
  5111 |          |                           | L_lab8app_127:
  5112 | 00002C3F | 8946FC                    | 	mov	word [bp-4], ax
  5113 | 00002C42 | 837EFC05                  | 	cmp	word [bp-4], 5
  5114 | 00002C46 | 7403E98B02                | 	jne	L_lab8app_128
  5115 | 00002C4B | 8B46FA                    | 	mov	ax, word [bp-6]
  5116 | 00002C4E | 85C0                      | 	test	ax, ax
  5117 | 00002C50 | 756D                      | 	jne	L_lab8app_129
  5118 | 00002C52 | 8B76FE                    | 	mov	si, word [bp-2]
  5119 | 00002C55 | 83C604                    | 	add	si, 4
  5120 | 00002C58 | 833C02                    | 	cmp	word [si], 2
  5121 | 00002C5B | 7462                      | 	je	L_lab8app_129
  5122 | 00002C5D | E800F2                    | 	call	getMovePieceQueueArrayIndex
  5123 | 00002C60 | 8946F8                    | 	mov	word [bp-8], ax
  5124 | 00002C63 | 8B76FE                    | 	mov	si, word [bp-2]
  5125 | 00002C66 | 8B46F8                    | 	mov	ax, word [bp-8]
  5126 | 00002C69 | B90600                    | 	mov	cx, 6
  5127 | 00002C6C | F7E9                      | 	imul	cx
  5128 | 00002C6E | 89C7                      | 	mov	di, ax
  5129 | 00002C70 | 81C7[F23A]                | 	add	di, movePieceArray
  5130 | 00002C74 | 8B04                      | 	mov	ax, word [si]
  5131 | 00002C76 | 8905                      | 	mov	word [di], ax
  5132 | 00002C78 | 8B46F8                    | 	mov	ax, word [bp-8]
  5133 | 00002C7B | B90600                    | 	mov	cx, 6
  5134 | 00002C7E | F7E9                      | 	imul	cx
  5135 | 00002C80 | 05[F23A]                  | 	add	ax, movePieceArray
  5136 | 00002C83 | 89C6                      | 	mov	si, ax
  5137 | 00002C85 | 83C604                    | 	add	si, 4
  5138 | 00002C88 | C7040100                  | 	mov	word [si], 1
  5139 | 00002C8C | 8B46F8                    | 	mov	ax, word [bp-8]
  5140 | 00002C8F | B90600                    | 	mov	cx, 6
  5141 | 00002C92 | F7E9                      | 	imul	cx
  5142 | 00002C94 | 05[F23A]                  | 	add	ax, movePieceArray
  5143 | 00002C97 | 89C6                      | 	mov	si, ax
  5144 | 00002C99 | 83C602                    | 	add	si, 2
  5145 | 00002C9C | C704[8608]                | 	mov	word [si], SlidePiece
  5146 | 00002CA0 | 8B46FA                    | 	mov	ax, word [bp-6]
  5147 | 00002CA3 | 40                        | 	inc	ax
  5148 | 00002CA4 | 8946FA                    | 	mov	word [bp-6], ax
  5149 | 00002CA7 | 8B46F8                    | 	mov	ax, word [bp-8]
  5150 | 00002CAA | B90600                    | 	mov	cx, 6
  5151 | 00002CAD | F7E9                      | 	imul	cx
  5152 | 00002CAF | 05[F23A]                  | 	add	ax, movePieceArray
  5153 | 00002CB2 | 50                        | 	push	ax
  5154 | 00002CB3 | FF36[3832]                | 	push	word [movePieceQueuePTR]
  5155 | 00002CB7 | E82CEB                    | 	call	YKQPost
  5156 | 00002CBA | 83C404                    | 	add	sp, 4
  5157 | 00002CBD | EB71                      | 	jmp	L_lab8app_130
  5158 |          |                           | L_lab8app_129:
  5159 | 00002CBF | 837EFA05                  | 	cmp	word [bp-6], 5
  5160 | 00002CC3 | 756B                      | 	jne	L_lab8app_131
  5161 | 00002CC5 | 8B76FE                    | 	mov	si, word [bp-2]
  5162 | 00002CC8 | 83C604                    | 	add	si, 4
  5163 | 00002CCB | 833C02                    | 	cmp	word [si], 2
  5164 | 00002CCE | 7460                      | 	je	L_lab8app_131
  5165 | 00002CD0 | E88DF1                    | 	call	getMovePieceQueueArrayIndex
  5166 | 00002CD3 | 8946F8                    | 	mov	word [bp-8], ax
  5167 | 00002CD6 | 8B76FE                    | 	mov	si, word [bp-2]
  5168 | 00002CD9 | 8B46F8                    | 	mov	ax, word [bp-8]
  5169 | 00002CDC | B90600                    | 	mov	cx, 6
  5170 | 00002CDF | F7E9                      | 	imul	cx
  5171 | 00002CE1 | 89C7                      | 	mov	di, ax
  5172 | 00002CE3 | 81C7[F23A]                | 	add	di, movePieceArray
  5173 | 00002CE7 | 8B04                      | 	mov	ax, word [si]
  5174 | 00002CE9 | 8905                      | 	mov	word [di], ax
  5175 | 00002CEB | 8B46F8                    | 	mov	ax, word [bp-8]
  5176 | 00002CEE | B90600                    | 	mov	cx, 6
  5177 | 00002CF1 | F7E9                      | 	imul	cx
  5178 | 00002CF3 | 05[F23A]                  | 	add	ax, movePieceArray
  5179 | 00002CF6 | 89C6                      | 	mov	si, ax
  5180 | 00002CF8 | 83C604                    | 	add	si, 4
  5181 | 00002CFB | C7040000                  | 	mov	word [si], 0
  5182 | 00002CFF | 8B46F8                    | 	mov	ax, word [bp-8]
  5183 | 00002D02 | B90600                    | 	mov	cx, 6
  5184 | 00002D05 | F7E9                      | 	imul	cx
  5185 | 00002D07 | 05[F23A]                  | 	add	ax, movePieceArray
  5186 | 00002D0A | 89C6                      | 	mov	si, ax
  5187 | 00002D0C | 83C602                    | 	add	si, 2
  5188 | 00002D0F | C704[8608]                | 	mov	word [si], SlidePiece
  5189 | 00002D13 | 8B46FA                    | 	mov	ax, word [bp-6]
  5190 | 00002D16 | 48                        | 	dec	ax
  5191 | 00002D17 | 8946FA                    | 	mov	word [bp-6], ax
  5192 | 00002D1A | 8B46F8                    | 	mov	ax, word [bp-8]
  5193 | 00002D1D | B90600                    | 	mov	cx, 6
  5194 | 00002D20 | F7E9                      | 	imul	cx
  5195 | 00002D22 | 05[F23A]                  | 	add	ax, movePieceArray
  5196 | 00002D25 | 50                        | 	push	ax
  5197 | 00002D26 | FF36[3832]                | 	push	word [movePieceQueuePTR]
  5198 | 00002D2A | E8B9EA                    | 	call	YKQPost
  5199 | 00002D2D | 83C404                    | 	add	sp, 4
  5200 |          |                           | L_lab8app_131:
  5201 |          |                           | L_lab8app_130:
  5202 | 00002D30 | 8B76FE                    | 	mov	si, word [bp-2]
  5203 | 00002D33 | 83C604                    | 	add	si, 4
  5204 | 00002D36 | 833C01                    | 	cmp	word [si], 1
  5205 | 00002D39 | 7559                      | 	jne	L_lab8app_132
  5206 | 00002D3B | E822F1                    | 	call	getMovePieceQueueArrayIndex
  5207 | 00002D3E | 8946F8                    | 	mov	word [bp-8], ax
  5208 | 00002D41 | 8B76FE                    | 	mov	si, word [bp-2]
  5209 | 00002D44 | 8B46F8                    | 	mov	ax, word [bp-8]
  5210 | 00002D47 | B90600                    | 	mov	cx, 6
  5211 | 00002D4A | F7E9                      | 	imul	cx
  5212 | 00002D4C | 89C7                      | 	mov	di, ax
  5213 | 00002D4E | 81C7[F23A]                | 	add	di, movePieceArray
  5214 | 00002D52 | 8B04                      | 	mov	ax, word [si]
  5215 | 00002D54 | 8905                      | 	mov	word [di], ax
  5216 | 00002D56 | 8B46F8                    | 	mov	ax, word [bp-8]
  5217 | 00002D59 | B90600                    | 	mov	cx, 6
  5218 | 00002D5C | F7E9                      | 	imul	cx
  5219 | 00002D5E | 05[F23A]                  | 	add	ax, movePieceArray
  5220 | 00002D61 | 89C6                      | 	mov	si, ax
  5221 | 00002D63 | 83C604                    | 	add	si, 4
  5222 | 00002D66 | C7040000                  | 	mov	word [si], 0
  5223 | 00002D6A | 8B46F8                    | 	mov	ax, word [bp-8]
  5224 | 00002D6D | B90600                    | 	mov	cx, 6
  5225 | 00002D70 | F7E9                      | 	imul	cx
  5226 | 00002D72 | 05[F23A]                  | 	add	ax, movePieceArray
  5227 | 00002D75 | 89C6                      | 	mov	si, ax
  5228 | 00002D77 | 83C602                    | 	add	si, 2
  5229 | 00002D7A | C704[9908]                | 	mov	word [si], RotatePiece
  5230 | 00002D7E | 8B46F8                    | 	mov	ax, word [bp-8]
  5231 | 00002D81 | B90600                    | 	mov	cx, 6
  5232 | 00002D84 | F7E9                      | 	imul	cx
  5233 | 00002D86 | 05[F23A]                  | 	add	ax, movePieceArray
  5234 | 00002D89 | 50                        | 	push	ax
  5235 | 00002D8A | FF36[3832]                | 	push	word [movePieceQueuePTR]
  5236 | 00002D8E | E855EA                    | 	call	YKQPost
  5237 | 00002D91 | 83C404                    | 	add	sp, 4
  5238 |          |                           | L_lab8app_132:
  5239 | 00002D94 | 8B76FE                    | 	mov	si, word [bp-2]
  5240 | 00002D97 | 83C604                    | 	add	si, 4
  5241 | 00002D9A | 8B04                      | 	mov	ax, word [si]
  5242 | 00002D9C | 85C0                      | 	test	ax, ax
  5243 | 00002D9E | 7559                      | 	jne	L_lab8app_133
  5244 | 00002DA0 | E8BDF0                    | 	call	getMovePieceQueueArrayIndex
  5245 | 00002DA3 | 8946F8                    | 	mov	word [bp-8], ax
  5246 | 00002DA6 | 8B76FE                    | 	mov	si, word [bp-2]
  5247 | 00002DA9 | 8B46F8                    | 	mov	ax, word [bp-8]
  5248 | 00002DAC | B90600                    | 	mov	cx, 6
  5249 | 00002DAF | F7E9                      | 	imul	cx
  5250 | 00002DB1 | 89C7                      | 	mov	di, ax
  5251 | 00002DB3 | 81C7[F23A]                | 	add	di, movePieceArray
  5252 | 00002DB7 | 8B04                      | 	mov	ax, word [si]
  5253 | 00002DB9 | 8905                      | 	mov	word [di], ax
  5254 | 00002DBB | 8B46F8                    | 	mov	ax, word [bp-8]
  5255 | 00002DBE | B90600                    | 	mov	cx, 6
  5256 | 00002DC1 | F7E9                      | 	imul	cx
  5257 | 00002DC3 | 05[F23A]                  | 	add	ax, movePieceArray
  5258 | 00002DC6 | 89C6                      | 	mov	si, ax
  5259 | 00002DC8 | 83C604                    | 	add	si, 4
  5260 | 00002DCB | C7040100                  | 	mov	word [si], 1
  5261 | 00002DCF | 8B46F8                    | 	mov	ax, word [bp-8]
  5262 | 00002DD2 | B90600                    | 	mov	cx, 6
  5263 | 00002DD5 | F7E9                      | 	imul	cx
  5264 | 00002DD7 | 05[F23A]                  | 	add	ax, movePieceArray
  5265 | 00002DDA | 89C6                      | 	mov	si, ax
  5266 | 00002DDC | 83C602                    | 	add	si, 2
  5267 | 00002DDF | C704[9908]                | 	mov	word [si], RotatePiece
  5268 | 00002DE3 | 8B46F8                    | 	mov	ax, word [bp-8]
  5269 | 00002DE6 | B90600                    | 	mov	cx, 6
  5270 | 00002DE9 | F7E9                      | 	imul	cx
  5271 | 00002DEB | 05[F23A]                  | 	add	ax, movePieceArray
  5272 | 00002DEE | 50                        | 	push	ax
  5273 | 00002DEF | FF36[3832]                | 	push	word [movePieceQueuePTR]
  5274 | 00002DF3 | E8F0E9                    | 	call	YKQPost
  5275 | 00002DF6 | 83C404                    | 	add	sp, 4
  5276 |          |                           | L_lab8app_133:
  5277 | 00002DF9 | 8B76FE                    | 	mov	si, word [bp-2]
  5278 | 00002DFC | 83C604                    | 	add	si, 4
  5279 | 00002DFF | 8B04                      | 	mov	ax, word [si]
  5280 | 00002E01 | 85C0                      | 	test	ax, ax
  5281 | 00002E03 | 740B                      | 	je	L_lab8app_135
  5282 | 00002E05 | 8B76FE                    | 	mov	si, word [bp-2]
  5283 | 00002E08 | 83C604                    | 	add	si, 4
  5284 | 00002E0B | 833C03                    | 	cmp	word [si], 3
  5285 | 00002E0E | 7559                      | 	jne	L_lab8app_134
  5286 |          |                           | L_lab8app_135:
  5287 | 00002E10 | E84DF0                    | 	call	getMovePieceQueueArrayIndex
  5288 | 00002E13 | 8946F8                    | 	mov	word [bp-8], ax
  5289 | 00002E16 | 8B76FE                    | 	mov	si, word [bp-2]
  5290 | 00002E19 | 8B46F8                    | 	mov	ax, word [bp-8]
  5291 | 00002E1C | B90600                    | 	mov	cx, 6
  5292 | 00002E1F | F7E9                      | 	imul	cx
  5293 | 00002E21 | 89C7                      | 	mov	di, ax
  5294 | 00002E23 | 81C7[F23A]                | 	add	di, movePieceArray
  5295 | 00002E27 | 8B04                      | 	mov	ax, word [si]
  5296 | 00002E29 | 8905                      | 	mov	word [di], ax
  5297 | 00002E2B | 8B46F8                    | 	mov	ax, word [bp-8]
  5298 | 00002E2E | B90600                    | 	mov	cx, 6
  5299 | 00002E31 | F7E9                      | 	imul	cx
  5300 | 00002E33 | 05[F23A]                  | 	add	ax, movePieceArray
  5301 | 00002E36 | 89C6                      | 	mov	si, ax
  5302 | 00002E38 | 83C604                    | 	add	si, 4
  5303 | 00002E3B | C7040100                  | 	mov	word [si], 1
  5304 | 00002E3F | 8B46F8                    | 	mov	ax, word [bp-8]
  5305 | 00002E42 | B90600                    | 	mov	cx, 6
  5306 | 00002E45 | F7E9                      | 	imul	cx
  5307 | 00002E47 | 05[F23A]                  | 	add	ax, movePieceArray
  5308 | 00002E4A | 89C6                      | 	mov	si, ax
  5309 | 00002E4C | 83C602                    | 	add	si, 2
  5310 | 00002E4F | C704[9908]                | 	mov	word [si], RotatePiece
  5311 | 00002E53 | 8B46F8                    | 	mov	ax, word [bp-8]
  5312 | 00002E56 | B90600                    | 	mov	cx, 6
  5313 | 00002E59 | F7E9                      | 	imul	cx
  5314 | 00002E5B | 05[F23A]                  | 	add	ax, movePieceArray
  5315 | 00002E5E | 50                        | 	push	ax
  5316 | 00002E5F | FF36[3832]                | 	push	word [movePieceQueuePTR]
  5317 | 00002E63 | E880E9                    | 	call	YKQPost
  5318 | 00002E66 | 83C404                    | 	add	sp, 4
  5319 |          |                           | L_lab8app_134:
  5320 | 00002E69 | EB60                      | 	jmp	L_lab8app_137
  5321 |          |                           | L_lab8app_136:
  5322 | 00002E6B | E8F2EF                    | 	call	getMovePieceQueueArrayIndex
  5323 | 00002E6E | 8946F8                    | 	mov	word [bp-8], ax
  5324 | 00002E71 | 8B76FE                    | 	mov	si, word [bp-2]
  5325 | 00002E74 | 8B46F8                    | 	mov	ax, word [bp-8]
  5326 | 00002E77 | B90600                    | 	mov	cx, 6
  5327 | 00002E7A | F7E9                      | 	imul	cx
  5328 | 00002E7C | 89C7                      | 	mov	di, ax
  5329 | 00002E7E | 81C7[F23A]                | 	add	di, movePieceArray
  5330 | 00002E82 | 8B04                      | 	mov	ax, word [si]
  5331 | 00002E84 | 8905                      | 	mov	word [di], ax
  5332 | 00002E86 | 8B46F8                    | 	mov	ax, word [bp-8]
  5333 | 00002E89 | B90600                    | 	mov	cx, 6
  5334 | 00002E8C | F7E9                      | 	imul	cx
  5335 | 00002E8E | 05[F23A]                  | 	add	ax, movePieceArray
  5336 | 00002E91 | 89C6                      | 	mov	si, ax
  5337 | 00002E93 | 83C604                    | 	add	si, 4
  5338 | 00002E96 | C7040100                  | 	mov	word [si], 1
  5339 | 00002E9A | 8B46F8                    | 	mov	ax, word [bp-8]
  5340 | 00002E9D | B90600                    | 	mov	cx, 6
  5341 | 00002EA0 | F7E9                      | 	imul	cx
  5342 | 00002EA2 | 05[F23A]                  | 	add	ax, movePieceArray
  5343 | 00002EA5 | 89C6                      | 	mov	si, ax
  5344 | 00002EA7 | 83C602                    | 	add	si, 2
  5345 | 00002EAA | C704[8608]                | 	mov	word [si], SlidePiece
  5346 | 00002EAE | 8B46FA                    | 	mov	ax, word [bp-6]
  5347 | 00002EB1 | 40                        | 	inc	ax
  5348 | 00002EB2 | 8946FA                    | 	mov	word [bp-6], ax
  5349 | 00002EB5 | 8B46F8                    | 	mov	ax, word [bp-8]
  5350 | 00002EB8 | B90600                    | 	mov	cx, 6
  5351 | 00002EBB | F7E9                      | 	imul	cx
  5352 | 00002EBD | 05[F23A]                  | 	add	ax, movePieceArray
  5353 | 00002EC0 | 50                        | 	push	ax
  5354 | 00002EC1 | FF36[3832]                | 	push	word [movePieceQueuePTR]
  5355 | 00002EC5 | E81EE9                    | 	call	YKQPost
  5356 | 00002EC8 | 83C404                    | 	add	sp, 4
  5357 |          |                           | L_lab8app_137:
  5358 | 00002ECB | 8B46FC                    | 	mov	ax, word [bp-4]
  5359 | 00002ECE | 3B46FA                    | 	cmp	ax, word [bp-6]
  5360 | 00002ED1 | 7F98                      | 	jg	L_lab8app_136
  5361 |          |                           | L_lab8app_138:
  5362 | 00002ED3 | E90D02                    | 	jmp	L_lab8app_139
  5363 |          |                           | L_lab8app_128:
  5364 | 00002ED6 | EB60                      | 	jmp	L_lab8app_141
  5365 |          |                           | L_lab8app_140:
  5366 | 00002ED8 | E885EF                    | 	call	getMovePieceQueueArrayIndex
  5367 | 00002EDB | 8946F8                    | 	mov	word [bp-8], ax
  5368 | 00002EDE | 8B76FE                    | 	mov	si, word [bp-2]
  5369 | 00002EE1 | 8B46F8                    | 	mov	ax, word [bp-8]
  5370 | 00002EE4 | B90600                    | 	mov	cx, 6
  5371 | 00002EE7 | F7E9                      | 	imul	cx
  5372 | 00002EE9 | 89C7                      | 	mov	di, ax
  5373 | 00002EEB | 81C7[F23A]                | 	add	di, movePieceArray
  5374 | 00002EEF | 8B04                      | 	mov	ax, word [si]
  5375 | 00002EF1 | 8905                      | 	mov	word [di], ax
  5376 | 00002EF3 | 8B46F8                    | 	mov	ax, word [bp-8]
  5377 | 00002EF6 | B90600                    | 	mov	cx, 6
  5378 | 00002EF9 | F7E9                      | 	imul	cx
  5379 | 00002EFB | 05[F23A]                  | 	add	ax, movePieceArray
  5380 | 00002EFE | 89C6                      | 	mov	si, ax
  5381 | 00002F00 | 83C604                    | 	add	si, 4
  5382 | 00002F03 | C7040100                  | 	mov	word [si], 1
  5383 | 00002F07 | 8B46F8                    | 	mov	ax, word [bp-8]
  5384 | 00002F0A | B90600                    | 	mov	cx, 6
  5385 | 00002F0D | F7E9                      | 	imul	cx
  5386 | 00002F0F | 05[F23A]                  | 	add	ax, movePieceArray
  5387 | 00002F12 | 89C6                      | 	mov	si, ax
  5388 | 00002F14 | 83C602                    | 	add	si, 2
  5389 | 00002F17 | C704[8608]                | 	mov	word [si], SlidePiece
  5390 | 00002F1B | 8B46FA                    | 	mov	ax, word [bp-6]
  5391 | 00002F1E | 40                        | 	inc	ax
  5392 | 00002F1F | 8946FA                    | 	mov	word [bp-6], ax
  5393 | 00002F22 | 8B46F8                    | 	mov	ax, word [bp-8]
  5394 | 00002F25 | B90600                    | 	mov	cx, 6
  5395 | 00002F28 | F7E9                      | 	imul	cx
  5396 | 00002F2A | 05[F23A]                  | 	add	ax, movePieceArray
  5397 | 00002F2D | 50                        | 	push	ax
  5398 | 00002F2E | FF36[3832]                | 	push	word [movePieceQueuePTR]
  5399 | 00002F32 | E8B1E8                    | 	call	YKQPost
  5400 | 00002F35 | 83C404                    | 	add	sp, 4
  5401 |          |                           | L_lab8app_141:
  5402 | 00002F38 | 8B46FC                    | 	mov	ax, word [bp-4]
  5403 | 00002F3B | 3B46FA                    | 	cmp	ax, word [bp-6]
  5404 | 00002F3E | 7F98                      | 	jg	L_lab8app_140
  5405 |          |                           | L_lab8app_142:
  5406 | 00002F40 | EB60                      | 	jmp	L_lab8app_144
  5407 |          |                           | L_lab8app_143:
  5408 | 00002F42 | E81BEF                    | 	call	getMovePieceQueueArrayIndex
  5409 | 00002F45 | 8946F8                    | 	mov	word [bp-8], ax
  5410 | 00002F48 | 8B76FE                    | 	mov	si, word [bp-2]
  5411 | 00002F4B | 8B46F8                    | 	mov	ax, word [bp-8]
  5412 | 00002F4E | B90600                    | 	mov	cx, 6
  5413 | 00002F51 | F7E9                      | 	imul	cx
  5414 | 00002F53 | 89C7                      | 	mov	di, ax
  5415 | 00002F55 | 81C7[F23A]                | 	add	di, movePieceArray
  5416 | 00002F59 | 8B04                      | 	mov	ax, word [si]
  5417 | 00002F5B | 8905                      | 	mov	word [di], ax
  5418 | 00002F5D | 8B46F8                    | 	mov	ax, word [bp-8]
  5419 | 00002F60 | B90600                    | 	mov	cx, 6
  5420 | 00002F63 | F7E9                      | 	imul	cx
  5421 | 00002F65 | 05[F23A]                  | 	add	ax, movePieceArray
  5422 | 00002F68 | 89C6                      | 	mov	si, ax
  5423 | 00002F6A | 83C604                    | 	add	si, 4
  5424 | 00002F6D | C7040000                  | 	mov	word [si], 0
  5425 | 00002F71 | 8B46F8                    | 	mov	ax, word [bp-8]
  5426 | 00002F74 | B90600                    | 	mov	cx, 6
  5427 | 00002F77 | F7E9                      | 	imul	cx
  5428 | 00002F79 | 05[F23A]                  | 	add	ax, movePieceArray
  5429 | 00002F7C | 89C6                      | 	mov	si, ax
  5430 | 00002F7E | 83C602                    | 	add	si, 2
  5431 | 00002F81 | C704[8608]                | 	mov	word [si], SlidePiece
  5432 | 00002F85 | 8B46FA                    | 	mov	ax, word [bp-6]
  5433 | 00002F88 | 48                        | 	dec	ax
  5434 | 00002F89 | 8946FA                    | 	mov	word [bp-6], ax
  5435 | 00002F8C | 8B46F8                    | 	mov	ax, word [bp-8]
  5436 | 00002F8F | B90600                    | 	mov	cx, 6
  5437 | 00002F92 | F7E9                      | 	imul	cx
  5438 | 00002F94 | 05[F23A]                  | 	add	ax, movePieceArray
  5439 | 00002F97 | 50                        | 	push	ax
  5440 | 00002F98 | FF36[3832]                | 	push	word [movePieceQueuePTR]
  5441 | 00002F9C | E847E8                    | 	call	YKQPost
  5442 | 00002F9F | 83C404                    | 	add	sp, 4
  5443 |          |                           | L_lab8app_144:
  5444 | 00002FA2 | 8B46FC                    | 	mov	ax, word [bp-4]
  5445 | 00002FA5 | 3B46FA                    | 	cmp	ax, word [bp-6]
  5446 | 00002FA8 | 7C98                      | 	jl	L_lab8app_143
  5447 |          |                           | L_lab8app_145:
  5448 | 00002FAA | 8B76FE                    | 	mov	si, word [bp-2]
  5449 | 00002FAD | 83C604                    | 	add	si, 4
  5450 | 00002FB0 | 833C01                    | 	cmp	word [si], 1
  5451 | 00002FB3 | 7559                      | 	jne	L_lab8app_146
  5452 | 00002FB5 | E8A8EE                    | 	call	getMovePieceQueueArrayIndex
  5453 | 00002FB8 | 8946F8                    | 	mov	word [bp-8], ax
  5454 | 00002FBB | 8B76FE                    | 	mov	si, word [bp-2]
  5455 | 00002FBE | 8B46F8                    | 	mov	ax, word [bp-8]
  5456 | 00002FC1 | B90600                    | 	mov	cx, 6
  5457 | 00002FC4 | F7E9                      | 	imul	cx
  5458 | 00002FC6 | 89C7                      | 	mov	di, ax
  5459 | 00002FC8 | 81C7[F23A]                | 	add	di, movePieceArray
  5460 | 00002FCC | 8B04                      | 	mov	ax, word [si]
  5461 | 00002FCE | 8905                      | 	mov	word [di], ax
  5462 | 00002FD0 | 8B46F8                    | 	mov	ax, word [bp-8]
  5463 | 00002FD3 | B90600                    | 	mov	cx, 6
  5464 | 00002FD6 | F7E9                      | 	imul	cx
  5465 | 00002FD8 | 05[F23A]                  | 	add	ax, movePieceArray
  5466 | 00002FDB | 89C6                      | 	mov	si, ax
  5467 | 00002FDD | 83C604                    | 	add	si, 4
  5468 | 00002FE0 | C7040000                  | 	mov	word [si], 0
  5469 | 00002FE4 | 8B46F8                    | 	mov	ax, word [bp-8]
  5470 | 00002FE7 | B90600                    | 	mov	cx, 6
  5471 | 00002FEA | F7E9                      | 	imul	cx
  5472 | 00002FEC | 05[F23A]                  | 	add	ax, movePieceArray
  5473 | 00002FEF | 89C6                      | 	mov	si, ax
  5474 | 00002FF1 | 83C602                    | 	add	si, 2
  5475 | 00002FF4 | C704[9908]                | 	mov	word [si], RotatePiece
  5476 | 00002FF8 | 8B46F8                    | 	mov	ax, word [bp-8]
  5477 | 00002FFB | B90600                    | 	mov	cx, 6
  5478 | 00002FFE | F7E9                      | 	imul	cx
  5479 | 00003000 | 05[F23A]                  | 	add	ax, movePieceArray
  5480 | 00003003 | 50                        | 	push	ax
  5481 | 00003004 | FF36[3832]                | 	push	word [movePieceQueuePTR]
  5482 | 00003008 | E8DBE7                    | 	call	YKQPost
  5483 | 0000300B | 83C404                    | 	add	sp, 4
  5484 |          |                           | L_lab8app_146:
  5485 | 0000300E | 8B76FE                    | 	mov	si, word [bp-2]
  5486 | 00003011 | 83C604                    | 	add	si, 4
  5487 | 00003014 | 8B04                      | 	mov	ax, word [si]
  5488 | 00003016 | 85C0                      | 	test	ax, ax
  5489 | 00003018 | 7559                      | 	jne	L_lab8app_147
  5490 | 0000301A | E843EE                    | 	call	getMovePieceQueueArrayIndex
  5491 | 0000301D | 8946F8                    | 	mov	word [bp-8], ax
  5492 | 00003020 | 8B76FE                    | 	mov	si, word [bp-2]
  5493 | 00003023 | 8B46F8                    | 	mov	ax, word [bp-8]
  5494 | 00003026 | B90600                    | 	mov	cx, 6
  5495 | 00003029 | F7E9                      | 	imul	cx
  5496 | 0000302B | 89C7                      | 	mov	di, ax
  5497 | 0000302D | 81C7[F23A]                | 	add	di, movePieceArray
  5498 | 00003031 | 8B04                      | 	mov	ax, word [si]
  5499 | 00003033 | 8905                      | 	mov	word [di], ax
  5500 | 00003035 | 8B46F8                    | 	mov	ax, word [bp-8]
  5501 | 00003038 | B90600                    | 	mov	cx, 6
  5502 | 0000303B | F7E9                      | 	imul	cx
  5503 | 0000303D | 05[F23A]                  | 	add	ax, movePieceArray
  5504 | 00003040 | 89C6                      | 	mov	si, ax
  5505 | 00003042 | 83C604                    | 	add	si, 4
  5506 | 00003045 | C7040100                  | 	mov	word [si], 1
  5507 | 00003049 | 8B46F8                    | 	mov	ax, word [bp-8]
  5508 | 0000304C | B90600                    | 	mov	cx, 6
  5509 | 0000304F | F7E9                      | 	imul	cx
  5510 | 00003051 | 05[F23A]                  | 	add	ax, movePieceArray
  5511 | 00003054 | 89C6                      | 	mov	si, ax
  5512 | 00003056 | 83C602                    | 	add	si, 2
  5513 | 00003059 | C704[9908]                | 	mov	word [si], RotatePiece
  5514 | 0000305D | 8B46F8                    | 	mov	ax, word [bp-8]
  5515 | 00003060 | B90600                    | 	mov	cx, 6
  5516 | 00003063 | F7E9                      | 	imul	cx
  5517 | 00003065 | 05[F23A]                  | 	add	ax, movePieceArray
  5518 | 00003068 | 50                        | 	push	ax
  5519 | 00003069 | FF36[3832]                | 	push	word [movePieceQueuePTR]
  5520 | 0000306D | E876E7                    | 	call	YKQPost
  5521 | 00003070 | 83C404                    | 	add	sp, 4
  5522 |          |                           | L_lab8app_147:
  5523 | 00003073 | 8B76FE                    | 	mov	si, word [bp-2]
  5524 | 00003076 | 83C604                    | 	add	si, 4
  5525 | 00003079 | 8B04                      | 	mov	ax, word [si]
  5526 | 0000307B | 85C0                      | 	test	ax, ax
  5527 | 0000307D | 740B                      | 	je	L_lab8app_149
  5528 | 0000307F | 8B76FE                    | 	mov	si, word [bp-2]
  5529 | 00003082 | 83C604                    | 	add	si, 4
  5530 | 00003085 | 833C03                    | 	cmp	word [si], 3
  5531 | 00003088 | 7559                      | 	jne	L_lab8app_148
  5532 |          |                           | L_lab8app_149:
  5533 | 0000308A | E8D3ED                    | 	call	getMovePieceQueueArrayIndex
  5534 | 0000308D | 8946F8                    | 	mov	word [bp-8], ax
  5535 | 00003090 | 8B76FE                    | 	mov	si, word [bp-2]
  5536 | 00003093 | 8B46F8                    | 	mov	ax, word [bp-8]
  5537 | 00003096 | B90600                    | 	mov	cx, 6
  5538 | 00003099 | F7E9                      | 	imul	cx
  5539 | 0000309B | 89C7                      | 	mov	di, ax
  5540 | 0000309D | 81C7[F23A]                | 	add	di, movePieceArray
  5541 | 000030A1 | 8B04                      | 	mov	ax, word [si]
  5542 | 000030A3 | 8905                      | 	mov	word [di], ax
  5543 | 000030A5 | 8B46F8                    | 	mov	ax, word [bp-8]
  5544 | 000030A8 | B90600                    | 	mov	cx, 6
  5545 | 000030AB | F7E9                      | 	imul	cx
  5546 | 000030AD | 05[F23A]                  | 	add	ax, movePieceArray
  5547 | 000030B0 | 89C6                      | 	mov	si, ax
  5548 | 000030B2 | 83C604                    | 	add	si, 4
  5549 | 000030B5 | C7040100                  | 	mov	word [si], 1
  5550 | 000030B9 | 8B46F8                    | 	mov	ax, word [bp-8]
  5551 | 000030BC | B90600                    | 	mov	cx, 6
  5552 | 000030BF | F7E9                      | 	imul	cx
  5553 | 000030C1 | 05[F23A]                  | 	add	ax, movePieceArray
  5554 | 000030C4 | 89C6                      | 	mov	si, ax
  5555 | 000030C6 | 83C602                    | 	add	si, 2
  5556 | 000030C9 | C704[9908]                | 	mov	word [si], RotatePiece
  5557 | 000030CD | 8B46F8                    | 	mov	ax, word [bp-8]
  5558 | 000030D0 | B90600                    | 	mov	cx, 6
  5559 | 000030D3 | F7E9                      | 	imul	cx
  5560 | 000030D5 | 05[F23A]                  | 	add	ax, movePieceArray
  5561 | 000030D8 | 50                        | 	push	ax
  5562 | 000030D9 | FF36[3832]                | 	push	word [movePieceQueuePTR]
  5563 | 000030DD | E806E7                    | 	call	YKQPost
  5564 | 000030E0 | 83C404                    | 	add	sp, 4
  5565 |          |                           | L_lab8app_148:
  5566 |          |                           | L_lab8app_139:
  5567 |          |                           | L_lab8app_125:
  5568 |          |                           | L_lab8app_71:
  5569 |          |                           | L_lab8app_56:
  5570 | 000030E3 | E9CFEF                    | 	jmp	L_lab8app_55
  5571 |          |                           | L_lab8app_57:
  5572 | 000030E6 | 89EC                      | 	mov	sp, bp
  5573 | 000030E8 | 5D                        | 	pop	bp
  5574 | 000030E9 | C3                        | 	ret
  5575 |          |                           | L_lab8app_53:
  5576 | 000030EA | 55                        | 	push	bp
  5577 | 000030EB | 89E5                      | 	mov	bp, sp
  5578 | 000030ED | 83EC0E                    | 	sub	sp, 14
  5579 | 000030F0 | E9B2EF                    | 	jmp	L_lab8app_54
  5580 |          |                           | L_lab8app_153:
  5581 | 000030F3 | 676F74206120706965-       | 	DB	"got a piece. ID ",0
  5582 | 000030FC | 63652E2049442000          | ...
  5583 |          |                           | L_lab8app_152:
  5584 | 00003104 | 7069656365206D6F76-       | 	DB	"piece move event. getting move now",0xA,0
  5585 | 0000310D | 65206576656E742E20-       | ...
  5586 | 00003116 | 67657474696E67206D-       | ...
  5587 | 0000311F | 6F7665206E6F770A00        | ...
  5588 |          |                           | L_lab8app_151:
  5589 | 00003128 | 6D6F76655069656365-       | 	DB	"movePieceTask moveing!",0xA,0
  5590 | 00003131 | 5461736B206D6F7665-       | ...
  5591 | 0000313A | 696E67210A00              | ...
  5592 |          |                           | 	ALIGN	2
  5593 |          |                           | movePieceTask:
  5594 | 00003140 | EB7F                      | 	jmp	L_lab8app_154
  5595 |          |                           | L_lab8app_155:
  5596 | 00003142 | B8[2831]                  | 	mov	ax, L_lab8app_151
  5597 | 00003145 | 50                        | 	push	ax
  5598 | 00003146 | E8DFD2                    | 	call	printString
  5599 | 00003149 | 83C402                    | 	add	sp, 2
  5600 | 0000314C | EB6D                      | 	jmp	L_lab8app_157
  5601 |          |                           | L_lab8app_156:
  5602 | 0000314E | B80100                    | 	mov	ax, 1
  5603 | 00003151 | 50                        | 	push	ax
  5604 | 00003152 | B80100                    | 	mov	ax, 1
  5605 | 00003155 | 50                        | 	push	ax
  5606 | 00003156 | FF36[3C32]                | 	push	word [pieceMoveEvent]
  5607 | 0000315A | E8EDDF                    | 	call	YKEventPend
  5608 | 0000315D | 83C406                    | 	add	sp, 6
  5609 | 00003160 | B80100                    | 	mov	ax, 1
  5610 | 00003163 | 50                        | 	push	ax
  5611 | 00003164 | FF36[3C32]                | 	push	word [pieceMoveEvent]
  5612 | 00003168 | E887E2                    | 	call	YKEventReset
  5613 | 0000316B | 83C404                    | 	add	sp, 4
  5614 | 0000316E | B8[0431]                  | 	mov	ax, L_lab8app_152
  5615 | 00003171 | 50                        | 	push	ax
  5616 | 00003172 | E8B3D2                    | 	call	printString
  5617 | 00003175 | 83C402                    | 	add	sp, 2
  5618 | 00003178 | FF36[3832]                | 	push	word [movePieceQueuePTR]
  5619 | 0000317C | E885E5                    | 	call	YKQPend
  5620 | 0000317F | 83C402                    | 	add	sp, 2
  5621 | 00003182 | 8946FE                    | 	mov	word [bp-2], ax
  5622 | 00003185 | B8[F330]                  | 	mov	ax, L_lab8app_153
  5623 | 00003188 | 50                        | 	push	ax
  5624 | 00003189 | E89CD2                    | 	call	printString
  5625 | 0000318C | 83C402                    | 	add	sp, 2
  5626 | 0000318F | 8B76FE                    | 	mov	si, word [bp-2]
  5627 | 00003192 | FF34                      | 	push	word [si]
  5628 | 00003194 | E8B5D2                    | 	call	printInt
  5629 | 00003197 | 83C402                    | 	add	sp, 2
  5630 | 0000319A | B8[5F1F]                  | 	mov	ax, (L_lab8app_30+35)
  5631 | 0000319D | 50                        | 	push	ax
  5632 | 0000319E | E887D2                    | 	call	printString
  5633 | 000031A1 | 83C402                    | 	add	sp, 2
  5634 | 000031A4 | 8B76FE                    | 	mov	si, word [bp-2]
  5635 | 000031A7 | 83C604                    | 	add	si, 4
  5636 | 000031AA | FF34                      | 	push	word [si]
  5637 | 000031AC | 8B76FE                    | 	mov	si, word [bp-2]
  5638 | 000031AF | FF34                      | 	push	word [si]
  5639 | 000031B1 | 83C602                    | 	add	si, 2
  5640 | 000031B4 | 8B34                      | 	mov	si, word [si]
  5641 | 000031B6 | FFD6                      | 	call	si
  5642 | 000031B8 | 83C404                    | 	add	sp, 4
  5643 |          |                           | L_lab8app_157:
  5644 | 000031BB | EB91                      | 	jmp	L_lab8app_156
  5645 |          |                           | L_lab8app_158:
  5646 | 000031BD | 89EC                      | 	mov	sp, bp
  5647 | 000031BF | 5D                        | 	pop	bp
  5648 | 000031C0 | C3                        | 	ret
  5649 |          |                           | L_lab8app_154:
  5650 | 000031C1 | 55                        | 	push	bp
  5651 | 000031C2 | 89E5                      | 	mov	bp, sp
  5652 | 000031C4 | 51                        | 	push	cx
  5653 | 000031C5 | E97AFF                    | 	jmp	L_lab8app_155
  5654 |          |                           | 	ALIGN	2
  5655 |          |                           | main:
  5656 | 000031C8 | EB68                      | 	jmp	L_lab8app_160
  5657 |          |                           | L_lab8app_161:
  5658 | 000031CA | E8B5D9                    | 	call	YKInitialize
  5659 | 000031CD | B80A00                    | 	mov	ax, 10
  5660 | 000031D0 | 50                        | 	push	ax
  5661 | 000031D1 | B8[DE3A]                  | 	mov	ax, newPieceQueue
  5662 | 000031D4 | 50                        | 	push	ax
  5663 | 000031D5 | E88EE4                    | 	call	YKQCreate
  5664 | 000031D8 | 83C404                    | 	add	sp, 4
  5665 | 000031DB | A3[3A32]                  | 	mov	word [newPieceQueuePTR], ax
  5666 | 000031DE | B81400                    | 	mov	ax, 20
  5667 | 000031E1 | 50                        | 	push	ax
  5668 | 000031E2 | B8[E43B]                  | 	mov	ax, movePieceQueue
  5669 | 000031E5 | 50                        | 	push	ax
  5670 | 000031E6 | E87DE4                    | 	call	YKQCreate
  5671 | 000031E9 | 83C404                    | 	add	sp, 4
  5672 | 000031EC | A3[3832]                  | 	mov	word [movePieceQueuePTR], ax
  5673 | 000031EF | B80100                    | 	mov	ax, 1
  5674 | 000031F2 | 50                        | 	push	ax
  5675 | 000031F3 | E8F8DE                    | 	call	YKEventCreate
  5676 | 000031F6 | 83C402                    | 	add	sp, 2
  5677 | 000031F9 | A3[3C32]                  | 	mov	word [pieceMoveEvent], ax
  5678 | 000031FC | B8BF00                    | 	mov	ax, 191
  5679 | 000031FF | 31D2                      | 	xor	dx, dx
  5680 | 00003201 | 52                        | 	push	dx
  5681 | 00003202 | 50                        | 	push	ax
  5682 | 00003203 | E8A6D6                    | 	call	SeedSimptris
  5683 | 00003206 | 83C404                    | 	add	sp, 4
  5684 | 00003209 | B002                      | 	mov	al, 2
  5685 | 0000320B | 50                        | 	push	ax
  5686 | 0000320C | B8[3E3A]                  | 	mov	ax, (newPieceTaskStk+1024)
  5687 | 0000320F | 50                        | 	push	ax
  5688 | 00003210 | B8[A220]                  | 	mov	ax, newPieceTask
  5689 | 00003213 | 50                        | 	push	ax
  5690 | 00003214 | E8A7DA                    | 	call	YKNewTask
  5691 | 00003217 | 83C406                    | 	add	sp, 6
  5692 | 0000321A | B003                      | 	mov	al, 3
  5693 | 0000321C | 50                        | 	push	ax
  5694 | 0000321D | B8[3E36]                  | 	mov	ax, (movePieceTaskStk+1024)
  5695 | 00003220 | 50                        | 	push	ax
  5696 | 00003221 | B8[4031]                  | 	mov	ax, movePieceTask
  5697 | 00003224 | 50                        | 	push	ax
  5698 | 00003225 | E896DA                    | 	call	YKNewTask
  5699 | 00003228 | 83C406                    | 	add	sp, 6
  5700 | 0000322B | E83EDC                    | 	call	YKRun
  5701 | 0000322E | 89EC                      | 	mov	sp, bp
  5702 | 00003230 | 5D                        | 	pop	bp
  5703 | 00003231 | C3                        | 	ret
  5704 |          |                           | L_lab8app_160:
  5705 | 00003232 | 55                        | 	push	bp
  5706 | 00003233 | 89E5                      | 	mov	bp, sp
  5707 | 00003235 | EB93                      | 	jmp	L_lab8app_161
  5708 | 00003237 | 90                        | 	ALIGN	2
  5709 |          |                           | movePieceQueuePTR:
  5710 | 00003238 | 00<rept>                  | 	TIMES	2 db 0
  5711 |          |                           | newPieceQueuePTR:
  5712 | 0000323A | 00<rept>                  | 	TIMES	2 db 0
  5713 |          |                           | pieceMoveEvent:
  5714 | 0000323C | 00<rept>                  | 	TIMES	2 db 0
  5715 |          |                           | movePieceTaskStk:
  5716 | 0000323E | 00<rept>                  | 	TIMES	1024 db 0
  5717 |          |                           | newPieceTaskStk:
  5718 | 0000363E | 00<rept>                  | 	TIMES	1024 db 0
  5719 |          |                           | newPieceArray:
  5720 | 00003A3E | 00<rept>                  | 	TIMES	160 db 0
  5721 |          |                           | newPieceQueue:
  5722 | 00003ADE | 00<rept>                  | 	TIMES	20 db 0
  5723 |          |                           | movePieceArray:
  5724 | 00003AF2 | 00<rept>                  | 	TIMES	240 db 0
  5725 |          |                           | movePieceArrayIndex:
  5726 | 00003BE2 | 00<rept>                  | 	TIMES	2 db 0
  5727 |          |                           | movePieceQueue:
  5728 | 00003BE4 | 00<rept>                  | 	TIMES	40 db 0
  5729 |          |                           | screen0:
  5730 | 00003C0C | 00<rept>                  | 	TIMES	2 db 0
  5731 |          |                           | screen1:
  5732 | 00003C0E | 00<rept>                  | 	TIMES	2 db 0
  5733 |          |                           | screen2:
  5734 | 00003C10 | 00<rept>                  | 	TIMES	2 db 0
  5735 |          |                           | screen3:
  5736 | 00003C12 | 00<rept>                  | 	TIMES	2 db 0
  5737 |          |                           | screen4:
  5738 | 00003C14 | 00<rept>                  | 	TIMES	2 db 0
  5739 |          |                           | screen5:
  5740 | 00003C16 | 00<rept>                  | 	TIMES	2 db 0
