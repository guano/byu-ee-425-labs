 LINE  | ADDRESS  | HEX DUMP                  | ASSEMBLY
-------|----------|---------------------------|----------------------------
     1 |          |                           |         CPU     8086
     2 |          |                           |         ORG     0h
     3 |          |                           | InterruptVectorTable:
     4 |          |                           |         ; Internal x86 Interrupts:
     5 | 00000000 | 00000000                  |         dd      0 ; Reserved (Div err)  ; Int 00h
     6 | 00000004 | 00000000                  |         dd      0 ; Reserved (Step)     ; Int 01h
     7 | 00000008 | 00000000                  |         dd      0 ; Reserved (NMI)      ; Int 02h
     8 | 0000000C | 00000000                  |         dd      0 ; Reserved (Break)    ; Int 03h
     9 | 00000010 | 00000000                  |         dd      0 ; Reserved (Overflow) ; Int 04h
    10 | 00000014 | 00000000                  |         dd      0                       ; Int 05h
    11 | 00000018 | 00000000                  |         dd      0                       ; Int 06h
    12 | 0000001C | 00000000                  |         dd      0                       ; Int 07h
    13 |          |                           |         ; Hardware Interrupts:
    14 | 00000020 | [C8080000]                |         dd      isr_reset ; Reset               ; Int 08h (IRQ 0)
    15 | 00000024 | [26090000]                |         dd      isr_tick ; Tick                ; Int 09h (IRQ 1)
    16 | 00000028 | [F7080000]                |         dd      isr_keypress ; Keyboard            ; Int 0Ah (IRQ 2)
    17 | 0000002C | [55090000]                |         dd      isr_game_over ; Simptris Game Over  ; Int 0Bh (IRQ 3)
    18 | 00000030 | [84090000]                |         dd      isr_new_piece ; Simptris New Piece  ; Int 0Ch (IRQ 4)
    19 | 00000034 | [B3090000]                |         dd      isr_received ; Simptris Received   ; Int 0Dh (IRQ 5)
    20 | 00000038 | [E2090000]                |         dd      isr_touchdown ; Simptris Touchdown  ; Int 0Eh (IRQ 6)
    21 | 0000003C | [E7090000]                |         dd      isr_clear ; Simptris Clear      ; Int 0Fh (IRQ 7)
    22 |          |                           |         ; Software Interrupts:
    23 | 00000040 | 00000000                  |         dd      0 ; Reserved (PC BIOS)  ; Int 10h
    24 | 00000044 | 00000000                  |         dd      0                       ; Int 11h
    25 | 00000048 | 00000000                  |         dd      0                       ; Int 12h
    26 | 0000004C | 00000000                  |         dd      0                       ; Int 13h
    27 | 00000050 | 00000000                  |         dd      0                       ; Int 14h
    28 | 00000054 | 00000000                  |         dd      0                       ; Int 15h
    29 | 00000058 | 00000000                  |         dd      0                       ; Int 16h
    30 | 0000005C | 00000000                  |         dd      0                       ; Int 17h
    31 | 00000060 | 00000000                  |         dd      0                       ; Int 18h
    32 | 00000064 | 00000000                  |         dd      0                       ; Int 19h
    33 | 00000068 | 00000000                  |         dd      0                       ; Int 1Ah
    34 | 0000006C | 00000000                  |         dd      0                       ; Int 1Bh
    35 | 00000070 | 00000000                  |         dd      0                       ; Int 1Ch
    36 | 00000074 | 00000000                  |         dd      0                       ; Int 1Dh
    37 | 00000078 | 00000000                  |         dd      0                       ; Int 1Eh
    38 | 0000007C | 00000000                  |         dd      0                       ; Int 1Fh
    39 | 00000080 | 00000000                  |         dd      0                       ; Int 20h
    40 | 00000084 | 00000000                  |         dd      0 ; Reserved (DOS)      ; Int 21h
    41 | 00000088 | 00000000                  |         dd      0 ; Simptris Services   ; Int 22h
    42 | 0000008C | 00000000                  |         dd      0                       ; Int 23h
    43 | 00000090 | 00000000                  |         dd      0                       ; Int 24h
    44 | 00000094 | 00000000                  |         dd      0                       ; Int 25h
    45 | 00000098 | 00000000                  |         dd      0                       ; Int 26h
    46 | 0000009C | 00000000                  |         dd      0                       ; Int 27h
    47 | 000000A0 | 00000000                  |         dd      0                       ; Int 28h
    48 | 000000A4 | 00000000                  |         dd      0                       ; Int 29h
    49 | 000000A8 | 00000000                  |         dd      0                       ; Int 2Ah
    50 | 000000AC | 00000000                  |         dd      0                       ; Int 2Bh
    51 | 000000B0 | 00000000                  |         dd      0                       ; Int 2Ch
    52 | 000000B4 | 00000000                  |         dd      0                       ; Int 2Dh
    53 | 000000B8 | 00000000                  |         dd      0                       ; Int 2Eh
    54 | 000000BC | 00000000                  |         dd      0                       ; Int 2Fh
    55 |          |                           | KeyBuffer:                              ; Address 0xC0
    56 | 000000C0 | 0000                      |         dw      0
    57 |          |                           | NewPieceType:                           ; Address 0xC2
    58 | 000000C2 | 0000                      |         dw      0
    59 |          |                           | NewPieceID:                             ; Address 0xC4
    60 | 000000C4 | 0000                      |         dw      0
    61 |          |                           | NewPieceOrientation:                    ; Address 0xC6
    62 | 000000C6 | 0000                      |         dw      0
    63 |          |                           | NewPieceColumn:                         ; Address 0xC8
    64 | 000000C8 | 0000                      |         dw      0
    65 |          |                           | TouchdownID:                            ; Address 0xCA
    66 | 000000CA | 0000                      | 	dw	0
    67 |          |                           | ScreenBitMap0:                          ; Address 0xCC
    68 | 000000CC | 0000                      |         dw      0
    69 |          |                           | ScreenBitMap1:
    70 | 000000CE | 0000                      |         dw      0
    71 |          |                           | ScreenBitMap2:
    72 | 000000D0 | 0000                      |         dw      0
    73 |          |                           | ScreenBitMap3:
    74 | 000000D2 | 0000                      |         dw      0
    75 |          |                           | ScreenBitMap4:
    76 | 000000D4 | 0000                      |         dw      0
    77 |          |                           | ScreenBitMap5:
    78 | 000000D6 | 0000                      |         dw      0
    79 | 000000D8 | 00<rept>                  | TIMES   100h-($-$$) db  0               ; Fill up to (but not including) address 100h with 0
    80 | 00000100 | E99728                    | 	jmp	main
    81 |          |                           | ; This file contains support routines for 32-bit on the 8086.
    82 |          |                           | ; It is intended for use code generated by the C86 compiler.
    83 |          |                           | ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    84 |          |                           | SR_asldiv:			; l1 /= l2
    85 | 00000103 | 55                        | 	push	bp
    86 | 00000104 | 89E5                      | 	mov	bp,sp
    87 | 00000106 | 53                        | 	push	bx
    88 | 00000107 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
    89 | 0000010A | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
    90 | 0000010D | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
    91 | 00000110 | FF7702                    | 	push	word [bx+2]	; Push hi l1
    92 | 00000113 | FF37                      | 	push	word [bx]	; Push lo l1
    93 | 00000115 | E83D01                    | 	call	SR_ldiv
    94 | 00000118 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
    95 | 0000011B | 895702                    | 	mov	[bx+2],dx	; Store result
    96 | 0000011E | 8907                      | 	mov	[bx],ax
    97 | 00000120 | 5B                        | 	pop	bx
    98 | 00000121 | 5D                        | 	pop	bp
    99 | 00000122 | C3                        | 	ret
   100 |          |                           | SR_aslmod:			; l1 %= l2
   101 | 00000123 | 55                        | 	push	bp
   102 | 00000124 | 89E5                      | 	mov	bp,sp
   103 | 00000126 | 53                        | 	push	bx
   104 | 00000127 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
   105 | 0000012A | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
   106 | 0000012D | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
   107 | 00000130 | FF7702                    | 	push	word [bx+2]	; Push hi l1
   108 | 00000133 | FF37                      | 	push	word [bx]	; Push lo l1
   109 | 00000135 | E82C01                    | 	call	SR_lmod
   110 | 00000138 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
   111 | 0000013B | 895702                    | 	mov	[bx+2],dx	; Store result
   112 | 0000013E | 8907                      | 	mov	[bx],ax
   113 | 00000140 | 5B                        | 	pop	bx
   114 | 00000141 | 5D                        | 	pop	bp
   115 | 00000142 | C3                        | 	ret
   116 |          |                           | SR_aslmul:			; l1 *= l2
   117 | 00000143 | 55                        | 	push	bp
   118 | 00000144 | 89E5                      | 	mov	bp,sp
   119 | 00000146 | 53                        | 	push	bx
   120 | 00000147 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
   121 | 0000014A | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
   122 | 0000014D | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
   123 | 00000150 | FF7702                    | 	push	word [bx+2]	; Push hi l1
   124 | 00000153 | FF37                      | 	push	word [bx]	; Push lo l1
   125 | 00000155 | E84002                    | 	call	SR_lmul
   126 | 00000158 | 83C408                    | 	add	sp,8
   127 | 0000015B | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
   128 | 0000015E | 895702                    | 	mov	[bx+2],dx	; Store result
   129 | 00000161 | 8907                      | 	mov	[bx],ax
   130 | 00000163 | 5B                        | 	pop	bx
   131 | 00000164 | 5D                        | 	pop	bp
   132 | 00000165 | C3                        | 	ret
   133 |          |                           | SR_aslshl:			; l1 <<= l2
   134 | 00000166 | 55                        | 	push	bp
   135 | 00000167 | 89E5                      | 	mov	bp,sp
   136 | 00000169 | 53                        | 	push	bx
   137 | 0000016A | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
   138 | 0000016D | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
   139 | 00000170 | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
   140 | 00000173 | FF7702                    | 	push	word [bx+2]	; Push hi l1
   141 | 00000176 | FF37                      | 	push	word [bx]	; Push lo l1
   142 | 00000178 | E88801                    | 	call	SR_lshl
   143 | 0000017B | 83C408                    | 	add	sp,8
   144 | 0000017E | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
   145 | 00000181 | 895702                    | 	mov	[bx+2],dx	; Store result
   146 | 00000184 | 8907                      | 	mov	[bx],ax
   147 | 00000186 | 5B                        | 	pop	bx
   148 | 00000187 | 5D                        | 	pop	bp
   149 | 00000188 | C3                        | 	ret
   150 |          |                           | SR_aslshr:			; l1 >>= l2
   151 | 00000189 | 55                        | 	push	bp
   152 | 0000018A | 89E5                      | 	mov	bp,sp
   153 | 0000018C | 53                        | 	push	bx
   154 | 0000018D | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
   155 | 00000190 | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
   156 | 00000193 | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
   157 | 00000196 | FF7702                    | 	push	word [bx+2]	; Push hi l1
   158 | 00000199 | FF37                      | 	push	word [bx]	; Push lo l1
   159 | 0000019B | E89701                    | 	call	SR_lshr
   160 | 0000019E | 83C408                    | 	add	sp,8
   161 | 000001A1 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
   162 | 000001A4 | 895702                    | 	mov	[bx+2],dx	; Store result
   163 | 000001A7 | 8907                      | 	mov	[bx],ax
   164 | 000001A9 | 5B                        | 	pop	bx
   165 | 000001AA | 5D                        | 	pop	bp
   166 | 000001AB | C3                        | 	ret
   167 |          |                           | 
   168 |          |                           | 
   169 |          |                           | SR_asuldiv:			; u1 /= u2
   170 | 000001AC | 55                        | 	push	bp
   171 | 000001AD | 89E5                      | 	mov	bp,sp
   172 | 000001AF | 53                        | 	push	bx
   173 | 000001B0 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   174 | 000001B3 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   175 | 000001B6 | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   176 | 000001B9 | FF7702                    | 	push	word [bx+2]	; Push hi u1
   177 | 000001BC | FF37                      | 	push	word [bx]	; Push lo u1
   178 | 000001BE | E89B00                    | 	call	SR_uldiv
   179 | 000001C1 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   180 | 000001C4 | 895702                    | 	mov	[bx+2],dx	; Store result
   181 | 000001C7 | 8907                      | 	mov	[bx],ax
   182 | 000001C9 | 5B                        | 	pop	bx
   183 | 000001CA | 5D                        | 	pop	bp
   184 | 000001CB | C3                        | 	ret
   185 |          |                           | SR_asilmod:			; u1 %= u2
   186 | 000001CC | 55                        | 	push	bp
   187 | 000001CD | 89E5                      | 	mov	bp,sp
   188 | 000001CF | 53                        | 	push	bx
   189 | 000001D0 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   190 | 000001D3 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   191 | 000001D6 | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   192 | 000001D9 | FF7702                    | 	push	word [bx+2]	; Push hi u1
   193 | 000001DC | FF37                      | 	push	word [bx]	; Push lo u1
   194 | 000001DE | E88B00                    | 	call	SR_ilmod
   195 | 000001E1 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   196 | 000001E4 | 895702                    | 	mov	[bx+2],dx	; Store result
   197 | 000001E7 | 8907                      | 	mov	[bx],ax
   198 | 000001E9 | 5B                        | 	pop	bx
   199 | 000001EA | 5D                        | 	pop	bp
   200 | 000001EB | C3                        | 	ret
   201 |          |                           | SR_asulmul:			; u1 *= u2
   202 | 000001EC | 55                        | 	push	bp
   203 | 000001ED | 89E5                      | 	mov	bp,sp
   204 | 000001EF | 53                        | 	push	bx
   205 | 000001F0 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   206 | 000001F3 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   207 | 000001F6 | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   208 | 000001F9 | FF7702                    | 	push	word [bx+2]	; Push hi u1
   209 | 000001FC | FF37                      | 	push	word [bx]	; Push lo u1
   210 | 000001FE | E89701                    | 	call	SR_ulmul
   211 | 00000201 | 83C408                    | 	add	sp,8
   212 | 00000204 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   213 | 00000207 | 895702                    | 	mov	[bx+2],dx	; Store result
   214 | 0000020A | 8907                      | 	mov	[bx],ax
   215 | 0000020C | 5B                        | 	pop	bx
   216 | 0000020D | 5D                        | 	pop	bp
   217 | 0000020E | C3                        | 	ret
   218 |          |                           | SR_asulshl:			; u1 << u2
   219 | 0000020F | 55                        | 	push	bp
   220 | 00000210 | 89E5                      | 	mov	bp,sp
   221 | 00000212 | 53                        | 	push	bx
   222 | 00000213 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   223 | 00000216 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   224 | 00000219 | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   225 | 0000021C | FF7702                    | 	push	word [bx+2]	; Push hi u1
   226 | 0000021F | FF37                      | 	push	word [bx]	; Push lo u1
   227 | 00000221 | E8DF00                    | 	call	SR_ulshl
   228 | 00000224 | 83C408                    | 	add	sp,8
   229 | 00000227 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   230 | 0000022A | 895702                    | 	mov	[bx+2],dx	; Store result
   231 | 0000022D | 8907                      | 	mov	[bx],ax
   232 | 0000022F | 5B                        | 	pop	bx
   233 | 00000230 | 5D                        | 	pop	bp
   234 | 00000231 | C3                        | 	ret
   235 |          |                           | SR_asulshr:			; u1 >> u2
   236 | 00000232 | 55                        | 	push	bp
   237 | 00000233 | 89E5                      | 	mov	bp,sp
   238 | 00000235 | 53                        | 	push	bx
   239 | 00000236 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   240 | 00000239 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   241 | 0000023C | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   242 | 0000023F | FF7702                    | 	push	word [bx+2]	; Push hi u1
   243 | 00000242 | FF37                      | 	push	word [bx]	; Push lo u1
   244 | 00000244 | E81F01                    | 	call	SR_ulshr
   245 | 00000247 | 83C408                    | 	add	sp,8
   246 | 0000024A | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   247 | 0000024D | 895702                    | 	mov	[bx+2],dx	; Store result
   248 | 00000250 | 8907                      | 	mov	[bx],ax
   249 | 00000252 | 5B                        | 	pop	bx
   250 | 00000253 | 5D                        | 	pop	bp
   251 | 00000254 | C3                        | 	ret
   252 |          |                           | 
   253 |          |                           | 
   254 |          |                           | ; Main 32-bit routines begin here:
   255 |          |                           | 
   256 |          |                           | SR_ldiv:	; N_LDIV@
   257 | 00000255 | 59                        | 	pop    cx
   258 | 00000256 | 0E                        | 	push   cs
   259 | 00000257 | 51                        | 	push   cx
   260 |          |                           | 	; LDIV@
   261 | 00000258 | 31C9                      | 	xor    cx,cx
   262 | 0000025A | EB16                      | 	jmp    LSR_01
   263 |          |                           | SR_uldiv:	; N_LUDIV@
   264 | 0000025C | 59                        | 	pop    cx
   265 | 0000025D | 0E                        | 	push   cs
   266 | 0000025E | 51                        | 	push   cx
   267 |          |                           | 	; F_LUDIV@
   268 | 0000025F | B90100                    | 	mov    cx,0001
   269 | 00000262 | EB0E                      | 	jmp    LSR_01
   270 |          |                           | SR_lmod:	; N_LMOD@
   271 | 00000264 | 59                        | 	pop    cx
   272 | 00000265 | 0E                        | 	push   cs
   273 | 00000266 | 51                        | 	push   cx
   274 |          |                           | 	; F_LMOD@
   275 | 00000267 | B90200                    | 	mov    cx,0002
   276 | 0000026A | EB06                      | 	jmp    LSR_01
   277 |          |                           | SR_ilmod:	; N_LUMOD@
   278 | 0000026C | 59                        | 	pop    cx
   279 | 0000026D | 0E                        | 	push   cs
   280 | 0000026E | 51                        | 	push   cx
   281 |          |                           | 	; LUMOD@
   282 | 0000026F | B90300                    | 	mov    cx,0003
   283 |          |                           | LSR_01:
   284 | 00000272 | 55                        | 	push   bp
   285 | 00000273 | 56                        | 	push   si
   286 | 00000274 | 57                        | 	push   di
   287 | 00000275 | 89E5                      | 	mov    bp,sp
   288 | 00000277 | 89CF                      | 	mov    di,cx
   289 | 00000279 | 8B460A                    | 	mov    ax,[bp+0Ah]
   290 | 0000027C | 8B560C                    | 	mov    dx,[bp+0Ch]
   291 | 0000027F | 8B5E0E                    | 	mov    bx,[bp+0Eh]
   292 | 00000282 | 8B4E10                    | 	mov    cx,[bp+10h]
   293 | 00000285 | 09C9                      | 	or     cx,cx
   294 | 00000287 | 7508                      | 	jne    LSR_02
   295 | 00000289 | 09D2                      | 	or     dx,dx
   296 | 0000028B | 7469                      | 	je     LSR_10
   297 | 0000028D | 09DB                      | 	or     bx,bx
   298 | 0000028F | 7465                      | 	je     LSR_10
   299 |          |                           | LSR_02:
   300 | 00000291 | F7C70100                  | 	test   di,0001
   301 | 00000295 | 751C                      | 	jne    LSR_04
   302 | 00000297 | 09D2                      | 	or     dx,dx
   303 | 00000299 | 790A                      | 	jns    LSR_03
   304 | 0000029B | F7DA                      | 	neg    dx
   305 | 0000029D | F7D8                      | 	neg    ax
   306 | 0000029F | 83DA00                    | 	sbb    dx,0000
   307 | 000002A2 | 83CF0C                    | 	or     di,000Ch
   308 |          |                           | LSR_03:
   309 | 000002A5 | 09C9                      | 	or     cx,cx
   310 | 000002A7 | 790A                      | 	jns    LSR_04
   311 | 000002A9 | F7D9                      | 	neg    cx
   312 | 000002AB | F7DB                      | 	neg    bx
   313 | 000002AD | 83D900                    | 	sbb    cx,0000
   314 | 000002B0 | 83F704                    | 	xor    di,0004
   315 |          |                           | LSR_04:
   316 | 000002B3 | 89CD                      | 	mov    bp,cx
   317 | 000002B5 | B92000                    | 	mov    cx,0020h
   318 | 000002B8 | 57                        | 	push   di
   319 | 000002B9 | 31FF                      | 	xor    di,di
   320 | 000002BB | 31F6                      | 	xor    si,si
   321 |          |                           | LSR_05:
   322 | 000002BD | D1E0                      | 	shl    ax,1
   323 | 000002BF | D1D2                      | 	rcl    dx,1
   324 | 000002C1 | D1D6                      | 	rcl    si,1
   325 | 000002C3 | D1D7                      | 	rcl    di,1
   326 | 000002C5 | 39EF                      | 	cmp    di,bp
   327 | 000002C7 | 720B                      | 	jb     LSR_07
   328 | 000002C9 | 7704                      | 	ja     LSR_06
   329 | 000002CB | 39DE                      | 	cmp    si,bx
   330 | 000002CD | 7205                      | 	jb     LSR_07
   331 |          |                           | LSR_06:
   332 | 000002CF | 29DE                      | 	sub    si,bx
   333 | 000002D1 | 19EF                      | 	sbb    di,bp
   334 | 000002D3 | 40                        | 	inc    ax
   335 |          |                           | LSR_07:
   336 | 000002D4 | E2E7                      | 	loop   LSR_05
   337 | 000002D6 | 5B                        | 	pop    bx
   338 | 000002D7 | F7C30200                  | 	test   bx,0002
   339 | 000002DB | 7406                      | 	je     LSR_08
   340 | 000002DD | 89F0                      | 	mov    ax,si
   341 | 000002DF | 89FA                      | 	mov    dx,di
   342 | 000002E1 | D1EB                      | 	shr    bx,1
   343 |          |                           | LSR_08:
   344 | 000002E3 | F7C30400                  | 	test   bx,0004h
   345 | 000002E7 | 7407                      | 	je     LSR_09
   346 | 000002E9 | F7DA                      | 	neg    dx
   347 | 000002EB | F7D8                      | 	neg    ax
   348 | 000002ED | 83DA00                    | 	sbb    dx,0000
   349 |          |                           | LSR_09:
   350 | 000002F0 | 5F                        | 	pop    di
   351 | 000002F1 | 5E                        | 	pop    si
   352 | 000002F2 | 5D                        | 	pop    bp
   353 | 000002F3 | CA0800                    | 	retf   0008
   354 |          |                           | LSR_10:
   355 | 000002F6 | F7F3                      | 	div    bx
   356 | 000002F8 | F7C70200                  | 	test   di,0002
   357 | 000002FC | 7401                      | 	je     LSR_11
   358 | 000002FE | 92                        | 	xchg   dx,ax
   359 |          |                           | LSR_11:
   360 | 000002FF | 31D2                      | 	xor    dx,dx
   361 | 00000301 | EBED                      | 	jmp    LSR_09
   362 |          |                           | SR_lshl:	; N_LXLSH@
   363 |          |                           | SR_ulshl:
   364 |          |                           | 	; r = a << b
   365 | 00000303 | 5B                        | 	pop    bx
   366 | 00000304 | 0E                        | 	push   cs
   367 | 00000305 | 53                        | 	push   bx
   368 |          |                           | 
   369 | 00000306 | 55                        | 	push   bp
   370 | 00000307 | 89E5                      | 	mov    bp,sp
   371 |          |                           | 
   372 | 00000309 | 51                        | 	push   cx	; C86 doesn't expect use of cx or bx
   373 |          |                           | 
   374 | 0000030A | 8B4606                    | 	mov    ax, [bp+6]	; pop loword(a)
   375 | 0000030D | 8B5608                    | 	mov    dx, [bp+8]	; pop hiword(a)
   376 | 00000310 | 8B4E0A                    | 	mov    cx, [bp+10]	; pop word(b)
   377 |          |                           | 	
   378 |          |                           | 	; LXLSH@
   379 | 00000313 | 80F910                    | 	cmp    cl,10h
   380 | 00000316 | 7312                      | 	jnb    LSR_12
   381 | 00000318 | 89C3                      | 	mov    bx,ax
   382 | 0000031A | D3E0                      | 	shl    ax,cl
   383 | 0000031C | D3E2                      | 	shl    dx,cl
   384 | 0000031E | F6D9                      | 	neg    cl
   385 | 00000320 | 80C110                    | 	add    cl,10h
   386 | 00000323 | D3EB                      | 	shr    bx,cl
   387 | 00000325 | 09DA                      | 	or     dx,bx
   388 | 00000327 | 59                        | 	pop    cx
   389 | 00000328 | 5D                        | 	pop    bp
   390 | 00000329 | CB                        | 	retf
   391 |          |                           | LSR_12:
   392 | 0000032A | 80E910                    | 	sub    cl,10h
   393 | 0000032D | 92                        | 	xchg   dx,ax
   394 | 0000032E | 31C0                      | 	xor    ax,ax
   395 | 00000330 | D3E2                      | 	shl    dx,cl
   396 | 00000332 | 59                        | 	pop    cx
   397 | 00000333 | 5D                        | 	pop    bp
   398 | 00000334 | CB                        | 	retf
   399 |          |                           | SR_lshr:	; N_LXRSH@
   400 |          |                           | 	; r = a >> b
   401 | 00000335 | 5B                        | 	pop    bx
   402 | 00000336 | 0E                        | 	push   cs
   403 | 00000337 | 53                        | 	push   bx
   404 |          |                           | 
   405 | 00000338 | 55                        | 	push   bp
   406 | 00000339 | 89E5                      | 	mov    bp,sp
   407 |          |                           | 
   408 | 0000033B | 51                        | 	push   cx	; C86 doesn't expect use of cx or bx
   409 |          |                           | 
   410 | 0000033C | 8B4606                    |         mov    ax, [bp+6]	; pop loword(a)
   411 | 0000033F | 8B5608                    | 	mov    dx, [bp+8]	; pop hiword(a)
   412 | 00000342 | 8B4E0A                    | 	mov    cx, [bp+10]	; pop word(b)
   413 |          |                           | 	
   414 |          |                           | 	; LXRSH@
   415 | 00000345 | 80F910                    | 	cmp    cl,10h
   416 | 00000348 | 7312                      | 	jnb    LSR_13
   417 | 0000034A | 89D3                      | 	mov    bx,dx
   418 | 0000034C | D3E8                      | 	shr    ax,cl
   419 | 0000034E | D3FA                      | 	sar    dx,cl
   420 | 00000350 | F6D9                      | 	neg    cl
   421 | 00000352 | 80C110                    | 	add    cl,10h
   422 | 00000355 | D3E3                      | 	shl    bx,cl
   423 | 00000357 | 09D8                      | 	or     ax,bx
   424 | 00000359 | 59                        | 	pop    cx
   425 | 0000035A | 5D                        | 	pop    bp
   426 | 0000035B | CB                        | 	retf
   427 |          |                           | LSR_13:
   428 | 0000035C | 80E910                    | 	sub    cl,10h
   429 | 0000035F | 92                        | 	xchg   dx,ax
   430 | 00000360 | 99                        | 	cwd
   431 | 00000361 | D3F8                      | 	sar    ax,cl
   432 | 00000363 | 59                        | 	pop    cx
   433 | 00000364 | 5D                        | 	pop    bp
   434 | 00000365 | CB                        | 	retf
   435 |          |                           | SR_ulshr:	; N_LXURSH@
   436 |          |                           | 	; r = a >> b
   437 | 00000366 | 5B                        | 	pop    bx
   438 | 00000367 | 0E                        | 	push   cs
   439 | 00000368 | 53                        | 	push   bx
   440 |          |                           | 
   441 | 00000369 | 55                        | 	push   bp
   442 | 0000036A | 89E5                      | 	mov    bp,sp
   443 |          |                           | 
   444 | 0000036C | 51                        | 	push   cx	; C86 doesn't expect use of cx or bx
   445 |          |                           | 
   446 | 0000036D | 8B4606                    |         mov    ax, [bp+6]	; pop loword(a)
   447 | 00000370 | 8B5608                    | 	mov    dx, [bp+8]	; pop hiword(a)
   448 | 00000373 | 8B4E0A                    | 	mov    cx, [bp+10]	; pop word(b)
   449 |          |                           | 	
   450 |          |                           | 	; LXURSH@
   451 | 00000376 | 80F910                    | 	cmp    cl,10h
   452 | 00000379 | 7312                      | 	jnb    LSR_14
   453 | 0000037B | 89D3                      | 	mov    bx,dx
   454 | 0000037D | D3E8                      | 	shr    ax,cl
   455 | 0000037F | D3EA                      | 	shr    dx,cl
   456 | 00000381 | F6D9                      | 	neg    cl
   457 | 00000383 | 80C110                    | 	add    cl,10h
   458 | 00000386 | D3E3                      | 	shl    bx,cl
   459 | 00000388 | 09D8                      | 	or     ax,bx
   460 | 0000038A | 59                        | 	pop    cx
   461 | 0000038B | 5D                        | 	pop    bp
   462 | 0000038C | CB                        | 	retf
   463 |          |                           | LSR_14:
   464 | 0000038D | 80E910                    | 	sub    cl,10h
   465 | 00000390 | 92                        | 	xchg   dx,ax
   466 | 00000391 | 31D2                      | 	xor    dx,dx
   467 | 00000393 | D3E8                      | 	shr    ax,cl
   468 | 00000395 | 59                        | 	pop    cx
   469 | 00000396 | 5D                        | 	pop    bp
   470 | 00000397 | CB                        | 	retf
   471 |          |                           | SR_lmul:	; N_LXMUL@
   472 |          |                           | SR_ulmul:
   473 |          |                           | 	; r = a * b
   474 | 00000398 | 55                        | 	push   bp
   475 | 00000399 | 56                        | 	push   si
   476 | 0000039A | 89E5                      | 	mov    bp,sp
   477 |          |                           | 
   478 | 0000039C | 51                        | 	push   cx	; C86 doesn't expect use of cx or bx
   479 | 0000039D | 53                        | 	push   bx
   480 |          |                           | 
   481 | 0000039E | 8B5E06                    |         mov    bx, [bp+6]	; pop loword(a)
   482 | 000003A1 | 8B4E08                    | 	mov    cx, [bp+8]	; pop hiword(a)
   483 | 000003A4 | 8B460A                    | 	mov    ax, [bp+10]	; pop loword(b)
   484 | 000003A7 | 8B560C                    | 	mov    dx, [bp+12]	; pop hiword(b)
   485 |          |                           | 	
   486 | 000003AA | 96                        | 	xchg   si,ax
   487 | 000003AB | 92                        | 	xchg   dx,ax
   488 | 000003AC | 85C0                      | 	test   ax,ax
   489 | 000003AE | 7402                      | 	je     LSR_15
   490 | 000003B0 | F7E3                      | 	mul    bx
   491 |          |                           | LSR_15:
   492 | 000003B2 | E305                      | 	jcxz   LSR_16
   493 | 000003B4 | 91                        | 	xchg   cx,ax
   494 | 000003B5 | F7E6                      | 	mul    si
   495 | 000003B7 | 01C8                      | 	add    ax,cx
   496 |          |                           | LSR_16:
   497 | 000003B9 | 96                        | 	xchg   si,ax
   498 | 000003BA | F7E3                      | 	mul    bx
   499 | 000003BC | 01F2                      | 	add    dx,si
   500 | 000003BE | 5B                        | 	pop    bx
   501 | 000003BF | 59                        | 	pop    cx
   502 | 000003C0 | 5E                        | 	pop    si
   503 | 000003C1 | 5D                        | 	pop    bp
   504 | 000003C2 | C3                        | 	ret
   505 |          |                           | 
   506 |          |                           | ; Generated by c86 (BYU-NASM) 5.1 (beta) from clib.c
   507 |          |                           | 	CPU	8086
   508 | 000003C3 | 90                        | 	ALIGN	2
   509 | 000003C4 | E9D325                    | 	jmp	main	; Jump to program start
   510 |          |                           | new_line:
   511 | 000003C7 | 0D0A24                    | 	db	13,10,36
   512 |          |                           | 	ALIGN	2
   513 |          |                           | signalEOI:
   514 | 000003CA | EB08                      | 	jmp	L_clib_1
   515 |          |                           | L_clib_2:
   516 | 000003CC | B020                      | 	mov	al, 0x20
   517 | 000003CE | E620                      | 	out	0x20, al
   518 | 000003D0 | 89EC                      | 	mov	sp, bp
   519 | 000003D2 | 5D                        | 	pop	bp
   520 | 000003D3 | C3                        | 	ret
   521 |          |                           | L_clib_1:
   522 | 000003D4 | 55                        | 	push	bp
   523 | 000003D5 | 89E5                      | 	mov	bp, sp
   524 | 000003D7 | EBF3                      | 	jmp	L_clib_2
   525 | 000003D9 | 90                        | 	ALIGN	2
   526 |          |                           | exit:
   527 | 000003DA | EB0B                      | 	jmp	L_clib_4
   528 |          |                           | L_clib_5:
   529 | 000003DC | B44C                      | 	mov	ah, 4Ch
   530 | 000003DE | 8A4604                    | 	mov	al, [bp+4]
   531 | 000003E1 | CD21                      | 	int	21h
   532 | 000003E3 | 89EC                      | 	mov	sp, bp
   533 | 000003E5 | 5D                        | 	pop	bp
   534 | 000003E6 | C3                        | 	ret
   535 |          |                           | L_clib_4:
   536 | 000003E7 | 55                        | 	push	bp
   537 | 000003E8 | 89E5                      | 	mov	bp, sp
   538 | 000003EA | EBF0                      | 	jmp	L_clib_5
   539 |          |                           | 	ALIGN	2
   540 |          |                           | print:
   541 | 000003EC | EB11                      | 	jmp	L_clib_7
   542 |          |                           | L_clib_8:
   543 | 000003EE | B440                      | 	mov	ah, 40h
   544 | 000003F0 | BB0100                    | 	mov	bx, 1
   545 | 000003F3 | 8B4E06                    | 	mov	cx, [bp+6]
   546 | 000003F6 | 8B5604                    | 	mov	dx, [bp+4]
   547 | 000003F9 | CD21                      | 	int	21h
   548 | 000003FB | 89EC                      | 	mov	sp, bp
   549 | 000003FD | 5D                        | 	pop	bp
   550 | 000003FE | C3                        | 	ret
   551 |          |                           | L_clib_7:
   552 | 000003FF | 55                        | 	push	bp
   553 | 00000400 | 89E5                      | 	mov	bp, sp
   554 | 00000402 | EBEA                      | 	jmp	L_clib_8
   555 |          |                           | 	ALIGN	2
   556 |          |                           | printChar:
   557 | 00000404 | EB0B                      | 	jmp	L_clib_10
   558 |          |                           | L_clib_11:
   559 | 00000406 | B402                      | 	mov	ah, 2
   560 | 00000408 | 8A5604                    | 	mov	dl, [bp+4]
   561 | 0000040B | CD21                      | 	int	21h
   562 | 0000040D | 89EC                      | 	mov	sp, bp
   563 | 0000040F | 5D                        | 	pop	bp
   564 | 00000410 | C3                        | 	ret
   565 |          |                           | L_clib_10:
   566 | 00000411 | 55                        | 	push	bp
   567 | 00000412 | 89E5                      | 	mov	bp, sp
   568 | 00000414 | EBF0                      | 	jmp	L_clib_11
   569 |          |                           | 	ALIGN	2
   570 |          |                           | printNewLine:
   571 | 00000416 | EB0B                      | 	jmp	L_clib_13
   572 |          |                           | L_clib_14:
   573 | 00000418 | B409                      | 	mov	ah, 9
   574 | 0000041A | BA[C703]                  | 	mov	dx, new_line
   575 | 0000041D | CD21                      | 	int	21h
   576 | 0000041F | 89EC                      | 	mov	sp, bp
   577 | 00000421 | 5D                        | 	pop	bp
   578 | 00000422 | C3                        | 	ret
   579 |          |                           | L_clib_13:
   580 | 00000423 | 55                        | 	push	bp
   581 | 00000424 | 89E5                      | 	mov	bp, sp
   582 | 00000426 | EBF0                      | 	jmp	L_clib_14
   583 |          |                           | 	ALIGN	2
   584 |          |                           | printString:
   585 | 00000428 | EB1C                      | 	jmp	L_clib_16
   586 |          |                           | L_clib_17:
   587 | 0000042A | 31F6                      | 	xor	si,si
   588 | 0000042C | 8B5E04                    | 	mov	bx, [bp+4]
   589 | 0000042F | EB01                      | 	jmp	printString2
   590 |          |                           | 	printString1:
   591 | 00000431 | 46                        | 	inc	si
   592 |          |                           | 	printString2:
   593 | 00000432 | 803800                    | 	cmp	byte [bx+si],0
   594 | 00000435 | 75FA                      | 	jne	printString1
   595 | 00000437 | 89DA                      | 	mov	dx, bx
   596 | 00000439 | 89F1                      | 	mov	cx, si
   597 | 0000043B | B440                      | 	mov	ah, 40h
   598 | 0000043D | BB0100                    | 	mov	bx, 1
   599 | 00000440 | CD21                      | 	int	21h
   600 | 00000442 | 89EC                      | 	mov	sp, bp
   601 | 00000444 | 5D                        | 	pop	bp
   602 | 00000445 | C3                        | 	ret
   603 |          |                           | L_clib_16:
   604 | 00000446 | 55                        | 	push	bp
   605 | 00000447 | 89E5                      | 	mov	bp, sp
   606 | 00000449 | 51                        | 	push	cx
   607 | 0000044A | EBDE                      | 	jmp	L_clib_17
   608 |          |                           | 	ALIGN	2
   609 |          |                           | printInt:
   610 | 0000044C | E99500                    | 	jmp	L_clib_19
   611 |          |                           | L_clib_20:
   612 | 0000044F | C746FE0000                | 	mov	word [bp-2], 0
   613 | 00000454 | C746FC1027                | 	mov	word [bp-4], 10000
   614 | 00000459 | 837E0400                  | 	cmp	word [bp+4], 0
   615 | 0000045D | 7D0F                      | 	jge	L_clib_21
   616 | 0000045F | C646F62D                  | 	mov	byte [bp-10], 45
   617 | 00000463 | FF46FE                    | 	inc	word [bp-2]
   618 | 00000466 | 8B4604                    | 	mov	ax, word [bp+4]
   619 | 00000469 | F7D8                      | 	neg	ax
   620 | 0000046B | 894604                    | 	mov	word [bp+4], ax
   621 |          |                           | L_clib_21:
   622 | 0000046E | 8B4604                    | 	mov	ax, word [bp+4]
   623 | 00000471 | 85C0                      | 	test	ax, ax
   624 | 00000473 | 7507                      | 	jne	L_clib_22
   625 | 00000475 | C746FC0100                | 	mov	word [bp-4], 1
   626 | 0000047A | EB19                      | 	jmp	L_clib_23
   627 |          |                           | L_clib_22:
   628 | 0000047C | EB0C                      | 	jmp	L_clib_25
   629 |          |                           | L_clib_24:
   630 | 0000047E | 8B46FC                    | 	mov	ax, word [bp-4]
   631 | 00000481 | 99                        | 	cwd
   632 | 00000482 | B90A00                    | 	mov	cx, 10
   633 | 00000485 | F7F9                      | 	idiv	cx
   634 | 00000487 | 8946FC                    | 	mov	word [bp-4], ax
   635 |          |                           | L_clib_25:
   636 | 0000048A | 8B4604                    | 	mov	ax, word [bp+4]
   637 | 0000048D | 99                        | 	cwd
   638 | 0000048E | F77EFC                    | 	idiv	word [bp-4]
   639 | 00000491 | 85C0                      | 	test	ax, ax
   640 | 00000493 | 74E9                      | 	je	L_clib_24
   641 |          |                           | L_clib_26:
   642 |          |                           | L_clib_23:
   643 | 00000495 | EB36                      | 	jmp	L_clib_28
   644 |          |                           | L_clib_27:
   645 | 00000497 | 8B4604                    | 	mov	ax, word [bp+4]
   646 | 0000049A | 31D2                      | 	xor	dx, dx
   647 | 0000049C | F776FC                    | 	div	word [bp-4]
   648 | 0000049F | 0430                      | 	add	al, 48
   649 | 000004A1 | 8B76FE                    | 	mov	si, word [bp-2]
   650 | 000004A4 | 8D56F6                    | 	lea	dx, [bp-10]
   651 | 000004A7 | 01D6                      | 	add	si, dx
   652 | 000004A9 | 8804                      | 	mov	byte [si], al
   653 | 000004AB | FF46FE                    | 	inc	word [bp-2]
   654 | 000004AE | 8B4604                    | 	mov	ax, word [bp+4]
   655 | 000004B1 | 31D2                      | 	xor	dx, dx
   656 | 000004B3 | F776FC                    | 	div	word [bp-4]
   657 | 000004B6 | 89D0                      | 	mov	ax, dx
   658 | 000004B8 | 894604                    | 	mov	word [bp+4], ax
   659 | 000004BB | 8B46FC                    | 	mov	ax, word [bp-4]
   660 | 000004BE | 99                        | 	cwd
   661 | 000004BF | B90A00                    | 	mov	cx, 10
   662 | 000004C2 | F7F9                      | 	idiv	cx
   663 | 000004C4 | 8946FC                    | 	mov	word [bp-4], ax
   664 | 000004C7 | 8B46FC                    | 	mov	ax, word [bp-4]
   665 | 000004CA | 8946FC                    | 	mov	word [bp-4], ax
   666 |          |                           | L_clib_28:
   667 | 000004CD | 837EFC00                  | 	cmp	word [bp-4], 0
   668 | 000004D1 | 7FC4                      | 	jg	L_clib_27
   669 |          |                           | L_clib_29:
   670 | 000004D3 | FF76FE                    | 	push	word [bp-2]
   671 | 000004D6 | 8D46F6                    | 	lea	ax, [bp-10]
   672 | 000004D9 | 50                        | 	push	ax
   673 | 000004DA | E80FFF                    | 	call	print
   674 | 000004DD | 83C404                    | 	add	sp, 4
   675 | 000004E0 | 89EC                      | 	mov	sp, bp
   676 | 000004E2 | 5D                        | 	pop	bp
   677 | 000004E3 | C3                        | 	ret
   678 |          |                           | L_clib_19:
   679 | 000004E4 | 55                        | 	push	bp
   680 | 000004E5 | 89E5                      | 	mov	bp, sp
   681 | 000004E7 | 83EC0A                    | 	sub	sp, 10
   682 | 000004EA | E962FF                    | 	jmp	L_clib_20
   683 | 000004ED | 90                        | 	ALIGN	2
   684 |          |                           | printLong:
   685 | 000004EE | E9D200                    | 	jmp	L_clib_31
   686 |          |                           | L_clib_32:
   687 | 000004F1 | C746FE0000                | 	mov	word [bp-2], 0
   688 | 000004F6 | C746FA00CA                | 	mov	word [bp-6], 51712
   689 | 000004FB | C746FC9A3B                | 	mov	word [bp-4], 15258
   690 | 00000500 | 837E0600                  | 	cmp	word [bp+6], 0
   691 | 00000504 | 7F22                      | 	jg	L_clib_33
   692 | 00000506 | 7C06                      | 	jl	L_clib_34
   693 | 00000508 | 837E0400                  | 	cmp	word [bp+4], 0
   694 | 0000050C | 731A                      | 	jae	L_clib_33
   695 |          |                           | L_clib_34:
   696 | 0000050E | C646EF2D                  | 	mov	byte [bp-17], 45
   697 | 00000512 | FF46FE                    | 	inc	word [bp-2]
   698 | 00000515 | 8B4604                    | 	mov	ax, word [bp+4]
   699 | 00000518 | 8B5606                    | 	mov	dx, word [bp+6]
   700 | 0000051B | F7D8                      | 	neg	ax
   701 | 0000051D | 83D200                    | 	adc	dx, 0
   702 | 00000520 | F7DA                      | 	neg	dx
   703 | 00000522 | 894604                    | 	mov	word [bp+4], ax
   704 | 00000525 | 895606                    | 	mov	word [bp+6], dx
   705 |          |                           | L_clib_33:
   706 | 00000528 | 8B4604                    | 	mov	ax, word [bp+4]
   707 | 0000052B | 8B5606                    | 	mov	dx, word [bp+6]
   708 | 0000052E | 09C2                      | 	or	dx, ax
   709 | 00000530 | 750C                      | 	jne	L_clib_35
   710 | 00000532 | C746FA0100                | 	mov	word [bp-6], 1
   711 | 00000537 | C746FC0000                | 	mov	word [bp-4], 0
   712 | 0000053C | EB23                      | 	jmp	L_clib_36
   713 |          |                           | L_clib_35:
   714 | 0000053E | EB0E                      | 	jmp	L_clib_38
   715 |          |                           | L_clib_37:
   716 | 00000540 | B80A00                    | 	mov	ax, 10
   717 | 00000543 | 31D2                      | 	xor	dx, dx
   718 | 00000545 | 52                        | 	push	dx
   719 | 00000546 | 50                        | 	push	ax
   720 | 00000547 | 8D46FA                    | 	lea	ax, [bp-6]
   721 | 0000054A | 50                        | 	push	ax
   722 | 0000054B | E8B5FB                    | 	call	SR_asldiv
   723 |          |                           | L_clib_38:
   724 | 0000054E | FF76FC                    | 	push	word [bp-4]
   725 | 00000551 | FF76FA                    | 	push	word [bp-6]
   726 | 00000554 | FF7606                    | 	push	word [bp+6]
   727 | 00000557 | FF7604                    | 	push	word [bp+4]
   728 | 0000055A | E8F8FC                    | 	call	SR_ldiv
   729 | 0000055D | 09C2                      | 	or	dx, ax
   730 | 0000055F | 74DF                      | 	je	L_clib_37
   731 |          |                           | L_clib_39:
   732 |          |                           | L_clib_36:
   733 | 00000561 | EB41                      | 	jmp	L_clib_41
   734 |          |                           | L_clib_40:
   735 | 00000563 | FF76FC                    | 	push	word [bp-4]
   736 | 00000566 | FF76FA                    | 	push	word [bp-6]
   737 | 00000569 | FF7606                    | 	push	word [bp+6]
   738 | 0000056C | FF7604                    | 	push	word [bp+4]
   739 | 0000056F | E8EAFC                    | 	call	SR_uldiv
   740 | 00000572 | 0430                      | 	add	al, 48
   741 | 00000574 | 8B76FE                    | 	mov	si, word [bp-2]
   742 | 00000577 | 8D56EF                    | 	lea	dx, [bp-17]
   743 | 0000057A | 01D6                      | 	add	si, dx
   744 | 0000057C | 8804                      | 	mov	byte [si], al
   745 | 0000057E | FF46FE                    | 	inc	word [bp-2]
   746 | 00000581 | FF76FC                    | 	push	word [bp-4]
   747 | 00000584 | FF76FA                    | 	push	word [bp-6]
   748 | 00000587 | FF7606                    | 	push	word [bp+6]
   749 | 0000058A | FF7604                    | 	push	word [bp+4]
   750 | 0000058D | E8D4FC                    | 	call	SR_lmod
   751 | 00000590 | 894604                    | 	mov	word [bp+4], ax
   752 | 00000593 | 895606                    | 	mov	word [bp+6], dx
   753 | 00000596 | B80A00                    | 	mov	ax, 10
   754 | 00000599 | 31D2                      | 	xor	dx, dx
   755 | 0000059B | 52                        | 	push	dx
   756 | 0000059C | 50                        | 	push	ax
   757 | 0000059D | 8D46FA                    | 	lea	ax, [bp-6]
   758 | 000005A0 | 50                        | 	push	ax
   759 | 000005A1 | E85FFB                    | 	call	SR_asldiv
   760 |          |                           | L_clib_41:
   761 | 000005A4 | 837EFC00                  | 	cmp	word [bp-4], 0
   762 | 000005A8 | 7FB9                      | 	jg	L_clib_40
   763 | 000005AA | 7506                      | 	jne	L_clib_43
   764 | 000005AC | 837EFA00                  | 	cmp	word [bp-6], 0
   765 | 000005B0 | 77B1                      | 	ja	L_clib_40
   766 |          |                           | L_clib_43:
   767 |          |                           | L_clib_42:
   768 | 000005B2 | FF76FE                    | 	push	word [bp-2]
   769 | 000005B5 | 8D46EF                    | 	lea	ax, [bp-17]
   770 | 000005B8 | 50                        | 	push	ax
   771 | 000005B9 | E830FE                    | 	call	print
   772 | 000005BC | 83C404                    | 	add	sp, 4
   773 | 000005BF | 89EC                      | 	mov	sp, bp
   774 | 000005C1 | 5D                        | 	pop	bp
   775 | 000005C2 | C3                        | 	ret
   776 |          |                           | L_clib_31:
   777 | 000005C3 | 55                        | 	push	bp
   778 | 000005C4 | 89E5                      | 	mov	bp, sp
   779 | 000005C6 | 83EC12                    | 	sub	sp, 18
   780 | 000005C9 | E925FF                    | 	jmp	L_clib_32
   781 |          |                           | 	ALIGN	2
   782 |          |                           | printUInt:
   783 | 000005CC | EB7C                      | 	jmp	L_clib_45
   784 |          |                           | L_clib_46:
   785 | 000005CE | C746FE0000                | 	mov	word [bp-2], 0
   786 | 000005D3 | C746FC1027                | 	mov	word [bp-4], 10000
   787 | 000005D8 | 8B4604                    | 	mov	ax, word [bp+4]
   788 | 000005DB | 85C0                      | 	test	ax, ax
   789 | 000005DD | 7507                      | 	jne	L_clib_47
   790 | 000005DF | C746FC0100                | 	mov	word [bp-4], 1
   791 | 000005E4 | EB1B                      | 	jmp	L_clib_48
   792 |          |                           | L_clib_47:
   793 | 000005E6 | EB0D                      | 	jmp	L_clib_50
   794 |          |                           | L_clib_49:
   795 | 000005E8 | 8B46FC                    | 	mov	ax, word [bp-4]
   796 | 000005EB | 31D2                      | 	xor	dx, dx
   797 | 000005ED | B90A00                    | 	mov	cx, 10
   798 | 000005F0 | F7F1                      | 	div	cx
   799 | 000005F2 | 8946FC                    | 	mov	word [bp-4], ax
   800 |          |                           | L_clib_50:
   801 | 000005F5 | 8B4604                    | 	mov	ax, word [bp+4]
   802 | 000005F8 | 31D2                      | 	xor	dx, dx
   803 | 000005FA | F776FC                    | 	div	word [bp-4]
   804 | 000005FD | 85C0                      | 	test	ax, ax
   805 | 000005FF | 74E7                      | 	je	L_clib_49
   806 |          |                           | L_clib_51:
   807 |          |                           | L_clib_48:
   808 | 00000601 | EB2F                      | 	jmp	L_clib_53
   809 |          |                           | L_clib_52:
   810 | 00000603 | 8B4604                    | 	mov	ax, word [bp+4]
   811 | 00000606 | 31D2                      | 	xor	dx, dx
   812 | 00000608 | F776FC                    | 	div	word [bp-4]
   813 | 0000060B | 0430                      | 	add	al, 48
   814 | 0000060D | 8B76FE                    | 	mov	si, word [bp-2]
   815 | 00000610 | 8D56F6                    | 	lea	dx, [bp-10]
   816 | 00000613 | 01D6                      | 	add	si, dx
   817 | 00000615 | 8804                      | 	mov	byte [si], al
   818 | 00000617 | FF46FE                    | 	inc	word [bp-2]
   819 | 0000061A | 8B4604                    | 	mov	ax, word [bp+4]
   820 | 0000061D | 31D2                      | 	xor	dx, dx
   821 | 0000061F | F776FC                    | 	div	word [bp-4]
   822 | 00000622 | 895604                    | 	mov	word [bp+4], dx
   823 | 00000625 | 8B46FC                    | 	mov	ax, word [bp-4]
   824 | 00000628 | 31D2                      | 	xor	dx, dx
   825 | 0000062A | B90A00                    | 	mov	cx, 10
   826 | 0000062D | F7F1                      | 	div	cx
   827 | 0000062F | 8946FC                    | 	mov	word [bp-4], ax
   828 |          |                           | L_clib_53:
   829 | 00000632 | 8B46FC                    | 	mov	ax, word [bp-4]
   830 | 00000635 | 85C0                      | 	test	ax, ax
   831 | 00000637 | 75CA                      | 	jne	L_clib_52
   832 |          |                           | L_clib_54:
   833 | 00000639 | FF76FE                    | 	push	word [bp-2]
   834 | 0000063C | 8D46F6                    | 	lea	ax, [bp-10]
   835 | 0000063F | 50                        | 	push	ax
   836 | 00000640 | E8A9FD                    | 	call	print
   837 | 00000643 | 83C404                    | 	add	sp, 4
   838 | 00000646 | 89EC                      | 	mov	sp, bp
   839 | 00000648 | 5D                        | 	pop	bp
   840 | 00000649 | C3                        | 	ret
   841 |          |                           | L_clib_45:
   842 | 0000064A | 55                        | 	push	bp
   843 | 0000064B | 89E5                      | 	mov	bp, sp
   844 | 0000064D | 83EC0A                    | 	sub	sp, 10
   845 | 00000650 | E97BFF                    | 	jmp	L_clib_46
   846 | 00000653 | 90                        | 	ALIGN	2
   847 |          |                           | printULong:
   848 | 00000654 | E99E00                    | 	jmp	L_clib_56
   849 |          |                           | L_clib_57:
   850 | 00000657 | C746FE0000                | 	mov	word [bp-2], 0
   851 | 0000065C | C746FA00CA                | 	mov	word [bp-6], 51712
   852 | 00000661 | C746FC9A3B                | 	mov	word [bp-4], 15258
   853 | 00000666 | 8B4604                    | 	mov	ax, word [bp+4]
   854 | 00000669 | 8B5606                    | 	mov	dx, word [bp+6]
   855 | 0000066C | 09C2                      | 	or	dx, ax
   856 | 0000066E | 750C                      | 	jne	L_clib_58
   857 | 00000670 | C746FA0100                | 	mov	word [bp-6], 1
   858 | 00000675 | C746FC0000                | 	mov	word [bp-4], 0
   859 | 0000067A | EB23                      | 	jmp	L_clib_59
   860 |          |                           | L_clib_58:
   861 | 0000067C | EB0E                      | 	jmp	L_clib_61
   862 |          |                           | L_clib_60:
   863 | 0000067E | B80A00                    | 	mov	ax, 10
   864 | 00000681 | 31D2                      | 	xor	dx, dx
   865 | 00000683 | 52                        | 	push	dx
   866 | 00000684 | 50                        | 	push	ax
   867 | 00000685 | 8D46FA                    | 	lea	ax, [bp-6]
   868 | 00000688 | 50                        | 	push	ax
   869 | 00000689 | E820FB                    | 	call	SR_asuldiv
   870 |          |                           | L_clib_61:
   871 | 0000068C | FF76FC                    | 	push	word [bp-4]
   872 | 0000068F | FF76FA                    | 	push	word [bp-6]
   873 | 00000692 | FF7606                    | 	push	word [bp+6]
   874 | 00000695 | FF7604                    | 	push	word [bp+4]
   875 | 00000698 | E8C1FB                    | 	call	SR_uldiv
   876 | 0000069B | 09C2                      | 	or	dx, ax
   877 | 0000069D | 74DF                      | 	je	L_clib_60
   878 |          |                           | L_clib_62:
   879 |          |                           | L_clib_59:
   880 | 0000069F | EB39                      | 	jmp	L_clib_64
   881 |          |                           | L_clib_63:
   882 | 000006A1 | FF76FC                    | 	push	word [bp-4]
   883 | 000006A4 | FF76FA                    | 	push	word [bp-6]
   884 | 000006A7 | FF7606                    | 	push	word [bp+6]
   885 | 000006AA | FF7604                    | 	push	word [bp+4]
   886 | 000006AD | E8ACFB                    | 	call	SR_uldiv
   887 | 000006B0 | 0430                      | 	add	al, 48
   888 | 000006B2 | 8B76FE                    | 	mov	si, word [bp-2]
   889 | 000006B5 | 8D56EF                    | 	lea	dx, [bp-17]
   890 | 000006B8 | 01D6                      | 	add	si, dx
   891 | 000006BA | 8804                      | 	mov	byte [si], al
   892 | 000006BC | FF46FE                    | 	inc	word [bp-2]
   893 | 000006BF | FF76FC                    | 	push	word [bp-4]
   894 | 000006C2 | FF76FA                    | 	push	word [bp-6]
   895 | 000006C5 | 8D4604                    | 	lea	ax, [bp+4]
   896 | 000006C8 | 50                        | 	push	ax
   897 | 000006C9 | E800FB                    | 	call	SR_asilmod
   898 | 000006CC | B80A00                    | 	mov	ax, 10
   899 | 000006CF | 31D2                      | 	xor	dx, dx
   900 | 000006D1 | 52                        | 	push	dx
   901 | 000006D2 | 50                        | 	push	ax
   902 | 000006D3 | 8D46FA                    | 	lea	ax, [bp-6]
   903 | 000006D6 | 50                        | 	push	ax
   904 | 000006D7 | E8D2FA                    | 	call	SR_asuldiv
   905 |          |                           | L_clib_64:
   906 | 000006DA | 8B46FA                    | 	mov	ax, word [bp-6]
   907 | 000006DD | 8B56FC                    | 	mov	dx, word [bp-4]
   908 | 000006E0 | 09C2                      | 	or	dx, ax
   909 | 000006E2 | 75BD                      | 	jne	L_clib_63
   910 |          |                           | L_clib_65:
   911 | 000006E4 | FF76FE                    | 	push	word [bp-2]
   912 | 000006E7 | 8D46EF                    | 	lea	ax, [bp-17]
   913 | 000006EA | 50                        | 	push	ax
   914 | 000006EB | E8FEFC                    | 	call	print
   915 | 000006EE | 83C404                    | 	add	sp, 4
   916 | 000006F1 | 89EC                      | 	mov	sp, bp
   917 | 000006F3 | 5D                        | 	pop	bp
   918 | 000006F4 | C3                        | 	ret
   919 |          |                           | L_clib_56:
   920 | 000006F5 | 55                        | 	push	bp
   921 | 000006F6 | 89E5                      | 	mov	bp, sp
   922 | 000006F8 | 83EC12                    | 	sub	sp, 18
   923 | 000006FB | E959FF                    | 	jmp	L_clib_57
   924 |          |                           | 	ALIGN	2
   925 |          |                           | printByte:
   926 | 000006FE | EB61                      | 	jmp	L_clib_67
   927 |          |                           | L_clib_68:
   928 | 00000700 | 8A4604                    | 	mov	al, byte [bp+4]
   929 | 00000703 | 98                        | 	cbw
   930 | 00000704 | B90400                    | 	mov	cx, 4
   931 | 00000707 | D3F8                      | 	sar	ax, cl
   932 | 00000709 | 83E00F                    | 	and	ax, 15
   933 | 0000070C | 8846FF                    | 	mov	byte [bp-1], al
   934 | 0000070F | 807EFF09                  | 	cmp	byte [bp-1], 9
   935 | 00000713 | 7E0C                      | 	jle	L_clib_69
   936 | 00000715 | 8A46FF                    | 	mov	al, byte [bp-1]
   937 | 00000718 | 98                        | 	cbw
   938 | 00000719 | 83E80A                    | 	sub	ax, 10
   939 | 0000071C | 83C041                    | 	add	ax, 65
   940 | 0000071F | EB07                      | 	jmp	L_clib_70
   941 |          |                           | L_clib_69:
   942 | 00000721 | 8A46FF                    | 	mov	al, byte [bp-1]
   943 | 00000724 | 98                        | 	cbw
   944 | 00000725 | 83C030                    | 	add	ax, 48
   945 |          |                           | L_clib_70:
   946 | 00000728 | 8846FD                    | 	mov	byte [bp-3], al
   947 | 0000072B | 8A4604                    | 	mov	al, byte [bp+4]
   948 | 0000072E | 240F                      | 	and	al, 15
   949 | 00000730 | 8846FF                    | 	mov	byte [bp-1], al
   950 | 00000733 | 807EFF09                  | 	cmp	byte [bp-1], 9
   951 | 00000737 | 7E0C                      | 	jle	L_clib_71
   952 | 00000739 | 8A46FF                    | 	mov	al, byte [bp-1]
   953 | 0000073C | 98                        | 	cbw
   954 | 0000073D | 83E80A                    | 	sub	ax, 10
   955 | 00000740 | 83C041                    | 	add	ax, 65
   956 | 00000743 | EB07                      | 	jmp	L_clib_72
   957 |          |                           | L_clib_71:
   958 | 00000745 | 8A46FF                    | 	mov	al, byte [bp-1]
   959 | 00000748 | 98                        | 	cbw
   960 | 00000749 | 83C030                    | 	add	ax, 48
   961 |          |                           | L_clib_72:
   962 | 0000074C | 8846FE                    | 	mov	byte [bp-2], al
   963 | 0000074F | B80200                    | 	mov	ax, 2
   964 | 00000752 | 50                        | 	push	ax
   965 | 00000753 | 8D46FD                    | 	lea	ax, [bp-3]
   966 | 00000756 | 50                        | 	push	ax
   967 | 00000757 | E892FC                    | 	call	print
   968 | 0000075A | 83C404                    | 	add	sp, 4
   969 | 0000075D | 89EC                      | 	mov	sp, bp
   970 | 0000075F | 5D                        | 	pop	bp
   971 | 00000760 | C3                        | 	ret
   972 |          |                           | L_clib_67:
   973 | 00000761 | 55                        | 	push	bp
   974 | 00000762 | 89E5                      | 	mov	bp, sp
   975 | 00000764 | 83EC04                    | 	sub	sp, 4
   976 | 00000767 | EB97                      | 	jmp	L_clib_68
   977 | 00000769 | 90                        | 	ALIGN	2
   978 |          |                           | printWord:
   979 | 0000076A | EB59                      | 	jmp	L_clib_74
   980 |          |                           | L_clib_75:
   981 | 0000076C | C746FE0300                | 	mov	word [bp-2], 3
   982 | 00000771 | EB3A                      | 	jmp	L_clib_77
   983 |          |                           | L_clib_76:
   984 | 00000773 | 8B4604                    | 	mov	ax, word [bp+4]
   985 | 00000776 | 83E00F                    | 	and	ax, 15
   986 | 00000779 | 8846FD                    | 	mov	byte [bp-3], al
   987 | 0000077C | 807EFD09                  | 	cmp	byte [bp-3], 9
   988 | 00000780 | 7E0C                      | 	jle	L_clib_80
   989 | 00000782 | 8A46FD                    | 	mov	al, byte [bp-3]
   990 | 00000785 | 98                        | 	cbw
   991 | 00000786 | 83E80A                    | 	sub	ax, 10
   992 | 00000789 | 83C041                    | 	add	ax, 65
   993 | 0000078C | EB07                      | 	jmp	L_clib_81
   994 |          |                           | L_clib_80:
   995 | 0000078E | 8A46FD                    | 	mov	al, byte [bp-3]
   996 | 00000791 | 98                        | 	cbw
   997 | 00000792 | 83C030                    | 	add	ax, 48
   998 |          |                           | L_clib_81:
   999 | 00000795 | 8B76FE                    | 	mov	si, word [bp-2]
  1000 | 00000798 | 8D56F9                    | 	lea	dx, [bp-7]
  1001 | 0000079B | 01D6                      | 	add	si, dx
  1002 | 0000079D | 8804                      | 	mov	byte [si], al
  1003 | 0000079F | 8B4604                    | 	mov	ax, word [bp+4]
  1004 | 000007A2 | B90400                    | 	mov	cx, 4
  1005 | 000007A5 | D3F8                      | 	sar	ax, cl
  1006 | 000007A7 | 894604                    | 	mov	word [bp+4], ax
  1007 |          |                           | L_clib_79:
  1008 | 000007AA | FF4EFE                    | 	dec	word [bp-2]
  1009 |          |                           | L_clib_77:
  1010 | 000007AD | 837EFE00                  | 	cmp	word [bp-2], 0
  1011 | 000007B1 | 7DC0                      | 	jge	L_clib_76
  1012 |          |                           | L_clib_78:
  1013 | 000007B3 | B80400                    | 	mov	ax, 4
  1014 | 000007B6 | 50                        | 	push	ax
  1015 | 000007B7 | 8D46F9                    | 	lea	ax, [bp-7]
  1016 | 000007BA | 50                        | 	push	ax
  1017 | 000007BB | E82EFC                    | 	call	print
  1018 | 000007BE | 83C404                    | 	add	sp, 4
  1019 | 000007C1 | 89EC                      | 	mov	sp, bp
  1020 | 000007C3 | 5D                        | 	pop	bp
  1021 | 000007C4 | C3                        | 	ret
  1022 |          |                           | L_clib_74:
  1023 | 000007C5 | 55                        | 	push	bp
  1024 | 000007C6 | 89E5                      | 	mov	bp, sp
  1025 | 000007C8 | 83EC08                    | 	sub	sp, 8
  1026 | 000007CB | EB9F                      | 	jmp	L_clib_75
  1027 | 000007CD | 90                        | 	ALIGN	2
  1028 |          |                           | printDWord:
  1029 | 000007CE | E9AC00                    | 	jmp	L_clib_83
  1030 |          |                           | L_clib_84:
  1031 | 000007D1 | 8D4604                    | 	lea	ax, [bp+4]
  1032 | 000007D4 | 89C6                      | 	mov	si, ax
  1033 | 000007D6 | 8B04                      | 	mov	ax, word [si]
  1034 | 000007D8 | 8946FA                    | 	mov	word [bp-6], ax
  1035 | 000007DB | 8D4604                    | 	lea	ax, [bp+4]
  1036 | 000007DE | 89C6                      | 	mov	si, ax
  1037 | 000007E0 | 83C602                    | 	add	si, 2
  1038 | 000007E3 | 8B04                      | 	mov	ax, word [si]
  1039 | 000007E5 | 8946F8                    | 	mov	word [bp-8], ax
  1040 | 000007E8 | C746FE0300                | 	mov	word [bp-2], 3
  1041 | 000007ED | EB76                      | 	jmp	L_clib_86
  1042 |          |                           | L_clib_85:
  1043 | 000007EF | 8B46FA                    | 	mov	ax, word [bp-6]
  1044 | 000007F2 | 83E00F                    | 	and	ax, 15
  1045 | 000007F5 | 8846FD                    | 	mov	byte [bp-3], al
  1046 | 000007F8 | 807EFD09                  | 	cmp	byte [bp-3], 9
  1047 | 000007FC | 7E0C                      | 	jle	L_clib_89
  1048 | 000007FE | 8A46FD                    | 	mov	al, byte [bp-3]
  1049 | 00000801 | 98                        | 	cbw
  1050 | 00000802 | 83E80A                    | 	sub	ax, 10
  1051 | 00000805 | 83C041                    | 	add	ax, 65
  1052 | 00000808 | EB07                      | 	jmp	L_clib_90
  1053 |          |                           | L_clib_89:
  1054 | 0000080A | 8A46FD                    | 	mov	al, byte [bp-3]
  1055 | 0000080D | 98                        | 	cbw
  1056 | 0000080E | 83C030                    | 	add	ax, 48
  1057 |          |                           | L_clib_90:
  1058 | 00000811 | 8B56FE                    | 	mov	dx, word [bp-2]
  1059 | 00000814 | 83C204                    | 	add	dx, 4
  1060 | 00000817 | 89D6                      | 	mov	si, dx
  1061 | 00000819 | 8D56F0                    | 	lea	dx, [bp-16]
  1062 | 0000081C | 01D6                      | 	add	si, dx
  1063 | 0000081E | 8804                      | 	mov	byte [si], al
  1064 | 00000820 | 8B46FA                    | 	mov	ax, word [bp-6]
  1065 | 00000823 | B90400                    | 	mov	cx, 4
  1066 | 00000826 | D3F8                      | 	sar	ax, cl
  1067 | 00000828 | 8946FA                    | 	mov	word [bp-6], ax
  1068 | 0000082B | 8B46F8                    | 	mov	ax, word [bp-8]
  1069 | 0000082E | 83E00F                    | 	and	ax, 15
  1070 | 00000831 | 8846FD                    | 	mov	byte [bp-3], al
  1071 | 00000834 | 807EFD09                  | 	cmp	byte [bp-3], 9
  1072 | 00000838 | 7E0C                      | 	jle	L_clib_91
  1073 | 0000083A | 8A46FD                    | 	mov	al, byte [bp-3]
  1074 | 0000083D | 98                        | 	cbw
  1075 | 0000083E | 83E80A                    | 	sub	ax, 10
  1076 | 00000841 | 83C041                    | 	add	ax, 65
  1077 | 00000844 | EB07                      | 	jmp	L_clib_92
  1078 |          |                           | L_clib_91:
  1079 | 00000846 | 8A46FD                    | 	mov	al, byte [bp-3]
  1080 | 00000849 | 98                        | 	cbw
  1081 | 0000084A | 83C030                    | 	add	ax, 48
  1082 |          |                           | L_clib_92:
  1083 | 0000084D | 8B76FE                    | 	mov	si, word [bp-2]
  1084 | 00000850 | 8D56F0                    | 	lea	dx, [bp-16]
  1085 | 00000853 | 01D6                      | 	add	si, dx
  1086 | 00000855 | 8804                      | 	mov	byte [si], al
  1087 | 00000857 | 8B46F8                    | 	mov	ax, word [bp-8]
  1088 | 0000085A | B90400                    | 	mov	cx, 4
  1089 | 0000085D | D3F8                      | 	sar	ax, cl
  1090 | 0000085F | 8946F8                    | 	mov	word [bp-8], ax
  1091 |          |                           | L_clib_88:
  1092 | 00000862 | FF4EFE                    | 	dec	word [bp-2]
  1093 |          |                           | L_clib_86:
  1094 | 00000865 | 837EFE00                  | 	cmp	word [bp-2], 0
  1095 | 00000869 | 7D84                      | 	jge	L_clib_85
  1096 |          |                           | L_clib_87:
  1097 | 0000086B | B80800                    | 	mov	ax, 8
  1098 | 0000086E | 50                        | 	push	ax
  1099 | 0000086F | 8D46F0                    | 	lea	ax, [bp-16]
  1100 | 00000872 | 50                        | 	push	ax
  1101 | 00000873 | E876FB                    | 	call	print
  1102 | 00000876 | 83C404                    | 	add	sp, 4
  1103 | 00000879 | 89EC                      | 	mov	sp, bp
  1104 | 0000087B | 5D                        | 	pop	bp
  1105 | 0000087C | C3                        | 	ret
  1106 |          |                           | L_clib_83:
  1107 | 0000087D | 55                        | 	push	bp
  1108 | 0000087E | 89E5                      | 	mov	bp, sp
  1109 | 00000880 | 83EC10                    | 	sub	sp, 16
  1110 | 00000883 | E94BFF                    | 	jmp	L_clib_84
  1111 |          |                           | 
  1112 |          |                           | 	align	2
  1113 |          |                           | SlidePiece:	; void SlidePiece(int ID, int direction)
  1114 | 00000886 | 55                        | 	push	bp
  1115 | 00000887 | 89E5                      | 	mov	bp, sp
  1116 | 00000889 | 50                        | 	push	ax
  1117 | 0000088A | 52                        | 	push	dx
  1118 | 0000088B | B400                      |  	mov	ah, 0		; Slide piece operation
  1119 | 0000088D | 8A4606                    |   	mov	al, [bp+6]	; Move direction (loword only)
  1120 | 00000890 | 8B5604                    | 	mov	dx, [bp+4]	; Move id
  1121 | 00000893 | CD1B                      | 	int	1Bh		; Call Simptris services
  1122 | 00000895 | 5A                        | 	pop	dx
  1123 | 00000896 | 58                        | 	pop	ax
  1124 | 00000897 | 5D                        | 	pop	bp
  1125 | 00000898 | C3                        | 	ret
  1126 |          |                           | RotatePiece:	; void RotatePiece(int ID, int direction)
  1127 | 00000899 | 55                        | 	push	bp
  1128 | 0000089A | 89E5                      | 	mov	bp, sp
  1129 | 0000089C | 50                        | 	push	ax
  1130 | 0000089D | 52                        | 	push	dx
  1131 | 0000089E | B401                      |  	mov	ah, 1		; Rotate piece operation
  1132 | 000008A0 | 8A4606                    |  	mov	al, [bp+6]	; Move direction (loword only)
  1133 | 000008A3 | 8B5604                    | 	mov	dx, [bp+4]	; Move id
  1134 | 000008A6 | CD1B                      | 	int	1Bh		; Call Simptris services
  1135 | 000008A8 | 5A                        | 	pop	dx
  1136 | 000008A9 | 58                        | 	pop	ax
  1137 | 000008AA | 5D                        | 	pop	bp
  1138 | 000008AB | C3                        | 	ret
  1139 |          |                           | SeedSimptris:	; void SeedSimptris(long seed)
  1140 | 000008AC | 55                        | 	push	bp
  1141 | 000008AD | 89E5                      | 	mov	bp, sp
  1142 | 000008AF | 50                        | 	push	ax
  1143 | 000008B0 | 51                        | 	push	cx
  1144 | 000008B1 | 52                        | 	push    dx
  1145 | 000008B2 | B402                      |  	mov	ah, 2		; Seed operation
  1146 | 000008B4 | 8B5604                    | 	mov	dx, [bp+4]	; Move loword of seed
  1147 | 000008B7 | 8B4E06                    | 	mov	cx, [bp+6]	; Move hiword of seed
  1148 | 000008BA | CD1B                      | 	int	1Bh		; Call Simptris services
  1149 | 000008BC | 5A                        | 	pop	dx
  1150 | 000008BD | 59                        | 	pop	cx
  1151 | 000008BE | 58                        | 	pop	ax
  1152 | 000008BF | 5D                        | 	pop	bp
  1153 | 000008C0 | C3                        | 	ret
  1154 |          |                           | StartSimptris:	; void StartSimptris(void)
  1155 | 000008C1 | 50                        | 	push	ax
  1156 | 000008C2 | B403                      |  	mov	ah, 3		; Start Simptris operation
  1157 | 000008C4 | CD1B                      | 	int	1Bh		; Call Simptris services
  1158 | 000008C6 | 58                        | 	pop	ax
  1159 | 000008C7 | C3                        | 	ret
  1160 |          |                           | 
  1161 |          |                           | 
  1162 |          |                           | ; 1    Save the context of whatever was running by pushing all registers onto the stack, except SP, SS, CS, IP, and the flags.
  1163 |          |                           | ; 2    Enable interrupts to allow higher priority IRQs to interrupt.
  1164 |          |                           | ; 3    Run the interrupt handler, which is usually a C function that does the work for this interrupt.
  1165 |          |                           | ; 4    Disable interrupts.
  1166 |          |                           | ; 5    Send the EOI command to the PIC, informing it that the handler is finished.
  1167 |          |                           | ; 6    Restore the context of what was running before the interrupt occurred by popping the registers saved in step 1 off the stack.
  1168 |          |                           | ; 7    Execute the iret instruction. This restores in one atomic operation the values for IP, CS, and the flags, which were automatically saved on the stack by the processor when the interrupt occurred. This effecti
  1169 |          |                           | 
  1170 |          |                           | 
  1171 |          |                           | 
  1172 |          |                           | 
  1173 |          |                           | isr_reset:
  1174 |          |                           | 	; save context
  1175 | 000008C8 | 50                        | 	push ax
  1176 | 000008C9 | 53                        | 	push bx
  1177 | 000008CA | 51                        | 	push cx
  1178 | 000008CB | 52                        | 	push dx
  1179 | 000008CC | 55                        | 	push bp
  1180 | 000008CD | 56                        | 	push si
  1181 | 000008CE | 57                        | 	push di
  1182 | 000008CF | 1E                        | 	push ds
  1183 | 000008D0 | 06                        | 	push es
  1184 |          |                           | 	; Here we test to see if we are the lowest-level interrupt.
  1185 |          |                           | 	; If we are, we need to save the task's stack that we interrupted
  1186 | 000008D1 | A1[8C1D]                  | 	mov ax, [YKISRCallDepth]
  1187 | 000008D4 | 85C0                      | 	test ax, ax
  1188 | 000008D6 | 7506                      | 	jnz isr_reset_not_lowest_interrupt
  1189 |          |                           | 
  1190 |          |                           | 	; Save the SP of the task we interrupted
  1191 | 000008D8 | 8B1E[941A]                | 	mov bx, [YKRdyList]
  1192 | 000008DC | 8927                      | 	mov [bx], sp
  1193 |          |                           | 
  1194 |          |                           | isr_reset_not_lowest_interrupt:
  1195 |          |                           | 
  1196 | 000008DE | E8D307                    | 	call YKEnterISR
  1197 |          |                           | 	; enable interrupts for higher priority IRQ
  1198 | 000008E1 | FB                        | 	sti	
  1199 |          |                           | 
  1200 |          |                           | 	; run interrupt handler
  1201 |          |                           | 	
  1202 |          |                           | 	; disable interrupts
  1203 |          |                           | 	; sent EOI to PIC
  1204 |          |                           | 	; restore context
  1205 |          |                           | 
  1206 |          |                           | 	; But we don't have to do any of that, because we ARE the highest-priority interrupt
  1207 |          |                           | 	; And it will end the program. So no saving context, no enabling interrupts, 
  1208 |          |                           | 	; and no restoring context.
  1209 | 000008E2 | E80B01                    | 	call c_isr_reset
  1210 |          |                           | 	
  1211 |          |                           | 
  1212 | 000008E5 | FA                        | 	cli
  1213 |          |                           | 	
  1214 | 000008E6 | B020                      | 	mov	al, 0x20
  1215 | 000008E8 | E620                      | 	out 	0x20, al
  1216 |          |                           | 
  1217 |          |                           | 		
  1218 | 000008EA | E8D907                    | 	call YKExitISR
  1219 |          |                           | 	
  1220 | 000008ED | 07                        | 	pop es
  1221 | 000008EE | 1F                        | 	pop ds
  1222 | 000008EF | 5F                        | 	pop di
  1223 | 000008F0 | 5E                        | 	pop si
  1224 | 000008F1 | 5D                        | 	pop bp
  1225 | 000008F2 | 5A                        | 	pop dx
  1226 | 000008F3 | 59                        | 	pop cx
  1227 | 000008F4 | 5B                        | 	pop bx
  1228 | 000008F5 | 58                        | 	pop ax	
  1229 |          |                           | 	
  1230 | 000008F6 | CF                        | 	iret	; This should not even happen.
  1231 |          |                           | 
  1232 |          |                           | 
  1233 |          |                           | 
  1234 |          |                           | isr_keypress:
  1235 |          |                           | 		; Save context
  1236 | 000008F7 | 50                        | 	push ax
  1237 | 000008F8 | 53                        | 	push bx
  1238 | 000008F9 | 51                        | 	push cx
  1239 | 000008FA | 52                        | 	push dx
  1240 | 000008FB | 55                        | 	push bp
  1241 | 000008FC | 56                        | 	push si
  1242 | 000008FD | 57                        | 	push di
  1243 | 000008FE | 1E                        | 	push ds
  1244 | 000008FF | 06                        | 	push es
  1245 |          |                           | 
  1246 |          |                           | 	; Here we test to see if we are the lowest-level interrupt.
  1247 |          |                           | 	; If we are, we need to save the task's stack that we interrupted
  1248 | 00000900 | A1[8C1D]                  | 	mov ax, [YKISRCallDepth]
  1249 | 00000903 | 85C0                      | 	test ax, ax
  1250 | 00000905 | 7506                      | 	jnz isr_keypress_not_lowest_interrupt
  1251 |          |                           | 
  1252 |          |                           | 	; Save the SP of the task we interrupted
  1253 | 00000907 | 8B1E[941A]                | 	mov bx, [YKRdyList]
  1254 | 0000090B | 8927                      | 	mov [bx], sp
  1255 |          |                           | 
  1256 |          |                           | isr_keypress_not_lowest_interrupt:
  1257 |          |                           | 
  1258 | 0000090D | E8A407                    | 	call YKEnterISR
  1259 |          |                           | 
  1260 |          |                           | 		; Enable interrupts for higher-priority 
  1261 | 00000910 | FB                        | 	sti
  1262 |          |                           | 
  1263 |          |                           | 		; Run interrupt handler
  1264 | 00000911 | E81601                    | 	call c_isr_keypress
  1265 |          |                           | 
  1266 |          |                           | 
  1267 |          |                           | 		; disable interrupts
  1268 | 00000914 | FA                        | 	cli
  1269 |          |                           | 
  1270 |          |                           | 		;send EOI to PIC
  1271 | 00000915 | B020                      | 	mov	al, 0x20	; Load nonspecific EOI value (0x20) into register al
  1272 | 00000917 | E620                      | 	out	0x20, al	; Write EOI to PIC (port 0x20)
  1273 |          |                           | 
  1274 |          |                           | 	
  1275 | 00000919 | E8AA07                    | 	call YKExitISR
  1276 |          |                           | 		; Restore context
  1277 | 0000091C | 07                        | 	pop es
  1278 | 0000091D | 1F                        | 	pop ds
  1279 | 0000091E | 5F                        | 	pop di
  1280 | 0000091F | 5E                        | 	pop si
  1281 | 00000920 | 5D                        | 	pop bp
  1282 | 00000921 | 5A                        | 	pop dx
  1283 | 00000922 | 59                        | 	pop cx
  1284 | 00000923 | 5B                        | 	pop bx
  1285 | 00000924 | 58                        | 	pop ax	
  1286 |          |                           | 		; Execute IRET
  1287 | 00000925 | CF                        | 	iret
  1288 |          |                           | 
  1289 |          |                           | 
  1290 |          |                           | 
  1291 |          |                           | isr_tick:
  1292 |          |                           | 		; Save context
  1293 | 00000926 | 50                        | 	push ax
  1294 | 00000927 | 53                        | 	push bx
  1295 | 00000928 | 51                        | 	push cx
  1296 | 00000929 | 52                        | 	push dx
  1297 | 0000092A | 55                        | 	push bp
  1298 | 0000092B | 56                        | 	push si
  1299 | 0000092C | 57                        | 	push di
  1300 | 0000092D | 1E                        | 	push ds
  1301 | 0000092E | 06                        | 	push es
  1302 |          |                           | 	
  1303 |          |                           | 	; Here we test to see if we are the lowest-level interrupt.
  1304 |          |                           | 	; If we are, we need to save the task's stack that we interrupted
  1305 | 0000092F | A1[8C1D]                  | 	mov ax, [YKISRCallDepth]
  1306 | 00000932 | 85C0                      | 	test ax, ax
  1307 | 00000934 | 7506                      | 	jnz isr_tick_not_lowest_interrupt
  1308 |          |                           | 
  1309 |          |                           | 	; Save the SP of the task we interrupted
  1310 | 00000936 | 8B1E[941A]                | 	mov bx, [YKRdyList]
  1311 | 0000093A | 8927                      | 	mov [bx], sp
  1312 |          |                           | 
  1313 |          |                           | isr_tick_not_lowest_interrupt:
  1314 |          |                           | 
  1315 | 0000093C | E87507                    | 	call YKEnterISR
  1316 |          |                           | 
  1317 |          |                           | 		; Enable interrupts for higher-priority 
  1318 | 0000093F | FB                        | 	sti
  1319 |          |                           | 
  1320 |          |                           | 		; Run interrupt handler
  1321 | 00000940 | E8C100                    | 	call c_isr_tick
  1322 |          |                           | 		; disable interrupts
  1323 | 00000943 | FA                        | 	cli
  1324 |          |                           | 
  1325 |          |                           | 		;send EOI to PIC
  1326 | 00000944 | B020                      | 	mov	al, 0x20	; Load nonspecific EOI value (0x20) into register al
  1327 | 00000946 | E620                      | 	out	0x20, al	; Write EOI to PIC (port 0x20)
  1328 |          |                           | 
  1329 |          |                           | 		
  1330 | 00000948 | E87B07                    | 	call YKExitISR
  1331 |          |                           | 		; Restore context
  1332 | 0000094B | 07                        | 	pop es
  1333 | 0000094C | 1F                        | 	pop ds
  1334 | 0000094D | 5F                        | 	pop di
  1335 | 0000094E | 5E                        | 	pop si
  1336 | 0000094F | 5D                        | 	pop bp
  1337 | 00000950 | 5A                        | 	pop dx
  1338 | 00000951 | 59                        | 	pop cx
  1339 | 00000952 | 5B                        | 	pop bx
  1340 | 00000953 | 58                        | 	pop ax
  1341 |          |                           | 
  1342 |          |                           | 	   ; Execute IRET
  1343 | 00000954 | CF                        | 	iret
  1344 |          |                           | 
  1345 |          |                           | ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  1346 |          |                           | ;;;;;;;;;;;;;;;;;;;;;;;;	NEW SIMPTRIS ISRS below		;;;;;;;;;;;;;;;;;;;;;;;;
  1347 |          |                           | ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  1348 |          |                           | ;				 ;
  1349 |          |                           | ;	GAME OVER ISR		 ;
  1350 |          |                           | ;				 ;
  1351 |          |                           | ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  1352 |          |                           | 
  1353 |          |                           | isr_game_over:
  1354 |          |                           | 	; save context
  1355 | 00000955 | 50                        | 	push ax
  1356 | 00000956 | 53                        | 	push bx
  1357 | 00000957 | 51                        | 	push cx
  1358 | 00000958 | 52                        | 	push dx
  1359 | 00000959 | 55                        | 	push bp
  1360 | 0000095A | 56                        | 	push si
  1361 | 0000095B | 57                        | 	push di
  1362 | 0000095C | 1E                        | 	push ds
  1363 | 0000095D | 06                        | 	push es
  1364 |          |                           | 	; Here we test to see if we are the lowest-level interrupt.
  1365 |          |                           | 	; If we are, we need to save the task's stack that we interrupted
  1366 | 0000095E | A1[8C1D]                  | 	mov ax, [YKISRCallDepth]
  1367 | 00000961 | 85C0                      | 	test ax, ax
  1368 | 00000963 | 7506                      | 	jnz isr_game_over_not_lowest_interrupt
  1369 |          |                           | 
  1370 |          |                           | 	; Save the SP of the task we interrupted
  1371 | 00000965 | 8B1E[941A]                | 	mov bx, [YKRdyList]
  1372 | 00000969 | 8927                      | 	mov [bx], sp
  1373 |          |                           | 
  1374 |          |                           | isr_game_over_not_lowest_interrupt:
  1375 |          |                           | 
  1376 | 0000096B | E84607                    | 	call YKEnterISR
  1377 |          |                           | 
  1378 | 0000096E | FB                        | 	sti ;enable interrupts to allow higher priority IRQs to interrupt
  1379 |          |                           | 
  1380 | 0000096F | E8FC00                    | 	call c_isr_game_over ; (Indicate game over. No new pieces appear)
  1381 |          |                           | 
  1382 | 00000972 | FA                        | 	cli ; disable interrupts
  1383 |          |                           | 
  1384 | 00000973 | B020                      | 	mov	al, 0x20 ;Send EOI command to PIC, informing it that handler is finished
  1385 | 00000975 | E620                      | 	out	0x20, al
  1386 |          |                           | 
  1387 | 00000977 | E84C07                    | 	call YKExitISR
  1388 |          |                           | 
  1389 | 0000097A | 07                        | 	pop es	; restores context of what was running b4 interrupt occured
  1390 | 0000097B | 1F                        | 	pop ds
  1391 | 0000097C | 5F                        | 	pop di
  1392 | 0000097D | 5E                        | 	pop si
  1393 | 0000097E | 5D                        | 	pop bp
  1394 | 0000097F | 5A                        | 	pop dx
  1395 | 00000980 | 59                        | 	pop cx
  1396 | 00000981 | 5B                        | 	pop bx
  1397 | 00000982 | 58                        | 	pop ax
  1398 |          |                           | 
  1399 | 00000983 | CF                        | 	iret ; restores values for IP, CS, flags
  1400 |          |                           | 
  1401 |          |                           | ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  1402 |          |                           | ;					;
  1403 |          |                           | ;	     NEW PIECE ISR		;
  1404 |          |                           | ;					;
  1405 |          |                           | ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  1406 |          |                           | 
  1407 |          |                           | isr_new_piece:
  1408 | 00000984 | 50                        | 	push ax ; save context
  1409 | 00000985 | 53                        | 	push bx
  1410 | 00000986 | 51                        | 	push cx
  1411 | 00000987 | 52                        | 	push dx
  1412 | 00000988 | 55                        | 	push bp
  1413 | 00000989 | 56                        | 	push si
  1414 | 0000098A | 57                        | 	push di
  1415 | 0000098B | 1E                        | 	push ds
  1416 | 0000098C | 06                        | 	push es
  1417 |          |                           | 
  1418 |          |                           | 	; Here we test to see if we are the lowest-level interrupt.
  1419 |          |                           | 	; If we are, we need to save the task's stack that we interrupted
  1420 | 0000098D | A1[8C1D]                  | 	mov ax, [YKISRCallDepth]
  1421 | 00000990 | 85C0                      | 	test ax, ax
  1422 | 00000992 | 7506                      | 	jnz isr_new_piece_not_lowest_interrupt
  1423 |          |                           | 
  1424 |          |                           | 	; Save the SP of the task we interrupted
  1425 | 00000994 | 8B1E[941A]                | 	mov bx, [YKRdyList]
  1426 | 00000998 | 8927                      | 	mov [bx], sp
  1427 |          |                           | 
  1428 |          |                           | isr_new_piece_not_lowest_interrupt:
  1429 |          |                           | 
  1430 | 0000099A | E81707                    | 	call YKEnterISR
  1431 |          |                           | 
  1432 | 0000099D | FB                        | 	sti ;enable interrupts to allow higher priority IRQs to interrupt
  1433 |          |                           | 
  1434 | 0000099E | E80D01                    | 	call c_isr_new_piece ; (Indicate that a new piece has appeared on board...)
  1435 |          |                           | 
  1436 | 000009A1 | FA                        | 	cli ; disable interrupts
  1437 |          |                           | 
  1438 | 000009A2 | B020                      | 	mov	al, 0x20 ;Send EOI command to PIC, informing it that handler is finished
  1439 | 000009A4 | E620                      | 	out	0x20, al
  1440 |          |                           | 
  1441 | 000009A6 | E81D07                    | 	call YKExitISR
  1442 |          |                           | 
  1443 | 000009A9 | 07                        | 	pop es	; restores context of what was running b4 interrupt occured
  1444 | 000009AA | 1F                        | 	pop ds
  1445 | 000009AB | 5F                        | 	pop di
  1446 | 000009AC | 5E                        | 	pop si
  1447 | 000009AD | 5D                        | 	pop bp
  1448 | 000009AE | 5A                        | 	pop dx
  1449 | 000009AF | 59                        | 	pop cx
  1450 | 000009B0 | 5B                        | 	pop bx
  1451 | 000009B1 | 58                        | 	pop ax
  1452 |          |                           | 
  1453 | 000009B2 | CF                        | 	iret ; restores values for IP, CS, flags
  1454 |          |                           | 
  1455 |          |                           | ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  1456 |          |                           | ;					;
  1457 |          |                           | ;	    RECEIVED ISR		;
  1458 |          |                           | ;					;
  1459 |          |                           | ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  1460 |          |                           | 
  1461 |          |                           | isr_received:
  1462 | 000009B3 | 50                        | 	push ax ; save context
  1463 | 000009B4 | 53                        | 	push bx
  1464 | 000009B5 | 51                        | 	push cx
  1465 | 000009B6 | 52                        | 	push dx
  1466 | 000009B7 | 55                        | 	push bp
  1467 | 000009B8 | 56                        | 	push si
  1468 | 000009B9 | 57                        | 	push di
  1469 | 000009BA | 1E                        | 	push ds
  1470 | 000009BB | 06                        | 	push es
  1471 |          |                           | 	; Here we test to see if we are the lowest-level interrupt.
  1472 |          |                           | 	; If we are, we need to save the task's stack that we interrupted
  1473 | 000009BC | A1[8C1D]                  | 	mov ax, [YKISRCallDepth]
  1474 | 000009BF | 85C0                      | 	test ax, ax
  1475 | 000009C1 | 7506                      | 	jnz isr_received_not_lowest_interrupt
  1476 |          |                           | 
  1477 |          |                           | 	; Save the SP of the task we interrupted
  1478 | 000009C3 | 8B1E[941A]                | 	mov bx, [YKRdyList]
  1479 | 000009C7 | 8927                      | 	mov [bx], sp
  1480 |          |                           | 
  1481 |          |                           | isr_received_not_lowest_interrupt:
  1482 |          |                           | 
  1483 | 000009C9 | E8E806                    | 	call YKEnterISR
  1484 |          |                           | 
  1485 | 000009CC | FB                        | 	sti ;enable interrupts to allow higher priority IRQs to interrupt
  1486 |          |                           | 
  1487 | 000009CD | E88C01                    | 	call c_isr_received ; (Indicate that a new piece has appeared on board...)
  1488 |          |                           | 
  1489 | 000009D0 | FA                        | 	cli ; disable interrupts
  1490 |          |                           | 	
  1491 | 000009D1 | B020                      | 	mov	al, 0x20	; Load nonspecific EOI value (0x20) into register al
  1492 | 000009D3 | E620                      | 	out	0x20, al	; Write EOI to PIC (port 0x20)
  1493 |          |                           | 
  1494 | 000009D5 | E8EE06                    | 	call YKExitISR
  1495 |          |                           | 
  1496 | 000009D8 | 07                        | 	pop es	; restores context of what was running b4 interrupt occured
  1497 | 000009D9 | 1F                        | 	pop ds
  1498 | 000009DA | 5F                        | 	pop di
  1499 | 000009DB | 5E                        | 	pop si
  1500 | 000009DC | 5D                        | 	pop bp
  1501 | 000009DD | 5A                        | 	pop dx
  1502 | 000009DE | 59                        | 	pop cx
  1503 | 000009DF | 5B                        | 	pop bx
  1504 | 000009E0 | 58                        | 	pop ax
  1505 |          |                           | 
  1506 | 000009E1 | CF                        | 	iret
  1507 |          |                           | 
  1508 |          |                           | ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  1509 |          |                           | ;					;
  1510 |          |                           | ;	     TOUCHDOWN ISR		;
  1511 |          |                           | ;					;
  1512 |          |                           | ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  1513 |          |                           | 
  1514 |          |                           | isr_touchdown:
  1515 |          |                           | 
  1516 | 000009E2 | B020                      | 	mov	al, 0x20	; Load nonspecific EOI value (0x20) into register al
  1517 | 000009E4 | E620                      | 	out	0x20, al	; Write EOI to PIC (port 0x20)
  1518 |          |                           | 
  1519 | 000009E6 | CF                        | 	iret
  1520 |          |                           | 
  1521 |          |                           | 
  1522 |          |                           | ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  1523 |          |                           | ;					;
  1524 |          |                           | ;	       CLEAR ISR		;
  1525 |          |                           | ;					;
  1526 |          |                           | ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  1527 |          |                           | 
  1528 |          |                           | isr_clear:
  1529 |          |                           | 
  1530 | 000009E7 | B020                      | 	mov	al, 0x20	; Load nonspecific EOI value (0x20) into register al
  1531 | 000009E9 | E620                      | 	out	0x20, al	; Write EOI to PIC (port 0x20)
  1532 |          |                           | 
  1533 | 000009EB | CF                        | 	iret
  1534 |          |                           | 
  1535 |          |                           | 
  1536 |          |                           | 
  1537 |          |                           | ; Generated by c86 (BYU-NASM) 5.1 (beta) from myinth.i
  1538 |          |                           | 	CPU	8086
  1539 |          |                           | 	ALIGN	2
  1540 | 000009EC | E9AB1F                    | 	jmp	main	; Jump to program start
  1541 | 000009EF | 90                        | 	ALIGN	2
  1542 |          |                           | c_isr_reset:
  1543 | 000009F0 | EB0D                      | 	jmp	L_myinth_1
  1544 |          |                           | L_myinth_2:
  1545 | 000009F2 | 30C0                      | 	xor	al, al
  1546 | 000009F4 | 50                        | 	push	ax
  1547 | 000009F5 | E8E2F9                    | 	call	exit
  1548 | 000009F8 | 83C402                    | 	add	sp, 2
  1549 | 000009FB | 89EC                      | 	mov	sp, bp
  1550 | 000009FD | 5D                        | 	pop	bp
  1551 | 000009FE | C3                        | 	ret
  1552 |          |                           | L_myinth_1:
  1553 | 000009FF | 55                        | 	push	bp
  1554 | 00000A00 | 89E5                      | 	mov	bp, sp
  1555 | 00000A02 | EBEE                      | 	jmp	L_myinth_2
  1556 |          |                           | 	ALIGN	2
  1557 |          |                           | c_isr_tick:
  1558 | 00000A04 | EB07                      | 	jmp	L_myinth_4
  1559 |          |                           | L_myinth_5:
  1560 | 00000A06 | E88B05                    | 	call	YKTickHandler
  1561 | 00000A09 | 89EC                      | 	mov	sp, bp
  1562 | 00000A0B | 5D                        | 	pop	bp
  1563 | 00000A0C | C3                        | 	ret
  1564 |          |                           | L_myinth_4:
  1565 | 00000A0D | 55                        | 	push	bp
  1566 | 00000A0E | 89E5                      | 	mov	bp, sp
  1567 | 00000A10 | EBF4                      | 	jmp	L_myinth_5
  1568 |          |                           | L_myinth_8:
  1569 | 00000A12 | 292049474E4F524544-       | 	DB	") IGNORED",0xA,0
  1570 | 00000A1B | 0A00                      | ...
  1571 |          |                           | L_myinth_7:
  1572 | 00000A1D | 0A4B45595052455353-       | 	DB	0xA,"KEYPRESS (",0
  1573 | 00000A26 | 202800                    | ...
  1574 | 00000A29 | 90                        | 	ALIGN	2
  1575 |          |                           | c_isr_keypress:
  1576 | 00000A2A | EB2F                      | 	jmp	L_myinth_9
  1577 |          |                           | L_myinth_10:
  1578 | 00000A2C | A0[C000]                  | 	mov	al, byte [KeyBuffer]
  1579 | 00000A2F | 8846FF                    | 	mov	byte [bp-1], al
  1580 | 00000A32 | B80B00                    | 	mov	ax, 11
  1581 | 00000A35 | 50                        | 	push	ax
  1582 | 00000A36 | B8[1D0A]                  | 	mov	ax, L_myinth_7
  1583 | 00000A39 | 50                        | 	push	ax
  1584 | 00000A3A | E8AFF9                    | 	call	print
  1585 | 00000A3D | 83C404                    | 	add	sp, 4
  1586 | 00000A40 | FF76FF                    | 	push	word [bp-1]
  1587 | 00000A43 | E8BEF9                    | 	call	printChar
  1588 | 00000A46 | 83C402                    | 	add	sp, 2
  1589 | 00000A49 | B80A00                    | 	mov	ax, 10
  1590 | 00000A4C | 50                        | 	push	ax
  1591 | 00000A4D | B8[120A]                  | 	mov	ax, L_myinth_8
  1592 | 00000A50 | 50                        | 	push	ax
  1593 | 00000A51 | E898F9                    | 	call	print
  1594 | 00000A54 | 83C404                    | 	add	sp, 4
  1595 | 00000A57 | 89EC                      | 	mov	sp, bp
  1596 | 00000A59 | 5D                        | 	pop	bp
  1597 | 00000A5A | C3                        | 	ret
  1598 |          |                           | L_myinth_9:
  1599 | 00000A5B | 55                        | 	push	bp
  1600 | 00000A5C | 89E5                      | 	mov	bp, sp
  1601 | 00000A5E | 51                        | 	push	cx
  1602 | 00000A5F | EBCB                      | 	jmp	L_myinth_10
  1603 |          |                           | L_myinth_12:
  1604 | 00000A61 | 0A47414D45204F5645-       | 	DB	0xA,"GAME OVER",0xA,0
  1605 | 00000A6A | 520A00                    | ...
  1606 | 00000A6D | 90                        | 	ALIGN	2
  1607 |          |                           | c_isr_game_over:
  1608 | 00000A6E | EB0E                      | 	jmp	L_myinth_13
  1609 |          |                           | L_myinth_14:
  1610 | 00000A70 | B8[610A]                  | 	mov	ax, L_myinth_12
  1611 | 00000A73 | 50                        | 	push	ax
  1612 | 00000A74 | E8B1F9                    | 	call	printString
  1613 | 00000A77 | 83C402                    | 	add	sp, 2
  1614 | 00000A7A | 89EC                      | 	mov	sp, bp
  1615 | 00000A7C | 5D                        | 	pop	bp
  1616 | 00000A7D | C3                        | 	ret
  1617 |          |                           | L_myinth_13:
  1618 | 00000A7E | 55                        | 	push	bp
  1619 | 00000A7F | 89E5                      | 	mov	bp, sp
  1620 | 00000A81 | EBED                      | 	jmp	L_myinth_14
  1621 | 00000A83 | 90                        | 	ALIGN	2
  1622 |          |                           | L_myinth_16:
  1623 | 00000A84 | 0000                      | 	DW	0
  1624 |          |                           | L_myinth_17:
  1625 | 00000A86 | 0A2A2A2A2A2A6E6577-       | 	DB	0xA,"*****new piece appeared on board*****",0xA,0
  1626 | 00000A8F | 207069656365206170-       | ...
  1627 | 00000A98 | 706561726564206F6E-       | ...
  1628 | 00000AA1 | 20626F6172642A2A2A-       | ...
  1629 | 00000AAA | 2A2A0A00                  | ...
  1630 |          |                           | 	ALIGN	2
  1631 |          |                           | c_isr_new_piece:
  1632 | 00000AAE | E9A200                    | 	jmp	L_myinth_18
  1633 |          |                           | L_myinth_19:
  1634 | 00000AB1 | A1[C200]                  | 	mov	ax, word [NewPieceType]
  1635 | 00000AB4 | 8946FE                    | 	mov	word [bp-2], ax
  1636 | 00000AB7 | A1[C600]                  | 	mov	ax, word [NewPieceOrientation]
  1637 | 00000ABA | 8946FC                    | 	mov	word [bp-4], ax
  1638 | 00000ABD | A1[C400]                  | 	mov	ax, word [NewPieceID]
  1639 | 00000AC0 | 8946FA                    | 	mov	word [bp-6], ax
  1640 | 00000AC3 | A1[C800]                  | 	mov	ax, word [NewPieceColumn]
  1641 | 00000AC6 | 8946F8                    | 	mov	word [bp-8], ax
  1642 | 00000AC9 | B8[860A]                  | 	mov	ax, L_myinth_17
  1643 | 00000ACC | 50                        | 	push	ax
  1644 | 00000ACD | E858F9                    | 	call	printString
  1645 | 00000AD0 | 83C402                    | 	add	sp, 2
  1646 | 00000AD3 | A1[840A]                  | 	mov	ax, word [L_myinth_16]
  1647 | 00000AD6 | B90300                    | 	mov	cx, 3
  1648 | 00000AD9 | D3E0                      | 	shl	ax, cl
  1649 | 00000ADB | 89C6                      | 	mov	si, ax
  1650 | 00000ADD | 81C6[6E36]                | 	add	si, newPieceArray
  1651 | 00000AE1 | 8B46FA                    | 	mov	ax, word [bp-6]
  1652 | 00000AE4 | 8904                      | 	mov	word [si], ax
  1653 | 00000AE6 | A1[840A]                  | 	mov	ax, word [L_myinth_16]
  1654 | 00000AE9 | B90300                    | 	mov	cx, 3
  1655 | 00000AEC | D3E0                      | 	shl	ax, cl
  1656 | 00000AEE | 05[6E36]                  | 	add	ax, newPieceArray
  1657 | 00000AF1 | 89C6                      | 	mov	si, ax
  1658 | 00000AF3 | 83C602                    | 	add	si, 2
  1659 | 00000AF6 | 8B46FE                    | 	mov	ax, word [bp-2]
  1660 | 00000AF9 | 8904                      | 	mov	word [si], ax
  1661 | 00000AFB | A1[840A]                  | 	mov	ax, word [L_myinth_16]
  1662 | 00000AFE | B90300                    | 	mov	cx, 3
  1663 | 00000B01 | D3E0                      | 	shl	ax, cl
  1664 | 00000B03 | 05[6E36]                  | 	add	ax, newPieceArray
  1665 | 00000B06 | 89C6                      | 	mov	si, ax
  1666 | 00000B08 | 83C604                    | 	add	si, 4
  1667 | 00000B0B | 8B46FC                    | 	mov	ax, word [bp-4]
  1668 | 00000B0E | 8904                      | 	mov	word [si], ax
  1669 | 00000B10 | A1[840A]                  | 	mov	ax, word [L_myinth_16]
  1670 | 00000B13 | B90300                    | 	mov	cx, 3
  1671 | 00000B16 | D3E0                      | 	shl	ax, cl
  1672 | 00000B18 | 05[6E36]                  | 	add	ax, newPieceArray
  1673 | 00000B1B | 89C6                      | 	mov	si, ax
  1674 | 00000B1D | 83C606                    | 	add	si, 6
  1675 | 00000B20 | 8B46F8                    | 	mov	ax, word [bp-8]
  1676 | 00000B23 | 8904                      | 	mov	word [si], ax
  1677 | 00000B25 | A1[840A]                  | 	mov	ax, word [L_myinth_16]
  1678 | 00000B28 | B90300                    | 	mov	cx, 3
  1679 | 00000B2B | D3E0                      | 	shl	ax, cl
  1680 | 00000B2D | 05[6E36]                  | 	add	ax, newPieceArray
  1681 | 00000B30 | 50                        | 	push	ax
  1682 | 00000B31 | FF36[5E2A]                | 	push	word [newPieceQueuePTR]
  1683 | 00000B35 | E8C00C                    | 	call	YKQPost
  1684 | 00000B38 | 83C404                    | 	add	sp, 4
  1685 | 00000B3B | A1[840A]                  | 	mov	ax, word [L_myinth_16]
  1686 | 00000B3E | 40                        | 	inc	ax
  1687 | 00000B3F | A3[840A]                  | 	mov	word [L_myinth_16], ax
  1688 | 00000B42 | 833E[840A]28              | 	cmp	word [L_myinth_16], 40
  1689 | 00000B47 | 7506                      | 	jne	L_myinth_20
  1690 | 00000B49 | C706[840A]0000            | 	mov	word [L_myinth_16], 0
  1691 |          |                           | L_myinth_20:
  1692 | 00000B4F | 89EC                      | 	mov	sp, bp
  1693 | 00000B51 | 5D                        | 	pop	bp
  1694 | 00000B52 | C3                        | 	ret
  1695 |          |                           | L_myinth_18:
  1696 | 00000B53 | 55                        | 	push	bp
  1697 | 00000B54 | 89E5                      | 	mov	bp, sp
  1698 | 00000B56 | 83EC08                    | 	sub	sp, 8
  1699 | 00000B59 | E955FF                    | 	jmp	L_myinth_19
  1700 |          |                           | 	ALIGN	2
  1701 |          |                           | c_isr_received:
  1702 | 00000B5C | EB12                      | 	jmp	L_myinth_22
  1703 |          |                           | L_myinth_23:
  1704 | 00000B5E | B80100                    | 	mov	ax, 1
  1705 | 00000B61 | 50                        | 	push	ax
  1706 | 00000B62 | FF36[602A]                | 	push	word [pieceMoveEvent]
  1707 | 00000B66 | E8D706                    | 	call	YKEventSet
  1708 | 00000B69 | 83C404                    | 	add	sp, 4
  1709 | 00000B6C | 89EC                      | 	mov	sp, bp
  1710 | 00000B6E | 5D                        | 	pop	bp
  1711 | 00000B6F | C3                        | 	ret
  1712 |          |                           | L_myinth_22:
  1713 | 00000B70 | 55                        | 	push	bp
  1714 | 00000B71 | 89E5                      | 	mov	bp, sp
  1715 | 00000B73 | EBE9                      | 	jmp	L_myinth_23
  1716 |          |                           | ; Generated by c86 (BYU-NASM) 5.1 (beta) from yakc.i
  1717 |          |                           | 	CPU	8086
  1718 | 00000B75 | 90                        | 	ALIGN	2
  1719 | 00000B76 | E9211E                    | 	jmp	main	; Jump to program start
  1720 |          |                           | started_running:
  1721 | 00000B79 | 00                        | 	DB	0
  1722 |          |                           | 	ALIGN	2
  1723 |          |                           | YKInitialize:
  1724 | 00000B7A | E91501                    | 	jmp	L_yakc_1
  1725 |          |                           | L_yakc_2:
  1726 | 00000B7D | C706[8E1A]0000            | 	mov	word [YKCtxSwCount], 0
  1727 | 00000B83 | C706[901A]0000            | 	mov	word [YKIdleCount], 0
  1728 | 00000B89 | C706[C61D]0000            | 	mov	word [YKCurrentlyExecuting], 0
  1729 | 00000B8F | C706[8C1D]0000            | 	mov	word [YKISRCallDepth], 0
  1730 | 00000B95 | E83012                    | 	call	YKEnterMutex
  1731 | 00000B98 | C706[9A1A][9C1A]          | 	mov	word [YKAvailTCBList], YKTCBArray
  1732 | 00000B9E | C746FE0000                | 	mov	word [bp-2], 0
  1733 | 00000BA3 | EB26                      | 	jmp	L_yakc_4
  1734 |          |                           | L_yakc_3:
  1735 | 00000BA5 | 8B46FE                    | 	mov	ax, word [bp-2]
  1736 | 00000BA8 | 40                        | 	inc	ax
  1737 | 00000BA9 | B91800                    | 	mov	cx, 24
  1738 | 00000BAC | F7E9                      | 	imul	cx
  1739 | 00000BAE | 05[9C1A]                  | 	add	ax, YKTCBArray
  1740 | 00000BB1 | 50                        | 	push	ax
  1741 | 00000BB2 | 8B46FE                    | 	mov	ax, word [bp-2]
  1742 | 00000BB5 | B91800                    | 	mov	cx, 24
  1743 | 00000BB8 | F7E9                      | 	imul	cx
  1744 | 00000BBA | 89C2                      | 	mov	dx, ax
  1745 | 00000BBC | 81C2[9C1A]                | 	add	dx, YKTCBArray
  1746 | 00000BC0 | 89D6                      | 	mov	si, dx
  1747 | 00000BC2 | 83C60A                    | 	add	si, 10
  1748 | 00000BC5 | 58                        | 	pop	ax
  1749 | 00000BC6 | 8904                      | 	mov	word [si], ax
  1750 |          |                           | L_yakc_6:
  1751 | 00000BC8 | FF46FE                    | 	inc	word [bp-2]
  1752 |          |                           | L_yakc_4:
  1753 | 00000BCB | 837EFE09                  | 	cmp	word [bp-2], 9
  1754 | 00000BCF | 7CD4                      | 	jl	L_yakc_3
  1755 |          |                           | L_yakc_5:
  1756 | 00000BD1 | C706[7E1B]0000            | 	mov	word [(226+YKTCBArray)], 0
  1757 | 00000BD7 | C746FE0000                | 	mov	word [bp-2], 0
  1758 | 00000BDC | EB27                      | 	jmp	L_yakc_8
  1759 |          |                           | L_yakc_7:
  1760 | 00000BDE | 8B46FE                    | 	mov	ax, word [bp-2]
  1761 | 00000BE1 | D1E0                      | 	shl	ax, 1
  1762 | 00000BE3 | D1E0                      | 	shl	ax, 1
  1763 | 00000BE5 | 05[8E1D]                  | 	add	ax, YKSEMArray
  1764 | 00000BE8 | 89C6                      | 	mov	si, ax
  1765 | 00000BEA | 83C602                    | 	add	si, 2
  1766 | 00000BED | C7040000                  | 	mov	word [si], 0
  1767 | 00000BF1 | 8B46FE                    | 	mov	ax, word [bp-2]
  1768 | 00000BF4 | D1E0                      | 	shl	ax, 1
  1769 | 00000BF6 | D1E0                      | 	shl	ax, 1
  1770 | 00000BF8 | 89C6                      | 	mov	si, ax
  1771 | 00000BFA | 81C6[8E1D]                | 	add	si, YKSEMArray
  1772 | 00000BFE | C704F6FF                  | 	mov	word [si], -10
  1773 |          |                           | L_yakc_10:
  1774 | 00000C02 | FF46FE                    | 	inc	word [bp-2]
  1775 |          |                           | L_yakc_8:
  1776 | 00000C05 | 837EFE01                  | 	cmp	word [bp-2], 1
  1777 | 00000C09 | 7CD3                      | 	jl	L_yakc_7
  1778 |          |                           | L_yakc_9:
  1779 | 00000C0B | C746FE0000                | 	mov	word [bp-2], 0
  1780 | 00000C10 | EB65                      | 	jmp	L_yakc_12
  1781 |          |                           | L_yakc_11:
  1782 | 00000C12 | 8B46FE                    | 	mov	ax, word [bp-2]
  1783 | 00000C15 | B90A00                    | 	mov	cx, 10
  1784 | 00000C18 | F7E9                      | 	imul	cx
  1785 | 00000C1A | 89C6                      | 	mov	si, ax
  1786 | 00000C1C | 81C6[921D]                | 	add	si, YKQueueArray
  1787 | 00000C20 | C7040000                  | 	mov	word [si], 0
  1788 | 00000C24 | 8B46FE                    | 	mov	ax, word [bp-2]
  1789 | 00000C27 | B90A00                    | 	mov	cx, 10
  1790 | 00000C2A | F7E9                      | 	imul	cx
  1791 | 00000C2C | 05[921D]                  | 	add	ax, YKQueueArray
  1792 | 00000C2F | 89C6                      | 	mov	si, ax
  1793 | 00000C31 | 83C602                    | 	add	si, 2
  1794 | 00000C34 | C7040000                  | 	mov	word [si], 0
  1795 | 00000C38 | 8B46FE                    | 	mov	ax, word [bp-2]
  1796 | 00000C3B | B90A00                    | 	mov	cx, 10
  1797 | 00000C3E | F7E9                      | 	imul	cx
  1798 | 00000C40 | 05[921D]                  | 	add	ax, YKQueueArray
  1799 | 00000C43 | 89C6                      | 	mov	si, ax
  1800 | 00000C45 | 83C604                    | 	add	si, 4
  1801 | 00000C48 | C7040000                  | 	mov	word [si], 0
  1802 | 00000C4C | 8B46FE                    | 	mov	ax, word [bp-2]
  1803 | 00000C4F | B90A00                    | 	mov	cx, 10
  1804 | 00000C52 | F7E9                      | 	imul	cx
  1805 | 00000C54 | 05[921D]                  | 	add	ax, YKQueueArray
  1806 | 00000C57 | 89C6                      | 	mov	si, ax
  1807 | 00000C59 | 83C606                    | 	add	si, 6
  1808 | 00000C5C | C7040000                  | 	mov	word [si], 0
  1809 | 00000C60 | 8B46FE                    | 	mov	ax, word [bp-2]
  1810 | 00000C63 | B90A00                    | 	mov	cx, 10
  1811 | 00000C66 | F7E9                      | 	imul	cx
  1812 | 00000C68 | 05[921D]                  | 	add	ax, YKQueueArray
  1813 | 00000C6B | 89C6                      | 	mov	si, ax
  1814 | 00000C6D | 83C608                    | 	add	si, 8
  1815 | 00000C70 | C7040000                  | 	mov	word [si], 0
  1816 |          |                           | L_yakc_14:
  1817 | 00000C74 | FF46FE                    | 	inc	word [bp-2]
  1818 |          |                           | L_yakc_12:
  1819 | 00000C77 | 837EFE04                  | 	cmp	word [bp-2], 4
  1820 | 00000C7B | 7C95                      | 	jl	L_yakc_11
  1821 |          |                           | L_yakc_13:
  1822 | 00000C7D | B064                      | 	mov	al, 100
  1823 | 00000C7F | 50                        | 	push	ax
  1824 | 00000C80 | B8[8C1D]                  | 	mov	ax, (idleStack+512)
  1825 | 00000C83 | 50                        | 	push	ax
  1826 | 00000C84 | B8[9A0C]                  | 	mov	ax, YKIdleTask
  1827 | 00000C87 | 50                        | 	push	ax
  1828 | 00000C88 | E82B00                    | 	call	YKNewTask
  1829 | 00000C8B | 83C406                    | 	add	sp, 6
  1830 | 00000C8E | 89EC                      | 	mov	sp, bp
  1831 | 00000C90 | 5D                        | 	pop	bp
  1832 | 00000C91 | C3                        | 	ret
  1833 |          |                           | L_yakc_1:
  1834 | 00000C92 | 55                        | 	push	bp
  1835 | 00000C93 | 89E5                      | 	mov	bp, sp
  1836 | 00000C95 | 51                        | 	push	cx
  1837 | 00000C96 | E9E4FE                    | 	jmp	L_yakc_2
  1838 | 00000C99 | 90                        | 	ALIGN	2
  1839 |          |                           | YKIdleTask:
  1840 | 00000C9A | EB15                      | 	jmp	L_yakc_16
  1841 |          |                           | L_yakc_17:
  1842 | 00000C9C | EB0D                      | 	jmp	L_yakc_19
  1843 |          |                           | L_yakc_18:
  1844 | 00000C9E | E82711                    | 	call	YKEnterMutex
  1845 | 00000CA1 | A1[901A]                  | 	mov	ax, word [YKIdleCount]
  1846 | 00000CA4 | 40                        | 	inc	ax
  1847 | 00000CA5 | A3[901A]                  | 	mov	word [YKIdleCount], ax
  1848 | 00000CA8 | E81F11                    | 	call	YKExitMutex
  1849 |          |                           | L_yakc_19:
  1850 | 00000CAB | EBF1                      | 	jmp	L_yakc_18
  1851 |          |                           | L_yakc_20:
  1852 | 00000CAD | 89EC                      | 	mov	sp, bp
  1853 | 00000CAF | 5D                        | 	pop	bp
  1854 | 00000CB0 | C3                        | 	ret
  1855 |          |                           | L_yakc_16:
  1856 | 00000CB1 | 55                        | 	push	bp
  1857 | 00000CB2 | 89E5                      | 	mov	bp, sp
  1858 | 00000CB4 | EBE6                      | 	jmp	L_yakc_17
  1859 |          |                           | 	ALIGN	2
  1860 |          |                           | YKNewTask:
  1861 | 00000CB6 | E97E01                    | 	jmp	L_yakc_22
  1862 |          |                           | L_yakc_23:
  1863 | 00000CB9 | 8B4606                    | 	mov	ax, word [bp+6]
  1864 | 00000CBC | 83E802                    | 	sub	ax, 2
  1865 | 00000CBF | 894606                    | 	mov	word [bp+6], ax
  1866 | 00000CC2 | A1[9A1A]                  | 	mov	ax, word [YKAvailTCBList]
  1867 | 00000CC5 | 8946FE                    | 	mov	word [bp-2], ax
  1868 | 00000CC8 | 8B76FE                    | 	mov	si, word [bp-2]
  1869 | 00000CCB | 83C60A                    | 	add	si, 10
  1870 | 00000CCE | 8B04                      | 	mov	ax, word [si]
  1871 | 00000CD0 | A3[9A1A]                  | 	mov	word [YKAvailTCBList], ax
  1872 | 00000CD3 | 8B76FE                    | 	mov	si, word [bp-2]
  1873 | 00000CD6 | 83C608                    | 	add	si, 8
  1874 | 00000CD9 | C7040000                  | 	mov	word [si], 0
  1875 | 00000CDD | 8A4608                    | 	mov	al, byte [bp+8]
  1876 | 00000CE0 | 30E4                      | 	xor	ah, ah
  1877 | 00000CE2 | 8B76FE                    | 	mov	si, word [bp-2]
  1878 | 00000CE5 | 83C606                    | 	add	si, 6
  1879 | 00000CE8 | 8904                      | 	mov	word [si], ax
  1880 | 00000CEA | E8DB10                    | 	call	YKEnterMutex
  1881 | 00000CED | A1[941A]                  | 	mov	ax, word [YKRdyList]
  1882 | 00000CF0 | 85C0                      | 	test	ax, ax
  1883 | 00000CF2 | 751C                      | 	jne	L_yakc_24
  1884 | 00000CF4 | 8B46FE                    | 	mov	ax, word [bp-2]
  1885 | 00000CF7 | A3[941A]                  | 	mov	word [YKRdyList], ax
  1886 | 00000CFA | 8B76FE                    | 	mov	si, word [bp-2]
  1887 | 00000CFD | 83C60A                    | 	add	si, 10
  1888 | 00000D00 | C7040000                  | 	mov	word [si], 0
  1889 | 00000D04 | 8B76FE                    | 	mov	si, word [bp-2]
  1890 | 00000D07 | 83C60C                    | 	add	si, 12
  1891 | 00000D0A | C7040000                  | 	mov	word [si], 0
  1892 | 00000D0E | EB6F                      | 	jmp	L_yakc_25
  1893 |          |                           | L_yakc_24:
  1894 | 00000D10 | A1[941A]                  | 	mov	ax, word [YKRdyList]
  1895 | 00000D13 | 8946FC                    | 	mov	word [bp-4], ax
  1896 | 00000D16 | EB0B                      | 	jmp	L_yakc_27
  1897 |          |                           | L_yakc_26:
  1898 | 00000D18 | 8B76FC                    | 	mov	si, word [bp-4]
  1899 | 00000D1B | 83C60A                    | 	add	si, 10
  1900 | 00000D1E | 8B04                      | 	mov	ax, word [si]
  1901 | 00000D20 | 8946FC                    | 	mov	word [bp-4], ax
  1902 |          |                           | L_yakc_27:
  1903 | 00000D23 | 8B76FC                    | 	mov	si, word [bp-4]
  1904 | 00000D26 | 83C606                    | 	add	si, 6
  1905 | 00000D29 | 8B7EFE                    | 	mov	di, word [bp-2]
  1906 | 00000D2C | 83C706                    | 	add	di, 6
  1907 | 00000D2F | 8B05                      | 	mov	ax, word [di]
  1908 | 00000D31 | 3B04                      | 	cmp	ax, word [si]
  1909 | 00000D33 | 7FE3                      | 	jg	L_yakc_26
  1910 |          |                           | L_yakc_28:
  1911 | 00000D35 | 8B76FC                    | 	mov	si, word [bp-4]
  1912 | 00000D38 | 83C60C                    | 	add	si, 12
  1913 | 00000D3B | 8B04                      | 	mov	ax, word [si]
  1914 | 00000D3D | 85C0                      | 	test	ax, ax
  1915 | 00000D3F | 7508                      | 	jne	L_yakc_29
  1916 | 00000D41 | 8B46FE                    | 	mov	ax, word [bp-2]
  1917 | 00000D44 | A3[941A]                  | 	mov	word [YKRdyList], ax
  1918 | 00000D47 | EB10                      | 	jmp	L_yakc_30
  1919 |          |                           | L_yakc_29:
  1920 | 00000D49 | 8B76FC                    | 	mov	si, word [bp-4]
  1921 | 00000D4C | 83C60C                    | 	add	si, 12
  1922 | 00000D4F | 8B34                      | 	mov	si, word [si]
  1923 | 00000D51 | 83C60A                    | 	add	si, 10
  1924 | 00000D54 | 8B46FE                    | 	mov	ax, word [bp-2]
  1925 | 00000D57 | 8904                      | 	mov	word [si], ax
  1926 |          |                           | L_yakc_30:
  1927 | 00000D59 | 8B76FC                    | 	mov	si, word [bp-4]
  1928 | 00000D5C | 83C60C                    | 	add	si, 12
  1929 | 00000D5F | 8B7EFE                    | 	mov	di, word [bp-2]
  1930 | 00000D62 | 83C70C                    | 	add	di, 12
  1931 | 00000D65 | 8B04                      | 	mov	ax, word [si]
  1932 | 00000D67 | 8905                      | 	mov	word [di], ax
  1933 | 00000D69 | 8B76FE                    | 	mov	si, word [bp-2]
  1934 | 00000D6C | 83C60A                    | 	add	si, 10
  1935 | 00000D6F | 8B46FC                    | 	mov	ax, word [bp-4]
  1936 | 00000D72 | 8904                      | 	mov	word [si], ax
  1937 | 00000D74 | 8B76FC                    | 	mov	si, word [bp-4]
  1938 | 00000D77 | 83C60C                    | 	add	si, 12
  1939 | 00000D7A | 8B46FE                    | 	mov	ax, word [bp-2]
  1940 | 00000D7D | 8904                      | 	mov	word [si], ax
  1941 |          |                           | L_yakc_25:
  1942 | 00000D7F | 8B76FE                    | 	mov	si, word [bp-2]
  1943 | 00000D82 | 8B4606                    | 	mov	ax, word [bp+6]
  1944 | 00000D85 | 8904                      | 	mov	word [si], ax
  1945 | 00000D87 | 8B76FE                    | 	mov	si, word [bp-2]
  1946 | 00000D8A | 83C602                    | 	add	si, 2
  1947 | 00000D8D | C7040000                  | 	mov	word [si], 0
  1948 | 00000D91 | 8B76FE                    | 	mov	si, word [bp-2]
  1949 | 00000D94 | 8B04                      | 	mov	ax, word [si]
  1950 | 00000D96 | 83E816                    | 	sub	ax, 22
  1951 | 00000D99 | 8904                      | 	mov	word [si], ax
  1952 | 00000D9B | 8B76FE                    | 	mov	si, word [bp-2]
  1953 | 00000D9E | 8B34                      | 	mov	si, word [si]
  1954 | 00000DA0 | 83C616                    | 	add	si, 22
  1955 | 00000DA3 | C7040002                  | 	mov	word [si], 512
  1956 | 00000DA7 | 8B76FE                    | 	mov	si, word [bp-2]
  1957 | 00000DAA | 8B34                      | 	mov	si, word [si]
  1958 | 00000DAC | 83C614                    | 	add	si, 20
  1959 | 00000DAF | C7040000                  | 	mov	word [si], 0
  1960 | 00000DB3 | 8B76FE                    | 	mov	si, word [bp-2]
  1961 | 00000DB6 | 8B34                      | 	mov	si, word [si]
  1962 | 00000DB8 | 83C612                    | 	add	si, 18
  1963 | 00000DBB | 8B4604                    | 	mov	ax, word [bp+4]
  1964 | 00000DBE | 8904                      | 	mov	word [si], ax
  1965 | 00000DC0 | 8B76FE                    | 	mov	si, word [bp-2]
  1966 | 00000DC3 | 8B34                      | 	mov	si, word [si]
  1967 | 00000DC5 | 83C610                    | 	add	si, 16
  1968 | 00000DC8 | C7040000                  | 	mov	word [si], 0
  1969 | 00000DCC | 8B76FE                    | 	mov	si, word [bp-2]
  1970 | 00000DCF | 8B34                      | 	mov	si, word [si]
  1971 | 00000DD1 | 83C60E                    | 	add	si, 14
  1972 | 00000DD4 | C7040000                  | 	mov	word [si], 0
  1973 | 00000DD8 | 8B76FE                    | 	mov	si, word [bp-2]
  1974 | 00000DDB | 8B34                      | 	mov	si, word [si]
  1975 | 00000DDD | 83C60C                    | 	add	si, 12
  1976 | 00000DE0 | C7040000                  | 	mov	word [si], 0
  1977 | 00000DE4 | 8B76FE                    | 	mov	si, word [bp-2]
  1978 | 00000DE7 | 8B34                      | 	mov	si, word [si]
  1979 | 00000DE9 | 83C60A                    | 	add	si, 10
  1980 | 00000DEC | C7040000                  | 	mov	word [si], 0
  1981 | 00000DF0 | 8B76FE                    | 	mov	si, word [bp-2]
  1982 | 00000DF3 | 8B34                      | 	mov	si, word [si]
  1983 | 00000DF5 | 83C608                    | 	add	si, 8
  1984 | 00000DF8 | C7040000                  | 	mov	word [si], 0
  1985 | 00000DFC | 8B76FE                    | 	mov	si, word [bp-2]
  1986 | 00000DFF | 8B34                      | 	mov	si, word [si]
  1987 | 00000E01 | 83C606                    | 	add	si, 6
  1988 | 00000E04 | C7040000                  | 	mov	word [si], 0
  1989 | 00000E08 | 8B76FE                    | 	mov	si, word [bp-2]
  1990 | 00000E0B | 8B34                      | 	mov	si, word [si]
  1991 | 00000E0D | 83C604                    | 	add	si, 4
  1992 | 00000E10 | C7040000                  | 	mov	word [si], 0
  1993 | 00000E14 | 8B76FE                    | 	mov	si, word [bp-2]
  1994 | 00000E17 | 8B34                      | 	mov	si, word [si]
  1995 | 00000E19 | 83C602                    | 	add	si, 2
  1996 | 00000E1C | C7040000                  | 	mov	word [si], 0
  1997 | 00000E20 | 8B76FE                    | 	mov	si, word [bp-2]
  1998 | 00000E23 | 8B34                      | 	mov	si, word [si]
  1999 | 00000E25 | C7040000                  | 	mov	word [si], 0
  2000 | 00000E29 | B80100                    | 	mov	ax, 1
  2001 | 00000E2C | 50                        | 	push	ax
  2002 | 00000E2D | E85800                    | 	call	YKScheduler
  2003 | 00000E30 | 83C402                    | 	add	sp, 2
  2004 | 00000E33 | 89EC                      | 	mov	sp, bp
  2005 | 00000E35 | 5D                        | 	pop	bp
  2006 | 00000E36 | C3                        | 	ret
  2007 |          |                           | L_yakc_22:
  2008 | 00000E37 | 55                        | 	push	bp
  2009 | 00000E38 | 89E5                      | 	mov	bp, sp
  2010 | 00000E3A | 83EC04                    | 	sub	sp, 4
  2011 | 00000E3D | E979FE                    | 	jmp	L_yakc_23
  2012 |          |                           | L_yakc_32:
  2013 | 00000E40 | 72756E2063616C6C65-       | 	DB	"run called. Calling the scheduler",0xA,0
  2014 | 00000E49 | 642E2043616C6C696E-       | ...
  2015 | 00000E52 | 672074686520736368-       | ...
  2016 | 00000E5B | 6564756C65720A00          | ...
  2017 | 00000E63 | 90                        | 	ALIGN	2
  2018 |          |                           | YKRun:
  2019 | 00000E64 | EB1C                      | 	jmp	L_yakc_33
  2020 |          |                           | L_yakc_34:
  2021 | 00000E66 | B8[400E]                  | 	mov	ax, L_yakc_32
  2022 | 00000E69 | 50                        | 	push	ax
  2023 | 00000E6A | E8BBF5                    | 	call	printString
  2024 | 00000E6D | 83C402                    | 	add	sp, 2
  2025 | 00000E70 | C606[790B]01              | 	mov	byte [started_running], 1
  2026 | 00000E75 | 31C0                      | 	xor	ax, ax
  2027 | 00000E77 | 50                        | 	push	ax
  2028 | 00000E78 | E80D00                    | 	call	YKScheduler
  2029 | 00000E7B | 83C402                    | 	add	sp, 2
  2030 | 00000E7E | 89EC                      | 	mov	sp, bp
  2031 | 00000E80 | 5D                        | 	pop	bp
  2032 | 00000E81 | C3                        | 	ret
  2033 |          |                           | L_yakc_33:
  2034 | 00000E82 | 55                        | 	push	bp
  2035 | 00000E83 | 89E5                      | 	mov	bp, sp
  2036 | 00000E85 | EBDF                      | 	jmp	L_yakc_34
  2037 | 00000E87 | 90                        | 	ALIGN	2
  2038 |          |                           | YKScheduler:
  2039 | 00000E88 | EB74                      | 	jmp	L_yakc_36
  2040 |          |                           | L_yakc_37:
  2041 | 00000E8A | A1[941A]                  | 	mov	ax, word [YKRdyList]
  2042 | 00000E8D | 8946FE                    | 	mov	word [bp-2], ax
  2043 | 00000E90 | A1[C61D]                  | 	mov	ax, word [YKCurrentlyExecuting]
  2044 | 00000E93 | 8946FC                    | 	mov	word [bp-4], ax
  2045 | 00000E96 | A0[790B]                  | 	mov	al, byte [started_running]
  2046 | 00000E99 | 84C0                      | 	test	al, al
  2047 | 00000E9B | 745D                      | 	je	L_yakc_39
  2048 |          |                           | L_yakc_38:
  2049 | 00000E9D | 8B46FE                    | 	mov	ax, word [bp-2]
  2050 | 00000EA0 | 3B06[C61D]                | 	cmp	ax, word [YKCurrentlyExecuting]
  2051 | 00000EA4 | 7454                      | 	je	L_yakc_39
  2052 |          |                           | L_yakc_40:
  2053 | 00000EA6 | A1[8E1A]                  | 	mov	ax, word [YKCtxSwCount]
  2054 | 00000EA9 | 40                        | 	inc	ax
  2055 | 00000EAA | A3[8E1A]                  | 	mov	word [YKCtxSwCount], ax
  2056 | 00000EAD | 8B46FE                    | 	mov	ax, word [bp-2]
  2057 | 00000EB0 | A3[C61D]                  | 	mov	word [YKCurrentlyExecuting], ax
  2058 | 00000EB3 | 8B4604                    | 	mov	ax, word [bp+4]
  2059 | 00000EB6 | 85C0                      | 	test	ax, ax
  2060 | 00000EB8 | 7520                      | 	jne	L_yakc_41
  2061 | 00000EBA | 8B76FE                    | 	mov	si, word [bp-2]
  2062 | 00000EBD | 83C602                    | 	add	si, 2
  2063 | 00000EC0 | FF34                      | 	push	word [si]
  2064 | 00000EC2 | 8B76FE                    | 	mov	si, word [bp-2]
  2065 | 00000EC5 | FF34                      | 	push	word [si]
  2066 | 00000EC7 | B80100                    | 	mov	ax, 1
  2067 | 00000ECA | 50                        | 	push	ax
  2068 | 00000ECB | B80100                    | 	mov	ax, 1
  2069 | 00000ECE | 50                        | 	push	ax
  2070 | 00000ECF | 31C0                      | 	xor	ax, ax
  2071 | 00000ED1 | 50                        | 	push	ax
  2072 | 00000ED2 | E8070F                    | 	call	YKDispatcher_save_context
  2073 | 00000ED5 | 83C40A                    | 	add	sp, 10
  2074 | 00000ED8 | EB20                      | 	jmp	L_yakc_42
  2075 |          |                           | L_yakc_41:
  2076 | 00000EDA | 8B76FE                    | 	mov	si, word [bp-2]
  2077 | 00000EDD | 83C602                    | 	add	si, 2
  2078 | 00000EE0 | FF34                      | 	push	word [si]
  2079 | 00000EE2 | 8B76FE                    | 	mov	si, word [bp-2]
  2080 | 00000EE5 | FF34                      | 	push	word [si]
  2081 | 00000EE7 | 8B46FC                    | 	mov	ax, word [bp-4]
  2082 | 00000EEA | 83C002                    | 	add	ax, 2
  2083 | 00000EED | 50                        | 	push	ax
  2084 | 00000EEE | FF76FC                    | 	push	word [bp-4]
  2085 | 00000EF1 | FF7604                    | 	push	word [bp+4]
  2086 | 00000EF4 | E8E50E                    | 	call	YKDispatcher_save_context
  2087 | 00000EF7 | 83C40A                    | 	add	sp, 10
  2088 |          |                           | L_yakc_42:
  2089 |          |                           | L_yakc_39:
  2090 | 00000EFA | 89EC                      | 	mov	sp, bp
  2091 | 00000EFC | 5D                        | 	pop	bp
  2092 | 00000EFD | C3                        | 	ret
  2093 |          |                           | L_yakc_36:
  2094 | 00000EFE | 55                        | 	push	bp
  2095 | 00000EFF | 89E5                      | 	mov	bp, sp
  2096 | 00000F01 | 83EC04                    | 	sub	sp, 4
  2097 | 00000F04 | EB84                      | 	jmp	L_yakc_37
  2098 |          |                           | 	ALIGN	2
  2099 |          |                           | YKDelayTask:
  2100 | 00000F06 | E98400                    | 	jmp	L_yakc_44
  2101 |          |                           | L_yakc_45:
  2102 | 00000F09 | E8BC0E                    | 	call	YKEnterMutex
  2103 | 00000F0C | 8B4604                    | 	mov	ax, word [bp+4]
  2104 | 00000F0F | 85C0                      | 	test	ax, ax
  2105 | 00000F11 | 7464                      | 	je	L_yakc_46
  2106 | 00000F13 | A1[941A]                  | 	mov	ax, word [YKRdyList]
  2107 | 00000F16 | 8946FE                    | 	mov	word [bp-2], ax
  2108 | 00000F19 | 8B76FE                    | 	mov	si, word [bp-2]
  2109 | 00000F1C | 83C60A                    | 	add	si, 10
  2110 | 00000F1F | 8B04                      | 	mov	ax, word [si]
  2111 | 00000F21 | A3[941A]                  | 	mov	word [YKRdyList], ax
  2112 | 00000F24 | 8B76FE                    | 	mov	si, word [bp-2]
  2113 | 00000F27 | 83C60A                    | 	add	si, 10
  2114 | 00000F2A | 8B34                      | 	mov	si, word [si]
  2115 | 00000F2C | 83C60C                    | 	add	si, 12
  2116 | 00000F2F | C7040000                  | 	mov	word [si], 0
  2117 | 00000F33 | 8B76FE                    | 	mov	si, word [bp-2]
  2118 | 00000F36 | 83C60A                    | 	add	si, 10
  2119 | 00000F39 | A1[961A]                  | 	mov	ax, word [YKSuspList]
  2120 | 00000F3C | 8904                      | 	mov	word [si], ax
  2121 | 00000F3E | 8B46FE                    | 	mov	ax, word [bp-2]
  2122 | 00000F41 | A3[961A]                  | 	mov	word [YKSuspList], ax
  2123 | 00000F44 | 8B76FE                    | 	mov	si, word [bp-2]
  2124 | 00000F47 | 83C60C                    | 	add	si, 12
  2125 | 00000F4A | C7040000                  | 	mov	word [si], 0
  2126 | 00000F4E | 8B76FE                    | 	mov	si, word [bp-2]
  2127 | 00000F51 | 83C60A                    | 	add	si, 10
  2128 | 00000F54 | 8B04                      | 	mov	ax, word [si]
  2129 | 00000F56 | 85C0                      | 	test	ax, ax
  2130 | 00000F58 | 7410                      | 	je	L_yakc_47
  2131 | 00000F5A | 8B76FE                    | 	mov	si, word [bp-2]
  2132 | 00000F5D | 83C60A                    | 	add	si, 10
  2133 | 00000F60 | 8B34                      | 	mov	si, word [si]
  2134 | 00000F62 | 83C60C                    | 	add	si, 12
  2135 | 00000F65 | 8B46FE                    | 	mov	ax, word [bp-2]
  2136 | 00000F68 | 8904                      | 	mov	word [si], ax
  2137 |          |                           | L_yakc_47:
  2138 | 00000F6A | 8B76FE                    | 	mov	si, word [bp-2]
  2139 | 00000F6D | 83C608                    | 	add	si, 8
  2140 | 00000F70 | 8B4604                    | 	mov	ax, word [bp+4]
  2141 | 00000F73 | 8904                      | 	mov	word [si], ax
  2142 | 00000F75 | EB05                      | 	jmp	L_yakc_48
  2143 |          |                           | L_yakc_46:
  2144 | 00000F77 | E8500E                    | 	call	YKExitMutex
  2145 | 00000F7A | EB0D                      | 	jmp	L_yakc_49
  2146 |          |                           | L_yakc_48:
  2147 | 00000F7C | B80100                    | 	mov	ax, 1
  2148 | 00000F7F | 50                        | 	push	ax
  2149 | 00000F80 | E805FF                    | 	call	YKScheduler
  2150 | 00000F83 | 83C402                    | 	add	sp, 2
  2151 | 00000F86 | E8410E                    | 	call	YKExitMutex
  2152 |          |                           | L_yakc_49:
  2153 | 00000F89 | 89EC                      | 	mov	sp, bp
  2154 | 00000F8B | 5D                        | 	pop	bp
  2155 | 00000F8C | C3                        | 	ret
  2156 |          |                           | L_yakc_44:
  2157 | 00000F8D | 55                        | 	push	bp
  2158 | 00000F8E | 89E5                      | 	mov	bp, sp
  2159 | 00000F90 | 51                        | 	push	cx
  2160 | 00000F91 | E975FF                    | 	jmp	L_yakc_45
  2161 |          |                           | 	ALIGN	2
  2162 |          |                           | YKTickHandler:
  2163 | 00000F94 | E91301                    | 	jmp	L_yakc_51
  2164 |          |                           | L_yakc_52:
  2165 | 00000F97 | A1[961A]                  | 	mov	ax, word [YKSuspList]
  2166 | 00000F9A | 8946FE                    | 	mov	word [bp-2], ax
  2167 | 00000F9D | E8280E                    | 	call	YKEnterMutex
  2168 | 00000FA0 | A1[921A]                  | 	mov	ax, word [YKTickNum]
  2169 | 00000FA3 | 40                        | 	inc	ax
  2170 | 00000FA4 | A3[921A]                  | 	mov	word [YKTickNum], ax
  2171 | 00000FA7 | E9EF00                    | 	jmp	L_yakc_54
  2172 |          |                           | L_yakc_53:
  2173 | 00000FAA | 8B76FE                    | 	mov	si, word [bp-2]
  2174 | 00000FAD | 83C60A                    | 	add	si, 10
  2175 | 00000FB0 | 8B04                      | 	mov	ax, word [si]
  2176 | 00000FB2 | 8946FA                    | 	mov	word [bp-6], ax
  2177 | 00000FB5 | 8B76FE                    | 	mov	si, word [bp-2]
  2178 | 00000FB8 | 83C608                    | 	add	si, 8
  2179 | 00000FBB | 8B04                      | 	mov	ax, word [si]
  2180 | 00000FBD | 48                        | 	dec	ax
  2181 | 00000FBE | 8B76FE                    | 	mov	si, word [bp-2]
  2182 | 00000FC1 | 83C608                    | 	add	si, 8
  2183 | 00000FC4 | 8904                      | 	mov	word [si], ax
  2184 | 00000FC6 | 8B76FE                    | 	mov	si, word [bp-2]
  2185 | 00000FC9 | 83C608                    | 	add	si, 8
  2186 | 00000FCC | 8B04                      | 	mov	ax, word [si]
  2187 | 00000FCE | 85C0                      | 	test	ax, ax
  2188 | 00000FD0 | 7403E9BE00                | 	jne	L_yakc_56
  2189 | 00000FD5 | 8B76FE                    | 	mov	si, word [bp-2]
  2190 | 00000FD8 | 83C60C                    | 	add	si, 12
  2191 | 00000FDB | 8B04                      | 	mov	ax, word [si]
  2192 | 00000FDD | 85C0                      | 	test	ax, ax
  2193 | 00000FDF | 750D                      | 	jne	L_yakc_57
  2194 | 00000FE1 | 8B76FE                    | 	mov	si, word [bp-2]
  2195 | 00000FE4 | 83C60A                    | 	add	si, 10
  2196 | 00000FE7 | 8B04                      | 	mov	ax, word [si]
  2197 | 00000FE9 | A3[961A]                  | 	mov	word [YKSuspList], ax
  2198 | 00000FEC | EB15                      | 	jmp	L_yakc_58
  2199 |          |                           | L_yakc_57:
  2200 | 00000FEE | 8B76FE                    | 	mov	si, word [bp-2]
  2201 | 00000FF1 | 83C60A                    | 	add	si, 10
  2202 | 00000FF4 | 8B7EFE                    | 	mov	di, word [bp-2]
  2203 | 00000FF7 | 83C70C                    | 	add	di, 12
  2204 | 00000FFA | 8B3D                      | 	mov	di, word [di]
  2205 | 00000FFC | 83C70A                    | 	add	di, 10
  2206 | 00000FFF | 8B04                      | 	mov	ax, word [si]
  2207 | 00001001 | 8905                      | 	mov	word [di], ax
  2208 |          |                           | L_yakc_58:
  2209 | 00001003 | 8B76FE                    | 	mov	si, word [bp-2]
  2210 | 00001006 | 83C60A                    | 	add	si, 10
  2211 | 00001009 | 8B04                      | 	mov	ax, word [si]
  2212 | 0000100B | 85C0                      | 	test	ax, ax
  2213 | 0000100D | 7415                      | 	je	L_yakc_59
  2214 | 0000100F | 8B76FE                    | 	mov	si, word [bp-2]
  2215 | 00001012 | 83C60C                    | 	add	si, 12
  2216 | 00001015 | 8B7EFE                    | 	mov	di, word [bp-2]
  2217 | 00001018 | 83C70A                    | 	add	di, 10
  2218 | 0000101B | 8B3D                      | 	mov	di, word [di]
  2219 | 0000101D | 83C70C                    | 	add	di, 12
  2220 | 00001020 | 8B04                      | 	mov	ax, word [si]
  2221 | 00001022 | 8905                      | 	mov	word [di], ax
  2222 |          |                           | L_yakc_59:
  2223 | 00001024 | A1[941A]                  | 	mov	ax, word [YKRdyList]
  2224 | 00001027 | 8946FC                    | 	mov	word [bp-4], ax
  2225 | 0000102A | EB0B                      | 	jmp	L_yakc_61
  2226 |          |                           | L_yakc_60:
  2227 | 0000102C | 8B76FC                    | 	mov	si, word [bp-4]
  2228 | 0000102F | 83C60A                    | 	add	si, 10
  2229 | 00001032 | 8B04                      | 	mov	ax, word [si]
  2230 | 00001034 | 8946FC                    | 	mov	word [bp-4], ax
  2231 |          |                           | L_yakc_61:
  2232 | 00001037 | 8B76FC                    | 	mov	si, word [bp-4]
  2233 | 0000103A | 83C606                    | 	add	si, 6
  2234 | 0000103D | 8B7EFE                    | 	mov	di, word [bp-2]
  2235 | 00001040 | 83C706                    | 	add	di, 6
  2236 | 00001043 | 8B05                      | 	mov	ax, word [di]
  2237 | 00001045 | 3B04                      | 	cmp	ax, word [si]
  2238 | 00001047 | 7FE3                      | 	jg	L_yakc_60
  2239 |          |                           | L_yakc_62:
  2240 | 00001049 | 8B76FC                    | 	mov	si, word [bp-4]
  2241 | 0000104C | 83C60C                    | 	add	si, 12
  2242 | 0000104F | 8B04                      | 	mov	ax, word [si]
  2243 | 00001051 | 85C0                      | 	test	ax, ax
  2244 | 00001053 | 7508                      | 	jne	L_yakc_63
  2245 | 00001055 | 8B46FE                    | 	mov	ax, word [bp-2]
  2246 | 00001058 | A3[941A]                  | 	mov	word [YKRdyList], ax
  2247 | 0000105B | EB10                      | 	jmp	L_yakc_64
  2248 |          |                           | L_yakc_63:
  2249 | 0000105D | 8B76FC                    | 	mov	si, word [bp-4]
  2250 | 00001060 | 83C60C                    | 	add	si, 12
  2251 | 00001063 | 8B34                      | 	mov	si, word [si]
  2252 | 00001065 | 83C60A                    | 	add	si, 10
  2253 | 00001068 | 8B46FE                    | 	mov	ax, word [bp-2]
  2254 | 0000106B | 8904                      | 	mov	word [si], ax
  2255 |          |                           | L_yakc_64:
  2256 | 0000106D | 8B76FC                    | 	mov	si, word [bp-4]
  2257 | 00001070 | 83C60C                    | 	add	si, 12
  2258 | 00001073 | 8B7EFE                    | 	mov	di, word [bp-2]
  2259 | 00001076 | 83C70C                    | 	add	di, 12
  2260 | 00001079 | 8B04                      | 	mov	ax, word [si]
  2261 | 0000107B | 8905                      | 	mov	word [di], ax
  2262 | 0000107D | 8B76FE                    | 	mov	si, word [bp-2]
  2263 | 00001080 | 83C60A                    | 	add	si, 10
  2264 | 00001083 | 8B46FC                    | 	mov	ax, word [bp-4]
  2265 | 00001086 | 8904                      | 	mov	word [si], ax
  2266 | 00001088 | 8B76FC                    | 	mov	si, word [bp-4]
  2267 | 0000108B | 83C60C                    | 	add	si, 12
  2268 | 0000108E | 8B46FE                    | 	mov	ax, word [bp-2]
  2269 | 00001091 | 8904                      | 	mov	word [si], ax
  2270 |          |                           | L_yakc_56:
  2271 | 00001093 | 8B46FA                    | 	mov	ax, word [bp-6]
  2272 | 00001096 | 8946FE                    | 	mov	word [bp-2], ax
  2273 |          |                           | L_yakc_54:
  2274 | 00001099 | 8B46FE                    | 	mov	ax, word [bp-2]
  2275 | 0000109C | 85C0                      | 	test	ax, ax
  2276 | 0000109E | 7403E907FF                | 	jne	L_yakc_53
  2277 |          |                           | L_yakc_55:
  2278 | 000010A3 | E8240D                    | 	call	YKExitMutex
  2279 | 000010A6 | 89EC                      | 	mov	sp, bp
  2280 | 000010A8 | 5D                        | 	pop	bp
  2281 | 000010A9 | C3                        | 	ret
  2282 |          |                           | L_yakc_51:
  2283 | 000010AA | 55                        | 	push	bp
  2284 | 000010AB | 89E5                      | 	mov	bp, sp
  2285 | 000010AD | 83EC06                    | 	sub	sp, 6
  2286 | 000010B0 | E9E4FE                    | 	jmp	L_yakc_52
  2287 | 000010B3 | 90                        | 	ALIGN	2
  2288 |          |                           | YKEnterISR:
  2289 | 000010B4 | EB0B                      | 	jmp	L_yakc_66
  2290 |          |                           | L_yakc_67:
  2291 | 000010B6 | A1[8C1D]                  | 	mov	ax, word [YKISRCallDepth]
  2292 | 000010B9 | 40                        | 	inc	ax
  2293 | 000010BA | A3[8C1D]                  | 	mov	word [YKISRCallDepth], ax
  2294 | 000010BD | 89EC                      | 	mov	sp, bp
  2295 | 000010BF | 5D                        | 	pop	bp
  2296 | 000010C0 | C3                        | 	ret
  2297 |          |                           | L_yakc_66:
  2298 | 000010C1 | 55                        | 	push	bp
  2299 | 000010C2 | 89E5                      | 	mov	bp, sp
  2300 | 000010C4 | EBF0                      | 	jmp	L_yakc_67
  2301 |          |                           | 	ALIGN	2
  2302 |          |                           | YKExitISR:
  2303 | 000010C6 | EB18                      | 	jmp	L_yakc_69
  2304 |          |                           | L_yakc_70:
  2305 | 000010C8 | A1[8C1D]                  | 	mov	ax, word [YKISRCallDepth]
  2306 | 000010CB | 48                        | 	dec	ax
  2307 | 000010CC | A3[8C1D]                  | 	mov	word [YKISRCallDepth], ax
  2308 | 000010CF | 85C0                      | 	test	ax, ax
  2309 | 000010D1 | 7509                      | 	jne	L_yakc_71
  2310 | 000010D3 | 31C0                      | 	xor	ax, ax
  2311 | 000010D5 | 50                        | 	push	ax
  2312 | 000010D6 | E8AFFD                    | 	call	YKScheduler
  2313 | 000010D9 | 83C402                    | 	add	sp, 2
  2314 |          |                           | L_yakc_71:
  2315 | 000010DC | 89EC                      | 	mov	sp, bp
  2316 | 000010DE | 5D                        | 	pop	bp
  2317 | 000010DF | C3                        | 	ret
  2318 |          |                           | L_yakc_69:
  2319 | 000010E0 | 55                        | 	push	bp
  2320 | 000010E1 | 89E5                      | 	mov	bp, sp
  2321 | 000010E3 | EBE3                      | 	jmp	L_yakc_70
  2322 | 000010E5 | 90                        | 	ALIGN	2
  2323 |          |                           | YKEventCreate:
  2324 | 000010E6 | EB53                      | 	jmp	L_yakc_73
  2325 |          |                           | L_yakc_74:
  2326 | 000010E8 | E8DD0C                    | 	call	YKEnterMutex
  2327 | 000010EB | C746FE0000                | 	mov	word [bp-2], 0
  2328 | 000010F0 | EB03                      | 	jmp	L_yakc_76
  2329 |          |                           | L_yakc_75:
  2330 | 000010F2 | FF46FE                    | 	inc	word [bp-2]
  2331 |          |                           | L_yakc_76:
  2332 | 000010F5 | 8B46FE                    | 	mov	ax, word [bp-2]
  2333 | 000010F8 | D1E0                      | 	shl	ax, 1
  2334 | 000010FA | D1E0                      | 	shl	ax, 1
  2335 | 000010FC | 89C6                      | 	mov	si, ax
  2336 | 000010FE | 81C6[BA1D]                | 	add	si, YKEVENTArray
  2337 | 00001102 | 8B04                      | 	mov	ax, word [si]
  2338 | 00001104 | 85C0                      | 	test	ax, ax
  2339 | 00001106 | 75EA                      | 	jne	L_yakc_75
  2340 |          |                           | L_yakc_77:
  2341 | 00001108 | 8B46FE                    | 	mov	ax, word [bp-2]
  2342 | 0000110B | D1E0                      | 	shl	ax, 1
  2343 | 0000110D | D1E0                      | 	shl	ax, 1
  2344 | 0000110F | 05[BA1D]                  | 	add	ax, YKEVENTArray
  2345 | 00001112 | 89C6                      | 	mov	si, ax
  2346 | 00001114 | 83C602                    | 	add	si, 2
  2347 | 00001117 | 8B4604                    | 	mov	ax, word [bp+4]
  2348 | 0000111A | 8904                      | 	mov	word [si], ax
  2349 | 0000111C | 8B46FE                    | 	mov	ax, word [bp-2]
  2350 | 0000111F | D1E0                      | 	shl	ax, 1
  2351 | 00001121 | D1E0                      | 	shl	ax, 1
  2352 | 00001123 | 89C6                      | 	mov	si, ax
  2353 | 00001125 | 81C6[BA1D]                | 	add	si, YKEVENTArray
  2354 | 00001129 | C7040100                  | 	mov	word [si], 1
  2355 | 0000112D | 8B46FE                    | 	mov	ax, word [bp-2]
  2356 | 00001130 | D1E0                      | 	shl	ax, 1
  2357 | 00001132 | D1E0                      | 	shl	ax, 1
  2358 | 00001134 | 05[BA1D]                  | 	add	ax, YKEVENTArray
  2359 |          |                           | L_yakc_78:
  2360 | 00001137 | 89EC                      | 	mov	sp, bp
  2361 | 00001139 | 5D                        | 	pop	bp
  2362 | 0000113A | C3                        | 	ret
  2363 |          |                           | L_yakc_73:
  2364 | 0000113B | 55                        | 	push	bp
  2365 | 0000113C | 89E5                      | 	mov	bp, sp
  2366 | 0000113E | 51                        | 	push	cx
  2367 | 0000113F | EBA7                      | 	jmp	L_yakc_74
  2368 | 00001141 | 90                        | 	ALIGN	2
  2369 |          |                           | YKEventPend:
  2370 | 00001142 | E9F100                    | 	jmp	L_yakc_80
  2371 |          |                           | L_yakc_81:
  2372 | 00001145 | E8800C                    | 	call	YKEnterMutex
  2373 | 00001148 | 8B4608                    | 	mov	ax, word [bp+8]
  2374 | 0000114B | 85C0                      | 	test	ax, ax
  2375 | 0000114D | 7523                      | 	jne	L_yakc_82
  2376 | 0000114F | 8B7604                    | 	mov	si, word [bp+4]
  2377 | 00001152 | 83C602                    | 	add	si, 2
  2378 | 00001155 | 8B04                      | 	mov	ax, word [si]
  2379 | 00001157 | 234606                    | 	and	ax, word [bp+6]
  2380 | 0000115A | 7414                      | 	je	L_yakc_83
  2381 | 0000115C | 8B7604                    | 	mov	si, word [bp+4]
  2382 | 0000115F | 83C602                    | 	add	si, 2
  2383 | 00001162 | 8B04                      | 	mov	ax, word [si]
  2384 | 00001164 | 8946FC                    | 	mov	word [bp-4], ax
  2385 | 00001167 | E8600C                    | 	call	YKExitMutex
  2386 | 0000116A | 8B46FC                    | 	mov	ax, word [bp-4]
  2387 | 0000116D | E9C200                    | 	jmp	L_yakc_84
  2388 |          |                           | L_yakc_83:
  2389 | 00001170 | EB2D                      | 	jmp	L_yakc_85
  2390 |          |                           | L_yakc_82:
  2391 | 00001172 | 8B4606                    | 	mov	ax, word [bp+6]
  2392 | 00001175 | 3B4606                    | 	cmp	ax, word [bp+6]
  2393 | 00001178 | 7404                      | 	je	L_yakc_87
  2394 | 0000117A | 31C0                      | 	xor	ax, ax
  2395 | 0000117C | EB03                      | 	jmp	L_yakc_88
  2396 |          |                           | L_yakc_87:
  2397 | 0000117E | B80100                    | 	mov	ax, 1
  2398 |          |                           | L_yakc_88:
  2399 | 00001181 | 8B7604                    | 	mov	si, word [bp+4]
  2400 | 00001184 | 83C602                    | 	add	si, 2
  2401 | 00001187 | 2304                      | 	and	ax, word [si]
  2402 | 00001189 | 7414                      | 	je	L_yakc_86
  2403 | 0000118B | 8B7604                    | 	mov	si, word [bp+4]
  2404 | 0000118E | 83C602                    | 	add	si, 2
  2405 | 00001191 | 8B04                      | 	mov	ax, word [si]
  2406 | 00001193 | 8946FC                    | 	mov	word [bp-4], ax
  2407 | 00001196 | E8310C                    | 	call	YKExitMutex
  2408 | 00001199 | 8B46FC                    | 	mov	ax, word [bp-4]
  2409 | 0000119C | E99300                    | 	jmp	L_yakc_84
  2410 |          |                           | L_yakc_86:
  2411 |          |                           | L_yakc_85:
  2412 | 0000119F | A1[941A]                  | 	mov	ax, word [YKRdyList]
  2413 | 000011A2 | 8946FE                    | 	mov	word [bp-2], ax
  2414 | 000011A5 | 8B76FE                    | 	mov	si, word [bp-2]
  2415 | 000011A8 | 83C60A                    | 	add	si, 10
  2416 | 000011AB | 8B04                      | 	mov	ax, word [si]
  2417 | 000011AD | A3[941A]                  | 	mov	word [YKRdyList], ax
  2418 | 000011B0 | 8B76FE                    | 	mov	si, word [bp-2]
  2419 | 000011B3 | 83C60A                    | 	add	si, 10
  2420 | 000011B6 | 8B34                      | 	mov	si, word [si]
  2421 | 000011B8 | 83C60C                    | 	add	si, 12
  2422 | 000011BB | C7040000                  | 	mov	word [si], 0
  2423 | 000011BF | 8B76FE                    | 	mov	si, word [bp-2]
  2424 | 000011C2 | 83C60A                    | 	add	si, 10
  2425 | 000011C5 | A1[C41D]                  | 	mov	ax, word [YKEventBlockingList]
  2426 | 000011C8 | 8904                      | 	mov	word [si], ax
  2427 | 000011CA | 8B46FE                    | 	mov	ax, word [bp-2]
  2428 | 000011CD | A3[C41D]                  | 	mov	word [YKEventBlockingList], ax
  2429 | 000011D0 | 8B76FE                    | 	mov	si, word [bp-2]
  2430 | 000011D3 | 83C60C                    | 	add	si, 12
  2431 | 000011D6 | C7040000                  | 	mov	word [si], 0
  2432 | 000011DA | 8B76FE                    | 	mov	si, word [bp-2]
  2433 | 000011DD | 83C60A                    | 	add	si, 10
  2434 | 000011E0 | 8B04                      | 	mov	ax, word [si]
  2435 | 000011E2 | 85C0                      | 	test	ax, ax
  2436 | 000011E4 | 7410                      | 	je	L_yakc_89
  2437 | 000011E6 | 8B76FE                    | 	mov	si, word [bp-2]
  2438 | 000011E9 | 83C60A                    | 	add	si, 10
  2439 | 000011EC | 8B34                      | 	mov	si, word [si]
  2440 | 000011EE | 83C60C                    | 	add	si, 12
  2441 | 000011F1 | 8B46FE                    | 	mov	ax, word [bp-2]
  2442 | 000011F4 | 8904                      | 	mov	word [si], ax
  2443 |          |                           | L_yakc_89:
  2444 | 000011F6 | 8B76FE                    | 	mov	si, word [bp-2]
  2445 | 000011F9 | 83C612                    | 	add	si, 18
  2446 | 000011FC | 8B4604                    | 	mov	ax, word [bp+4]
  2447 | 000011FF | 8904                      | 	mov	word [si], ax
  2448 | 00001201 | 8B76FE                    | 	mov	si, word [bp-2]
  2449 | 00001204 | 83C614                    | 	add	si, 20
  2450 | 00001207 | 8B4606                    | 	mov	ax, word [bp+6]
  2451 | 0000120A | 8904                      | 	mov	word [si], ax
  2452 | 0000120C | 8B76FE                    | 	mov	si, word [bp-2]
  2453 | 0000120F | 83C616                    | 	add	si, 22
  2454 | 00001212 | 8B4608                    | 	mov	ax, word [bp+8]
  2455 | 00001215 | 8904                      | 	mov	word [si], ax
  2456 | 00001217 | B80100                    | 	mov	ax, 1
  2457 | 0000121A | 50                        | 	push	ax
  2458 | 0000121B | E86AFC                    | 	call	YKScheduler
  2459 | 0000121E | 83C402                    | 	add	sp, 2
  2460 | 00001221 | 8B7604                    | 	mov	si, word [bp+4]
  2461 | 00001224 | 83C602                    | 	add	si, 2
  2462 | 00001227 | 8B04                      | 	mov	ax, word [si]
  2463 | 00001229 | 8946FC                    | 	mov	word [bp-4], ax
  2464 | 0000122C | E89B0B                    | 	call	YKExitMutex
  2465 | 0000122F | 8B46FC                    | 	mov	ax, word [bp-4]
  2466 |          |                           | L_yakc_84:
  2467 | 00001232 | 89EC                      | 	mov	sp, bp
  2468 | 00001234 | 5D                        | 	pop	bp
  2469 | 00001235 | C3                        | 	ret
  2470 |          |                           | L_yakc_80:
  2471 | 00001236 | 55                        | 	push	bp
  2472 | 00001237 | 89E5                      | 	mov	bp, sp
  2473 | 00001239 | 83EC04                    | 	sub	sp, 4
  2474 | 0000123C | E906FF                    | 	jmp	L_yakc_81
  2475 | 0000123F | 90                        | 	ALIGN	2
  2476 |          |                           | YKEventSet:
  2477 | 00001240 | E99D01                    | 	jmp	L_yakc_91
  2478 |          |                           | L_yakc_92:
  2479 | 00001243 | E8820B                    | 	call	YKEnterMutex
  2480 | 00001246 | A1[C41D]                  | 	mov	ax, word [YKEventBlockingList]
  2481 | 00001249 | 8946FE                    | 	mov	word [bp-2], ax
  2482 | 0000124C | 8B7604                    | 	mov	si, word [bp+4]
  2483 | 0000124F | 83C602                    | 	add	si, 2
  2484 | 00001252 | 8B04                      | 	mov	ax, word [si]
  2485 | 00001254 | 0B4606                    | 	or	ax, word [bp+6]
  2486 | 00001257 | 8B7604                    | 	mov	si, word [bp+4]
  2487 | 0000125A | 83C602                    | 	add	si, 2
  2488 | 0000125D | 8904                      | 	mov	word [si], ax
  2489 | 0000125F | 8B46FE                    | 	mov	ax, word [bp-2]
  2490 | 00001262 | 85C0                      | 	test	ax, ax
  2491 | 00001264 | 7506                      | 	jne	L_yakc_93
  2492 | 00001266 | E8610B                    | 	call	YKExitMutex
  2493 | 00001269 | E97001                    | 	jmp	L_yakc_94
  2494 |          |                           | L_yakc_93:
  2495 | 0000126C | E94F01                    | 	jmp	L_yakc_96
  2496 |          |                           | L_yakc_95:
  2497 | 0000126F | 8B76FE                    | 	mov	si, word [bp-2]
  2498 | 00001272 | 83C60A                    | 	add	si, 10
  2499 | 00001275 | 8B04                      | 	mov	ax, word [si]
  2500 | 00001277 | 8946FA                    | 	mov	word [bp-6], ax
  2501 | 0000127A | 8B76FE                    | 	mov	si, word [bp-2]
  2502 | 0000127D | 83C612                    | 	add	si, 18
  2503 | 00001280 | 8B4604                    | 	mov	ax, word [bp+4]
  2504 | 00001283 | 3B04                      | 	cmp	ax, word [si]
  2505 | 00001285 | 7409                      | 	je	L_yakc_98
  2506 | 00001287 | 8B46FA                    | 	mov	ax, word [bp-6]
  2507 | 0000128A | 8946FE                    | 	mov	word [bp-2], ax
  2508 | 0000128D | E92E01                    | 	jmp	L_yakc_96
  2509 |          |                           | L_yakc_98:
  2510 | 00001290 | 8B76FE                    | 	mov	si, word [bp-2]
  2511 | 00001293 | 83C616                    | 	add	si, 22
  2512 | 00001296 | 8B04                      | 	mov	ax, word [si]
  2513 | 00001298 | 85C0                      | 	test	ax, ax
  2514 | 0000129A | 7521                      | 	jne	L_yakc_99
  2515 | 0000129C | 8B7604                    | 	mov	si, word [bp+4]
  2516 | 0000129F | 83C602                    | 	add	si, 2
  2517 | 000012A2 | 8B04                      | 	mov	ax, word [si]
  2518 | 000012A4 | 8B76FE                    | 	mov	si, word [bp-2]
  2519 | 000012A7 | 83C614                    | 	add	si, 20
  2520 | 000012AA | 2304                      | 	and	ax, word [si]
  2521 | 000012AC | 7408                      | 	je	L_yakc_100
  2522 | 000012AE | 8B46FE                    | 	mov	ax, word [bp-2]
  2523 | 000012B1 | 8946F8                    | 	mov	word [bp-8], ax
  2524 | 000012B4 | EB05                      | 	jmp	L_yakc_101
  2525 |          |                           | L_yakc_100:
  2526 | 000012B6 | C746F80000                | 	mov	word [bp-8], 0
  2527 |          |                           | L_yakc_101:
  2528 | 000012BB | EB29                      | 	jmp	L_yakc_102
  2529 |          |                           | L_yakc_99:
  2530 | 000012BD | 8B7604                    | 	mov	si, word [bp+4]
  2531 | 000012C0 | 83C602                    | 	add	si, 2
  2532 | 000012C3 | 8B04                      | 	mov	ax, word [si]
  2533 | 000012C5 | 8B76FE                    | 	mov	si, word [bp-2]
  2534 | 000012C8 | 83C614                    | 	add	si, 20
  2535 | 000012CB | 2304                      | 	and	ax, word [si]
  2536 | 000012CD | 8B76FE                    | 	mov	si, word [bp-2]
  2537 | 000012D0 | 83C614                    | 	add	si, 20
  2538 | 000012D3 | 8B14                      | 	mov	dx, word [si]
  2539 | 000012D5 | 39C2                      | 	cmp	dx, ax
  2540 | 000012D7 | 7508                      | 	jne	L_yakc_103
  2541 | 000012D9 | 8B46FE                    | 	mov	ax, word [bp-2]
  2542 | 000012DC | 8946F8                    | 	mov	word [bp-8], ax
  2543 | 000012DF | EB05                      | 	jmp	L_yakc_104
  2544 |          |                           | L_yakc_103:
  2545 | 000012E1 | C746F80000                | 	mov	word [bp-8], 0
  2546 |          |                           | L_yakc_104:
  2547 |          |                           | L_yakc_102:
  2548 | 000012E6 | 8B46F8                    | 	mov	ax, word [bp-8]
  2549 | 000012E9 | 85C0                      | 	test	ax, ax
  2550 | 000012EB | 7503E9C800                | 	je	L_yakc_105
  2551 | 000012F0 | 8B76F8                    | 	mov	si, word [bp-8]
  2552 | 000012F3 | 83C60C                    | 	add	si, 12
  2553 | 000012F6 | 8B04                      | 	mov	ax, word [si]
  2554 | 000012F8 | 85C0                      | 	test	ax, ax
  2555 | 000012FA | 750D                      | 	jne	L_yakc_106
  2556 | 000012FC | 8B76F8                    | 	mov	si, word [bp-8]
  2557 | 000012FF | 83C60A                    | 	add	si, 10
  2558 | 00001302 | 8B04                      | 	mov	ax, word [si]
  2559 | 00001304 | A3[C41D]                  | 	mov	word [YKEventBlockingList], ax
  2560 | 00001307 | EB15                      | 	jmp	L_yakc_107
  2561 |          |                           | L_yakc_106:
  2562 | 00001309 | 8B76F8                    | 	mov	si, word [bp-8]
  2563 | 0000130C | 83C60A                    | 	add	si, 10
  2564 | 0000130F | 8B7EF8                    | 	mov	di, word [bp-8]
  2565 | 00001312 | 83C70C                    | 	add	di, 12
  2566 | 00001315 | 8B3D                      | 	mov	di, word [di]
  2567 | 00001317 | 83C70A                    | 	add	di, 10
  2568 | 0000131A | 8B04                      | 	mov	ax, word [si]
  2569 | 0000131C | 8905                      | 	mov	word [di], ax
  2570 |          |                           | L_yakc_107:
  2571 | 0000131E | 8B76F8                    | 	mov	si, word [bp-8]
  2572 | 00001321 | 83C60A                    | 	add	si, 10
  2573 | 00001324 | 8B04                      | 	mov	ax, word [si]
  2574 | 00001326 | 85C0                      | 	test	ax, ax
  2575 | 00001328 | 7415                      | 	je	L_yakc_108
  2576 | 0000132A | 8B76F8                    | 	mov	si, word [bp-8]
  2577 | 0000132D | 83C60C                    | 	add	si, 12
  2578 | 00001330 | 8B7EF8                    | 	mov	di, word [bp-8]
  2579 | 00001333 | 83C70A                    | 	add	di, 10
  2580 | 00001336 | 8B3D                      | 	mov	di, word [di]
  2581 | 00001338 | 83C70C                    | 	add	di, 12
  2582 | 0000133B | 8B04                      | 	mov	ax, word [si]
  2583 | 0000133D | 8905                      | 	mov	word [di], ax
  2584 |          |                           | L_yakc_108:
  2585 | 0000133F | A1[941A]                  | 	mov	ax, word [YKRdyList]
  2586 | 00001342 | 8946FC                    | 	mov	word [bp-4], ax
  2587 | 00001345 | EB0B                      | 	jmp	L_yakc_110
  2588 |          |                           | L_yakc_109:
  2589 | 00001347 | 8B76FC                    | 	mov	si, word [bp-4]
  2590 | 0000134A | 83C60A                    | 	add	si, 10
  2591 | 0000134D | 8B04                      | 	mov	ax, word [si]
  2592 | 0000134F | 8946FC                    | 	mov	word [bp-4], ax
  2593 |          |                           | L_yakc_110:
  2594 | 00001352 | 8B76FC                    | 	mov	si, word [bp-4]
  2595 | 00001355 | 83C606                    | 	add	si, 6
  2596 | 00001358 | 8B7EF8                    | 	mov	di, word [bp-8]
  2597 | 0000135B | 83C706                    | 	add	di, 6
  2598 | 0000135E | 8B05                      | 	mov	ax, word [di]
  2599 | 00001360 | 3B04                      | 	cmp	ax, word [si]
  2600 | 00001362 | 7FE3                      | 	jg	L_yakc_109
  2601 |          |                           | L_yakc_111:
  2602 | 00001364 | 8B76FC                    | 	mov	si, word [bp-4]
  2603 | 00001367 | 83C60C                    | 	add	si, 12
  2604 | 0000136A | 8B04                      | 	mov	ax, word [si]
  2605 | 0000136C | 85C0                      | 	test	ax, ax
  2606 | 0000136E | 7508                      | 	jne	L_yakc_112
  2607 | 00001370 | 8B46F8                    | 	mov	ax, word [bp-8]
  2608 | 00001373 | A3[941A]                  | 	mov	word [YKRdyList], ax
  2609 | 00001376 | EB10                      | 	jmp	L_yakc_113
  2610 |          |                           | L_yakc_112:
  2611 | 00001378 | 8B76FC                    | 	mov	si, word [bp-4]
  2612 | 0000137B | 83C60C                    | 	add	si, 12
  2613 | 0000137E | 8B34                      | 	mov	si, word [si]
  2614 | 00001380 | 83C60A                    | 	add	si, 10
  2615 | 00001383 | 8B46F8                    | 	mov	ax, word [bp-8]
  2616 | 00001386 | 8904                      | 	mov	word [si], ax
  2617 |          |                           | L_yakc_113:
  2618 | 00001388 | 8B76FC                    | 	mov	si, word [bp-4]
  2619 | 0000138B | 83C60C                    | 	add	si, 12
  2620 | 0000138E | 8B7EF8                    | 	mov	di, word [bp-8]
  2621 | 00001391 | 83C70C                    | 	add	di, 12
  2622 | 00001394 | 8B04                      | 	mov	ax, word [si]
  2623 | 00001396 | 8905                      | 	mov	word [di], ax
  2624 | 00001398 | 8B76F8                    | 	mov	si, word [bp-8]
  2625 | 0000139B | 83C60A                    | 	add	si, 10
  2626 | 0000139E | 8B46FC                    | 	mov	ax, word [bp-4]
  2627 | 000013A1 | 8904                      | 	mov	word [si], ax
  2628 | 000013A3 | 8B76FC                    | 	mov	si, word [bp-4]
  2629 | 000013A6 | 83C60C                    | 	add	si, 12
  2630 | 000013A9 | 8B46F8                    | 	mov	ax, word [bp-8]
  2631 | 000013AC | 8904                      | 	mov	word [si], ax
  2632 | 000013AE | 8B76F8                    | 	mov	si, word [bp-8]
  2633 | 000013B1 | 83C612                    | 	add	si, 18
  2634 | 000013B4 | C7040000                  | 	mov	word [si], 0
  2635 |          |                           | L_yakc_105:
  2636 | 000013B8 | 8B46FA                    | 	mov	ax, word [bp-6]
  2637 | 000013BB | 8946FE                    | 	mov	word [bp-2], ax
  2638 |          |                           | L_yakc_96:
  2639 | 000013BE | 8B46FE                    | 	mov	ax, word [bp-2]
  2640 | 000013C1 | 85C0                      | 	test	ax, ax
  2641 | 000013C3 | 7403E9A7FE                | 	jne	L_yakc_95
  2642 |          |                           | L_yakc_97:
  2643 | 000013C8 | A1[8C1D]                  | 	mov	ax, word [YKISRCallDepth]
  2644 | 000013CB | 85C0                      | 	test	ax, ax
  2645 | 000013CD | 750A                      | 	jne	L_yakc_114
  2646 | 000013CF | B80100                    | 	mov	ax, 1
  2647 | 000013D2 | 50                        | 	push	ax
  2648 | 000013D3 | E8B2FA                    | 	call	YKScheduler
  2649 | 000013D6 | 83C402                    | 	add	sp, 2
  2650 |          |                           | L_yakc_114:
  2651 | 000013D9 | E8EE09                    | 	call	YKExitMutex
  2652 |          |                           | L_yakc_94:
  2653 | 000013DC | 89EC                      | 	mov	sp, bp
  2654 | 000013DE | 5D                        | 	pop	bp
  2655 | 000013DF | C3                        | 	ret
  2656 |          |                           | L_yakc_91:
  2657 | 000013E0 | 55                        | 	push	bp
  2658 | 000013E1 | 89E5                      | 	mov	bp, sp
  2659 | 000013E3 | 83EC08                    | 	sub	sp, 8
  2660 | 000013E6 | E95AFE                    | 	jmp	L_yakc_92
  2661 | 000013E9 | 90                        | 	ALIGN	2
  2662 |          |                           | YKEventReset:
  2663 | 000013EA | EB21                      | 	jmp	L_yakc_116
  2664 |          |                           | L_yakc_117:
  2665 | 000013EC | E8D909                    | 	call	YKEnterMutex
  2666 | 000013EF | 8B7604                    | 	mov	si, word [bp+4]
  2667 | 000013F2 | 83C602                    | 	add	si, 2
  2668 | 000013F5 | 8B04                      | 	mov	ax, word [si]
  2669 | 000013F7 | 8B5606                    | 	mov	dx, word [bp+6]
  2670 | 000013FA | F7D2                      | 	not	dx
  2671 | 000013FC | 21D0                      | 	and	ax, dx
  2672 | 000013FE | 8B7604                    | 	mov	si, word [bp+4]
  2673 | 00001401 | 83C602                    | 	add	si, 2
  2674 | 00001404 | 8904                      | 	mov	word [si], ax
  2675 | 00001406 | E8C109                    | 	call	YKExitMutex
  2676 | 00001409 | 89EC                      | 	mov	sp, bp
  2677 | 0000140B | 5D                        | 	pop	bp
  2678 | 0000140C | C3                        | 	ret
  2679 |          |                           | L_yakc_116:
  2680 | 0000140D | 55                        | 	push	bp
  2681 | 0000140E | 89E5                      | 	mov	bp, sp
  2682 | 00001410 | EBDA                      | 	jmp	L_yakc_117
  2683 |          |                           | 	ALIGN	2
  2684 |          |                           | YKSemCreate:
  2685 | 00001412 | EB55                      | 	jmp	L_yakc_119
  2686 |          |                           | L_yakc_120:
  2687 | 00001414 | E8B109                    | 	call	YKEnterMutex
  2688 | 00001417 | C746FE0000                | 	mov	word [bp-2], 0
  2689 | 0000141C | EB03                      | 	jmp	L_yakc_122
  2690 |          |                           | L_yakc_121:
  2691 | 0000141E | FF46FE                    | 	inc	word [bp-2]
  2692 |          |                           | L_yakc_122:
  2693 | 00001421 | 8B46FE                    | 	mov	ax, word [bp-2]
  2694 | 00001424 | D1E0                      | 	shl	ax, 1
  2695 | 00001426 | D1E0                      | 	shl	ax, 1
  2696 | 00001428 | 05[8E1D]                  | 	add	ax, YKSEMArray
  2697 | 0000142B | 89C6                      | 	mov	si, ax
  2698 | 0000142D | 83C602                    | 	add	si, 2
  2699 | 00001430 | 8B04                      | 	mov	ax, word [si]
  2700 | 00001432 | 85C0                      | 	test	ax, ax
  2701 | 00001434 | 75E8                      | 	jne	L_yakc_121
  2702 |          |                           | L_yakc_123:
  2703 | 00001436 | 8B46FE                    | 	mov	ax, word [bp-2]
  2704 | 00001439 | D1E0                      | 	shl	ax, 1
  2705 | 0000143B | D1E0                      | 	shl	ax, 1
  2706 | 0000143D | 89C6                      | 	mov	si, ax
  2707 | 0000143F | 81C6[8E1D]                | 	add	si, YKSEMArray
  2708 | 00001443 | 8B4604                    | 	mov	ax, word [bp+4]
  2709 | 00001446 | 8904                      | 	mov	word [si], ax
  2710 | 00001448 | 8B46FE                    | 	mov	ax, word [bp-2]
  2711 | 0000144B | D1E0                      | 	shl	ax, 1
  2712 | 0000144D | D1E0                      | 	shl	ax, 1
  2713 | 0000144F | 05[8E1D]                  | 	add	ax, YKSEMArray
  2714 | 00001452 | 89C6                      | 	mov	si, ax
  2715 | 00001454 | 83C602                    | 	add	si, 2
  2716 | 00001457 | C7040100                  | 	mov	word [si], 1
  2717 | 0000145B | 8B46FE                    | 	mov	ax, word [bp-2]
  2718 | 0000145E | D1E0                      | 	shl	ax, 1
  2719 | 00001460 | D1E0                      | 	shl	ax, 1
  2720 | 00001462 | 05[8E1D]                  | 	add	ax, YKSEMArray
  2721 |          |                           | L_yakc_124:
  2722 | 00001465 | 89EC                      | 	mov	sp, bp
  2723 | 00001467 | 5D                        | 	pop	bp
  2724 | 00001468 | C3                        | 	ret
  2725 |          |                           | L_yakc_119:
  2726 | 00001469 | 55                        | 	push	bp
  2727 | 0000146A | 89E5                      | 	mov	bp, sp
  2728 | 0000146C | 51                        | 	push	cx
  2729 | 0000146D | EBA5                      | 	jmp	L_yakc_120
  2730 | 0000146F | 90                        | 	ALIGN	2
  2731 |          |                           | YKSemPend:
  2732 | 00001470 | E98C00                    | 	jmp	L_yakc_126
  2733 |          |                           | L_yakc_127:
  2734 | 00001473 | E85209                    | 	call	YKEnterMutex
  2735 | 00001476 | 8B7604                    | 	mov	si, word [bp+4]
  2736 | 00001479 | 8B04                      | 	mov	ax, word [si]
  2737 | 0000147B | 48                        | 	dec	ax
  2738 | 0000147C | 8904                      | 	mov	word [si], ax
  2739 | 0000147E | E84909                    | 	call	YKExitMutex
  2740 | 00001481 | 8B7604                    | 	mov	si, word [bp+4]
  2741 | 00001484 | 833C00                    | 	cmp	word [si], 0
  2742 | 00001487 | 7D72                      | 	jge	L_yakc_129
  2743 |          |                           | L_yakc_128:
  2744 | 00001489 | E83C09                    | 	call	YKEnterMutex
  2745 | 0000148C | A1[941A]                  | 	mov	ax, word [YKRdyList]
  2746 | 0000148F | 8946FE                    | 	mov	word [bp-2], ax
  2747 | 00001492 | 8B76FE                    | 	mov	si, word [bp-2]
  2748 | 00001495 | 83C60A                    | 	add	si, 10
  2749 | 00001498 | 8B04                      | 	mov	ax, word [si]
  2750 | 0000149A | A3[941A]                  | 	mov	word [YKRdyList], ax
  2751 | 0000149D | 8B76FE                    | 	mov	si, word [bp-2]
  2752 | 000014A0 | 83C60A                    | 	add	si, 10
  2753 | 000014A3 | 8B34                      | 	mov	si, word [si]
  2754 | 000014A5 | 83C60C                    | 	add	si, 12
  2755 | 000014A8 | C7040000                  | 	mov	word [si], 0
  2756 | 000014AC | 8B76FE                    | 	mov	si, word [bp-2]
  2757 | 000014AF | 83C60A                    | 	add	si, 10
  2758 | 000014B2 | A1[981A]                  | 	mov	ax, word [YKSemaphoreWaitingList]
  2759 | 000014B5 | 8904                      | 	mov	word [si], ax
  2760 | 000014B7 | 8B46FE                    | 	mov	ax, word [bp-2]
  2761 | 000014BA | A3[981A]                  | 	mov	word [YKSemaphoreWaitingList], ax
  2762 | 000014BD | 8B76FE                    | 	mov	si, word [bp-2]
  2763 | 000014C0 | 83C60C                    | 	add	si, 12
  2764 | 000014C3 | C7040000                  | 	mov	word [si], 0
  2765 | 000014C7 | 8B76FE                    | 	mov	si, word [bp-2]
  2766 | 000014CA | 83C60A                    | 	add	si, 10
  2767 | 000014CD | 8B04                      | 	mov	ax, word [si]
  2768 | 000014CF | 85C0                      | 	test	ax, ax
  2769 | 000014D1 | 7410                      | 	je	L_yakc_130
  2770 | 000014D3 | 8B76FE                    | 	mov	si, word [bp-2]
  2771 | 000014D6 | 83C60A                    | 	add	si, 10
  2772 | 000014D9 | 8B34                      | 	mov	si, word [si]
  2773 | 000014DB | 83C60C                    | 	add	si, 12
  2774 | 000014DE | 8B46FE                    | 	mov	ax, word [bp-2]
  2775 | 000014E1 | 8904                      | 	mov	word [si], ax
  2776 |          |                           | L_yakc_130:
  2777 | 000014E3 | 8B76FE                    | 	mov	si, word [bp-2]
  2778 | 000014E6 | 83C60E                    | 	add	si, 14
  2779 | 000014E9 | 8B4604                    | 	mov	ax, word [bp+4]
  2780 | 000014EC | 8904                      | 	mov	word [si], ax
  2781 | 000014EE | B80100                    | 	mov	ax, 1
  2782 | 000014F1 | 50                        | 	push	ax
  2783 | 000014F2 | E893F9                    | 	call	YKScheduler
  2784 | 000014F5 | 83C402                    | 	add	sp, 2
  2785 | 000014F8 | E8CF08                    | 	call	YKExitMutex
  2786 |          |                           | L_yakc_129:
  2787 | 000014FB | 89EC                      | 	mov	sp, bp
  2788 | 000014FD | 5D                        | 	pop	bp
  2789 | 000014FE | C3                        | 	ret
  2790 |          |                           | L_yakc_126:
  2791 | 000014FF | 55                        | 	push	bp
  2792 | 00001500 | 89E5                      | 	mov	bp, sp
  2793 | 00001502 | 51                        | 	push	cx
  2794 | 00001503 | E96DFF                    | 	jmp	L_yakc_127
  2795 |          |                           | 	ALIGN	2
  2796 |          |                           | YKSemPost:
  2797 | 00001506 | E94B01                    | 	jmp	L_yakc_132
  2798 |          |                           | L_yakc_133:
  2799 | 00001509 | C746F80000                | 	mov	word [bp-8], 0
  2800 | 0000150E | A1[981A]                  | 	mov	ax, word [YKSemaphoreWaitingList]
  2801 | 00001511 | 8946FE                    | 	mov	word [bp-2], ax
  2802 | 00001514 | E8B108                    | 	call	YKEnterMutex
  2803 | 00001517 | 8B7604                    | 	mov	si, word [bp+4]
  2804 | 0000151A | 8B04                      | 	mov	ax, word [si]
  2805 | 0000151C | 40                        | 	inc	ax
  2806 | 0000151D | 8904                      | 	mov	word [si], ax
  2807 | 0000151F | EB3F                      | 	jmp	L_yakc_135
  2808 |          |                           | L_yakc_134:
  2809 | 00001521 | 8B76FE                    | 	mov	si, word [bp-2]
  2810 | 00001524 | 83C60E                    | 	add	si, 14
  2811 | 00001527 | 8B4604                    | 	mov	ax, word [bp+4]
  2812 | 0000152A | 3B04                      | 	cmp	ax, word [si]
  2813 | 0000152C | 7527                      | 	jne	L_yakc_137
  2814 | 0000152E | 8B46F8                    | 	mov	ax, word [bp-8]
  2815 | 00001531 | 85C0                      | 	test	ax, ax
  2816 | 00001533 | 7508                      | 	jne	L_yakc_138
  2817 | 00001535 | 8B46FE                    | 	mov	ax, word [bp-2]
  2818 | 00001538 | 8946F8                    | 	mov	word [bp-8], ax
  2819 | 0000153B | EB18                      | 	jmp	L_yakc_139
  2820 |          |                           | L_yakc_138:
  2821 | 0000153D | 8B76FE                    | 	mov	si, word [bp-2]
  2822 | 00001540 | 83C606                    | 	add	si, 6
  2823 | 00001543 | 8B7EF8                    | 	mov	di, word [bp-8]
  2824 | 00001546 | 83C706                    | 	add	di, 6
  2825 | 00001549 | 8B05                      | 	mov	ax, word [di]
  2826 | 0000154B | 3B04                      | 	cmp	ax, word [si]
  2827 | 0000154D | 7E06                      | 	jle	L_yakc_140
  2828 | 0000154F | 8B46FE                    | 	mov	ax, word [bp-2]
  2829 | 00001552 | 8946F8                    | 	mov	word [bp-8], ax
  2830 |          |                           | L_yakc_140:
  2831 |          |                           | L_yakc_139:
  2832 |          |                           | L_yakc_137:
  2833 | 00001555 | 8B76FE                    | 	mov	si, word [bp-2]
  2834 | 00001558 | 83C60A                    | 	add	si, 10
  2835 | 0000155B | 8B04                      | 	mov	ax, word [si]
  2836 | 0000155D | 8946FE                    | 	mov	word [bp-2], ax
  2837 |          |                           | L_yakc_135:
  2838 | 00001560 | 8B46FE                    | 	mov	ax, word [bp-2]
  2839 | 00001563 | 85C0                      | 	test	ax, ax
  2840 | 00001565 | 75BA                      | 	jne	L_yakc_134
  2841 |          |                           | L_yakc_136:
  2842 | 00001567 | 8B46F8                    | 	mov	ax, word [bp-8]
  2843 | 0000156A | 85C0                      | 	test	ax, ax
  2844 | 0000156C | 7506                      | 	jne	L_yakc_141
  2845 | 0000156E | E85908                    | 	call	YKExitMutex
  2846 | 00001571 | E9DC00                    | 	jmp	L_yakc_142
  2847 |          |                           | L_yakc_141:
  2848 | 00001574 | 8B76F8                    | 	mov	si, word [bp-8]
  2849 | 00001577 | 83C60C                    | 	add	si, 12
  2850 | 0000157A | 8B04                      | 	mov	ax, word [si]
  2851 | 0000157C | 85C0                      | 	test	ax, ax
  2852 | 0000157E | 750D                      | 	jne	L_yakc_143
  2853 | 00001580 | 8B76F8                    | 	mov	si, word [bp-8]
  2854 | 00001583 | 83C60A                    | 	add	si, 10
  2855 | 00001586 | 8B04                      | 	mov	ax, word [si]
  2856 | 00001588 | A3[981A]                  | 	mov	word [YKSemaphoreWaitingList], ax
  2857 | 0000158B | EB15                      | 	jmp	L_yakc_144
  2858 |          |                           | L_yakc_143:
  2859 | 0000158D | 8B76F8                    | 	mov	si, word [bp-8]
  2860 | 00001590 | 83C60A                    | 	add	si, 10
  2861 | 00001593 | 8B7EF8                    | 	mov	di, word [bp-8]
  2862 | 00001596 | 83C70C                    | 	add	di, 12
  2863 | 00001599 | 8B3D                      | 	mov	di, word [di]
  2864 | 0000159B | 83C70A                    | 	add	di, 10
  2865 | 0000159E | 8B04                      | 	mov	ax, word [si]
  2866 | 000015A0 | 8905                      | 	mov	word [di], ax
  2867 |          |                           | L_yakc_144:
  2868 | 000015A2 | 8B76F8                    | 	mov	si, word [bp-8]
  2869 | 000015A5 | 83C60A                    | 	add	si, 10
  2870 | 000015A8 | 8B04                      | 	mov	ax, word [si]
  2871 | 000015AA | 85C0                      | 	test	ax, ax
  2872 | 000015AC | 7415                      | 	je	L_yakc_145
  2873 | 000015AE | 8B76F8                    | 	mov	si, word [bp-8]
  2874 | 000015B1 | 83C60C                    | 	add	si, 12
  2875 | 000015B4 | 8B7EF8                    | 	mov	di, word [bp-8]
  2876 | 000015B7 | 83C70A                    | 	add	di, 10
  2877 | 000015BA | 8B3D                      | 	mov	di, word [di]
  2878 | 000015BC | 83C70C                    | 	add	di, 12
  2879 | 000015BF | 8B04                      | 	mov	ax, word [si]
  2880 | 000015C1 | 8905                      | 	mov	word [di], ax
  2881 |          |                           | L_yakc_145:
  2882 | 000015C3 | A1[941A]                  | 	mov	ax, word [YKRdyList]
  2883 | 000015C6 | 8946FC                    | 	mov	word [bp-4], ax
  2884 | 000015C9 | EB0B                      | 	jmp	L_yakc_147
  2885 |          |                           | L_yakc_146:
  2886 | 000015CB | 8B76FC                    | 	mov	si, word [bp-4]
  2887 | 000015CE | 83C60A                    | 	add	si, 10
  2888 | 000015D1 | 8B04                      | 	mov	ax, word [si]
  2889 | 000015D3 | 8946FC                    | 	mov	word [bp-4], ax
  2890 |          |                           | L_yakc_147:
  2891 | 000015D6 | 8B76FC                    | 	mov	si, word [bp-4]
  2892 | 000015D9 | 83C606                    | 	add	si, 6
  2893 | 000015DC | 8B7EF8                    | 	mov	di, word [bp-8]
  2894 | 000015DF | 83C706                    | 	add	di, 6
  2895 | 000015E2 | 8B05                      | 	mov	ax, word [di]
  2896 | 000015E4 | 3B04                      | 	cmp	ax, word [si]
  2897 | 000015E6 | 7FE3                      | 	jg	L_yakc_146
  2898 |          |                           | L_yakc_148:
  2899 | 000015E8 | 8B76FC                    | 	mov	si, word [bp-4]
  2900 | 000015EB | 83C60C                    | 	add	si, 12
  2901 | 000015EE | 8B04                      | 	mov	ax, word [si]
  2902 | 000015F0 | 85C0                      | 	test	ax, ax
  2903 | 000015F2 | 7508                      | 	jne	L_yakc_149
  2904 | 000015F4 | 8B46F8                    | 	mov	ax, word [bp-8]
  2905 | 000015F7 | A3[941A]                  | 	mov	word [YKRdyList], ax
  2906 | 000015FA | EB10                      | 	jmp	L_yakc_150
  2907 |          |                           | L_yakc_149:
  2908 | 000015FC | 8B76FC                    | 	mov	si, word [bp-4]
  2909 | 000015FF | 83C60C                    | 	add	si, 12
  2910 | 00001602 | 8B34                      | 	mov	si, word [si]
  2911 | 00001604 | 83C60A                    | 	add	si, 10
  2912 | 00001607 | 8B46F8                    | 	mov	ax, word [bp-8]
  2913 | 0000160A | 8904                      | 	mov	word [si], ax
  2914 |          |                           | L_yakc_150:
  2915 | 0000160C | 8B76FC                    | 	mov	si, word [bp-4]
  2916 | 0000160F | 83C60C                    | 	add	si, 12
  2917 | 00001612 | 8B7EF8                    | 	mov	di, word [bp-8]
  2918 | 00001615 | 83C70C                    | 	add	di, 12
  2919 | 00001618 | 8B04                      | 	mov	ax, word [si]
  2920 | 0000161A | 8905                      | 	mov	word [di], ax
  2921 | 0000161C | 8B76F8                    | 	mov	si, word [bp-8]
  2922 | 0000161F | 83C60A                    | 	add	si, 10
  2923 | 00001622 | 8B46FC                    | 	mov	ax, word [bp-4]
  2924 | 00001625 | 8904                      | 	mov	word [si], ax
  2925 | 00001627 | 8B76FC                    | 	mov	si, word [bp-4]
  2926 | 0000162A | 83C60C                    | 	add	si, 12
  2927 | 0000162D | 8B46F8                    | 	mov	ax, word [bp-8]
  2928 | 00001630 | 8904                      | 	mov	word [si], ax
  2929 | 00001632 | 8B76F8                    | 	mov	si, word [bp-8]
  2930 | 00001635 | 83C60E                    | 	add	si, 14
  2931 | 00001638 | C7040000                  | 	mov	word [si], 0
  2932 | 0000163C | A1[8C1D]                  | 	mov	ax, word [YKISRCallDepth]
  2933 | 0000163F | 85C0                      | 	test	ax, ax
  2934 | 00001641 | 750A                      | 	jne	L_yakc_151
  2935 | 00001643 | B80100                    | 	mov	ax, 1
  2936 | 00001646 | 50                        | 	push	ax
  2937 | 00001647 | E83EF8                    | 	call	YKScheduler
  2938 | 0000164A | 83C402                    | 	add	sp, 2
  2939 |          |                           | L_yakc_151:
  2940 | 0000164D | E87A07                    | 	call	YKExitMutex
  2941 |          |                           | L_yakc_142:
  2942 | 00001650 | 89EC                      | 	mov	sp, bp
  2943 | 00001652 | 5D                        | 	pop	bp
  2944 | 00001653 | C3                        | 	ret
  2945 |          |                           | L_yakc_132:
  2946 | 00001654 | 55                        | 	push	bp
  2947 | 00001655 | 89E5                      | 	mov	bp, sp
  2948 | 00001657 | 83EC08                    | 	sub	sp, 8
  2949 | 0000165A | E9ACFE                    | 	jmp	L_yakc_133
  2950 | 0000165D | 90                        | 	ALIGN	2
  2951 |          |                           | YKQCreate:
  2952 | 0000165E | E99400                    | 	jmp	L_yakc_153
  2953 |          |                           | L_yakc_154:
  2954 | 00001661 | E86407                    | 	call	YKEnterMutex
  2955 | 00001664 | C746FE0000                | 	mov	word [bp-2], 0
  2956 | 00001669 | EB03                      | 	jmp	L_yakc_156
  2957 |          |                           | L_yakc_155:
  2958 | 0000166B | FF46FE                    | 	inc	word [bp-2]
  2959 |          |                           | L_yakc_156:
  2960 | 0000166E | 8B46FE                    | 	mov	ax, word [bp-2]
  2961 | 00001671 | B90A00                    | 	mov	cx, 10
  2962 | 00001674 | F7E9                      | 	imul	cx
  2963 | 00001676 | 89C6                      | 	mov	si, ax
  2964 | 00001678 | 81C6[921D]                | 	add	si, YKQueueArray
  2965 | 0000167C | 8B04                      | 	mov	ax, word [si]
  2966 | 0000167E | 85C0                      | 	test	ax, ax
  2967 | 00001680 | 75E9                      | 	jne	L_yakc_155
  2968 |          |                           | L_yakc_157:
  2969 | 00001682 | 8B46FE                    | 	mov	ax, word [bp-2]
  2970 | 00001685 | B90A00                    | 	mov	cx, 10
  2971 | 00001688 | F7E9                      | 	imul	cx
  2972 | 0000168A | 89C6                      | 	mov	si, ax
  2973 | 0000168C | 81C6[921D]                | 	add	si, YKQueueArray
  2974 | 00001690 | 8B4604                    | 	mov	ax, word [bp+4]
  2975 | 00001693 | 8904                      | 	mov	word [si], ax
  2976 | 00001695 | 8B46FE                    | 	mov	ax, word [bp-2]
  2977 | 00001698 | B90A00                    | 	mov	cx, 10
  2978 | 0000169B | F7E9                      | 	imul	cx
  2979 | 0000169D | 05[921D]                  | 	add	ax, YKQueueArray
  2980 | 000016A0 | 89C6                      | 	mov	si, ax
  2981 | 000016A2 | 83C602                    | 	add	si, 2
  2982 | 000016A5 | 8B4606                    | 	mov	ax, word [bp+6]
  2983 | 000016A8 | 8904                      | 	mov	word [si], ax
  2984 | 000016AA | 8B46FE                    | 	mov	ax, word [bp-2]
  2985 | 000016AD | B90A00                    | 	mov	cx, 10
  2986 | 000016B0 | F7E9                      | 	imul	cx
  2987 | 000016B2 | 05[921D]                  | 	add	ax, YKQueueArray
  2988 | 000016B5 | 89C6                      | 	mov	si, ax
  2989 | 000016B7 | 83C604                    | 	add	si, 4
  2990 | 000016BA | C7040000                  | 	mov	word [si], 0
  2991 | 000016BE | 8B46FE                    | 	mov	ax, word [bp-2]
  2992 | 000016C1 | B90A00                    | 	mov	cx, 10
  2993 | 000016C4 | F7E9                      | 	imul	cx
  2994 | 000016C6 | 05[921D]                  | 	add	ax, YKQueueArray
  2995 | 000016C9 | 89C6                      | 	mov	si, ax
  2996 | 000016CB | 83C606                    | 	add	si, 6
  2997 | 000016CE | C7040000                  | 	mov	word [si], 0
  2998 | 000016D2 | 8B46FE                    | 	mov	ax, word [bp-2]
  2999 | 000016D5 | B90A00                    | 	mov	cx, 10
  3000 | 000016D8 | F7E9                      | 	imul	cx
  3001 | 000016DA | 05[921D]                  | 	add	ax, YKQueueArray
  3002 | 000016DD | 89C6                      | 	mov	si, ax
  3003 | 000016DF | 83C608                    | 	add	si, 8
  3004 | 000016E2 | C7040000                  | 	mov	word [si], 0
  3005 | 000016E6 | 8B46FE                    | 	mov	ax, word [bp-2]
  3006 | 000016E9 | B90A00                    | 	mov	cx, 10
  3007 | 000016EC | F7E9                      | 	imul	cx
  3008 | 000016EE | 05[921D]                  | 	add	ax, YKQueueArray
  3009 |          |                           | L_yakc_158:
  3010 | 000016F1 | 89EC                      | 	mov	sp, bp
  3011 | 000016F3 | 5D                        | 	pop	bp
  3012 | 000016F4 | C3                        | 	ret
  3013 |          |                           | L_yakc_153:
  3014 | 000016F5 | 55                        | 	push	bp
  3015 | 000016F6 | 89E5                      | 	mov	bp, sp
  3016 | 000016F8 | 51                        | 	push	cx
  3017 | 000016F9 | E965FF                    | 	jmp	L_yakc_154
  3018 |          |                           | 	ALIGN	2
  3019 |          |                           | YKQPend:
  3020 | 000016FC | E9D600                    | 	jmp	L_yakc_160
  3021 |          |                           | L_yakc_161:
  3022 | 000016FF | E8C606                    | 	call	YKEnterMutex
  3023 | 00001702 | 8B7604                    | 	mov	si, word [bp+4]
  3024 | 00001705 | 83C608                    | 	add	si, 8
  3025 | 00001708 | 8B04                      | 	mov	ax, word [si]
  3026 | 0000170A | 85C0                      | 	test	ax, ax
  3027 | 0000170C | 756C                      | 	jne	L_yakc_162
  3028 | 0000170E | A1[941A]                  | 	mov	ax, word [YKRdyList]
  3029 | 00001711 | 8946FE                    | 	mov	word [bp-2], ax
  3030 | 00001714 | 8B76FE                    | 	mov	si, word [bp-2]
  3031 | 00001717 | 83C60A                    | 	add	si, 10
  3032 | 0000171A | 8B04                      | 	mov	ax, word [si]
  3033 | 0000171C | A3[941A]                  | 	mov	word [YKRdyList], ax
  3034 | 0000171F | 8B76FE                    | 	mov	si, word [bp-2]
  3035 | 00001722 | 83C60A                    | 	add	si, 10
  3036 | 00001725 | 8B34                      | 	mov	si, word [si]
  3037 | 00001727 | 83C60C                    | 	add	si, 12
  3038 | 0000172A | C7040000                  | 	mov	word [si], 0
  3039 | 0000172E | 8B76FE                    | 	mov	si, word [bp-2]
  3040 | 00001731 | 83C60A                    | 	add	si, 10
  3041 | 00001734 | A1[C21D]                  | 	mov	ax, word [YKQueueWaitingList]
  3042 | 00001737 | 8904                      | 	mov	word [si], ax
  3043 | 00001739 | 8B46FE                    | 	mov	ax, word [bp-2]
  3044 | 0000173C | A3[C21D]                  | 	mov	word [YKQueueWaitingList], ax
  3045 | 0000173F | 8B76FE                    | 	mov	si, word [bp-2]
  3046 | 00001742 | 83C60C                    | 	add	si, 12
  3047 | 00001745 | C7040000                  | 	mov	word [si], 0
  3048 | 00001749 | 8B76FE                    | 	mov	si, word [bp-2]
  3049 | 0000174C | 83C60A                    | 	add	si, 10
  3050 | 0000174F | 8B04                      | 	mov	ax, word [si]
  3051 | 00001751 | 85C0                      | 	test	ax, ax
  3052 | 00001753 | 7410                      | 	je	L_yakc_163
  3053 | 00001755 | 8B76FE                    | 	mov	si, word [bp-2]
  3054 | 00001758 | 83C60A                    | 	add	si, 10
  3055 | 0000175B | 8B34                      | 	mov	si, word [si]
  3056 | 0000175D | 83C60C                    | 	add	si, 12
  3057 | 00001760 | 8B46FE                    | 	mov	ax, word [bp-2]
  3058 | 00001763 | 8904                      | 	mov	word [si], ax
  3059 |          |                           | L_yakc_163:
  3060 | 00001765 | 8B76FE                    | 	mov	si, word [bp-2]
  3061 | 00001768 | 83C610                    | 	add	si, 16
  3062 | 0000176B | 8B4604                    | 	mov	ax, word [bp+4]
  3063 | 0000176E | 8904                      | 	mov	word [si], ax
  3064 | 00001770 | B80100                    | 	mov	ax, 1
  3065 | 00001773 | 50                        | 	push	ax
  3066 | 00001774 | E811F7                    | 	call	YKScheduler
  3067 | 00001777 | 83C402                    | 	add	sp, 2
  3068 |          |                           | L_yakc_162:
  3069 | 0000177A | 8B7604                    | 	mov	si, word [bp+4]
  3070 | 0000177D | 83C604                    | 	add	si, 4
  3071 | 00001780 | 8B04                      | 	mov	ax, word [si]
  3072 | 00001782 | D1E0                      | 	shl	ax, 1
  3073 | 00001784 | 89C6                      | 	mov	si, ax
  3074 | 00001786 | 8B7E04                    | 	mov	di, word [bp+4]
  3075 | 00001789 | 0335                      | 	add	si, word [di]
  3076 | 0000178B | 8B04                      | 	mov	ax, word [si]
  3077 | 0000178D | 8946FC                    | 	mov	word [bp-4], ax
  3078 | 00001790 | 8B7604                    | 	mov	si, word [bp+4]
  3079 | 00001793 | 83C608                    | 	add	si, 8
  3080 | 00001796 | 8B04                      | 	mov	ax, word [si]
  3081 | 00001798 | 48                        | 	dec	ax
  3082 | 00001799 | 8B7604                    | 	mov	si, word [bp+4]
  3083 | 0000179C | 83C608                    | 	add	si, 8
  3084 | 0000179F | 8904                      | 	mov	word [si], ax
  3085 | 000017A1 | 8B7604                    | 	mov	si, word [bp+4]
  3086 | 000017A4 | 83C604                    | 	add	si, 4
  3087 | 000017A7 | 8B04                      | 	mov	ax, word [si]
  3088 | 000017A9 | 40                        | 	inc	ax
  3089 | 000017AA | 8B7604                    | 	mov	si, word [bp+4]
  3090 | 000017AD | 83C602                    | 	add	si, 2
  3091 | 000017B0 | 8B14                      | 	mov	dx, word [si]
  3092 | 000017B2 | 39C2                      | 	cmp	dx, ax
  3093 | 000017B4 | 7E0B                      | 	jle	L_yakc_164
  3094 | 000017B6 | 8B7604                    | 	mov	si, word [bp+4]
  3095 | 000017B9 | 83C604                    | 	add	si, 4
  3096 | 000017BC | 8B04                      | 	mov	ax, word [si]
  3097 | 000017BE | 40                        | 	inc	ax
  3098 | 000017BF | EB02                      | 	jmp	L_yakc_165
  3099 |          |                           | L_yakc_164:
  3100 | 000017C1 | 31C0                      | 	xor	ax, ax
  3101 |          |                           | L_yakc_165:
  3102 | 000017C3 | 8B7604                    | 	mov	si, word [bp+4]
  3103 | 000017C6 | 83C604                    | 	add	si, 4
  3104 | 000017C9 | 8904                      | 	mov	word [si], ax
  3105 | 000017CB | E8FC05                    | 	call	YKExitMutex
  3106 | 000017CE | 8B46FC                    | 	mov	ax, word [bp-4]
  3107 |          |                           | L_yakc_166:
  3108 | 000017D1 | 89EC                      | 	mov	sp, bp
  3109 | 000017D3 | 5D                        | 	pop	bp
  3110 | 000017D4 | C3                        | 	ret
  3111 |          |                           | L_yakc_160:
  3112 | 000017D5 | 55                        | 	push	bp
  3113 | 000017D6 | 89E5                      | 	mov	bp, sp
  3114 | 000017D8 | 83EC04                    | 	sub	sp, 4
  3115 | 000017DB | E921FF                    | 	jmp	L_yakc_161
  3116 |          |                           | L_yakc_168:
  3117 | 000017DE | 7468696E6B20746865-       | 	DB	"think the queue is full?",0xA,0
  3118 | 000017E7 | 207175657565206973-       | ...
  3119 | 000017F0 | 2066756C6C3F0A00          | ...
  3120 |          |                           | 	ALIGN	2
  3121 |          |                           | YKQPost:
  3122 | 000017F8 | E9BE01                    | 	jmp	L_yakc_169
  3123 |          |                           | L_yakc_170:
  3124 | 000017FB | E8CA05                    | 	call	YKEnterMutex
  3125 | 000017FE | 8B7604                    | 	mov	si, word [bp+4]
  3126 | 00001801 | 83C602                    | 	add	si, 2
  3127 | 00001804 | 8B04                      | 	mov	ax, word [si]
  3128 | 00001806 | 48                        | 	dec	ax
  3129 | 00001807 | 8B7604                    | 	mov	si, word [bp+4]
  3130 | 0000180A | 83C608                    | 	add	si, 8
  3131 | 0000180D | 8B14                      | 	mov	dx, word [si]
  3132 | 0000180F | 39C2                      | 	cmp	dx, ax
  3133 | 00001811 | 750F                      | 	jne	L_yakc_171
  3134 | 00001813 | B8[DE17]                  | 	mov	ax, L_yakc_168
  3135 | 00001816 | 50                        | 	push	ax
  3136 | 00001817 | E80EEC                    | 	call	printString
  3137 | 0000181A | 83C402                    | 	add	sp, 2
  3138 | 0000181D | 31C0                      | 	xor	ax, ax
  3139 | 0000181F | E99301                    | 	jmp	L_yakc_172
  3140 |          |                           | L_yakc_171:
  3141 | 00001822 | C746FC0000                | 	mov	word [bp-4], 0
  3142 | 00001827 | A1[C21D]                  | 	mov	ax, word [YKQueueWaitingList]
  3143 | 0000182A | 8946FE                    | 	mov	word [bp-2], ax
  3144 | 0000182D | 8B7604                    | 	mov	si, word [bp+4]
  3145 | 00001830 | 83C606                    | 	add	si, 6
  3146 | 00001833 | 8B04                      | 	mov	ax, word [si]
  3147 | 00001835 | D1E0                      | 	shl	ax, 1
  3148 | 00001837 | 89C6                      | 	mov	si, ax
  3149 | 00001839 | 8B7E04                    | 	mov	di, word [bp+4]
  3150 | 0000183C | 0335                      | 	add	si, word [di]
  3151 | 0000183E | 8B4606                    | 	mov	ax, word [bp+6]
  3152 | 00001841 | 8904                      | 	mov	word [si], ax
  3153 | 00001843 | 8B7604                    | 	mov	si, word [bp+4]
  3154 | 00001846 | 83C608                    | 	add	si, 8
  3155 | 00001849 | 8B04                      | 	mov	ax, word [si]
  3156 | 0000184B | 40                        | 	inc	ax
  3157 | 0000184C | 8B7604                    | 	mov	si, word [bp+4]
  3158 | 0000184F | 83C608                    | 	add	si, 8
  3159 | 00001852 | 8904                      | 	mov	word [si], ax
  3160 | 00001854 | 8B7604                    | 	mov	si, word [bp+4]
  3161 | 00001857 | 83C606                    | 	add	si, 6
  3162 | 0000185A | 8B04                      | 	mov	ax, word [si]
  3163 | 0000185C | 40                        | 	inc	ax
  3164 | 0000185D | 8B7604                    | 	mov	si, word [bp+4]
  3165 | 00001860 | 83C602                    | 	add	si, 2
  3166 | 00001863 | 8B14                      | 	mov	dx, word [si]
  3167 | 00001865 | 39C2                      | 	cmp	dx, ax
  3168 | 00001867 | 7E0B                      | 	jle	L_yakc_173
  3169 | 00001869 | 8B7604                    | 	mov	si, word [bp+4]
  3170 | 0000186C | 83C606                    | 	add	si, 6
  3171 | 0000186F | 8B04                      | 	mov	ax, word [si]
  3172 | 00001871 | 40                        | 	inc	ax
  3173 | 00001872 | EB02                      | 	jmp	L_yakc_174
  3174 |          |                           | L_yakc_173:
  3175 | 00001874 | 31C0                      | 	xor	ax, ax
  3176 |          |                           | L_yakc_174:
  3177 | 00001876 | 8B7604                    | 	mov	si, word [bp+4]
  3178 | 00001879 | 83C606                    | 	add	si, 6
  3179 | 0000187C | 8904                      | 	mov	word [si], ax
  3180 | 0000187E | EB3F                      | 	jmp	L_yakc_176
  3181 |          |                           | L_yakc_175:
  3182 | 00001880 | 8B76FE                    | 	mov	si, word [bp-2]
  3183 | 00001883 | 83C610                    | 	add	si, 16
  3184 | 00001886 | 8B4604                    | 	mov	ax, word [bp+4]
  3185 | 00001889 | 3B04                      | 	cmp	ax, word [si]
  3186 | 0000188B | 7527                      | 	jne	L_yakc_178
  3187 | 0000188D | 8B46FC                    | 	mov	ax, word [bp-4]
  3188 | 00001890 | 85C0                      | 	test	ax, ax
  3189 | 00001892 | 7508                      | 	jne	L_yakc_179
  3190 | 00001894 | 8B46FE                    | 	mov	ax, word [bp-2]
  3191 | 00001897 | 8946FC                    | 	mov	word [bp-4], ax
  3192 | 0000189A | EB18                      | 	jmp	L_yakc_180
  3193 |          |                           | L_yakc_179:
  3194 | 0000189C | 8B76FE                    | 	mov	si, word [bp-2]
  3195 | 0000189F | 83C606                    | 	add	si, 6
  3196 | 000018A2 | 8B7EFC                    | 	mov	di, word [bp-4]
  3197 | 000018A5 | 83C706                    | 	add	di, 6
  3198 | 000018A8 | 8B05                      | 	mov	ax, word [di]
  3199 | 000018AA | 3B04                      | 	cmp	ax, word [si]
  3200 | 000018AC | 7E06                      | 	jle	L_yakc_181
  3201 | 000018AE | 8B46FE                    | 	mov	ax, word [bp-2]
  3202 | 000018B1 | 8946FC                    | 	mov	word [bp-4], ax
  3203 |          |                           | L_yakc_181:
  3204 |          |                           | L_yakc_180:
  3205 |          |                           | L_yakc_178:
  3206 | 000018B4 | 8B76FE                    | 	mov	si, word [bp-2]
  3207 | 000018B7 | 83C60A                    | 	add	si, 10
  3208 | 000018BA | 8B04                      | 	mov	ax, word [si]
  3209 | 000018BC | 8946FE                    | 	mov	word [bp-2], ax
  3210 |          |                           | L_yakc_176:
  3211 | 000018BF | 8B46FE                    | 	mov	ax, word [bp-2]
  3212 | 000018C2 | 85C0                      | 	test	ax, ax
  3213 | 000018C4 | 75BA                      | 	jne	L_yakc_175
  3214 |          |                           | L_yakc_177:
  3215 | 000018C6 | 8B46FC                    | 	mov	ax, word [bp-4]
  3216 | 000018C9 | 85C0                      | 	test	ax, ax
  3217 | 000018CB | 7509                      | 	jne	L_yakc_182
  3218 | 000018CD | E8FA04                    | 	call	YKExitMutex
  3219 | 000018D0 | B80100                    | 	mov	ax, 1
  3220 | 000018D3 | E9DF00                    | 	jmp	L_yakc_172
  3221 |          |                           | L_yakc_182:
  3222 | 000018D6 | 8B76FC                    | 	mov	si, word [bp-4]
  3223 | 000018D9 | 83C60C                    | 	add	si, 12
  3224 | 000018DC | 8B04                      | 	mov	ax, word [si]
  3225 | 000018DE | 85C0                      | 	test	ax, ax
  3226 | 000018E0 | 750D                      | 	jne	L_yakc_183
  3227 | 000018E2 | 8B76FC                    | 	mov	si, word [bp-4]
  3228 | 000018E5 | 83C60A                    | 	add	si, 10
  3229 | 000018E8 | 8B04                      | 	mov	ax, word [si]
  3230 | 000018EA | A3[C21D]                  | 	mov	word [YKQueueWaitingList], ax
  3231 | 000018ED | EB15                      | 	jmp	L_yakc_184
  3232 |          |                           | L_yakc_183:
  3233 | 000018EF | 8B76FC                    | 	mov	si, word [bp-4]
  3234 | 000018F2 | 83C60A                    | 	add	si, 10
  3235 | 000018F5 | 8B7EFC                    | 	mov	di, word [bp-4]
  3236 | 000018F8 | 83C70C                    | 	add	di, 12
  3237 | 000018FB | 8B3D                      | 	mov	di, word [di]
  3238 | 000018FD | 83C70A                    | 	add	di, 10
  3239 | 00001900 | 8B04                      | 	mov	ax, word [si]
  3240 | 00001902 | 8905                      | 	mov	word [di], ax
  3241 |          |                           | L_yakc_184:
  3242 | 00001904 | 8B76FC                    | 	mov	si, word [bp-4]
  3243 | 00001907 | 83C60A                    | 	add	si, 10
  3244 | 0000190A | 8B04                      | 	mov	ax, word [si]
  3245 | 0000190C | 85C0                      | 	test	ax, ax
  3246 | 0000190E | 7415                      | 	je	L_yakc_185
  3247 | 00001910 | 8B76FC                    | 	mov	si, word [bp-4]
  3248 | 00001913 | 83C60C                    | 	add	si, 12
  3249 | 00001916 | 8B7EFC                    | 	mov	di, word [bp-4]
  3250 | 00001919 | 83C70A                    | 	add	di, 10
  3251 | 0000191C | 8B3D                      | 	mov	di, word [di]
  3252 | 0000191E | 83C70C                    | 	add	di, 12
  3253 | 00001921 | 8B04                      | 	mov	ax, word [si]
  3254 | 00001923 | 8905                      | 	mov	word [di], ax
  3255 |          |                           | L_yakc_185:
  3256 | 00001925 | A1[941A]                  | 	mov	ax, word [YKRdyList]
  3257 | 00001928 | 8946FA                    | 	mov	word [bp-6], ax
  3258 | 0000192B | EB0B                      | 	jmp	L_yakc_187
  3259 |          |                           | L_yakc_186:
  3260 | 0000192D | 8B76FA                    | 	mov	si, word [bp-6]
  3261 | 00001930 | 83C60A                    | 	add	si, 10
  3262 | 00001933 | 8B04                      | 	mov	ax, word [si]
  3263 | 00001935 | 8946FA                    | 	mov	word [bp-6], ax
  3264 |          |                           | L_yakc_187:
  3265 | 00001938 | 8B76FA                    | 	mov	si, word [bp-6]
  3266 | 0000193B | 83C606                    | 	add	si, 6
  3267 | 0000193E | 8B7EFC                    | 	mov	di, word [bp-4]
  3268 | 00001941 | 83C706                    | 	add	di, 6
  3269 | 00001944 | 8B05                      | 	mov	ax, word [di]
  3270 | 00001946 | 3B04                      | 	cmp	ax, word [si]
  3271 | 00001948 | 7FE3                      | 	jg	L_yakc_186
  3272 |          |                           | L_yakc_188:
  3273 | 0000194A | 8B76FA                    | 	mov	si, word [bp-6]
  3274 | 0000194D | 83C60C                    | 	add	si, 12
  3275 | 00001950 | 8B04                      | 	mov	ax, word [si]
  3276 | 00001952 | 85C0                      | 	test	ax, ax
  3277 | 00001954 | 7508                      | 	jne	L_yakc_189
  3278 | 00001956 | 8B46FC                    | 	mov	ax, word [bp-4]
  3279 | 00001959 | A3[941A]                  | 	mov	word [YKRdyList], ax
  3280 | 0000195C | EB10                      | 	jmp	L_yakc_190
  3281 |          |                           | L_yakc_189:
  3282 | 0000195E | 8B76FA                    | 	mov	si, word [bp-6]
  3283 | 00001961 | 83C60C                    | 	add	si, 12
  3284 | 00001964 | 8B34                      | 	mov	si, word [si]
  3285 | 00001966 | 83C60A                    | 	add	si, 10
  3286 | 00001969 | 8B46FC                    | 	mov	ax, word [bp-4]
  3287 | 0000196C | 8904                      | 	mov	word [si], ax
  3288 |          |                           | L_yakc_190:
  3289 | 0000196E | 8B76FA                    | 	mov	si, word [bp-6]
  3290 | 00001971 | 83C60C                    | 	add	si, 12
  3291 | 00001974 | 8B7EFC                    | 	mov	di, word [bp-4]
  3292 | 00001977 | 83C70C                    | 	add	di, 12
  3293 | 0000197A | 8B04                      | 	mov	ax, word [si]
  3294 | 0000197C | 8905                      | 	mov	word [di], ax
  3295 | 0000197E | 8B76FC                    | 	mov	si, word [bp-4]
  3296 | 00001981 | 83C60A                    | 	add	si, 10
  3297 | 00001984 | 8B46FA                    | 	mov	ax, word [bp-6]
  3298 | 00001987 | 8904                      | 	mov	word [si], ax
  3299 | 00001989 | 8B76FA                    | 	mov	si, word [bp-6]
  3300 | 0000198C | 83C60C                    | 	add	si, 12
  3301 | 0000198F | 8B46FC                    | 	mov	ax, word [bp-4]
  3302 | 00001992 | 8904                      | 	mov	word [si], ax
  3303 | 00001994 | 8B76FC                    | 	mov	si, word [bp-4]
  3304 | 00001997 | 83C610                    | 	add	si, 16
  3305 | 0000199A | C7040000                  | 	mov	word [si], 0
  3306 | 0000199E | A1[8C1D]                  | 	mov	ax, word [YKISRCallDepth]
  3307 | 000019A1 | 85C0                      | 	test	ax, ax
  3308 | 000019A3 | 750A                      | 	jne	L_yakc_191
  3309 | 000019A5 | B80100                    | 	mov	ax, 1
  3310 | 000019A8 | 50                        | 	push	ax
  3311 | 000019A9 | E8DCF4                    | 	call	YKScheduler
  3312 | 000019AC | 83C402                    | 	add	sp, 2
  3313 |          |                           | L_yakc_191:
  3314 |          |                           | L_yakc_192:
  3315 | 000019AF | E81804                    | 	call	YKExitMutex
  3316 | 000019B2 | B80100                    | 	mov	ax, 1
  3317 |          |                           | L_yakc_172:
  3318 | 000019B5 | 89EC                      | 	mov	sp, bp
  3319 | 000019B7 | 5D                        | 	pop	bp
  3320 | 000019B8 | C3                        | 	ret
  3321 |          |                           | L_yakc_169:
  3322 | 000019B9 | 55                        | 	push	bp
  3323 | 000019BA | 89E5                      | 	mov	bp, sp
  3324 | 000019BC | 83EC06                    | 	sub	sp, 6
  3325 | 000019BF | E939FE                    | 	jmp	L_yakc_170
  3326 |          |                           | L_yakc_198:
  3327 | 000019C2 | 09636F756E743D2000        | 	DB	0x9,"count= ",0
  3328 |          |                           | L_yakc_197:
  3329 | 000019CB | 096E6578745F736C6F-       | 	DB	0x9,"next_slot= ",0
  3330 | 000019D4 | 743D2000                  | ...
  3331 |          |                           | L_yakc_196:
  3332 | 000019D8 | 096F6C646573743D20-       | 	DB	0x9,"oldest= ",0
  3333 | 000019E1 | 00                        | ...
  3334 |          |                           | L_yakc_195:
  3335 | 000019E2 | 096C656E6774683D20-       | 	DB	0x9,"length= ",0
  3336 | 000019EB | 00                        | ...
  3337 |          |                           | L_yakc_194:
  3338 | 000019EC | 7072696E74696E6720-       | 	DB	"printing queue ",0
  3339 | 000019F5 | 71756575652000            | ...
  3340 |          |                           | 	ALIGN	2
  3341 |          |                           | printQueue:
  3342 | 000019FC | E98700                    | 	jmp	L_yakc_199
  3343 |          |                           | L_yakc_200:
  3344 | 000019FF | E8C603                    | 	call	YKEnterMutex
  3345 | 00001A02 | B8[EC19]                  | 	mov	ax, L_yakc_194
  3346 | 00001A05 | 50                        | 	push	ax
  3347 | 00001A06 | E81FEA                    | 	call	printString
  3348 | 00001A09 | 83C402                    | 	add	sp, 2
  3349 | 00001A0C | FF7604                    | 	push	word [bp+4]
  3350 | 00001A0F | E83AEA                    | 	call	printInt
  3351 | 00001A12 | 83C402                    | 	add	sp, 2
  3352 | 00001A15 | B8[E219]                  | 	mov	ax, L_yakc_195
  3353 | 00001A18 | 50                        | 	push	ax
  3354 | 00001A19 | E80CEA                    | 	call	printString
  3355 | 00001A1C | 83C402                    | 	add	sp, 2
  3356 | 00001A1F | 8B7604                    | 	mov	si, word [bp+4]
  3357 | 00001A22 | 83C602                    | 	add	si, 2
  3358 | 00001A25 | FF34                      | 	push	word [si]
  3359 | 00001A27 | E822EA                    | 	call	printInt
  3360 | 00001A2A | 83C402                    | 	add	sp, 2
  3361 | 00001A2D | B8[D819]                  | 	mov	ax, L_yakc_196
  3362 | 00001A30 | 50                        | 	push	ax
  3363 | 00001A31 | E8F4E9                    | 	call	printString
  3364 | 00001A34 | 83C402                    | 	add	sp, 2
  3365 | 00001A37 | 8B7604                    | 	mov	si, word [bp+4]
  3366 | 00001A3A | 83C604                    | 	add	si, 4
  3367 | 00001A3D | FF34                      | 	push	word [si]
  3368 | 00001A3F | E80AEA                    | 	call	printInt
  3369 | 00001A42 | 83C402                    | 	add	sp, 2
  3370 | 00001A45 | B8[CB19]                  | 	mov	ax, L_yakc_197
  3371 | 00001A48 | 50                        | 	push	ax
  3372 | 00001A49 | E8DCE9                    | 	call	printString
  3373 | 00001A4C | 83C402                    | 	add	sp, 2
  3374 | 00001A4F | 8B7604                    | 	mov	si, word [bp+4]
  3375 | 00001A52 | 83C606                    | 	add	si, 6
  3376 | 00001A55 | FF34                      | 	push	word [si]
  3377 | 00001A57 | E8F2E9                    | 	call	printInt
  3378 | 00001A5A | 83C402                    | 	add	sp, 2
  3379 | 00001A5D | B8[C219]                  | 	mov	ax, L_yakc_198
  3380 | 00001A60 | 50                        | 	push	ax
  3381 | 00001A61 | E8C4E9                    | 	call	printString
  3382 | 00001A64 | 83C402                    | 	add	sp, 2
  3383 | 00001A67 | 8B7604                    | 	mov	si, word [bp+4]
  3384 | 00001A6A | 83C608                    | 	add	si, 8
  3385 | 00001A6D | FF34                      | 	push	word [si]
  3386 | 00001A6F | E8DAE9                    | 	call	printInt
  3387 | 00001A72 | 83C402                    | 	add	sp, 2
  3388 | 00001A75 | B8[610E]                  | 	mov	ax, (L_yakc_32+33)
  3389 | 00001A78 | 50                        | 	push	ax
  3390 | 00001A79 | E8ACE9                    | 	call	printString
  3391 | 00001A7C | 83C402                    | 	add	sp, 2
  3392 | 00001A7F | E84803                    | 	call	YKExitMutex
  3393 | 00001A82 | 89EC                      | 	mov	sp, bp
  3394 | 00001A84 | 5D                        | 	pop	bp
  3395 | 00001A85 | C3                        | 	ret
  3396 |          |                           | L_yakc_199:
  3397 | 00001A86 | 55                        | 	push	bp
  3398 | 00001A87 | 89E5                      | 	mov	bp, sp
  3399 | 00001A89 | 51                        | 	push	cx
  3400 | 00001A8A | E972FF                    | 	jmp	L_yakc_200
  3401 | 00001A8D | 90                        | 	ALIGN	2
  3402 |          |                           | YKCtxSwCount:
  3403 | 00001A8E | 00<rept>                  | 	TIMES	2 db 0
  3404 |          |                           | YKIdleCount:
  3405 | 00001A90 | 00<rept>                  | 	TIMES	2 db 0
  3406 |          |                           | YKTickNum:
  3407 | 00001A92 | 00<rept>                  | 	TIMES	2 db 0
  3408 |          |                           | YKRdyList:
  3409 | 00001A94 | 00<rept>                  | 	TIMES	2 db 0
  3410 |          |                           | YKSuspList:
  3411 | 00001A96 | 00<rept>                  | 	TIMES	2 db 0
  3412 |          |                           | YKSemaphoreWaitingList:
  3413 | 00001A98 | 00<rept>                  | 	TIMES	2 db 0
  3414 |          |                           | YKAvailTCBList:
  3415 | 00001A9A | 00<rept>                  | 	TIMES	2 db 0
  3416 |          |                           | YKTCBArray:
  3417 | 00001A9C | 00<rept>                  | 	TIMES	240 db 0
  3418 |          |                           | idleStack:
  3419 | 00001B8C | 00<rept>                  | 	TIMES	512 db 0
  3420 |          |                           | YKISRCallDepth:
  3421 | 00001D8C | 00<rept>                  | 	TIMES	2 db 0
  3422 |          |                           | YKSEMArray:
  3423 | 00001D8E | 00<rept>                  | 	TIMES	4 db 0
  3424 |          |                           | YKQueueArray:
  3425 | 00001D92 | 00<rept>                  | 	TIMES	40 db 0
  3426 |          |                           | YKEVENTArray:
  3427 | 00001DBA | 00<rept>                  | 	TIMES	8 db 0
  3428 |          |                           | YKQueueWaitingList:
  3429 | 00001DC2 | 00<rept>                  | 	TIMES	2 db 0
  3430 |          |                           | YKEventBlockingList:
  3431 | 00001DC4 | 00<rept>                  | 	TIMES	2 db 0
  3432 |          |                           | YKCurrentlyExecuting:
  3433 | 00001DC6 | 00<rept>                  | 	TIMES	2 db 0
  3434 |          |                           | ; All kernel routines that are written in assembly are here 
  3435 |          |                           | 
  3436 |          |                           | ; Disables interrupts 
  3437 |          |                           | YKEnterMutex:
  3438 | 00001DC8 | FA                        | 	cli	; clear interrupt flag to disable interrupts 
  3439 | 00001DC9 | C3                        | 	ret
  3440 |          |                           | 
  3441 |          |                           | ; Enables Interrupts 
  3442 |          |                           | YKExitMutex:
  3443 | 00001DCA | FB                        | 	sti	; set interrupt flag to enable interrupts 
  3444 | 00001DCB | C3                        | 	ret
  3445 |          |                           | 
  3446 |          |                           | YKDispatcher:
  3447 |          |                           | 	; So if we are following andy's design
  3448 |          |                           | 	; we will save context here (if the boolean
  3449 |          |                           | 	; passed to us tells us to)
  3450 |          |                           | 	
  3451 |          |                           | 	; Hmm. Should the proper SS and SP be passed to us as an argument?
  3452 |          |                           | 	; Or shall we fetch them ourselves?
  3453 |          |                           | 
  3454 |          |                           | 
  3455 |          |                           | 	; I am TRYING to move what YKRdyList is pointing at into the stack pointer
  3456 |          |                           | 	; Because what YKRdyList points at is the stack pointer of the most ready task
  3457 |          |                           | 	; Incorrect. The value from the dereferenced YKRdyList needs to be 
  3458 |          |                           | 	; dereferenced again to get the proper stack pointer
  3459 |          |                           | 	;mov SP, [YKRdyList]
  3460 | 00001DCC | 8B1E[941A]                | 	mov BX, [YKRdyList]
  3461 | 00001DD0 | 8B27                      | 	mov SP, word [BX]
  3462 |          |                           | 
  3463 |          |                           | 	; but in any case we need to restore context
  3464 | 00001DD2 | 07                        | 	pop ES
  3465 | 00001DD3 | 1F                        | 	pop DS
  3466 | 00001DD4 | 5F                        | 	pop DI
  3467 | 00001DD5 | 5E                        | 	pop SI
  3468 | 00001DD6 | 5D                        | 	pop BP
  3469 | 00001DD7 | 5A                        | 	pop DX
  3470 | 00001DD8 | 59                        | 	pop CX
  3471 | 00001DD9 | 5B                        | 	pop BX
  3472 | 00001DDA | 58                        | 	pop AX
  3473 |          |                           | 	; After this- done by reti
  3474 |          |                           | 	; IP
  3475 |          |                           | 	; CS
  3476 |          |                           | 	; flags
  3477 | 00001DDB | CF                        | 	iret
  3478 |          |                           | 
  3479 |          |                           | ; This dispatcher has a bool parameter for whether it needs to save context
  3480 |          |                           | ; @ param: int should_save_context
  3481 |          |                           | ; @ param: int * save_sp_location
  3482 |          |                           | ; @ param: int * save_ss_location
  3483 |          |                           | ; @ param: int * restore_sp_location
  3484 |          |                           | ; @ param: int * restore_ss_location
  3485 |          |                           | YKDispatcher_save_context:
  3486 | 00001DDC | FA                        | cli
  3487 |          |                           | 	; Here is where we will deal with our parameters
  3488 | 00001DDD | 55                        | 	push bp
  3489 | 00001DDE | 89E5                      | 	mov bp, sp
  3490 |          |                           | ; NOTE: WE DO NOT NEED TO SAVE AX. BECAUSE IT IS THE RETURN REGISTER.
  3491 |          |                           | 
  3492 |          |                           | ;	push ax				; gotta save ax
  3493 | 00001DE0 | 8B4604                    | 	mov ax, word [bp+4]			; getting the bool
  3494 | 00001DE3 | 85C0                      | 	test ax, ax					; if (ax == 0)
  3495 |          |                           | ;	pop ax				; shouldn't mess up flags
  3496 | 00001DE5 | 742A                      | 	jz	restoring_context		; If zero, we do NOT store context
  3497 |          |                           | storing_context:
  3498 | 00001DE7 | 8B4602                    | 	mov AX, [bp+2]	; The return address.
  3499 | 00001DEA | 5D                        | 	pop bp
  3500 | 00001DEB | 83C402                    | 	add sp, 2
  3501 |          |                           | 	
  3502 | 00001DEE | 9C                        | 	pushf
  3503 | 00001DEF | 0E                        | 	push CS
  3504 |          |                           | 
  3505 |          |                           | ;	mov AX, ending_dispatcher
  3506 |          |                           | ;	push AX
  3507 |          |                           | ;;	mov AX, [SP+4]	; return address now stored at sp+4
  3508 | 00001DF0 | 50                        | 	push AX
  3509 |          |                           | 
  3510 | 00001DF1 | 50                        | 	push AX
  3511 | 00001DF2 | 53                        | 	push BX
  3512 | 00001DF3 | 51                        | 	push CX
  3513 | 00001DF4 | 52                        | 	push DX
  3514 | 00001DF5 | 55                        | 	push BP						; Maybe not?
  3515 | 00001DF6 | 56                        | 	push SI
  3516 | 00001DF7 | 57                        | 	push DI
  3517 | 00001DF8 | 1E                        | 	push DS
  3518 | 00001DF9 | 06                        | 	push ES
  3519 |          |                           | 
  3520 | 00001DFA | 89E5                      | 	mov bp, sp
  3521 | 00001DFC | 83C514                    | 	add bp, 20
  3522 |          |                           | 
  3523 |          |                           | 	; Now we just need to store SS and SP in the proper TCB. (these are parameters)
  3524 |          |                           | 	; 2nd argument, int * save_sp = [bp+6]
  3525 | 00001DFF | 8B7606                    | 	mov si, word [bp+6]
  3526 | 00001E02 | 8924                      | 	mov word [si], sp
  3527 |          |                           | ;	mov word [bp+6], SP
  3528 |          |                           | 	; 3rd argument, int * save_ss = [bp+8]
  3529 | 00001E04 | 8B7608                    | 	mov si, word [bp+8]
  3530 | 00001E07 | 8C14                      | 	mov word [si], ss
  3531 |          |                           | ;	mov word [bp+8], SS
  3532 |          |                           | 
  3533 |          |                           | 
  3534 | 00001E09 | 8E560C                    | 	mov ss, word[bp+12]
  3535 | 00001E0C | 8B660A                    | 	mov sp, word[bp+10]
  3536 | 00001E0F | EB06                      | 	jmp real_restoring_context
  3537 |          |                           | 	
  3538 |          |                           | restoring_context:
  3539 |          |                           | ;	sp is still pointing at the return address.
  3540 |          |                           | 
  3541 |          |                           | 	; Now we just need to restore SS and SP from the proper TCB. (parameters)
  3542 |          |                           | 	; 5th argument, int * restore_ss = [bp+12]
  3543 |          |                           | 	; 4th argument, int * restore_sp = [bp+10]
  3544 | 00001E11 | 8E560C                    | 	mov ss, word[bp+12]
  3545 | 00001E14 | 8B660A                    | 	mov sp, word[bp+10]
  3546 |          |                           | 
  3547 |          |                           | real_restoring_context:
  3548 | 00001E17 | 07                        | 	pop ES
  3549 | 00001E18 | 1F                        | 	pop DS
  3550 | 00001E19 | 5F                        | 	pop DI
  3551 | 00001E1A | 5E                        | 	pop SI
  3552 | 00001E1B | 5D                        | 	pop BP
  3553 | 00001E1C | 5A                        | 	pop DX
  3554 | 00001E1D | 59                        | 	pop CX
  3555 | 00001E1E | 5B                        | 	pop BX
  3556 | 00001E1F | 58                        | 	pop AX
  3557 | 00001E20 | CF                        | 	iret			; restores CS, IP, and flags. Starts execution at ENDING_IP
  3558 |          |                           | 
  3559 |          |                           | ;;;ending_dispatcher:
  3560 |          |                           | 	; do all the ending crap of the function
  3561 |          |                           | ;;;	mov sp, bp
  3562 |          |                           | ;;;	pop bp
  3563 |          |                           | ;;;	ret				; Takes us back to the scheduler, and context is restored!
  3564 |          |                           | 
  3565 |          |                           | ;
  3566 |          |                           | ; POSSIBLE SOLUITION
  3567 |          |                           | ; Use assembly macro to
  3568 |          |                           | ; in-line all of this
  3569 |          |                           | ; so it doesn't have to 
  3570 |          |                           | ; be a function call
  3571 |          |                           | ;
  3572 |          |                           | ;
  3573 |          |                           | ; (Start stack)
  3574 |          |                           | ;	IP of task
  3575 |          |                           | ;	return address
  3576 |          |                           | ;	[SP points here]
  3577 |          |                           | ; 
  3578 |          |                           | ; (End stack)
  3579 |          |                           | ;	flags
  3580 |          |                           | ;	CS
  3581 |          |                           | ;	IP
  3582 |          |                           | ;	return address
  3583 |          |                           | ;	[SP points here]
  3584 |          |                           | ;
  3585 |          |                           | ;YKSaveFlagsAndCS:
  3586 |          |                           | ;	sub SP, 4
  3587 |          |                           | ;	push DX			; Save DX
  3588 |          |                           | ;	push CX			; Save CX
  3589 |          |                           | ;	mov DX, SP+12	; DX = IP (to original task)
  3590 |          |                           | ;	mov CX, SP+10	; CX = return address (to whomever called me)
  3591 |          |                           | ;	mov SP+8, DX
  3592 |          |                           | ;	mov SP+6, CX
  3593 |          |                           | ;	pop CX			; Restore CX
  3594 |          |                           | ;	pop DX			; Restore DX
  3595 |          |                           | ;
  3596 |          |                           | ;	add SP, 8
  3597 |          |                           | ;	pushf			; push flags into their proper spot
  3598 |          |                           | ;	push CS			; push CS into its proper spot
  3599 |          |                           | ;	sub SP, 4
  3600 |          |                           | ;	
  3601 |          |                           | ;	jmp YKSaveContext	; Now we are ready to save the rest of context
  3602 |          |                           | 
  3603 |          |                           | ; This saves the context on the current stack frame 
  3604 |          |                           | ; We are assuming this is called from an interrupt
  3605 |          |                           | ;	(if it is not, call YKSaveFlagsAndCS instead)
  3606 |          |                           | ; So we already have flags, CS, and IP saved properly
  3607 |          |                           | ;YKSaveContext:
  3608 |          |                           | ;	;SP + 2 (I think) is return address.
  3609 |          |                           | ;	sub SP, 18	; Get ready to save 9 words onto the stack
  3610 |          |                           | ;	push DX
  3611 |          |                           | ;	mov DX, SP + 22	; mov the return address onto SP 
  3612 |          |                           | ;	mov SP+4, DX	; put it at the end of the stack, ready to be popped
  3613 |          |                           | ;	pop DX
  3614 |          |                           | ;	
  3615 |          |                           | ;	mov [SP+20], AX
  3616 |          |                           | ;	mov SP+18, BX
  3617 |          |                           | ;	mov SP+16, CX
  3618 |          |                           | ;	mov SP+14, DX
  3619 |          |                           | ;	mov SP+12, BP
  3620 |          |                           | ;	mov SP+10, SI
  3621 |          |                           | ;	mov SP+8, DI
  3622 |          |                           | ;	mov SP+6, DS
  3623 |          |                           | ;	mov SP+4, ES
  3624 |          |                           | ;;	; Current stack: return address, empty 
  3625 |          |                           | ;;	push AX	; Each 
  3626 |          |                           | ;	push BX	; one  
  3627 |          |                           | ;	push CX	; is  
  3628 |          |                           | ;	push DX	; sp-2 
  3629 |          |                           | ;	; Instruction Pointer - In interrupt, saved already
  3630 |          |                           | ;	; Stack pointer - Need to be saved seperately
  3631 |          |                           | ;	push BP ; Base pointer 
  3632 |          |                           | ;	push SI ; Source index 
  3633 |          |                           | ;	push DI ; Destination index    
  3634 |          |                           | ;	; Code segment - Saved with IP?
  3635 |          |                           | ;	; Stack segment - saved with SP?
  3636 |          |                           | ;	push DS ; Data segment 
  3637 |          |                           | ;	push ES ; Extra segment 
  3638 |          |                           | ;	; Flags - interrupts already save it
  3639 |          |                           | ;	ret
  3640 |          |                           | 
  3641 |          |                           | ; This restores the context FROM the current stack frame 
  3642 |          |                           | ;YKRestoreContext:
  3643 |          |                           | ;	mov AX, SP+20
  3644 |          |                           | ;	mov BX, SP+18
  3645 |          |                           | ;	mov CX, SP+16
  3646 |          |                           | ;	mov DX, SP+14
  3647 |          |                           | ;	mov BP, SP+12
  3648 |          |                           | ;	mov SI, SP+10
  3649 |          |                           | ;	mov DI, SP+8
  3650 |          |                           | ;	mov DS, SP+6
  3651 |          |                           | ;	mov ES, SP+4
  3652 |          |                           | ;
  3653 |          |                           | ;	push DX
  3654 |          |                           | ;	mov DX, SP+4
  3655 |          |                           | ;	mov SP+22 , DX
  3656 |          |                           | ;	pop DX
  3657 |          |                           | ;	add SP, 18
  3658 |          |                           | ;	ret
  3659 |          |                           | 
  3660 |          |                           | ;	add SP, 2	; This deletes the return address saved when we call'ed YKRestoreContext.
  3661 |          |                           | ;	pop ES
  3662 |          |                           | ;	pop DS
  3663 |          |                           | ;	SS
  3664 |          |                           | ;	CS
  3665 |          |                           | ;	pop DI
  3666 |          |                           | ;	pop SI
  3667 |          |                           | ;	pop BP
  3668 |          |                           | ;	SP
  3669 |          |                           | ;	IP
  3670 |          |                           | 
  3671 |          |                           | ;	pop DX
  3672 |          |                           | ;	pop CX
  3673 |          |                           | ;	pop BX
  3674 |          |                           | ;	pop AX
  3675 |          |                           | ;	reti		; This pops IP, CS, and the flags, and goes to the return address.
  3676 |          |                           | 
  3677 |          |                           | ; Generated by c86 (BYU-NASM) 5.1 (beta) from lab8app.i
  3678 |          |                           | 	CPU	8086
  3679 | 00001E21 | 90                        | 	ALIGN	2
  3680 | 00001E22 | E9750B                    | 	jmp	main	; Jump to program start
  3681 | 00001E25 | 90                        | 	ALIGN	2
  3682 |          |                           | getMovePieceQueueArrayIndex:
  3683 | 00001E26 | EB18                      | 	jmp	L_lab8app_1
  3684 |          |                           | L_lab8app_2:
  3685 | 00001E28 | 833E[EE38]28              | 	cmp	word [movePieceArrayIndex], 40
  3686 | 00001E2D | 7506                      | 	jne	L_lab8app_3
  3687 | 00001E2F | C706[EE38]0000            | 	mov	word [movePieceArrayIndex], 0
  3688 |          |                           | L_lab8app_3:
  3689 | 00001E35 | A1[EE38]                  | 	mov	ax, word [movePieceArrayIndex]
  3690 | 00001E38 | FF06[EE38]                | 	inc	word [movePieceArrayIndex]
  3691 |          |                           | L_lab8app_4:
  3692 | 00001E3C | 89EC                      | 	mov	sp, bp
  3693 | 00001E3E | 5D                        | 	pop	bp
  3694 | 00001E3F | C3                        | 	ret
  3695 |          |                           | L_lab8app_1:
  3696 | 00001E40 | 55                        | 	push	bp
  3697 | 00001E41 | 89E5                      | 	mov	bp, sp
  3698 | 00001E43 | EBE3                      | 	jmp	L_lab8app_2
  3699 | 00001E45 | 90                        | 	ALIGN	2
  3700 |          |                           | getLowerBucket:
  3701 | 00001E46 | EB59                      | 	jmp	L_lab8app_6
  3702 |          |                           | L_lab8app_7:
  3703 | 00001E48 | C746FE0000                | 	mov	word [bp-2], 0
  3704 | 00001E4D | C746FC0000                | 	mov	word [bp-4], 0
  3705 | 00001E52 | A1[4039]                  | 	mov	ax, word [screen0]
  3706 | 00001E55 | 8946FA                    | 	mov	word [bp-6], ax
  3707 | 00001E58 | A1[4639]                  | 	mov	ax, word [screen3]
  3708 | 00001E5B | 8946F8                    | 	mov	word [bp-8], ax
  3709 | 00001E5E | EB0F                      | 	jmp	L_lab8app_9
  3710 |          |                           | L_lab8app_8:
  3711 | 00001E60 | 8B46FE                    | 	mov	ax, word [bp-2]
  3712 | 00001E63 | 40                        | 	inc	ax
  3713 | 00001E64 | 8946FE                    | 	mov	word [bp-2], ax
  3714 | 00001E67 | 8B46FA                    | 	mov	ax, word [bp-6]
  3715 | 00001E6A | D1E0                      | 	shl	ax, 1
  3716 | 00001E6C | 8946FA                    | 	mov	word [bp-6], ax
  3717 |          |                           | L_lab8app_9:
  3718 | 00001E6F | 8B46FA                    | 	mov	ax, word [bp-6]
  3719 | 00001E72 | 85C0                      | 	test	ax, ax
  3720 | 00001E74 | 75EA                      | 	jne	L_lab8app_8
  3721 |          |                           | L_lab8app_10:
  3722 | 00001E76 | EB0F                      | 	jmp	L_lab8app_12
  3723 |          |                           | L_lab8app_11:
  3724 | 00001E78 | 8B46FC                    | 	mov	ax, word [bp-4]
  3725 | 00001E7B | 40                        | 	inc	ax
  3726 | 00001E7C | 8946FC                    | 	mov	word [bp-4], ax
  3727 | 00001E7F | 8B46F8                    | 	mov	ax, word [bp-8]
  3728 | 00001E82 | D1E0                      | 	shl	ax, 1
  3729 | 00001E84 | 8946F8                    | 	mov	word [bp-8], ax
  3730 |          |                           | L_lab8app_12:
  3731 | 00001E87 | 8B46F8                    | 	mov	ax, word [bp-8]
  3732 | 00001E8A | 85C0                      | 	test	ax, ax
  3733 | 00001E8C | 75EA                      | 	jne	L_lab8app_11
  3734 |          |                           | L_lab8app_13:
  3735 | 00001E8E | 8B46FE                    | 	mov	ax, word [bp-2]
  3736 | 00001E91 | 3B46FC                    | 	cmp	ax, word [bp-4]
  3737 | 00001E94 | 7C04                      | 	jl	L_lab8app_14
  3738 | 00001E96 | 31C0                      | 	xor	ax, ax
  3739 | 00001E98 | EB03                      | 	jmp	L_lab8app_15
  3740 |          |                           | L_lab8app_14:
  3741 | 00001E9A | B80100                    | 	mov	ax, 1
  3742 |          |                           | L_lab8app_15:
  3743 |          |                           | L_lab8app_16:
  3744 | 00001E9D | 89EC                      | 	mov	sp, bp
  3745 | 00001E9F | 5D                        | 	pop	bp
  3746 | 00001EA0 | C3                        | 	ret
  3747 |          |                           | L_lab8app_6:
  3748 | 00001EA1 | 55                        | 	push	bp
  3749 | 00001EA2 | 89E5                      | 	mov	bp, sp
  3750 | 00001EA4 | 83EC08                    | 	sub	sp, 8
  3751 | 00001EA7 | EB9F                      | 	jmp	L_lab8app_7
  3752 | 00001EA9 | 90                        | 	ALIGN	2
  3753 |          |                           | isBucketFlat:
  3754 | 00001EAA | EB4E                      | 	jmp	L_lab8app_18
  3755 |          |                           | L_lab8app_19:
  3756 | 00001EAC | 8B4604                    | 	mov	ax, word [bp+4]
  3757 | 00001EAF | 85C0                      | 	test	ax, ax
  3758 | 00001EB1 | 740E                      | 	je	L_lab8app_20
  3759 | 00001EB3 | A1[4639]                  | 	mov	ax, word [screen3]
  3760 | 00001EB6 | 8946FE                    | 	mov	word [bp-2], ax
  3761 | 00001EB9 | A1[4A39]                  | 	mov	ax, word [screen5]
  3762 | 00001EBC | 8946FC                    | 	mov	word [bp-4], ax
  3763 | 00001EBF | EB0C                      | 	jmp	L_lab8app_21
  3764 |          |                           | L_lab8app_20:
  3765 | 00001EC1 | A1[4039]                  | 	mov	ax, word [screen0]
  3766 | 00001EC4 | 8946FE                    | 	mov	word [bp-2], ax
  3767 | 00001EC7 | A1[4439]                  | 	mov	ax, word [screen2]
  3768 | 00001ECA | 8946FC                    | 	mov	word [bp-4], ax
  3769 |          |                           | L_lab8app_21:
  3770 | 00001ECD | EB0A                      | 	jmp	L_lab8app_23
  3771 |          |                           | L_lab8app_22:
  3772 | 00001ECF | 8B46FE                    | 	mov	ax, word [bp-2]
  3773 | 00001ED2 | D1E0                      | 	shl	ax, 1
  3774 | 00001ED4 | 8B46FC                    | 	mov	ax, word [bp-4]
  3775 | 00001ED7 | D1E0                      | 	shl	ax, 1
  3776 |          |                           | L_lab8app_23:
  3777 | 00001ED9 | 8B46FE                    | 	mov	ax, word [bp-2]
  3778 | 00001EDC | 85C0                      | 	test	ax, ax
  3779 | 00001EDE | 7407                      | 	je	L_lab8app_25
  3780 | 00001EE0 | 8B46FC                    | 	mov	ax, word [bp-4]
  3781 | 00001EE3 | 85C0                      | 	test	ax, ax
  3782 | 00001EE5 | 75E8                      | 	jne	L_lab8app_22
  3783 |          |                           | L_lab8app_25:
  3784 |          |                           | L_lab8app_24:
  3785 | 00001EE7 | 8B46FC                    | 	mov	ax, word [bp-4]
  3786 | 00001EEA | 3B46FE                    | 	cmp	ax, word [bp-2]
  3787 | 00001EED | 7404                      | 	je	L_lab8app_26
  3788 | 00001EEF | 31C0                      | 	xor	ax, ax
  3789 | 00001EF1 | EB03                      | 	jmp	L_lab8app_27
  3790 |          |                           | L_lab8app_26:
  3791 | 00001EF3 | B80100                    | 	mov	ax, 1
  3792 |          |                           | L_lab8app_27:
  3793 |          |                           | L_lab8app_28:
  3794 | 00001EF6 | 89EC                      | 	mov	sp, bp
  3795 | 00001EF8 | 5D                        | 	pop	bp
  3796 | 00001EF9 | C3                        | 	ret
  3797 |          |                           | L_lab8app_18:
  3798 | 00001EFA | 55                        | 	push	bp
  3799 | 00001EFB | 89E5                      | 	mov	bp, sp
  3800 | 00001EFD | 83EC04                    | 	sub	sp, 4
  3801 | 00001F00 | EBAA                      | 	jmp	L_lab8app_19
  3802 |          |                           | L_lab8app_30:
  3803 | 00001F02 | 596F75207265616C6C-       | 	DB	"You really want a column not 0-5???",0xA,0
  3804 | 00001F0B | 792077616E74206120-       | ...
  3805 | 00001F14 | 636F6C756D6E206E6F-       | ...
  3806 | 00001F1D | 7420302D353F3F3F0A-       | ...
  3807 | 00001F26 | 00                        | ...
  3808 | 00001F27 | 90                        | 	ALIGN	2
  3809 |          |                           | getLowestSpace:
  3810 | 00001F28 | EB74                      | 	jmp	L_lab8app_31
  3811 |          |                           | L_lab8app_32:
  3812 | 00001F2A | C746FE0000                | 	mov	word [bp-2], 0
  3813 | 00001F2F | 8B4604                    | 	mov	ax, word [bp+4]
  3814 | 00001F32 | 83E800                    | 	sub	ax, 0
  3815 | 00001F35 | 7411                      | 	je	L_lab8app_35
  3816 | 00001F37 | 48                        | 	dec	ax
  3817 | 00001F38 | 7416                      | 	je	L_lab8app_36
  3818 | 00001F3A | 48                        | 	dec	ax
  3819 | 00001F3B | 741B                      | 	je	L_lab8app_37
  3820 | 00001F3D | 48                        | 	dec	ax
  3821 | 00001F3E | 7420                      | 	je	L_lab8app_38
  3822 | 00001F40 | 48                        | 	dec	ax
  3823 | 00001F41 | 7425                      | 	je	L_lab8app_39
  3824 | 00001F43 | 48                        | 	dec	ax
  3825 | 00001F44 | 742A                      | 	je	L_lab8app_40
  3826 | 00001F46 | EB30                      | 	jmp	L_lab8app_34
  3827 |          |                           | L_lab8app_35:
  3828 | 00001F48 | A1[4039]                  | 	mov	ax, word [screen0]
  3829 | 00001F4B | 8946FC                    | 	mov	word [bp-4], ax
  3830 | 00001F4E | EB32                      | 	jmp	L_lab8app_33
  3831 |          |                           | L_lab8app_36:
  3832 | 00001F50 | A1[4239]                  | 	mov	ax, word [screen1]
  3833 | 00001F53 | 8946FC                    | 	mov	word [bp-4], ax
  3834 | 00001F56 | EB2A                      | 	jmp	L_lab8app_33
  3835 |          |                           | L_lab8app_37:
  3836 | 00001F58 | A1[4439]                  | 	mov	ax, word [screen2]
  3837 | 00001F5B | 8946FC                    | 	mov	word [bp-4], ax
  3838 | 00001F5E | EB22                      | 	jmp	L_lab8app_33
  3839 |          |                           | L_lab8app_38:
  3840 | 00001F60 | A1[4639]                  | 	mov	ax, word [screen3]
  3841 | 00001F63 | 8946FC                    | 	mov	word [bp-4], ax
  3842 | 00001F66 | EB1A                      | 	jmp	L_lab8app_33
  3843 |          |                           | L_lab8app_39:
  3844 | 00001F68 | A1[4839]                  | 	mov	ax, word [screen4]
  3845 | 00001F6B | 8946FC                    | 	mov	word [bp-4], ax
  3846 | 00001F6E | EB12                      | 	jmp	L_lab8app_33
  3847 |          |                           | L_lab8app_40:
  3848 | 00001F70 | A1[4A39]                  | 	mov	ax, word [screen5]
  3849 | 00001F73 | 8946FC                    | 	mov	word [bp-4], ax
  3850 | 00001F76 | EB0A                      | 	jmp	L_lab8app_33
  3851 |          |                           | L_lab8app_34:
  3852 | 00001F78 | B8[021F]                  | 	mov	ax, L_lab8app_30
  3853 | 00001F7B | 50                        | 	push	ax
  3854 | 00001F7C | E8A9E4                    | 	call	printString
  3855 | 00001F7F | 83C402                    | 	add	sp, 2
  3856 |          |                           | L_lab8app_33:
  3857 | 00001F82 | EB0F                      | 	jmp	L_lab8app_42
  3858 |          |                           | L_lab8app_41:
  3859 | 00001F84 | 8B46FE                    | 	mov	ax, word [bp-2]
  3860 | 00001F87 | 40                        | 	inc	ax
  3861 | 00001F88 | 8946FE                    | 	mov	word [bp-2], ax
  3862 | 00001F8B | 8B46FC                    | 	mov	ax, word [bp-4]
  3863 | 00001F8E | D1E0                      | 	shl	ax, 1
  3864 | 00001F90 | 8946FC                    | 	mov	word [bp-4], ax
  3865 |          |                           | L_lab8app_42:
  3866 | 00001F93 | 8B46FC                    | 	mov	ax, word [bp-4]
  3867 | 00001F96 | 85C0                      | 	test	ax, ax
  3868 | 00001F98 | 75EA                      | 	jne	L_lab8app_41
  3869 |          |                           | L_lab8app_43:
  3870 | 00001F9A | 89EC                      | 	mov	sp, bp
  3871 | 00001F9C | 5D                        | 	pop	bp
  3872 | 00001F9D | C3                        | 	ret
  3873 |          |                           | L_lab8app_31:
  3874 | 00001F9E | 55                        | 	push	bp
  3875 | 00001F9F | 89E5                      | 	mov	bp, sp
  3876 | 00001FA1 | 83EC04                    | 	sub	sp, 4
  3877 | 00001FA4 | EB84                      | 	jmp	L_lab8app_32
  3878 |          |                           | L_lab8app_45:
  3879 | 00001FA6 | 434F4445204E4F5420-       | 	DB	"CODE NOT WRITTEN :'(",0
  3880 | 00001FAF | 5752495454454E203A-       | ...
  3881 | 00001FB8 | 272800                    | ...
  3882 | 00001FBB | 90                        | 	ALIGN	2
  3883 |          |                           | tryToClearLine:
  3884 | 00001FBC | E98C00                    | 	jmp	L_lab8app_46
  3885 |          |                           | L_lab8app_47:
  3886 | 00001FBF | B80100                    | 	mov	ax, 1
  3887 | 00001FC2 | 8B4E04                    | 	mov	cx, word [bp+4]
  3888 | 00001FC5 | D3E0                      | 	shl	ax, cl
  3889 | 00001FC7 | 2306[4039]                | 	and	ax, word [screen0]
  3890 | 00001FCB | 747A                      | 	je	L_lab8app_48
  3891 | 00001FCD | B80100                    | 	mov	ax, 1
  3892 | 00001FD0 | D3E0                      | 	shl	ax, cl
  3893 | 00001FD2 | 2306[4239]                | 	and	ax, word [screen1]
  3894 | 00001FD6 | 746F                      | 	je	L_lab8app_48
  3895 | 00001FD8 | B80100                    | 	mov	ax, 1
  3896 | 00001FDB | D3E0                      | 	shl	ax, cl
  3897 | 00001FDD | 2306[4439]                | 	and	ax, word [screen2]
  3898 | 00001FE1 | 7464                      | 	je	L_lab8app_48
  3899 | 00001FE3 | B80100                    | 	mov	ax, 1
  3900 | 00001FE6 | D3E0                      | 	shl	ax, cl
  3901 | 00001FE8 | 2306[4639]                | 	and	ax, word [screen3]
  3902 | 00001FEC | 7459                      | 	je	L_lab8app_48
  3903 | 00001FEE | B80100                    | 	mov	ax, 1
  3904 | 00001FF1 | D3E0                      | 	shl	ax, cl
  3905 | 00001FF3 | 2306[4839]                | 	and	ax, word [screen4]
  3906 | 00001FF7 | 744E                      | 	je	L_lab8app_48
  3907 | 00001FF9 | B80100                    | 	mov	ax, 1
  3908 | 00001FFC | D3E0                      | 	shl	ax, cl
  3909 | 00001FFE | 2306[4A39]                | 	and	ax, word [screen5]
  3910 | 00002002 | 7443                      | 	je	L_lab8app_48
  3911 | 00002004 | 8B4604                    | 	mov	ax, word [bp+4]
  3912 | 00002007 | 85C0                      | 	test	ax, ax
  3913 | 00002009 | 7532                      | 	jne	L_lab8app_49
  3914 | 0000200B | A1[4039]                  | 	mov	ax, word [screen0]
  3915 | 0000200E | D1E0                      | 	shl	ax, 1
  3916 | 00002010 | A3[4039]                  | 	mov	word [screen0], ax
  3917 | 00002013 | A1[4239]                  | 	mov	ax, word [screen1]
  3918 | 00002016 | D1E0                      | 	shl	ax, 1
  3919 | 00002018 | A3[4239]                  | 	mov	word [screen1], ax
  3920 | 0000201B | A1[4439]                  | 	mov	ax, word [screen2]
  3921 | 0000201E | D1E0                      | 	shl	ax, 1
  3922 | 00002020 | A3[4439]                  | 	mov	word [screen2], ax
  3923 | 00002023 | A1[4639]                  | 	mov	ax, word [screen3]
  3924 | 00002026 | D1E0                      | 	shl	ax, 1
  3925 | 00002028 | A3[4639]                  | 	mov	word [screen3], ax
  3926 | 0000202B | A1[4839]                  | 	mov	ax, word [screen4]
  3927 | 0000202E | D1E0                      | 	shl	ax, 1
  3928 | 00002030 | A3[4839]                  | 	mov	word [screen4], ax
  3929 | 00002033 | A1[4A39]                  | 	mov	ax, word [screen5]
  3930 | 00002036 | D1E0                      | 	shl	ax, 1
  3931 | 00002038 | A3[4A39]                  | 	mov	word [screen5], ax
  3932 | 0000203B | EB0A                      | 	jmp	L_lab8app_50
  3933 |          |                           | L_lab8app_49:
  3934 | 0000203D | B8[A61F]                  | 	mov	ax, L_lab8app_45
  3935 | 00002040 | 50                        | 	push	ax
  3936 | 00002041 | E8E4E3                    | 	call	printString
  3937 | 00002044 | 83C402                    | 	add	sp, 2
  3938 |          |                           | L_lab8app_50:
  3939 |          |                           | L_lab8app_48:
  3940 | 00002047 | 89EC                      | 	mov	sp, bp
  3941 | 00002049 | 5D                        | 	pop	bp
  3942 | 0000204A | C3                        | 	ret
  3943 |          |                           | L_lab8app_46:
  3944 | 0000204B | 55                        | 	push	bp
  3945 | 0000204C | 89E5                      | 	mov	bp, sp
  3946 | 0000204E | E96EFF                    | 	jmp	L_lab8app_47
  3947 |          |                           | L_lab8app_52:
  3948 | 00002051 | 63757272656E742042-       | 	DB	"current Board:",0xA,0
  3949 | 0000205A | 6F6172643A0A00            | ...
  3950 | 00002061 | 90                        | 	ALIGN	2
  3951 |          |                           | printBoard:
  3952 | 00002062 | E9D400                    | 	jmp	L_lab8app_53
  3953 |          |                           | L_lab8app_54:
  3954 | 00002065 | B8[5120]                  | 	mov	ax, L_lab8app_52
  3955 | 00002068 | 50                        | 	push	ax
  3956 | 00002069 | E8BCE3                    | 	call	printString
  3957 | 0000206C | 83C402                    | 	add	sp, 2
  3958 | 0000206F | C746FE0000                | 	mov	word [bp-2], 0
  3959 | 00002074 | E9B500                    | 	jmp	L_lab8app_56
  3960 |          |                           | L_lab8app_55:
  3961 | 00002077 | B80100                    | 	mov	ax, 1
  3962 | 0000207A | 8B4EFE                    | 	mov	cx, word [bp-2]
  3963 | 0000207D | D3E0                      | 	shl	ax, cl
  3964 | 0000207F | 2306[4039]                | 	and	ax, word [screen0]
  3965 | 00002083 | 7405                      | 	je	L_lab8app_59
  3966 | 00002085 | B80100                    | 	mov	ax, 1
  3967 | 00002088 | EB02                      | 	jmp	L_lab8app_60
  3968 |          |                           | L_lab8app_59:
  3969 | 0000208A | 31C0                      | 	xor	ax, ax
  3970 |          |                           | L_lab8app_60:
  3971 | 0000208C | 50                        | 	push	ax
  3972 | 0000208D | E8BCE3                    | 	call	printInt
  3973 | 00002090 | 83C402                    | 	add	sp, 2
  3974 | 00002093 | B80100                    | 	mov	ax, 1
  3975 | 00002096 | 8B4EFE                    | 	mov	cx, word [bp-2]
  3976 | 00002099 | D3E0                      | 	shl	ax, cl
  3977 | 0000209B | 2306[4239]                | 	and	ax, word [screen1]
  3978 | 0000209F | 7405                      | 	je	L_lab8app_61
  3979 | 000020A1 | B80100                    | 	mov	ax, 1
  3980 | 000020A4 | EB02                      | 	jmp	L_lab8app_62
  3981 |          |                           | L_lab8app_61:
  3982 | 000020A6 | 31C0                      | 	xor	ax, ax
  3983 |          |                           | L_lab8app_62:
  3984 | 000020A8 | 50                        | 	push	ax
  3985 | 000020A9 | E8A0E3                    | 	call	printInt
  3986 | 000020AC | 83C402                    | 	add	sp, 2
  3987 | 000020AF | B80100                    | 	mov	ax, 1
  3988 | 000020B2 | 8B4EFE                    | 	mov	cx, word [bp-2]
  3989 | 000020B5 | D3E0                      | 	shl	ax, cl
  3990 | 000020B7 | 2306[4439]                | 	and	ax, word [screen2]
  3991 | 000020BB | 7405                      | 	je	L_lab8app_63
  3992 | 000020BD | B80100                    | 	mov	ax, 1
  3993 | 000020C0 | EB02                      | 	jmp	L_lab8app_64
  3994 |          |                           | L_lab8app_63:
  3995 | 000020C2 | 31C0                      | 	xor	ax, ax
  3996 |          |                           | L_lab8app_64:
  3997 | 000020C4 | 50                        | 	push	ax
  3998 | 000020C5 | E884E3                    | 	call	printInt
  3999 | 000020C8 | 83C402                    | 	add	sp, 2
  4000 | 000020CB | B80100                    | 	mov	ax, 1
  4001 | 000020CE | 8B4EFE                    | 	mov	cx, word [bp-2]
  4002 | 000020D1 | D3E0                      | 	shl	ax, cl
  4003 | 000020D3 | 2306[4639]                | 	and	ax, word [screen3]
  4004 | 000020D7 | 7405                      | 	je	L_lab8app_65
  4005 | 000020D9 | B80100                    | 	mov	ax, 1
  4006 | 000020DC | EB02                      | 	jmp	L_lab8app_66
  4007 |          |                           | L_lab8app_65:
  4008 | 000020DE | 31C0                      | 	xor	ax, ax
  4009 |          |                           | L_lab8app_66:
  4010 | 000020E0 | 50                        | 	push	ax
  4011 | 000020E1 | E868E3                    | 	call	printInt
  4012 | 000020E4 | 83C402                    | 	add	sp, 2
  4013 | 000020E7 | B80100                    | 	mov	ax, 1
  4014 | 000020EA | 8B4EFE                    | 	mov	cx, word [bp-2]
  4015 | 000020ED | D3E0                      | 	shl	ax, cl
  4016 | 000020EF | 2306[4839]                | 	and	ax, word [screen4]
  4017 | 000020F3 | 7405                      | 	je	L_lab8app_67
  4018 | 000020F5 | B80100                    | 	mov	ax, 1
  4019 | 000020F8 | EB02                      | 	jmp	L_lab8app_68
  4020 |          |                           | L_lab8app_67:
  4021 | 000020FA | 31C0                      | 	xor	ax, ax
  4022 |          |                           | L_lab8app_68:
  4023 | 000020FC | 50                        | 	push	ax
  4024 | 000020FD | E84CE3                    | 	call	printInt
  4025 | 00002100 | 83C402                    | 	add	sp, 2
  4026 | 00002103 | B80100                    | 	mov	ax, 1
  4027 | 00002106 | 8B4EFE                    | 	mov	cx, word [bp-2]
  4028 | 00002109 | D3E0                      | 	shl	ax, cl
  4029 | 0000210B | 2306[4A39]                | 	and	ax, word [screen5]
  4030 | 0000210F | 7405                      | 	je	L_lab8app_69
  4031 | 00002111 | B80100                    | 	mov	ax, 1
  4032 | 00002114 | EB02                      | 	jmp	L_lab8app_70
  4033 |          |                           | L_lab8app_69:
  4034 | 00002116 | 31C0                      | 	xor	ax, ax
  4035 |          |                           | L_lab8app_70:
  4036 | 00002118 | 50                        | 	push	ax
  4037 | 00002119 | E830E3                    | 	call	printInt
  4038 | 0000211C | 83C402                    | 	add	sp, 2
  4039 | 0000211F | B8[251F]                  | 	mov	ax, (L_lab8app_30+35)
  4040 | 00002122 | 50                        | 	push	ax
  4041 | 00002123 | E802E3                    | 	call	printString
  4042 | 00002126 | 83C402                    | 	add	sp, 2
  4043 |          |                           | L_lab8app_58:
  4044 | 00002129 | FF46FE                    | 	inc	word [bp-2]
  4045 |          |                           | L_lab8app_56:
  4046 | 0000212C | 837EFE10                  | 	cmp	word [bp-2], 16
  4047 | 00002130 | 7D03E942FF                | 	jl	L_lab8app_55
  4048 |          |                           | L_lab8app_57:
  4049 | 00002135 | 89EC                      | 	mov	sp, bp
  4050 | 00002137 | 5D                        | 	pop	bp
  4051 | 00002138 | C3                        | 	ret
  4052 |          |                           | L_lab8app_53:
  4053 | 00002139 | 55                        | 	push	bp
  4054 | 0000213A | 89E5                      | 	mov	bp, sp
  4055 | 0000213C | 51                        | 	push	cx
  4056 | 0000213D | E925FF                    | 	jmp	L_lab8app_54
  4057 |          |                           | 	ALIGN	2
  4058 |          |                           | getHeightDifference:
  4059 | 00002140 | EB3D                      | 	jmp	L_lab8app_72
  4060 |          |                           | L_lab8app_73:
  4061 | 00002142 | A1[CC00]                  | 	mov	ax, word [ScreenBitMap0]
  4062 | 00002145 | 8946FE                    | 	mov	word [bp-2], ax
  4063 | 00002148 | A1[D200]                  | 	mov	ax, word [ScreenBitMap3]
  4064 | 0000214B | 8946FC                    | 	mov	word [bp-4], ax
  4065 | 0000214E | C746FA0000                | 	mov	word [bp-6], 0
  4066 | 00002153 | C746F80000                | 	mov	word [bp-8], 0
  4067 | 00002158 | EB10                      | 	jmp	L_lab8app_75
  4068 |          |                           | L_lab8app_74:
  4069 | 0000215A | 8B46FE                    | 	mov	ax, word [bp-2]
  4070 | 0000215D | D1F8                      | 	sar	ax, 1
  4071 | 0000215F | 8946FE                    | 	mov	word [bp-2], ax
  4072 | 00002162 | 8B46FC                    | 	mov	ax, word [bp-4]
  4073 | 00002165 | D1F8                      | 	sar	ax, 1
  4074 | 00002167 | 8946FC                    | 	mov	word [bp-4], ax
  4075 |          |                           | L_lab8app_75:
  4076 | 0000216A | 8B46FE                    | 	mov	ax, word [bp-2]
  4077 | 0000216D | 85C0                      | 	test	ax, ax
  4078 | 0000216F | 75E9                      | 	jne	L_lab8app_74
  4079 | 00002171 | 8B46FC                    | 	mov	ax, word [bp-4]
  4080 | 00002174 | 85C0                      | 	test	ax, ax
  4081 | 00002176 | 75E2                      | 	jne	L_lab8app_74
  4082 |          |                           | L_lab8app_76:
  4083 | 00002178 | 8B46FC                    | 	mov	ax, word [bp-4]
  4084 |          |                           | L_lab8app_77:
  4085 | 0000217B | 89EC                      | 	mov	sp, bp
  4086 | 0000217D | 5D                        | 	pop	bp
  4087 | 0000217E | C3                        | 	ret
  4088 |          |                           | L_lab8app_72:
  4089 | 0000217F | 55                        | 	push	bp
  4090 | 00002180 | 89E5                      | 	mov	bp, sp
  4091 | 00002182 | 83EC08                    | 	sub	sp, 8
  4092 | 00002185 | EBBB                      | 	jmp	L_lab8app_73
  4093 | 00002187 | 90                        | 	ALIGN	2
  4094 |          |                           | L_lab8app_79:
  4095 | 00002188 | 0000                      | 	DW	0
  4096 |          |                           | L_lab8app_80:
  4097 | 0000218A | 6E6577506965636554-       | 	DB	"newPieceTask moving!",0xA,0
  4098 | 00002193 | 61736B206D6F76696E-       | ...
  4099 | 0000219C | 67210A00                  | ...
  4100 |          |                           | 	ALIGN	2
  4101 |          |                           | newPieceTask:
  4102 | 000021A0 | E9E405                    | 	jmp	L_lab8app_81
  4103 |          |                           | L_lab8app_82:
  4104 | 000021A3 | B8[8A21]                  | 	mov	ax, L_lab8app_80
  4105 | 000021A6 | 50                        | 	push	ax
  4106 | 000021A7 | E87EE2                    | 	call	printString
  4107 | 000021AA | 83C402                    | 	add	sp, 2
  4108 | 000021AD | E9D005                    | 	jmp	L_lab8app_84
  4109 |          |                           | L_lab8app_83:
  4110 | 000021B0 | FF36[5E2A]                | 	push	word [newPieceQueuePTR]
  4111 | 000021B4 | E845F5                    | 	call	YKQPend
  4112 | 000021B7 | 83C402                    | 	add	sp, 2
  4113 | 000021BA | 8946FE                    | 	mov	word [bp-2], ax
  4114 | 000021BD | 8B76FE                    | 	mov	si, word [bp-2]
  4115 | 000021C0 | 83C602                    | 	add	si, 2
  4116 | 000021C3 | 833C01                    | 	cmp	word [si], 1
  4117 | 000021C6 | 7403E93C01                | 	jne	L_lab8app_86
  4118 | 000021CB | 8B76FE                    | 	mov	si, word [bp-2]
  4119 | 000021CE | 83C606                    | 	add	si, 6
  4120 | 000021D1 | 8B04                      | 	mov	ax, word [si]
  4121 | 000021D3 | 8946FA                    | 	mov	word [bp-6], ax
  4122 | 000021D6 | 837EFA05                  | 	cmp	word [bp-6], 5
  4123 | 000021DA | 755B                      | 	jne	L_lab8app_87
  4124 | 000021DC | E847FC                    | 	call	getMovePieceQueueArrayIndex
  4125 | 000021DF | 8946F8                    | 	mov	word [bp-8], ax
  4126 | 000021E2 | 8B76FE                    | 	mov	si, word [bp-2]
  4127 | 000021E5 | 8B46F8                    | 	mov	ax, word [bp-8]
  4128 | 000021E8 | B90600                    | 	mov	cx, 6
  4129 | 000021EB | F7E9                      | 	imul	cx
  4130 | 000021ED | 89C7                      | 	mov	di, ax
  4131 | 000021EF | 81C7[FE37]                | 	add	di, movePieceArray
  4132 | 000021F3 | 8B04                      | 	mov	ax, word [si]
  4133 | 000021F5 | 8905                      | 	mov	word [di], ax
  4134 | 000021F7 | 8B46F8                    | 	mov	ax, word [bp-8]
  4135 | 000021FA | B90600                    | 	mov	cx, 6
  4136 | 000021FD | F7E9                      | 	imul	cx
  4137 | 000021FF | 05[FE37]                  | 	add	ax, movePieceArray
  4138 | 00002202 | 89C6                      | 	mov	si, ax
  4139 | 00002204 | 83C604                    | 	add	si, 4
  4140 | 00002207 | C7040000                  | 	mov	word [si], 0
  4141 | 0000220B | 8B46F8                    | 	mov	ax, word [bp-8]
  4142 | 0000220E | B90600                    | 	mov	cx, 6
  4143 | 00002211 | F7E9                      | 	imul	cx
  4144 | 00002213 | 05[FE37]                  | 	add	ax, movePieceArray
  4145 | 00002216 | 89C6                      | 	mov	si, ax
  4146 | 00002218 | 83C602                    | 	add	si, 2
  4147 | 0000221B | C704[8608]                | 	mov	word [si], SlidePiece
  4148 | 0000221F | 8B46F8                    | 	mov	ax, word [bp-8]
  4149 | 00002222 | B90600                    | 	mov	cx, 6
  4150 | 00002225 | F7E9                      | 	imul	cx
  4151 | 00002227 | 05[FE37]                  | 	add	ax, movePieceArray
  4152 | 0000222A | 50                        | 	push	ax
  4153 | 0000222B | FF36[5C2A]                | 	push	word [movePieceQueuePTR]
  4154 | 0000222F | E8C6F5                    | 	call	YKQPost
  4155 | 00002232 | 83C404                    | 	add	sp, 4
  4156 | 00002235 | EB68                      | 	jmp	L_lab8app_88
  4157 |          |                           | L_lab8app_87:
  4158 | 00002237 | EB60                      | 	jmp	L_lab8app_90
  4159 |          |                           | L_lab8app_89:
  4160 | 00002239 | E8EAFB                    | 	call	getMovePieceQueueArrayIndex
  4161 | 0000223C | 8946F8                    | 	mov	word [bp-8], ax
  4162 | 0000223F | 8B76FE                    | 	mov	si, word [bp-2]
  4163 | 00002242 | 8B46F8                    | 	mov	ax, word [bp-8]
  4164 | 00002245 | B90600                    | 	mov	cx, 6
  4165 | 00002248 | F7E9                      | 	imul	cx
  4166 | 0000224A | 89C7                      | 	mov	di, ax
  4167 | 0000224C | 81C7[FE37]                | 	add	di, movePieceArray
  4168 | 00002250 | 8B04                      | 	mov	ax, word [si]
  4169 | 00002252 | 8905                      | 	mov	word [di], ax
  4170 | 00002254 | 8B46F8                    | 	mov	ax, word [bp-8]
  4171 | 00002257 | B90600                    | 	mov	cx, 6
  4172 | 0000225A | F7E9                      | 	imul	cx
  4173 | 0000225C | 05[FE37]                  | 	add	ax, movePieceArray
  4174 | 0000225F | 89C6                      | 	mov	si, ax
  4175 | 00002261 | 83C604                    | 	add	si, 4
  4176 | 00002264 | C7040100                  | 	mov	word [si], 1
  4177 | 00002268 | 8B46F8                    | 	mov	ax, word [bp-8]
  4178 | 0000226B | B90600                    | 	mov	cx, 6
  4179 | 0000226E | F7E9                      | 	imul	cx
  4180 | 00002270 | 05[FE37]                  | 	add	ax, movePieceArray
  4181 | 00002273 | 89C6                      | 	mov	si, ax
  4182 | 00002275 | 83C602                    | 	add	si, 2
  4183 | 00002278 | C704[8608]                | 	mov	word [si], SlidePiece
  4184 | 0000227C | 8B46FA                    | 	mov	ax, word [bp-6]
  4185 | 0000227F | 40                        | 	inc	ax
  4186 | 00002280 | 8946FA                    | 	mov	word [bp-6], ax
  4187 | 00002283 | 8B46F8                    | 	mov	ax, word [bp-8]
  4188 | 00002286 | B90600                    | 	mov	cx, 6
  4189 | 00002289 | F7E9                      | 	imul	cx
  4190 | 0000228B | 05[FE37]                  | 	add	ax, movePieceArray
  4191 | 0000228E | 50                        | 	push	ax
  4192 | 0000228F | FF36[5C2A]                | 	push	word [movePieceQueuePTR]
  4193 | 00002293 | E862F5                    | 	call	YKQPost
  4194 | 00002296 | 83C404                    | 	add	sp, 4
  4195 |          |                           | L_lab8app_90:
  4196 | 00002299 | 837EFA04                  | 	cmp	word [bp-6], 4
  4197 | 0000229D | 7C9A                      | 	jl	L_lab8app_89
  4198 |          |                           | L_lab8app_91:
  4199 |          |                           | L_lab8app_88:
  4200 | 0000229F | 8B76FE                    | 	mov	si, word [bp-2]
  4201 | 000022A2 | 83C604                    | 	add	si, 4
  4202 | 000022A5 | 8B04                      | 	mov	ax, word [si]
  4203 | 000022A7 | 85C0                      | 	test	ax, ax
  4204 | 000022A9 | 7459                      | 	je	L_lab8app_92
  4205 | 000022AB | E878FB                    | 	call	getMovePieceQueueArrayIndex
  4206 | 000022AE | 8946F8                    | 	mov	word [bp-8], ax
  4207 | 000022B1 | 8B76FE                    | 	mov	si, word [bp-2]
  4208 | 000022B4 | 8B46F8                    | 	mov	ax, word [bp-8]
  4209 | 000022B7 | B90600                    | 	mov	cx, 6
  4210 | 000022BA | F7E9                      | 	imul	cx
  4211 | 000022BC | 89C7                      | 	mov	di, ax
  4212 | 000022BE | 81C7[FE37]                | 	add	di, movePieceArray
  4213 | 000022C2 | 8B04                      | 	mov	ax, word [si]
  4214 | 000022C4 | 8905                      | 	mov	word [di], ax
  4215 | 000022C6 | 8B46F8                    | 	mov	ax, word [bp-8]
  4216 | 000022C9 | B90600                    | 	mov	cx, 6
  4217 | 000022CC | F7E9                      | 	imul	cx
  4218 | 000022CE | 05[FE37]                  | 	add	ax, movePieceArray
  4219 | 000022D1 | 89C6                      | 	mov	si, ax
  4220 | 000022D3 | 83C604                    | 	add	si, 4
  4221 | 000022D6 | C7040100                  | 	mov	word [si], 1
  4222 | 000022DA | 8B46F8                    | 	mov	ax, word [bp-8]
  4223 | 000022DD | B90600                    | 	mov	cx, 6
  4224 | 000022E0 | F7E9                      | 	imul	cx
  4225 | 000022E2 | 05[FE37]                  | 	add	ax, movePieceArray
  4226 | 000022E5 | 89C6                      | 	mov	si, ax
  4227 | 000022E7 | 83C602                    | 	add	si, 2
  4228 | 000022EA | C704[9908]                | 	mov	word [si], RotatePiece
  4229 | 000022EE | 8B46F8                    | 	mov	ax, word [bp-8]
  4230 | 000022F1 | B90600                    | 	mov	cx, 6
  4231 | 000022F4 | F7E9                      | 	imul	cx
  4232 | 000022F6 | 05[FE37]                  | 	add	ax, movePieceArray
  4233 | 000022F9 | 50                        | 	push	ax
  4234 | 000022FA | FF36[5C2A]                | 	push	word [movePieceQueuePTR]
  4235 | 000022FE | E8F7F4                    | 	call	YKQPost
  4236 | 00002301 | 83C404                    | 	add	sp, 4
  4237 |          |                           | L_lab8app_92:
  4238 | 00002304 | E97904                    | 	jmp	L_lab8app_93
  4239 |          |                           | L_lab8app_86:
  4240 | 00002307 | 8B76FE                    | 	mov	si, word [bp-2]
  4241 | 0000230A | 83C606                    | 	add	si, 6
  4242 | 0000230D | 8B04                      | 	mov	ax, word [si]
  4243 | 0000230F | 8946FA                    | 	mov	word [bp-6], ax
  4244 | 00002312 | 837EFA05                  | 	cmp	word [bp-6], 5
  4245 | 00002316 | 7562                      | 	jne	L_lab8app_94
  4246 | 00002318 | E80BFB                    | 	call	getMovePieceQueueArrayIndex
  4247 | 0000231B | 8946F8                    | 	mov	word [bp-8], ax
  4248 | 0000231E | 8B76FE                    | 	mov	si, word [bp-2]
  4249 | 00002321 | 8B46F8                    | 	mov	ax, word [bp-8]
  4250 | 00002324 | B90600                    | 	mov	cx, 6
  4251 | 00002327 | F7E9                      | 	imul	cx
  4252 | 00002329 | 89C7                      | 	mov	di, ax
  4253 | 0000232B | 81C7[FE37]                | 	add	di, movePieceArray
  4254 | 0000232F | 8B04                      | 	mov	ax, word [si]
  4255 | 00002331 | 8905                      | 	mov	word [di], ax
  4256 | 00002333 | 8B46F8                    | 	mov	ax, word [bp-8]
  4257 | 00002336 | B90600                    | 	mov	cx, 6
  4258 | 00002339 | F7E9                      | 	imul	cx
  4259 | 0000233B | 05[FE37]                  | 	add	ax, movePieceArray
  4260 | 0000233E | 89C6                      | 	mov	si, ax
  4261 | 00002340 | 83C604                    | 	add	si, 4
  4262 | 00002343 | C7040000                  | 	mov	word [si], 0
  4263 | 00002347 | 8B46F8                    | 	mov	ax, word [bp-8]
  4264 | 0000234A | B90600                    | 	mov	cx, 6
  4265 | 0000234D | F7E9                      | 	imul	cx
  4266 | 0000234F | 05[FE37]                  | 	add	ax, movePieceArray
  4267 | 00002352 | 89C6                      | 	mov	si, ax
  4268 | 00002354 | 83C602                    | 	add	si, 2
  4269 | 00002357 | C704[8608]                | 	mov	word [si], SlidePiece
  4270 | 0000235B | 8B46FA                    | 	mov	ax, word [bp-6]
  4271 | 0000235E | 48                        | 	dec	ax
  4272 | 0000235F | 8946FA                    | 	mov	word [bp-6], ax
  4273 | 00002362 | 8B46F8                    | 	mov	ax, word [bp-8]
  4274 | 00002365 | B90600                    | 	mov	cx, 6
  4275 | 00002368 | F7E9                      | 	imul	cx
  4276 | 0000236A | 05[FE37]                  | 	add	ax, movePieceArray
  4277 | 0000236D | 50                        | 	push	ax
  4278 | 0000236E | FF36[5C2A]                | 	push	word [movePieceQueuePTR]
  4279 | 00002372 | E883F4                    | 	call	YKQPost
  4280 | 00002375 | 83C404                    | 	add	sp, 4
  4281 | 00002378 | EB67                      | 	jmp	L_lab8app_95
  4282 |          |                           | L_lab8app_94:
  4283 | 0000237A | 8B46FA                    | 	mov	ax, word [bp-6]
  4284 | 0000237D | 85C0                      | 	test	ax, ax
  4285 | 0000237F | 7560                      | 	jne	L_lab8app_96
  4286 | 00002381 | E8A2FA                    | 	call	getMovePieceQueueArrayIndex
  4287 | 00002384 | 8946F8                    | 	mov	word [bp-8], ax
  4288 | 00002387 | 8B76FE                    | 	mov	si, word [bp-2]
  4289 | 0000238A | 8B46F8                    | 	mov	ax, word [bp-8]
  4290 | 0000238D | B90600                    | 	mov	cx, 6
  4291 | 00002390 | F7E9                      | 	imul	cx
  4292 | 00002392 | 89C7                      | 	mov	di, ax
  4293 | 00002394 | 81C7[FE37]                | 	add	di, movePieceArray
  4294 | 00002398 | 8B04                      | 	mov	ax, word [si]
  4295 | 0000239A | 8905                      | 	mov	word [di], ax
  4296 | 0000239C | 8B46F8                    | 	mov	ax, word [bp-8]
  4297 | 0000239F | B90600                    | 	mov	cx, 6
  4298 | 000023A2 | F7E9                      | 	imul	cx
  4299 | 000023A4 | 05[FE37]                  | 	add	ax, movePieceArray
  4300 | 000023A7 | 89C6                      | 	mov	si, ax
  4301 | 000023A9 | 83C604                    | 	add	si, 4
  4302 | 000023AC | C7040100                  | 	mov	word [si], 1
  4303 | 000023B0 | 8B46F8                    | 	mov	ax, word [bp-8]
  4304 | 000023B3 | B90600                    | 	mov	cx, 6
  4305 | 000023B6 | F7E9                      | 	imul	cx
  4306 | 000023B8 | 05[FE37]                  | 	add	ax, movePieceArray
  4307 | 000023BB | 89C6                      | 	mov	si, ax
  4308 | 000023BD | 83C602                    | 	add	si, 2
  4309 | 000023C0 | C704[8608]                | 	mov	word [si], SlidePiece
  4310 | 000023C4 | 8B46FA                    | 	mov	ax, word [bp-6]
  4311 | 000023C7 | 40                        | 	inc	ax
  4312 | 000023C8 | 8946FA                    | 	mov	word [bp-6], ax
  4313 | 000023CB | 8B46F8                    | 	mov	ax, word [bp-8]
  4314 | 000023CE | B90600                    | 	mov	cx, 6
  4315 | 000023D1 | F7E9                      | 	imul	cx
  4316 | 000023D3 | 05[FE37]                  | 	add	ax, movePieceArray
  4317 | 000023D6 | 50                        | 	push	ax
  4318 | 000023D7 | FF36[5C2A]                | 	push	word [movePieceQueuePTR]
  4319 | 000023DB | E81AF4                    | 	call	YKQPost
  4320 | 000023DE | 83C404                    | 	add	sp, 4
  4321 |          |                           | L_lab8app_96:
  4322 |          |                           | L_lab8app_95:
  4323 | 000023E1 | A1[8821]                  | 	mov	ax, word [L_lab8app_79]
  4324 | 000023E4 | 85C0                      | 	test	ax, ax
  4325 | 000023E6 | 7403E99601                | 	jne	L_lab8app_97
  4326 | 000023EB | C706[8821]0100            | 	mov	word [L_lab8app_79], 1
  4327 | 000023F1 | 8B76FE                    | 	mov	si, word [bp-2]
  4328 | 000023F4 | 83C604                    | 	add	si, 4
  4329 | 000023F7 | 8B04                      | 	mov	ax, word [si]
  4330 | 000023F9 | 48                        | 	dec	ax
  4331 | 000023FA | 740C                      | 	je	L_lab8app_100
  4332 | 000023FC | 48                        | 	dec	ax
  4333 | 000023FD | 7465                      | 	je	L_lab8app_101
  4334 | 000023FF | 48                        | 	dec	ax
  4335 | 00002400 | 7503E9B800                | 	je	L_lab8app_102
  4336 | 00002405 | E90E01                    | 	jmp	L_lab8app_99
  4337 |          |                           | L_lab8app_100:
  4338 | 00002408 | E81BFA                    | 	call	getMovePieceQueueArrayIndex
  4339 | 0000240B | 8946F8                    | 	mov	word [bp-8], ax
  4340 | 0000240E | 8B76FE                    | 	mov	si, word [bp-2]
  4341 | 00002411 | 8B46F8                    | 	mov	ax, word [bp-8]
  4342 | 00002414 | B90600                    | 	mov	cx, 6
  4343 | 00002417 | F7E9                      | 	imul	cx
  4344 | 00002419 | 89C7                      | 	mov	di, ax
  4345 | 0000241B | 81C7[FE37]                | 	add	di, movePieceArray
  4346 | 0000241F | 8B04                      | 	mov	ax, word [si]
  4347 | 00002421 | 8905                      | 	mov	word [di], ax
  4348 | 00002423 | 8B46F8                    | 	mov	ax, word [bp-8]
  4349 | 00002426 | B90600                    | 	mov	cx, 6
  4350 | 00002429 | F7E9                      | 	imul	cx
  4351 | 0000242B | 05[FE37]                  | 	add	ax, movePieceArray
  4352 | 0000242E | 89C6                      | 	mov	si, ax
  4353 | 00002430 | 83C604                    | 	add	si, 4
  4354 | 00002433 | C7040100                  | 	mov	word [si], 1
  4355 | 00002437 | 8B46F8                    | 	mov	ax, word [bp-8]
  4356 | 0000243A | B90600                    | 	mov	cx, 6
  4357 | 0000243D | F7E9                      | 	imul	cx
  4358 | 0000243F | 05[FE37]                  | 	add	ax, movePieceArray
  4359 | 00002442 | 89C6                      | 	mov	si, ax
  4360 | 00002444 | 83C602                    | 	add	si, 2
  4361 | 00002447 | C704[9908]                | 	mov	word [si], RotatePiece
  4362 | 0000244B | 8B46F8                    | 	mov	ax, word [bp-8]
  4363 | 0000244E | B90600                    | 	mov	cx, 6
  4364 | 00002451 | F7E9                      | 	imul	cx
  4365 | 00002453 | 05[FE37]                  | 	add	ax, movePieceArray
  4366 | 00002456 | 50                        | 	push	ax
  4367 | 00002457 | FF36[5C2A]                | 	push	word [movePieceQueuePTR]
  4368 | 0000245B | E89AF3                    | 	call	YKQPost
  4369 | 0000245E | 83C404                    | 	add	sp, 4
  4370 | 00002461 | E9B200                    | 	jmp	L_lab8app_98
  4371 |          |                           | L_lab8app_101:
  4372 | 00002464 | E8BFF9                    | 	call	getMovePieceQueueArrayIndex
  4373 | 00002467 | 8946F8                    | 	mov	word [bp-8], ax
  4374 | 0000246A | 8B76FE                    | 	mov	si, word [bp-2]
  4375 | 0000246D | 8B46F8                    | 	mov	ax, word [bp-8]
  4376 | 00002470 | B90600                    | 	mov	cx, 6
  4377 | 00002473 | F7E9                      | 	imul	cx
  4378 | 00002475 | 89C7                      | 	mov	di, ax
  4379 | 00002477 | 81C7[FE37]                | 	add	di, movePieceArray
  4380 | 0000247B | 8B04                      | 	mov	ax, word [si]
  4381 | 0000247D | 8905                      | 	mov	word [di], ax
  4382 | 0000247F | 8B46F8                    | 	mov	ax, word [bp-8]
  4383 | 00002482 | B90600                    | 	mov	cx, 6
  4384 | 00002485 | F7E9                      | 	imul	cx
  4385 | 00002487 | 05[FE37]                  | 	add	ax, movePieceArray
  4386 | 0000248A | 89C6                      | 	mov	si, ax
  4387 | 0000248C | 83C604                    | 	add	si, 4
  4388 | 0000248F | C7040000                  | 	mov	word [si], 0
  4389 | 00002493 | 8B46F8                    | 	mov	ax, word [bp-8]
  4390 | 00002496 | B90600                    | 	mov	cx, 6
  4391 | 00002499 | F7E9                      | 	imul	cx
  4392 | 0000249B | 05[FE37]                  | 	add	ax, movePieceArray
  4393 | 0000249E | 89C6                      | 	mov	si, ax
  4394 | 000024A0 | 83C602                    | 	add	si, 2
  4395 | 000024A3 | C704[9908]                | 	mov	word [si], RotatePiece
  4396 | 000024A7 | 8B46F8                    | 	mov	ax, word [bp-8]
  4397 | 000024AA | B90600                    | 	mov	cx, 6
  4398 | 000024AD | F7E9                      | 	imul	cx
  4399 | 000024AF | 05[FE37]                  | 	add	ax, movePieceArray
  4400 | 000024B2 | 50                        | 	push	ax
  4401 | 000024B3 | FF36[5C2A]                | 	push	word [movePieceQueuePTR]
  4402 | 000024B7 | E83EF3                    | 	call	YKQPost
  4403 | 000024BA | 83C404                    | 	add	sp, 4
  4404 |          |                           | L_lab8app_102:
  4405 | 000024BD | E866F9                    | 	call	getMovePieceQueueArrayIndex
  4406 | 000024C0 | 8946F8                    | 	mov	word [bp-8], ax
  4407 | 000024C3 | 8B76FE                    | 	mov	si, word [bp-2]
  4408 | 000024C6 | 8B46F8                    | 	mov	ax, word [bp-8]
  4409 | 000024C9 | B90600                    | 	mov	cx, 6
  4410 | 000024CC | F7E9                      | 	imul	cx
  4411 | 000024CE | 89C7                      | 	mov	di, ax
  4412 | 000024D0 | 81C7[FE37]                | 	add	di, movePieceArray
  4413 | 000024D4 | 8B04                      | 	mov	ax, word [si]
  4414 | 000024D6 | 8905                      | 	mov	word [di], ax
  4415 | 000024D8 | 8B46F8                    | 	mov	ax, word [bp-8]
  4416 | 000024DB | B90600                    | 	mov	cx, 6
  4417 | 000024DE | F7E9                      | 	imul	cx
  4418 | 000024E0 | 05[FE37]                  | 	add	ax, movePieceArray
  4419 | 000024E3 | 89C6                      | 	mov	si, ax
  4420 | 000024E5 | 83C604                    | 	add	si, 4
  4421 | 000024E8 | C7040000                  | 	mov	word [si], 0
  4422 | 000024EC | 8B46F8                    | 	mov	ax, word [bp-8]
  4423 | 000024EF | B90600                    | 	mov	cx, 6
  4424 | 000024F2 | F7E9                      | 	imul	cx
  4425 | 000024F4 | 05[FE37]                  | 	add	ax, movePieceArray
  4426 | 000024F7 | 89C6                      | 	mov	si, ax
  4427 | 000024F9 | 83C602                    | 	add	si, 2
  4428 | 000024FC | C704[9908]                | 	mov	word [si], RotatePiece
  4429 | 00002500 | 8B46F8                    | 	mov	ax, word [bp-8]
  4430 | 00002503 | B90600                    | 	mov	cx, 6
  4431 | 00002506 | F7E9                      | 	imul	cx
  4432 | 00002508 | 05[FE37]                  | 	add	ax, movePieceArray
  4433 | 0000250B | 50                        | 	push	ax
  4434 | 0000250C | FF36[5C2A]                | 	push	word [movePieceQueuePTR]
  4435 | 00002510 | E8E5F2                    | 	call	YKQPost
  4436 | 00002513 | 83C404                    | 	add	sp, 4
  4437 |          |                           | L_lab8app_99:
  4438 |          |                           | L_lab8app_98:
  4439 | 00002516 | EB60                      | 	jmp	L_lab8app_104
  4440 |          |                           | L_lab8app_103:
  4441 | 00002518 | E80BF9                    | 	call	getMovePieceQueueArrayIndex
  4442 | 0000251B | 8946F8                    | 	mov	word [bp-8], ax
  4443 | 0000251E | 8B76FE                    | 	mov	si, word [bp-2]
  4444 | 00002521 | 8B46F8                    | 	mov	ax, word [bp-8]
  4445 | 00002524 | B90600                    | 	mov	cx, 6
  4446 | 00002527 | F7E9                      | 	imul	cx
  4447 | 00002529 | 89C7                      | 	mov	di, ax
  4448 | 0000252B | 81C7[FE37]                | 	add	di, movePieceArray
  4449 | 0000252F | 8B04                      | 	mov	ax, word [si]
  4450 | 00002531 | 8905                      | 	mov	word [di], ax
  4451 | 00002533 | 8B46F8                    | 	mov	ax, word [bp-8]
  4452 | 00002536 | B90600                    | 	mov	cx, 6
  4453 | 00002539 | F7E9                      | 	imul	cx
  4454 | 0000253B | 05[FE37]                  | 	add	ax, movePieceArray
  4455 | 0000253E | 89C6                      | 	mov	si, ax
  4456 | 00002540 | 83C604                    | 	add	si, 4
  4457 | 00002543 | C7040000                  | 	mov	word [si], 0
  4458 | 00002547 | 8B46F8                    | 	mov	ax, word [bp-8]
  4459 | 0000254A | B90600                    | 	mov	cx, 6
  4460 | 0000254D | F7E9                      | 	imul	cx
  4461 | 0000254F | 05[FE37]                  | 	add	ax, movePieceArray
  4462 | 00002552 | 89C6                      | 	mov	si, ax
  4463 | 00002554 | 83C602                    | 	add	si, 2
  4464 | 00002557 | C704[8608]                | 	mov	word [si], SlidePiece
  4465 | 0000255B | 8B46FA                    | 	mov	ax, word [bp-6]
  4466 | 0000255E | 48                        | 	dec	ax
  4467 | 0000255F | 8946FA                    | 	mov	word [bp-6], ax
  4468 | 00002562 | 8B46F8                    | 	mov	ax, word [bp-8]
  4469 | 00002565 | B90600                    | 	mov	cx, 6
  4470 | 00002568 | F7E9                      | 	imul	cx
  4471 | 0000256A | 05[FE37]                  | 	add	ax, movePieceArray
  4472 | 0000256D | 50                        | 	push	ax
  4473 | 0000256E | FF36[5C2A]                | 	push	word [movePieceQueuePTR]
  4474 | 00002572 | E883F2                    | 	call	YKQPost
  4475 | 00002575 | 83C404                    | 	add	sp, 4
  4476 |          |                           | L_lab8app_104:
  4477 | 00002578 | 837EFA00                  | 	cmp	word [bp-6], 0
  4478 | 0000257C | 7F9A                      | 	jg	L_lab8app_103
  4479 |          |                           | L_lab8app_105:
  4480 | 0000257E | E9FF01                    | 	jmp	L_lab8app_106
  4481 |          |                           | L_lab8app_97:
  4482 | 00002581 | C706[8821]0000            | 	mov	word [L_lab8app_79], 0
  4483 | 00002587 | 8B76FE                    | 	mov	si, word [bp-2]
  4484 | 0000258A | 83C604                    | 	add	si, 4
  4485 | 0000258D | 8B04                      | 	mov	ax, word [si]
  4486 | 0000258F | 83E803                    | 	sub	ax, 3
  4487 | 00002592 | 740E                      | 	je	L_lab8app_109
  4488 | 00002594 | 83E8FD                    | 	sub	ax, -3
  4489 | 00002597 | 7465                      | 	je	L_lab8app_110
  4490 | 00002599 | 48                        | 	dec	ax
  4491 | 0000259A | 7503E9B800                | 	je	L_lab8app_111
  4492 | 0000259F | E90E01                    | 	jmp	L_lab8app_108
  4493 |          |                           | L_lab8app_109:
  4494 | 000025A2 | E881F8                    | 	call	getMovePieceQueueArrayIndex
  4495 | 000025A5 | 8946F8                    | 	mov	word [bp-8], ax
  4496 | 000025A8 | 8B76FE                    | 	mov	si, word [bp-2]
  4497 | 000025AB | 8B46F8                    | 	mov	ax, word [bp-8]
  4498 | 000025AE | B90600                    | 	mov	cx, 6
  4499 | 000025B1 | F7E9                      | 	imul	cx
  4500 | 000025B3 | 89C7                      | 	mov	di, ax
  4501 | 000025B5 | 81C7[FE37]                | 	add	di, movePieceArray
  4502 | 000025B9 | 8B04                      | 	mov	ax, word [si]
  4503 | 000025BB | 8905                      | 	mov	word [di], ax
  4504 | 000025BD | 8B46F8                    | 	mov	ax, word [bp-8]
  4505 | 000025C0 | B90600                    | 	mov	cx, 6
  4506 | 000025C3 | F7E9                      | 	imul	cx
  4507 | 000025C5 | 05[FE37]                  | 	add	ax, movePieceArray
  4508 | 000025C8 | 89C6                      | 	mov	si, ax
  4509 | 000025CA | 83C604                    | 	add	si, 4
  4510 | 000025CD | C7040100                  | 	mov	word [si], 1
  4511 | 000025D1 | 8B46F8                    | 	mov	ax, word [bp-8]
  4512 | 000025D4 | B90600                    | 	mov	cx, 6
  4513 | 000025D7 | F7E9                      | 	imul	cx
  4514 | 000025D9 | 05[FE37]                  | 	add	ax, movePieceArray
  4515 | 000025DC | 89C6                      | 	mov	si, ax
  4516 | 000025DE | 83C602                    | 	add	si, 2
  4517 | 000025E1 | C704[9908]                | 	mov	word [si], RotatePiece
  4518 | 000025E5 | 8B46F8                    | 	mov	ax, word [bp-8]
  4519 | 000025E8 | B90600                    | 	mov	cx, 6
  4520 | 000025EB | F7E9                      | 	imul	cx
  4521 | 000025ED | 05[FE37]                  | 	add	ax, movePieceArray
  4522 | 000025F0 | 50                        | 	push	ax
  4523 | 000025F1 | FF36[5C2A]                | 	push	word [movePieceQueuePTR]
  4524 | 000025F5 | E800F2                    | 	call	YKQPost
  4525 | 000025F8 | 83C404                    | 	add	sp, 4
  4526 | 000025FB | E9B200                    | 	jmp	L_lab8app_107
  4527 |          |                           | L_lab8app_110:
  4528 | 000025FE | E825F8                    | 	call	getMovePieceQueueArrayIndex
  4529 | 00002601 | 8946F8                    | 	mov	word [bp-8], ax
  4530 | 00002604 | 8B76FE                    | 	mov	si, word [bp-2]
  4531 | 00002607 | 8B46F8                    | 	mov	ax, word [bp-8]
  4532 | 0000260A | B90600                    | 	mov	cx, 6
  4533 | 0000260D | F7E9                      | 	imul	cx
  4534 | 0000260F | 89C7                      | 	mov	di, ax
  4535 | 00002611 | 81C7[FE37]                | 	add	di, movePieceArray
  4536 | 00002615 | 8B04                      | 	mov	ax, word [si]
  4537 | 00002617 | 8905                      | 	mov	word [di], ax
  4538 | 00002619 | 8B46F8                    | 	mov	ax, word [bp-8]
  4539 | 0000261C | B90600                    | 	mov	cx, 6
  4540 | 0000261F | F7E9                      | 	imul	cx
  4541 | 00002621 | 05[FE37]                  | 	add	ax, movePieceArray
  4542 | 00002624 | 89C6                      | 	mov	si, ax
  4543 | 00002626 | 83C604                    | 	add	si, 4
  4544 | 00002629 | C7040000                  | 	mov	word [si], 0
  4545 | 0000262D | 8B46F8                    | 	mov	ax, word [bp-8]
  4546 | 00002630 | B90600                    | 	mov	cx, 6
  4547 | 00002633 | F7E9                      | 	imul	cx
  4548 | 00002635 | 05[FE37]                  | 	add	ax, movePieceArray
  4549 | 00002638 | 89C6                      | 	mov	si, ax
  4550 | 0000263A | 83C602                    | 	add	si, 2
  4551 | 0000263D | C704[9908]                | 	mov	word [si], RotatePiece
  4552 | 00002641 | 8B46F8                    | 	mov	ax, word [bp-8]
  4553 | 00002644 | B90600                    | 	mov	cx, 6
  4554 | 00002647 | F7E9                      | 	imul	cx
  4555 | 00002649 | 05[FE37]                  | 	add	ax, movePieceArray
  4556 | 0000264C | 50                        | 	push	ax
  4557 | 0000264D | FF36[5C2A]                | 	push	word [movePieceQueuePTR]
  4558 | 00002651 | E8A4F1                    | 	call	YKQPost
  4559 | 00002654 | 83C404                    | 	add	sp, 4
  4560 |          |                           | L_lab8app_111:
  4561 | 00002657 | E8CCF7                    | 	call	getMovePieceQueueArrayIndex
  4562 | 0000265A | 8946F8                    | 	mov	word [bp-8], ax
  4563 | 0000265D | 8B76FE                    | 	mov	si, word [bp-2]
  4564 | 00002660 | 8B46F8                    | 	mov	ax, word [bp-8]
  4565 | 00002663 | B90600                    | 	mov	cx, 6
  4566 | 00002666 | F7E9                      | 	imul	cx
  4567 | 00002668 | 89C7                      | 	mov	di, ax
  4568 | 0000266A | 81C7[FE37]                | 	add	di, movePieceArray
  4569 | 0000266E | 8B04                      | 	mov	ax, word [si]
  4570 | 00002670 | 8905                      | 	mov	word [di], ax
  4571 | 00002672 | 8B46F8                    | 	mov	ax, word [bp-8]
  4572 | 00002675 | B90600                    | 	mov	cx, 6
  4573 | 00002678 | F7E9                      | 	imul	cx
  4574 | 0000267A | 05[FE37]                  | 	add	ax, movePieceArray
  4575 | 0000267D | 89C6                      | 	mov	si, ax
  4576 | 0000267F | 83C604                    | 	add	si, 4
  4577 | 00002682 | C7040000                  | 	mov	word [si], 0
  4578 | 00002686 | 8B46F8                    | 	mov	ax, word [bp-8]
  4579 | 00002689 | B90600                    | 	mov	cx, 6
  4580 | 0000268C | F7E9                      | 	imul	cx
  4581 | 0000268E | 05[FE37]                  | 	add	ax, movePieceArray
  4582 | 00002691 | 89C6                      | 	mov	si, ax
  4583 | 00002693 | 83C602                    | 	add	si, 2
  4584 | 00002696 | C704[9908]                | 	mov	word [si], RotatePiece
  4585 | 0000269A | 8B46F8                    | 	mov	ax, word [bp-8]
  4586 | 0000269D | B90600                    | 	mov	cx, 6
  4587 | 000026A0 | F7E9                      | 	imul	cx
  4588 | 000026A2 | 05[FE37]                  | 	add	ax, movePieceArray
  4589 | 000026A5 | 50                        | 	push	ax
  4590 | 000026A6 | FF36[5C2A]                | 	push	word [movePieceQueuePTR]
  4591 | 000026AA | E84BF1                    | 	call	YKQPost
  4592 | 000026AD | 83C404                    | 	add	sp, 4
  4593 |          |                           | L_lab8app_108:
  4594 |          |                           | L_lab8app_107:
  4595 | 000026B0 | EB60                      | 	jmp	L_lab8app_113
  4596 |          |                           | L_lab8app_112:
  4597 | 000026B2 | E871F7                    | 	call	getMovePieceQueueArrayIndex
  4598 | 000026B5 | 8946F8                    | 	mov	word [bp-8], ax
  4599 | 000026B8 | 8B76FE                    | 	mov	si, word [bp-2]
  4600 | 000026BB | 8B46F8                    | 	mov	ax, word [bp-8]
  4601 | 000026BE | B90600                    | 	mov	cx, 6
  4602 | 000026C1 | F7E9                      | 	imul	cx
  4603 | 000026C3 | 89C7                      | 	mov	di, ax
  4604 | 000026C5 | 81C7[FE37]                | 	add	di, movePieceArray
  4605 | 000026C9 | 8B04                      | 	mov	ax, word [si]
  4606 | 000026CB | 8905                      | 	mov	word [di], ax
  4607 | 000026CD | 8B46F8                    | 	mov	ax, word [bp-8]
  4608 | 000026D0 | B90600                    | 	mov	cx, 6
  4609 | 000026D3 | F7E9                      | 	imul	cx
  4610 | 000026D5 | 05[FE37]                  | 	add	ax, movePieceArray
  4611 | 000026D8 | 89C6                      | 	mov	si, ax
  4612 | 000026DA | 83C604                    | 	add	si, 4
  4613 | 000026DD | C7040000                  | 	mov	word [si], 0
  4614 | 000026E1 | 8B46F8                    | 	mov	ax, word [bp-8]
  4615 | 000026E4 | B90600                    | 	mov	cx, 6
  4616 | 000026E7 | F7E9                      | 	imul	cx
  4617 | 000026E9 | 05[FE37]                  | 	add	ax, movePieceArray
  4618 | 000026EC | 89C6                      | 	mov	si, ax
  4619 | 000026EE | 83C602                    | 	add	si, 2
  4620 | 000026F1 | C704[8608]                | 	mov	word [si], SlidePiece
  4621 | 000026F5 | 8B46FA                    | 	mov	ax, word [bp-6]
  4622 | 000026F8 | 48                        | 	dec	ax
  4623 | 000026F9 | 8946FA                    | 	mov	word [bp-6], ax
  4624 | 000026FC | 8B46F8                    | 	mov	ax, word [bp-8]
  4625 | 000026FF | B90600                    | 	mov	cx, 6
  4626 | 00002702 | F7E9                      | 	imul	cx
  4627 | 00002704 | 05[FE37]                  | 	add	ax, movePieceArray
  4628 | 00002707 | 50                        | 	push	ax
  4629 | 00002708 | FF36[5C2A]                | 	push	word [movePieceQueuePTR]
  4630 | 0000270C | E8E9F0                    | 	call	YKQPost
  4631 | 0000270F | 83C404                    | 	add	sp, 4
  4632 |          |                           | L_lab8app_113:
  4633 | 00002712 | 837EFA02                  | 	cmp	word [bp-6], 2
  4634 | 00002716 | 7F9A                      | 	jg	L_lab8app_112
  4635 |          |                           | L_lab8app_114:
  4636 | 00002718 | EB60                      | 	jmp	L_lab8app_116
  4637 |          |                           | L_lab8app_115:
  4638 | 0000271A | E809F7                    | 	call	getMovePieceQueueArrayIndex
  4639 | 0000271D | 8946F8                    | 	mov	word [bp-8], ax
  4640 | 00002720 | 8B76FE                    | 	mov	si, word [bp-2]
  4641 | 00002723 | 8B46F8                    | 	mov	ax, word [bp-8]
  4642 | 00002726 | B90600                    | 	mov	cx, 6
  4643 | 00002729 | F7E9                      | 	imul	cx
  4644 | 0000272B | 89C7                      | 	mov	di, ax
  4645 | 0000272D | 81C7[FE37]                | 	add	di, movePieceArray
  4646 | 00002731 | 8B04                      | 	mov	ax, word [si]
  4647 | 00002733 | 8905                      | 	mov	word [di], ax
  4648 | 00002735 | 8B46F8                    | 	mov	ax, word [bp-8]
  4649 | 00002738 | B90600                    | 	mov	cx, 6
  4650 | 0000273B | F7E9                      | 	imul	cx
  4651 | 0000273D | 05[FE37]                  | 	add	ax, movePieceArray
  4652 | 00002740 | 89C6                      | 	mov	si, ax
  4653 | 00002742 | 83C604                    | 	add	si, 4
  4654 | 00002745 | C7040100                  | 	mov	word [si], 1
  4655 | 00002749 | 8B46F8                    | 	mov	ax, word [bp-8]
  4656 | 0000274C | B90600                    | 	mov	cx, 6
  4657 | 0000274F | F7E9                      | 	imul	cx
  4658 | 00002751 | 05[FE37]                  | 	add	ax, movePieceArray
  4659 | 00002754 | 89C6                      | 	mov	si, ax
  4660 | 00002756 | 83C602                    | 	add	si, 2
  4661 | 00002759 | C704[8608]                | 	mov	word [si], SlidePiece
  4662 | 0000275D | 8B46FA                    | 	mov	ax, word [bp-6]
  4663 | 00002760 | 40                        | 	inc	ax
  4664 | 00002761 | 8946FA                    | 	mov	word [bp-6], ax
  4665 | 00002764 | 8B46F8                    | 	mov	ax, word [bp-8]
  4666 | 00002767 | B90600                    | 	mov	cx, 6
  4667 | 0000276A | F7E9                      | 	imul	cx
  4668 | 0000276C | 05[FE37]                  | 	add	ax, movePieceArray
  4669 | 0000276F | 50                        | 	push	ax
  4670 | 00002770 | FF36[5C2A]                | 	push	word [movePieceQueuePTR]
  4671 | 00002774 | E881F0                    | 	call	YKQPost
  4672 | 00002777 | 83C404                    | 	add	sp, 4
  4673 |          |                           | L_lab8app_116:
  4674 | 0000277A | 837EFA02                  | 	cmp	word [bp-6], 2
  4675 | 0000277E | 7C9A                      | 	jl	L_lab8app_115
  4676 |          |                           | L_lab8app_117:
  4677 |          |                           | L_lab8app_106:
  4678 |          |                           | L_lab8app_93:
  4679 |          |                           | L_lab8app_84:
  4680 | 00002780 | E92DFA                    | 	jmp	L_lab8app_83
  4681 |          |                           | L_lab8app_85:
  4682 | 00002783 | 89EC                      | 	mov	sp, bp
  4683 | 00002785 | 5D                        | 	pop	bp
  4684 | 00002786 | C3                        | 	ret
  4685 |          |                           | L_lab8app_81:
  4686 | 00002787 | 55                        | 	push	bp
  4687 | 00002788 | 89E5                      | 	mov	bp, sp
  4688 | 0000278A | 83EC0C                    | 	sub	sp, 12
  4689 | 0000278D | E913FA                    | 	jmp	L_lab8app_82
  4690 |          |                           | L_lab8app_119:
  4691 | 00002790 | 6D6F76655069656365-       | 	DB	"movePieceTask moving!",0xA,0
  4692 | 00002799 | 5461736B206D6F7669-       | ...
  4693 | 000027A2 | 6E67210A00                | ...
  4694 | 000027A7 | 90                        | 	ALIGN	2
  4695 |          |                           | movePieceTask:
  4696 | 000027A8 | EB56                      | 	jmp	L_lab8app_120
  4697 |          |                           | L_lab8app_121:
  4698 | 000027AA | B8[9027]                  | 	mov	ax, L_lab8app_119
  4699 | 000027AD | 50                        | 	push	ax
  4700 | 000027AE | E877DC                    | 	call	printString
  4701 | 000027B1 | 83C402                    | 	add	sp, 2
  4702 | 000027B4 | EB44                      | 	jmp	L_lab8app_123
  4703 |          |                           | L_lab8app_122:
  4704 | 000027B6 | B80100                    | 	mov	ax, 1
  4705 | 000027B9 | 50                        | 	push	ax
  4706 | 000027BA | B80100                    | 	mov	ax, 1
  4707 | 000027BD | 50                        | 	push	ax
  4708 | 000027BE | FF36[602A]                | 	push	word [pieceMoveEvent]
  4709 | 000027C2 | E87DE9                    | 	call	YKEventPend
  4710 | 000027C5 | 83C406                    | 	add	sp, 6
  4711 | 000027C8 | B80100                    | 	mov	ax, 1
  4712 | 000027CB | 50                        | 	push	ax
  4713 | 000027CC | FF36[602A]                | 	push	word [pieceMoveEvent]
  4714 | 000027D0 | E817EC                    | 	call	YKEventReset
  4715 | 000027D3 | 83C404                    | 	add	sp, 4
  4716 | 000027D6 | FF36[5C2A]                | 	push	word [movePieceQueuePTR]
  4717 | 000027DA | E81FEF                    | 	call	YKQPend
  4718 | 000027DD | 83C402                    | 	add	sp, 2
  4719 | 000027E0 | 8946FE                    | 	mov	word [bp-2], ax
  4720 | 000027E3 | 8B76FE                    | 	mov	si, word [bp-2]
  4721 | 000027E6 | 83C604                    | 	add	si, 4
  4722 | 000027E9 | FF34                      | 	push	word [si]
  4723 | 000027EB | 8B76FE                    | 	mov	si, word [bp-2]
  4724 | 000027EE | FF34                      | 	push	word [si]
  4725 | 000027F0 | 83C602                    | 	add	si, 2
  4726 | 000027F3 | 8B34                      | 	mov	si, word [si]
  4727 | 000027F5 | FFD6                      | 	call	si
  4728 | 000027F7 | 83C404                    | 	add	sp, 4
  4729 |          |                           | L_lab8app_123:
  4730 | 000027FA | EBBA                      | 	jmp	L_lab8app_122
  4731 |          |                           | L_lab8app_124:
  4732 | 000027FC | 89EC                      | 	mov	sp, bp
  4733 | 000027FE | 5D                        | 	pop	bp
  4734 | 000027FF | C3                        | 	ret
  4735 |          |                           | L_lab8app_120:
  4736 | 00002800 | 55                        | 	push	bp
  4737 | 00002801 | 89E5                      | 	mov	bp, sp
  4738 | 00002803 | 51                        | 	push	cx
  4739 | 00002804 | EBA4                      | 	jmp	L_lab8app_121
  4740 |          |                           | L_lab8app_130:
  4741 | 00002806 | 253E0A00                  | 	DB	"%>",0xA,0
  4742 |          |                           | L_lab8app_129:
  4743 | 0000280A | 2C204350553A2000          | 	DB	", CPU: ",0
  4744 |          |                           | L_lab8app_128:
  4745 | 00002812 | 3C43533A2000              | 	DB	"<CS: ",0
  4746 |          |                           | L_lab8app_127:
  4747 | 00002818 | 44657465726D696E69-       | 	DB	"Determining CPU capacity",0xD,0xA,0
  4748 | 00002821 | 6E6720435055206361-       | ...
  4749 | 0000282A | 7061636974790D0A00        | ...
  4750 |          |                           | L_lab8app_126:
  4751 | 00002833 | 57656C636F6D652074-       | 	DB	"Welcome to the YAK kernel",0xD,0xA,0
  4752 | 0000283C | 6F207468652059414B-       | ...
  4753 | 00002845 | 206B65726E656C0D0A-       | ...
  4754 | 0000284E | 00                        | ...
  4755 | 0000284F | 90                        | 	ALIGN	2
  4756 |          |                           | STask:
  4757 | 00002850 | E9F200                    | 	jmp	L_lab8app_131
  4758 |          |                           | L_lab8app_132:
  4759 | 00002853 | B80100                    | 	mov	ax, 1
  4760 | 00002856 | 50                        | 	push	ax
  4761 | 00002857 | E8ACE6                    | 	call	YKDelayTask
  4762 | 0000285A | 83C402                    | 	add	sp, 2
  4763 | 0000285D | B8[3328]                  | 	mov	ax, L_lab8app_126
  4764 | 00002860 | 50                        | 	push	ax
  4765 | 00002861 | E8C4DB                    | 	call	printString
  4766 | 00002864 | 83C402                    | 	add	sp, 2
  4767 | 00002867 | B8[1828]                  | 	mov	ax, L_lab8app_127
  4768 | 0000286A | 50                        | 	push	ax
  4769 | 0000286B | E8BADB                    | 	call	printString
  4770 | 0000286E | 83C402                    | 	add	sp, 2
  4771 | 00002871 | B80100                    | 	mov	ax, 1
  4772 | 00002874 | 50                        | 	push	ax
  4773 | 00002875 | E88EE6                    | 	call	YKDelayTask
  4774 | 00002878 | 83C402                    | 	add	sp, 2
  4775 | 0000287B | C706[901A]0000            | 	mov	word [YKIdleCount], 0
  4776 | 00002881 | B80500                    | 	mov	ax, 5
  4777 | 00002884 | 50                        | 	push	ax
  4778 | 00002885 | E87EE6                    | 	call	YKDelayTask
  4779 | 00002888 | 83C402                    | 	add	sp, 2
  4780 | 0000288B | A1[901A]                  | 	mov	ax, word [YKIdleCount]
  4781 | 0000288E | 31D2                      | 	xor	dx, dx
  4782 | 00002890 | B91900                    | 	mov	cx, 25
  4783 | 00002893 | F7F1                      | 	div	cx
  4784 | 00002895 | 8946FE                    | 	mov	word [bp-2], ax
  4785 | 00002898 | C706[901A]0000            | 	mov	word [YKIdleCount], 0
  4786 | 0000289E | B80500                    | 	mov	ax, 5
  4787 | 000028A1 | 31D2                      | 	xor	dx, dx
  4788 | 000028A3 | 52                        | 	push	dx
  4789 | 000028A4 | 50                        | 	push	ax
  4790 | 000028A5 | E804E0                    | 	call	SeedSimptris
  4791 | 000028A8 | 83C404                    | 	add	sp, 4
  4792 | 000028AB | B003                      | 	mov	al, 3
  4793 | 000028AD | 50                        | 	push	ax
  4794 | 000028AE | B8[6A36]                  | 	mov	ax, (newPieceTaskStk+1024)
  4795 | 000028B1 | 50                        | 	push	ax
  4796 | 000028B2 | B8[A021]                  | 	mov	ax, newPieceTask
  4797 | 000028B5 | 50                        | 	push	ax
  4798 | 000028B6 | E8FDE3                    | 	call	YKNewTask
  4799 | 000028B9 | 83C406                    | 	add	sp, 6
  4800 | 000028BC | B005                      | 	mov	al, 5
  4801 | 000028BE | 50                        | 	push	ax
  4802 | 000028BF | B8[6632]                  | 	mov	ax, (movePieceTaskStk+1024)
  4803 | 000028C2 | 50                        | 	push	ax
  4804 | 000028C3 | B8[A827]                  | 	mov	ax, movePieceTask
  4805 | 000028C6 | 50                        | 	push	ax
  4806 | 000028C7 | E8ECE3                    | 	call	YKNewTask
  4807 | 000028CA | 83C406                    | 	add	sp, 6
  4808 | 000028CD | E8F1DF                    | 	call	StartSimptris
  4809 | 000028D0 | EB6D                      | 	jmp	L_lab8app_134
  4810 |          |                           | L_lab8app_133:
  4811 | 000028D2 | B81400                    | 	mov	ax, 20
  4812 | 000028D5 | 50                        | 	push	ax
  4813 | 000028D6 | E82DE6                    | 	call	YKDelayTask
  4814 | 000028D9 | 83C402                    | 	add	sp, 2
  4815 | 000028DC | E8E9F4                    | 	call	YKEnterMutex
  4816 | 000028DF | A1[8E1A]                  | 	mov	ax, word [YKCtxSwCount]
  4817 | 000028E2 | 8946FC                    | 	mov	word [bp-4], ax
  4818 | 000028E5 | A1[901A]                  | 	mov	ax, word [YKIdleCount]
  4819 | 000028E8 | 8946FA                    | 	mov	word [bp-6], ax
  4820 | 000028EB | E8DCF4                    | 	call	YKExitMutex
  4821 | 000028EE | B8[1228]                  | 	mov	ax, L_lab8app_128
  4822 | 000028F1 | 50                        | 	push	ax
  4823 | 000028F2 | E833DB                    | 	call	printString
  4824 | 000028F5 | 83C402                    | 	add	sp, 2
  4825 | 000028F8 | FF76FC                    | 	push	word [bp-4]
  4826 | 000028FB | E84EDB                    | 	call	printInt
  4827 | 000028FE | 83C402                    | 	add	sp, 2
  4828 | 00002901 | B8[0A28]                  | 	mov	ax, L_lab8app_129
  4829 | 00002904 | 50                        | 	push	ax
  4830 | 00002905 | E820DB                    | 	call	printString
  4831 | 00002908 | 83C402                    | 	add	sp, 2
  4832 | 0000290B | 8B46FA                    | 	mov	ax, word [bp-6]
  4833 | 0000290E | 31D2                      | 	xor	dx, dx
  4834 | 00002910 | F776FE                    | 	div	word [bp-2]
  4835 | 00002913 | 8946F8                    | 	mov	word [bp-8], ax
  4836 | 00002916 | B86400                    | 	mov	ax, 100
  4837 | 00002919 | 2B46F8                    | 	sub	ax, word [bp-8]
  4838 | 0000291C | 50                        | 	push	ax
  4839 | 0000291D | E82CDB                    | 	call	printInt
  4840 | 00002920 | 83C402                    | 	add	sp, 2
  4841 | 00002923 | B8[0628]                  | 	mov	ax, L_lab8app_130
  4842 | 00002926 | 50                        | 	push	ax
  4843 | 00002927 | E8FEDA                    | 	call	printString
  4844 | 0000292A | 83C402                    | 	add	sp, 2
  4845 | 0000292D | E898F4                    | 	call	YKEnterMutex
  4846 | 00002930 | C706[8E1A]0000            | 	mov	word [YKCtxSwCount], 0
  4847 | 00002936 | C706[901A]0000            | 	mov	word [YKIdleCount], 0
  4848 | 0000293C | E88BF4                    | 	call	YKExitMutex
  4849 |          |                           | L_lab8app_134:
  4850 | 0000293F | EB91                      | 	jmp	L_lab8app_133
  4851 |          |                           | L_lab8app_135:
  4852 | 00002941 | 89EC                      | 	mov	sp, bp
  4853 | 00002943 | 5D                        | 	pop	bp
  4854 | 00002944 | C3                        | 	ret
  4855 |          |                           | L_lab8app_131:
  4856 | 00002945 | 55                        | 	push	bp
  4857 | 00002946 | 89E5                      | 	mov	bp, sp
  4858 | 00002948 | 83EC08                    | 	sub	sp, 8
  4859 | 0000294B | E905FF                    | 	jmp	L_lab8app_132
  4860 |          |                           | L_lab8app_141:
  4861 | 0000294E | 0A6D6F766550696563-       | 	DB	0xA,"movePieceQueue: ",0
  4862 | 00002957 | 6551756575653A2000        | ...
  4863 |          |                           | L_lab8app_140:
  4864 | 00002960 | 0A6E65775069656365-       | 	DB	0xA,"newPieceQueue: ",0
  4865 | 00002969 | 51756575653A2000          | ...
  4866 |          |                           | L_lab8app_139:
  4867 | 00002971 | 0A6E65775069656365-       | 	DB	0xA,"newPieceTask: ",0
  4868 | 0000297A | 5461736B3A2000            | ...
  4869 |          |                           | L_lab8app_138:
  4870 | 00002981 | 0A6D6F766550696563-       | 	DB	0xA,"movePieceTask: ",0
  4871 | 0000298A | 655461736B3A2000          | ...
  4872 |          |                           | L_lab8app_137:
  4873 | 00002992 | 535461736B3A2000          | 	DB	"STask: ",0
  4874 |          |                           | 	ALIGN	2
  4875 |          |                           | main:
  4876 | 0000299A | E9B800                    | 	jmp	L_lab8app_142
  4877 |          |                           | L_lab8app_143:
  4878 | 0000299D | E8DAE1                    | 	call	YKInitialize
  4879 | 000029A0 | B82800                    | 	mov	ax, 40
  4880 | 000029A3 | 50                        | 	push	ax
  4881 | 000029A4 | B8[AE37]                  | 	mov	ax, newPieceQueue
  4882 | 000029A7 | 50                        | 	push	ax
  4883 | 000029A8 | E8B3EC                    | 	call	YKQCreate
  4884 | 000029AB | 83C404                    | 	add	sp, 4
  4885 | 000029AE | A3[5E2A]                  | 	mov	word [newPieceQueuePTR], ax
  4886 | 000029B1 | B82800                    | 	mov	ax, 40
  4887 | 000029B4 | 50                        | 	push	ax
  4888 | 000029B5 | B8[F038]                  | 	mov	ax, movePieceQueue
  4889 | 000029B8 | 50                        | 	push	ax
  4890 | 000029B9 | E8A2EC                    | 	call	YKQCreate
  4891 | 000029BC | 83C404                    | 	add	sp, 4
  4892 | 000029BF | A3[5C2A]                  | 	mov	word [movePieceQueuePTR], ax
  4893 | 000029C2 | B80100                    | 	mov	ax, 1
  4894 | 000029C5 | 50                        | 	push	ax
  4895 | 000029C6 | E81DE7                    | 	call	YKEventCreate
  4896 | 000029C9 | 83C402                    | 	add	sp, 2
  4897 | 000029CC | A3[602A]                  | 	mov	word [pieceMoveEvent], ax
  4898 | 000029CF | B8[9229]                  | 	mov	ax, L_lab8app_137
  4899 | 000029D2 | 50                        | 	push	ax
  4900 | 000029D3 | E852DA                    | 	call	printString
  4901 | 000029D6 | 83C402                    | 	add	sp, 2
  4902 | 000029D9 | B8[5028]                  | 	mov	ax, STask
  4903 | 000029DC | 50                        | 	push	ax
  4904 | 000029DD | E86CDA                    | 	call	printInt
  4905 | 000029E0 | 83C402                    | 	add	sp, 2
  4906 | 000029E3 | B8[8129]                  | 	mov	ax, L_lab8app_138
  4907 | 000029E6 | 50                        | 	push	ax
  4908 | 000029E7 | E83EDA                    | 	call	printString
  4909 | 000029EA | 83C402                    | 	add	sp, 2
  4910 | 000029ED | B8[A827]                  | 	mov	ax, movePieceTask
  4911 | 000029F0 | 50                        | 	push	ax
  4912 | 000029F1 | E858DA                    | 	call	printInt
  4913 | 000029F4 | 83C402                    | 	add	sp, 2
  4914 | 000029F7 | B8[7129]                  | 	mov	ax, L_lab8app_139
  4915 | 000029FA | 50                        | 	push	ax
  4916 | 000029FB | E82ADA                    | 	call	printString
  4917 | 000029FE | 83C402                    | 	add	sp, 2
  4918 | 00002A01 | B8[A021]                  | 	mov	ax, newPieceTask
  4919 | 00002A04 | 50                        | 	push	ax
  4920 | 00002A05 | E844DA                    | 	call	printInt
  4921 | 00002A08 | 83C402                    | 	add	sp, 2
  4922 | 00002A0B | B8[6029]                  | 	mov	ax, L_lab8app_140
  4923 | 00002A0E | 50                        | 	push	ax
  4924 | 00002A0F | E816DA                    | 	call	printString
  4925 | 00002A12 | 83C402                    | 	add	sp, 2
  4926 | 00002A15 | FF36[5E2A]                | 	push	word [newPieceQueuePTR]
  4927 | 00002A19 | E830DA                    | 	call	printInt
  4928 | 00002A1C | 83C402                    | 	add	sp, 2
  4929 | 00002A1F | B8[4E29]                  | 	mov	ax, L_lab8app_141
  4930 | 00002A22 | 50                        | 	push	ax
  4931 | 00002A23 | E802DA                    | 	call	printString
  4932 | 00002A26 | 83C402                    | 	add	sp, 2
  4933 | 00002A29 | FF36[5C2A]                | 	push	word [movePieceQueuePTR]
  4934 | 00002A2D | E81CDA                    | 	call	printInt
  4935 | 00002A30 | 83C402                    | 	add	sp, 2
  4936 | 00002A33 | B8[251F]                  | 	mov	ax, (L_lab8app_30+35)
  4937 | 00002A36 | 50                        | 	push	ax
  4938 | 00002A37 | E8EED9                    | 	call	printString
  4939 | 00002A3A | 83C402                    | 	add	sp, 2
  4940 | 00002A3D | 30C0                      | 	xor	al, al
  4941 | 00002A3F | 50                        | 	push	ax
  4942 | 00002A40 | B8[622E]                  | 	mov	ax, (STaskStk+1024)
  4943 | 00002A43 | 50                        | 	push	ax
  4944 | 00002A44 | B8[5028]                  | 	mov	ax, STask
  4945 | 00002A47 | 50                        | 	push	ax
  4946 | 00002A48 | E86BE2                    | 	call	YKNewTask
  4947 | 00002A4B | 83C406                    | 	add	sp, 6
  4948 | 00002A4E | E813E4                    | 	call	YKRun
  4949 | 00002A51 | 89EC                      | 	mov	sp, bp
  4950 | 00002A53 | 5D                        | 	pop	bp
  4951 | 00002A54 | C3                        | 	ret
  4952 |          |                           | L_lab8app_142:
  4953 | 00002A55 | 55                        | 	push	bp
  4954 | 00002A56 | 89E5                      | 	mov	bp, sp
  4955 | 00002A58 | E942FF                    | 	jmp	L_lab8app_143
  4956 | 00002A5B | 90                        | 	ALIGN	2
  4957 |          |                           | movePieceQueuePTR:
  4958 | 00002A5C | 00<rept>                  | 	TIMES	2 db 0
  4959 |          |                           | newPieceQueuePTR:
  4960 | 00002A5E | 00<rept>                  | 	TIMES	2 db 0
  4961 |          |                           | pieceMoveEvent:
  4962 | 00002A60 | 00<rept>                  | 	TIMES	2 db 0
  4963 |          |                           | STaskStk:
  4964 | 00002A62 | 00<rept>                  | 	TIMES	1024 db 0
  4965 |          |                           | testintbog:
  4966 | 00002E62 | 00<rept>                  | 	TIMES	2 db 0
  4967 |          |                           | test2:
  4968 | 00002E64 | 00<rept>                  | 	TIMES	2 db 0
  4969 |          |                           | movePieceTaskStk:
  4970 | 00002E66 | 00<rept>                  | 	TIMES	1024 db 0
  4971 |          |                           | test3:
  4972 | 00003266 | 00<rept>                  | 	TIMES	2 db 0
  4973 |          |                           | test4:
  4974 | 00003268 | 00<rept>                  | 	TIMES	2 db 0
  4975 |          |                           | newPieceTaskStk:
  4976 | 0000326A | 00<rept>                  | 	TIMES	1024 db 0
  4977 |          |                           | test5:
  4978 | 0000366A | 00<rept>                  | 	TIMES	2 db 0
  4979 |          |                           | test6:
  4980 | 0000366C | 00<rept>                  | 	TIMES	2 db 0
  4981 |          |                           | newPieceArray:
  4982 | 0000366E | 00<rept>                  | 	TIMES	320 db 0
  4983 |          |                           | newPieceQueue:
  4984 | 000037AE | 00<rept>                  | 	TIMES	80 db 0
  4985 |          |                           | movePieceArray:
  4986 | 000037FE | 00<rept>                  | 	TIMES	240 db 0
  4987 |          |                           | movePieceArrayIndex:
  4988 | 000038EE | 00<rept>                  | 	TIMES	2 db 0
  4989 |          |                           | movePieceQueue:
  4990 | 000038F0 | 00<rept>                  | 	TIMES	80 db 0
  4991 |          |                           | screen0:
  4992 | 00003940 | 00<rept>                  | 	TIMES	2 db 0
  4993 |          |                           | screen1:
  4994 | 00003942 | 00<rept>                  | 	TIMES	2 db 0
  4995 |          |                           | screen2:
  4996 | 00003944 | 00<rept>                  | 	TIMES	2 db 0
  4997 |          |                           | screen3:
  4998 | 00003946 | 00<rept>                  | 	TIMES	2 db 0
  4999 |          |                           | screen4:
  5000 | 00003948 | 00<rept>                  | 	TIMES	2 db 0
  5001 |          |                           | screen5:
  5002 | 0000394A | 00<rept>                  | 	TIMES	2 db 0
