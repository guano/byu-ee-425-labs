; Generated by c86 (BYU-NASM) 5.1 (beta) from yakc.i
	CPU	8086
	ALIGN	2
	jmp	main	; Jump to program start
started_running:
	DB	0
	ALIGN	2
YKInitialize:
	jmp	L_yakc_1
L_yakc_2:
	mov	word [YKCtxSwCount], 0
	mov	word [YKIdleCount], 0
	mov	word [YKCurrentlyExecuting], 0
	mov	word [YKISRCallDepth], 0
	call	YKEnterMutex
	mov	word [YKAvailTCBList], YKTCBArray
	mov	word [bp-2], 0
	jmp	L_yakc_4
L_yakc_3:
	mov	ax, word [bp-2]
	inc	ax
	mov	cx, 24
	imul	cx
	add	ax, YKTCBArray
	push	ax
	mov	ax, word [bp-2]
	mov	cx, 24
	imul	cx
	mov	dx, ax
	add	dx, YKTCBArray
	mov	si, dx
	add	si, 10
	pop	ax
	mov	word [si], ax
L_yakc_6:
	inc	word [bp-2]
L_yakc_4:
	cmp	word [bp-2], 9
	jl	L_yakc_3
L_yakc_5:
	mov	word [(226+YKTCBArray)], 0
	mov	word [bp-2], 0
	jmp	L_yakc_8
L_yakc_7:
	mov	ax, word [bp-2]
	shl	ax, 1
	shl	ax, 1
	add	ax, YKSEMArray
	mov	si, ax
	add	si, 2
	mov	word [si], 0
	mov	ax, word [bp-2]
	shl	ax, 1
	shl	ax, 1
	mov	si, ax
	add	si, YKSEMArray
	mov	word [si], -10
L_yakc_10:
	inc	word [bp-2]
L_yakc_8:
	cmp	word [bp-2], 1
	jl	L_yakc_7
L_yakc_9:
	mov	word [bp-2], 0
	jmp	L_yakc_12
L_yakc_11:
	mov	ax, word [bp-2]
	mov	cx, 10
	imul	cx
	mov	si, ax
	add	si, YKQueueArray
	mov	word [si], 0
	mov	ax, word [bp-2]
	mov	cx, 10
	imul	cx
	add	ax, YKQueueArray
	mov	si, ax
	add	si, 2
	mov	word [si], 0
	mov	ax, word [bp-2]
	mov	cx, 10
	imul	cx
	add	ax, YKQueueArray
	mov	si, ax
	add	si, 4
	mov	word [si], 0
	mov	ax, word [bp-2]
	mov	cx, 10
	imul	cx
	add	ax, YKQueueArray
	mov	si, ax
	add	si, 6
	mov	word [si], 0
	mov	ax, word [bp-2]
	mov	cx, 10
	imul	cx
	add	ax, YKQueueArray
	mov	si, ax
	add	si, 8
	mov	word [si], 0
L_yakc_14:
	inc	word [bp-2]
L_yakc_12:
	cmp	word [bp-2], 4
	jl	L_yakc_11
L_yakc_13:
	mov	al, 100
	push	ax
	mov	ax, (idleStack+512)
	push	ax
	mov	ax, YKIdleTask
	push	ax
	call	YKNewTask
	add	sp, 6
	mov	sp, bp
	pop	bp
	ret
L_yakc_1:
	push	bp
	mov	bp, sp
	push	cx
	jmp	L_yakc_2
	ALIGN	2
YKIdleTask:
	jmp	L_yakc_16
L_yakc_17:
	jmp	L_yakc_19
L_yakc_18:
	call	YKEnterMutex
	mov	ax, word [YKIdleCount]
	inc	ax
	mov	word [YKIdleCount], ax
	call	YKExitMutex
L_yakc_19:
	jmp	L_yakc_18
L_yakc_20:
	mov	sp, bp
	pop	bp
	ret
L_yakc_16:
	push	bp
	mov	bp, sp
	jmp	L_yakc_17
	ALIGN	2
YKNewTask:
	jmp	L_yakc_22
L_yakc_23:
	mov	ax, word [bp+6]
	sub	ax, 2
	mov	word [bp+6], ax
	mov	ax, word [YKAvailTCBList]
	mov	word [bp-2], ax
	mov	si, word [bp-2]
	add	si, 10
	mov	ax, word [si]
	mov	word [YKAvailTCBList], ax
	mov	si, word [bp-2]
	add	si, 8
	mov	word [si], 0
	mov	al, byte [bp+8]
	xor	ah, ah
	mov	si, word [bp-2]
	add	si, 6
	mov	word [si], ax
	call	YKEnterMutex
	mov	ax, word [YKRdyList]
	test	ax, ax
	jne	L_yakc_24
	mov	ax, word [bp-2]
	mov	word [YKRdyList], ax
	mov	si, word [bp-2]
	add	si, 10
	mov	word [si], 0
	mov	si, word [bp-2]
	add	si, 12
	mov	word [si], 0
	jmp	L_yakc_25
L_yakc_24:
	mov	ax, word [YKRdyList]
	mov	word [bp-4], ax
	jmp	L_yakc_27
L_yakc_26:
	mov	si, word [bp-4]
	add	si, 10
	mov	ax, word [si]
	mov	word [bp-4], ax
L_yakc_27:
	mov	si, word [bp-4]
	add	si, 6
	mov	di, word [bp-2]
	add	di, 6
	mov	ax, word [di]
	cmp	ax, word [si]
	jg	L_yakc_26
L_yakc_28:
	mov	si, word [bp-4]
	add	si, 12
	mov	ax, word [si]
	test	ax, ax
	jne	L_yakc_29
	mov	ax, word [bp-2]
	mov	word [YKRdyList], ax
	jmp	L_yakc_30
L_yakc_29:
	mov	si, word [bp-4]
	add	si, 12
	mov	si, word [si]
	add	si, 10
	mov	ax, word [bp-2]
	mov	word [si], ax
L_yakc_30:
	mov	si, word [bp-4]
	add	si, 12
	mov	di, word [bp-2]
	add	di, 12
	mov	ax, word [si]
	mov	word [di], ax
	mov	si, word [bp-2]
	add	si, 10
	mov	ax, word [bp-4]
	mov	word [si], ax
	mov	si, word [bp-4]
	add	si, 12
	mov	ax, word [bp-2]
	mov	word [si], ax
L_yakc_25:
	mov	si, word [bp-2]
	mov	ax, word [bp+6]
	mov	word [si], ax
	mov	si, word [bp-2]
	add	si, 2
	mov	word [si], 0
	mov	si, word [bp-2]
	mov	ax, word [si]
	sub	ax, 22
	mov	word [si], ax
	mov	si, word [bp-2]
	mov	si, word [si]
	add	si, 22
	mov	word [si], 512
	mov	si, word [bp-2]
	mov	si, word [si]
	add	si, 20
	mov	word [si], 0
	mov	si, word [bp-2]
	mov	si, word [si]
	add	si, 18
	mov	ax, word [bp+4]
	mov	word [si], ax
	mov	si, word [bp-2]
	mov	si, word [si]
	add	si, 16
	mov	word [si], 0
	mov	si, word [bp-2]
	mov	si, word [si]
	add	si, 14
	mov	word [si], 0
	mov	si, word [bp-2]
	mov	si, word [si]
	add	si, 12
	mov	word [si], 0
	mov	si, word [bp-2]
	mov	si, word [si]
	add	si, 10
	mov	word [si], 0
	mov	si, word [bp-2]
	mov	si, word [si]
	add	si, 8
	mov	word [si], 0
	mov	si, word [bp-2]
	mov	si, word [si]
	add	si, 6
	mov	word [si], 0
	mov	si, word [bp-2]
	mov	si, word [si]
	add	si, 4
	mov	word [si], 0
	mov	si, word [bp-2]
	mov	si, word [si]
	add	si, 2
	mov	word [si], 0
	mov	si, word [bp-2]
	mov	si, word [si]
	mov	word [si], 0
	mov	ax, 1
	push	ax
	call	YKScheduler
	add	sp, 2
	mov	sp, bp
	pop	bp
	ret
L_yakc_22:
	push	bp
	mov	bp, sp
	sub	sp, 4
	jmp	L_yakc_23
L_yakc_32:
	DB	"run called. Calling the scheduler",0xA,0
	ALIGN	2
YKRun:
	jmp	L_yakc_33
L_yakc_34:
	mov	ax, L_yakc_32
	push	ax
	call	printString
	add	sp, 2
	mov	byte [started_running], 1
	xor	ax, ax
	push	ax
	call	YKScheduler
	add	sp, 2
	mov	sp, bp
	pop	bp
	ret
L_yakc_33:
	push	bp
	mov	bp, sp
	jmp	L_yakc_34
	ALIGN	2
YKScheduler:
	jmp	L_yakc_36
L_yakc_37:
	mov	ax, word [YKRdyList]
	mov	word [bp-2], ax
	mov	ax, word [YKCurrentlyExecuting]
	mov	word [bp-4], ax
	mov	al, byte [started_running]
	test	al, al
	je	L_yakc_39
L_yakc_38:
	mov	ax, word [bp-2]
	cmp	ax, word [YKCurrentlyExecuting]
	je	L_yakc_39
L_yakc_40:
	mov	ax, word [YKCtxSwCount]
	inc	ax
	mov	word [YKCtxSwCount], ax
	mov	ax, word [bp-2]
	mov	word [YKCurrentlyExecuting], ax
	mov	ax, word [bp+4]
	test	ax, ax
	jne	L_yakc_41
	mov	si, word [bp-2]
	add	si, 2
	push	word [si]
	mov	si, word [bp-2]
	push	word [si]
	mov	ax, 1
	push	ax
	mov	ax, 1
	push	ax
	xor	ax, ax
	push	ax
	call	YKDispatcher_save_context
	add	sp, 10
	jmp	L_yakc_42
L_yakc_41:
	mov	si, word [bp-2]
	add	si, 2
	push	word [si]
	mov	si, word [bp-2]
	push	word [si]
	mov	ax, word [bp-4]
	add	ax, 2
	push	ax
	push	word [bp-4]
	push	word [bp+4]
	call	YKDispatcher_save_context
	add	sp, 10
L_yakc_42:
L_yakc_39:
	mov	sp, bp
	pop	bp
	ret
L_yakc_36:
	push	bp
	mov	bp, sp
	sub	sp, 4
	jmp	L_yakc_37
	ALIGN	2
YKDelayTask:
	jmp	L_yakc_44
L_yakc_45:
	call	YKEnterMutex
	mov	ax, word [bp+4]
	test	ax, ax
	je	L_yakc_46
	mov	ax, word [YKRdyList]
	mov	word [bp-2], ax
	mov	si, word [bp-2]
	add	si, 10
	mov	ax, word [si]
	mov	word [YKRdyList], ax
	mov	si, word [bp-2]
	add	si, 10
	mov	si, word [si]
	add	si, 12
	mov	word [si], 0
	mov	si, word [bp-2]
	add	si, 10
	mov	ax, word [YKSuspList]
	mov	word [si], ax
	mov	ax, word [bp-2]
	mov	word [YKSuspList], ax
	mov	si, word [bp-2]
	add	si, 12
	mov	word [si], 0
	mov	si, word [bp-2]
	add	si, 10
	mov	ax, word [si]
	test	ax, ax
	je	L_yakc_47
	mov	si, word [bp-2]
	add	si, 10
	mov	si, word [si]
	add	si, 12
	mov	ax, word [bp-2]
	mov	word [si], ax
L_yakc_47:
	mov	si, word [bp-2]
	add	si, 8
	mov	ax, word [bp+4]
	mov	word [si], ax
	jmp	L_yakc_48
L_yakc_46:
	call	YKExitMutex
	jmp	L_yakc_49
L_yakc_48:
	mov	ax, 1
	push	ax
	call	YKScheduler
	add	sp, 2
	call	YKExitMutex
L_yakc_49:
	mov	sp, bp
	pop	bp
	ret
L_yakc_44:
	push	bp
	mov	bp, sp
	push	cx
	jmp	L_yakc_45
	ALIGN	2
YKTickHandler:
	jmp	L_yakc_51
L_yakc_52:
	mov	ax, word [YKSuspList]
	mov	word [bp-2], ax
	call	YKEnterMutex
	mov	ax, word [YKTickNum]
	inc	ax
	mov	word [YKTickNum], ax
	jmp	L_yakc_54
L_yakc_53:
	mov	si, word [bp-2]
	add	si, 10
	mov	ax, word [si]
	mov	word [bp-6], ax
	mov	si, word [bp-2]
	add	si, 8
	mov	ax, word [si]
	dec	ax
	mov	si, word [bp-2]
	add	si, 8
	mov	word [si], ax
	mov	si, word [bp-2]
	add	si, 8
	mov	ax, word [si]
	test	ax, ax
	jne	L_yakc_56
	mov	si, word [bp-2]
	add	si, 12
	mov	ax, word [si]
	test	ax, ax
	jne	L_yakc_57
	mov	si, word [bp-2]
	add	si, 10
	mov	ax, word [si]
	mov	word [YKSuspList], ax
	jmp	L_yakc_58
L_yakc_57:
	mov	si, word [bp-2]
	add	si, 10
	mov	di, word [bp-2]
	add	di, 12
	mov	di, word [di]
	add	di, 10
	mov	ax, word [si]
	mov	word [di], ax
L_yakc_58:
	mov	si, word [bp-2]
	add	si, 10
	mov	ax, word [si]
	test	ax, ax
	je	L_yakc_59
	mov	si, word [bp-2]
	add	si, 12
	mov	di, word [bp-2]
	add	di, 10
	mov	di, word [di]
	add	di, 12
	mov	ax, word [si]
	mov	word [di], ax
L_yakc_59:
	mov	ax, word [YKRdyList]
	mov	word [bp-4], ax
	jmp	L_yakc_61
L_yakc_60:
	mov	si, word [bp-4]
	add	si, 10
	mov	ax, word [si]
	mov	word [bp-4], ax
L_yakc_61:
	mov	si, word [bp-4]
	add	si, 6
	mov	di, word [bp-2]
	add	di, 6
	mov	ax, word [di]
	cmp	ax, word [si]
	jg	L_yakc_60
L_yakc_62:
	mov	si, word [bp-4]
	add	si, 12
	mov	ax, word [si]
	test	ax, ax
	jne	L_yakc_63
	mov	ax, word [bp-2]
	mov	word [YKRdyList], ax
	jmp	L_yakc_64
L_yakc_63:
	mov	si, word [bp-4]
	add	si, 12
	mov	si, word [si]
	add	si, 10
	mov	ax, word [bp-2]
	mov	word [si], ax
L_yakc_64:
	mov	si, word [bp-4]
	add	si, 12
	mov	di, word [bp-2]
	add	di, 12
	mov	ax, word [si]
	mov	word [di], ax
	mov	si, word [bp-2]
	add	si, 10
	mov	ax, word [bp-4]
	mov	word [si], ax
	mov	si, word [bp-4]
	add	si, 12
	mov	ax, word [bp-2]
	mov	word [si], ax
L_yakc_56:
	mov	ax, word [bp-6]
	mov	word [bp-2], ax
L_yakc_54:
	mov	ax, word [bp-2]
	test	ax, ax
	jne	L_yakc_53
L_yakc_55:
	call	YKExitMutex
	mov	sp, bp
	pop	bp
	ret
L_yakc_51:
	push	bp
	mov	bp, sp
	sub	sp, 6
	jmp	L_yakc_52
	ALIGN	2
YKEnterISR:
	jmp	L_yakc_66
L_yakc_67:
	mov	ax, word [YKISRCallDepth]
	inc	ax
	mov	word [YKISRCallDepth], ax
	mov	sp, bp
	pop	bp
	ret
L_yakc_66:
	push	bp
	mov	bp, sp
	jmp	L_yakc_67
	ALIGN	2
YKExitISR:
	jmp	L_yakc_69
L_yakc_70:
	mov	ax, word [YKISRCallDepth]
	dec	ax
	mov	word [YKISRCallDepth], ax
	test	ax, ax
	jne	L_yakc_71
	xor	ax, ax
	push	ax
	call	YKScheduler
	add	sp, 2
L_yakc_71:
	mov	sp, bp
	pop	bp
	ret
L_yakc_69:
	push	bp
	mov	bp, sp
	jmp	L_yakc_70
	ALIGN	2
YKEventCreate:
	jmp	L_yakc_73
L_yakc_74:
	call	YKEnterMutex
	mov	word [bp-2], 0
	jmp	L_yakc_76
L_yakc_75:
	inc	word [bp-2]
L_yakc_76:
	mov	ax, word [bp-2]
	shl	ax, 1
	shl	ax, 1
	mov	si, ax
	add	si, YKEVENTArray
	mov	ax, word [si]
	test	ax, ax
	jne	L_yakc_75
L_yakc_77:
	mov	ax, word [bp-2]
	shl	ax, 1
	shl	ax, 1
	add	ax, YKEVENTArray
	mov	si, ax
	add	si, 2
	mov	ax, word [bp+4]
	mov	word [si], ax
	mov	ax, word [bp-2]
	shl	ax, 1
	shl	ax, 1
	mov	si, ax
	add	si, YKEVENTArray
	mov	word [si], 1
	mov	ax, word [bp-2]
	shl	ax, 1
	shl	ax, 1
	add	ax, YKEVENTArray
L_yakc_78:
	mov	sp, bp
	pop	bp
	ret
L_yakc_73:
	push	bp
	mov	bp, sp
	push	cx
	jmp	L_yakc_74
	ALIGN	2
YKEventPend:
	jmp	L_yakc_80
L_yakc_81:
	call	YKEnterMutex
	mov	ax, word [bp+8]
	test	ax, ax
	jne	L_yakc_82
	mov	si, word [bp+4]
	add	si, 2
	mov	ax, word [si]
	and	ax, word [bp+6]
	je	L_yakc_83
	mov	si, word [bp+4]
	add	si, 2
	mov	ax, word [si]
	mov	word [bp-4], ax
	call	YKExitMutex
	mov	ax, word [bp-4]
	jmp	L_yakc_84
L_yakc_83:
	jmp	L_yakc_85
L_yakc_82:
	mov	ax, word [bp+6]
	cmp	ax, word [bp+6]
	je	L_yakc_87
	xor	ax, ax
	jmp	L_yakc_88
L_yakc_87:
	mov	ax, 1
L_yakc_88:
	mov	si, word [bp+4]
	add	si, 2
	and	ax, word [si]
	je	L_yakc_86
	mov	si, word [bp+4]
	add	si, 2
	mov	ax, word [si]
	mov	word [bp-4], ax
	call	YKExitMutex
	mov	ax, word [bp-4]
	jmp	L_yakc_84
L_yakc_86:
L_yakc_85:
	mov	ax, word [YKRdyList]
	mov	word [bp-2], ax
	mov	si, word [bp-2]
	add	si, 10
	mov	ax, word [si]
	mov	word [YKRdyList], ax
	mov	si, word [bp-2]
	add	si, 10
	mov	si, word [si]
	add	si, 12
	mov	word [si], 0
	mov	si, word [bp-2]
	add	si, 10
	mov	ax, word [YKEventBlockingList]
	mov	word [si], ax
	mov	ax, word [bp-2]
	mov	word [YKEventBlockingList], ax
	mov	si, word [bp-2]
	add	si, 12
	mov	word [si], 0
	mov	si, word [bp-2]
	add	si, 10
	mov	ax, word [si]
	test	ax, ax
	je	L_yakc_89
	mov	si, word [bp-2]
	add	si, 10
	mov	si, word [si]
	add	si, 12
	mov	ax, word [bp-2]
	mov	word [si], ax
L_yakc_89:
	mov	si, word [bp-2]
	add	si, 18
	mov	ax, word [bp+4]
	mov	word [si], ax
	mov	si, word [bp-2]
	add	si, 20
	mov	ax, word [bp+6]
	mov	word [si], ax
	mov	si, word [bp-2]
	add	si, 22
	mov	ax, word [bp+8]
	mov	word [si], ax
	mov	ax, 1
	push	ax
	call	YKScheduler
	add	sp, 2
	mov	si, word [bp+4]
	add	si, 2
	mov	ax, word [si]
	mov	word [bp-4], ax
	call	YKExitMutex
	mov	ax, word [bp-4]
L_yakc_84:
	mov	sp, bp
	pop	bp
	ret
L_yakc_80:
	push	bp
	mov	bp, sp
	sub	sp, 4
	jmp	L_yakc_81
	ALIGN	2
YKEventSet:
	jmp	L_yakc_91
L_yakc_92:
	call	YKEnterMutex
	mov	ax, word [YKEventBlockingList]
	mov	word [bp-2], ax
	mov	si, word [bp+4]
	add	si, 2
	mov	ax, word [si]
	or	ax, word [bp+6]
	mov	si, word [bp+4]
	add	si, 2
	mov	word [si], ax
	mov	ax, word [bp-2]
	test	ax, ax
	jne	L_yakc_93
	call	YKExitMutex
	jmp	L_yakc_94
L_yakc_93:
	jmp	L_yakc_96
L_yakc_95:
	mov	si, word [bp-2]
	add	si, 10
	mov	ax, word [si]
	mov	word [bp-6], ax
	mov	si, word [bp-2]
	add	si, 18
	mov	ax, word [bp+4]
	cmp	ax, word [si]
	je	L_yakc_98
	mov	ax, word [bp-6]
	mov	word [bp-2], ax
	jmp	L_yakc_96
L_yakc_98:
	mov	si, word [bp-2]
	add	si, 22
	mov	ax, word [si]
	test	ax, ax
	jne	L_yakc_99
	mov	si, word [bp+4]
	add	si, 2
	mov	ax, word [si]
	mov	si, word [bp-2]
	add	si, 20
	and	ax, word [si]
	je	L_yakc_100
	mov	ax, word [bp-2]
	mov	word [bp-8], ax
	jmp	L_yakc_101
L_yakc_100:
	mov	word [bp-8], 0
L_yakc_101:
	jmp	L_yakc_102
L_yakc_99:
	mov	si, word [bp+4]
	add	si, 2
	mov	ax, word [si]
	mov	si, word [bp-2]
	add	si, 20
	and	ax, word [si]
	mov	si, word [bp-2]
	add	si, 20
	mov	dx, word [si]
	cmp	dx, ax
	jne	L_yakc_103
	mov	ax, word [bp-2]
	mov	word [bp-8], ax
	jmp	L_yakc_104
L_yakc_103:
	mov	word [bp-8], 0
L_yakc_104:
L_yakc_102:
	mov	ax, word [bp-8]
	test	ax, ax
	je	L_yakc_105
	mov	si, word [bp-8]
	add	si, 12
	mov	ax, word [si]
	test	ax, ax
	jne	L_yakc_106
	mov	si, word [bp-8]
	add	si, 10
	mov	ax, word [si]
	mov	word [YKEventBlockingList], ax
	jmp	L_yakc_107
L_yakc_106:
	mov	si, word [bp-8]
	add	si, 10
	mov	di, word [bp-8]
	add	di, 12
	mov	di, word [di]
	add	di, 10
	mov	ax, word [si]
	mov	word [di], ax
L_yakc_107:
	mov	si, word [bp-8]
	add	si, 10
	mov	ax, word [si]
	test	ax, ax
	je	L_yakc_108
	mov	si, word [bp-8]
	add	si, 12
	mov	di, word [bp-8]
	add	di, 10
	mov	di, word [di]
	add	di, 12
	mov	ax, word [si]
	mov	word [di], ax
L_yakc_108:
	mov	ax, word [YKRdyList]
	mov	word [bp-4], ax
	jmp	L_yakc_110
L_yakc_109:
	mov	si, word [bp-4]
	add	si, 10
	mov	ax, word [si]
	mov	word [bp-4], ax
L_yakc_110:
	mov	si, word [bp-4]
	add	si, 6
	mov	di, word [bp-8]
	add	di, 6
	mov	ax, word [di]
	cmp	ax, word [si]
	jg	L_yakc_109
L_yakc_111:
	mov	si, word [bp-4]
	add	si, 12
	mov	ax, word [si]
	test	ax, ax
	jne	L_yakc_112
	mov	ax, word [bp-8]
	mov	word [YKRdyList], ax
	jmp	L_yakc_113
L_yakc_112:
	mov	si, word [bp-4]
	add	si, 12
	mov	si, word [si]
	add	si, 10
	mov	ax, word [bp-8]
	mov	word [si], ax
L_yakc_113:
	mov	si, word [bp-4]
	add	si, 12
	mov	di, word [bp-8]
	add	di, 12
	mov	ax, word [si]
	mov	word [di], ax
	mov	si, word [bp-8]
	add	si, 10
	mov	ax, word [bp-4]
	mov	word [si], ax
	mov	si, word [bp-4]
	add	si, 12
	mov	ax, word [bp-8]
	mov	word [si], ax
	mov	si, word [bp-8]
	add	si, 18
	mov	word [si], 0
L_yakc_105:
	mov	ax, word [bp-6]
	mov	word [bp-2], ax
L_yakc_96:
	mov	ax, word [bp-2]
	test	ax, ax
	jne	L_yakc_95
L_yakc_97:
	mov	ax, word [YKISRCallDepth]
	test	ax, ax
	jne	L_yakc_114
	mov	ax, 1
	push	ax
	call	YKScheduler
	add	sp, 2
L_yakc_114:
	call	YKExitMutex
L_yakc_94:
	mov	sp, bp
	pop	bp
	ret
L_yakc_91:
	push	bp
	mov	bp, sp
	sub	sp, 8
	jmp	L_yakc_92
	ALIGN	2
YKEventReset:
	jmp	L_yakc_116
L_yakc_117:
	call	YKEnterMutex
	mov	si, word [bp+4]
	add	si, 2
	mov	ax, word [si]
	mov	dx, word [bp+6]
	not	dx
	and	ax, dx
	mov	si, word [bp+4]
	add	si, 2
	mov	word [si], ax
	call	YKExitMutex
	mov	sp, bp
	pop	bp
	ret
L_yakc_116:
	push	bp
	mov	bp, sp
	jmp	L_yakc_117
	ALIGN	2
YKSemCreate:
	jmp	L_yakc_119
L_yakc_120:
	call	YKEnterMutex
	mov	word [bp-2], 0
	jmp	L_yakc_122
L_yakc_121:
	inc	word [bp-2]
L_yakc_122:
	mov	ax, word [bp-2]
	shl	ax, 1
	shl	ax, 1
	add	ax, YKSEMArray
	mov	si, ax
	add	si, 2
	mov	ax, word [si]
	test	ax, ax
	jne	L_yakc_121
L_yakc_123:
	mov	ax, word [bp-2]
	shl	ax, 1
	shl	ax, 1
	mov	si, ax
	add	si, YKSEMArray
	mov	ax, word [bp+4]
	mov	word [si], ax
	mov	ax, word [bp-2]
	shl	ax, 1
	shl	ax, 1
	add	ax, YKSEMArray
	mov	si, ax
	add	si, 2
	mov	word [si], 1
	mov	ax, word [bp-2]
	shl	ax, 1
	shl	ax, 1
	add	ax, YKSEMArray
L_yakc_124:
	mov	sp, bp
	pop	bp
	ret
L_yakc_119:
	push	bp
	mov	bp, sp
	push	cx
	jmp	L_yakc_120
	ALIGN	2
YKSemPend:
	jmp	L_yakc_126
L_yakc_127:
	call	YKEnterMutex
	mov	si, word [bp+4]
	mov	ax, word [si]
	dec	ax
	mov	word [si], ax
	call	YKExitMutex
	mov	si, word [bp+4]
	cmp	word [si], 0
	jge	L_yakc_129
L_yakc_128:
	call	YKEnterMutex
	mov	ax, word [YKRdyList]
	mov	word [bp-2], ax
	mov	si, word [bp-2]
	add	si, 10
	mov	ax, word [si]
	mov	word [YKRdyList], ax
	mov	si, word [bp-2]
	add	si, 10
	mov	si, word [si]
	add	si, 12
	mov	word [si], 0
	mov	si, word [bp-2]
	add	si, 10
	mov	ax, word [YKSemaphoreWaitingList]
	mov	word [si], ax
	mov	ax, word [bp-2]
	mov	word [YKSemaphoreWaitingList], ax
	mov	si, word [bp-2]
	add	si, 12
	mov	word [si], 0
	mov	si, word [bp-2]
	add	si, 10
	mov	ax, word [si]
	test	ax, ax
	je	L_yakc_130
	mov	si, word [bp-2]
	add	si, 10
	mov	si, word [si]
	add	si, 12
	mov	ax, word [bp-2]
	mov	word [si], ax
L_yakc_130:
	mov	si, word [bp-2]
	add	si, 14
	mov	ax, word [bp+4]
	mov	word [si], ax
	mov	ax, 1
	push	ax
	call	YKScheduler
	add	sp, 2
	call	YKExitMutex
L_yakc_129:
	mov	sp, bp
	pop	bp
	ret
L_yakc_126:
	push	bp
	mov	bp, sp
	push	cx
	jmp	L_yakc_127
	ALIGN	2
YKSemPost:
	jmp	L_yakc_132
L_yakc_133:
	mov	word [bp-8], 0
	mov	ax, word [YKSemaphoreWaitingList]
	mov	word [bp-2], ax
	call	YKEnterMutex
	mov	si, word [bp+4]
	mov	ax, word [si]
	inc	ax
	mov	word [si], ax
	jmp	L_yakc_135
L_yakc_134:
	mov	si, word [bp-2]
	add	si, 14
	mov	ax, word [bp+4]
	cmp	ax, word [si]
	jne	L_yakc_137
	mov	ax, word [bp-8]
	test	ax, ax
	jne	L_yakc_138
	mov	ax, word [bp-2]
	mov	word [bp-8], ax
	jmp	L_yakc_139
L_yakc_138:
	mov	si, word [bp-2]
	add	si, 6
	mov	di, word [bp-8]
	add	di, 6
	mov	ax, word [di]
	cmp	ax, word [si]
	jle	L_yakc_140
	mov	ax, word [bp-2]
	mov	word [bp-8], ax
L_yakc_140:
L_yakc_139:
L_yakc_137:
	mov	si, word [bp-2]
	add	si, 10
	mov	ax, word [si]
	mov	word [bp-2], ax
L_yakc_135:
	mov	ax, word [bp-2]
	test	ax, ax
	jne	L_yakc_134
L_yakc_136:
	mov	ax, word [bp-8]
	test	ax, ax
	jne	L_yakc_141
	call	YKExitMutex
	jmp	L_yakc_142
L_yakc_141:
	mov	si, word [bp-8]
	add	si, 12
	mov	ax, word [si]
	test	ax, ax
	jne	L_yakc_143
	mov	si, word [bp-8]
	add	si, 10
	mov	ax, word [si]
	mov	word [YKSemaphoreWaitingList], ax
	jmp	L_yakc_144
L_yakc_143:
	mov	si, word [bp-8]
	add	si, 10
	mov	di, word [bp-8]
	add	di, 12
	mov	di, word [di]
	add	di, 10
	mov	ax, word [si]
	mov	word [di], ax
L_yakc_144:
	mov	si, word [bp-8]
	add	si, 10
	mov	ax, word [si]
	test	ax, ax
	je	L_yakc_145
	mov	si, word [bp-8]
	add	si, 12
	mov	di, word [bp-8]
	add	di, 10
	mov	di, word [di]
	add	di, 12
	mov	ax, word [si]
	mov	word [di], ax
L_yakc_145:
	mov	ax, word [YKRdyList]
	mov	word [bp-4], ax
	jmp	L_yakc_147
L_yakc_146:
	mov	si, word [bp-4]
	add	si, 10
	mov	ax, word [si]
	mov	word [bp-4], ax
L_yakc_147:
	mov	si, word [bp-4]
	add	si, 6
	mov	di, word [bp-8]
	add	di, 6
	mov	ax, word [di]
	cmp	ax, word [si]
	jg	L_yakc_146
L_yakc_148:
	mov	si, word [bp-4]
	add	si, 12
	mov	ax, word [si]
	test	ax, ax
	jne	L_yakc_149
	mov	ax, word [bp-8]
	mov	word [YKRdyList], ax
	jmp	L_yakc_150
L_yakc_149:
	mov	si, word [bp-4]
	add	si, 12
	mov	si, word [si]
	add	si, 10
	mov	ax, word [bp-8]
	mov	word [si], ax
L_yakc_150:
	mov	si, word [bp-4]
	add	si, 12
	mov	di, word [bp-8]
	add	di, 12
	mov	ax, word [si]
	mov	word [di], ax
	mov	si, word [bp-8]
	add	si, 10
	mov	ax, word [bp-4]
	mov	word [si], ax
	mov	si, word [bp-4]
	add	si, 12
	mov	ax, word [bp-8]
	mov	word [si], ax
	mov	si, word [bp-8]
	add	si, 14
	mov	word [si], 0
	mov	ax, word [YKISRCallDepth]
	test	ax, ax
	jne	L_yakc_151
	mov	ax, 1
	push	ax
	call	YKScheduler
	add	sp, 2
L_yakc_151:
	call	YKExitMutex
L_yakc_142:
	mov	sp, bp
	pop	bp
	ret
L_yakc_132:
	push	bp
	mov	bp, sp
	sub	sp, 8
	jmp	L_yakc_133
	ALIGN	2
YKQCreate:
	jmp	L_yakc_153
L_yakc_154:
	call	YKEnterMutex
	mov	word [bp-2], 0
	jmp	L_yakc_156
L_yakc_155:
	inc	word [bp-2]
L_yakc_156:
	mov	ax, word [bp-2]
	mov	cx, 10
	imul	cx
	mov	si, ax
	add	si, YKQueueArray
	mov	ax, word [si]
	test	ax, ax
	jne	L_yakc_155
L_yakc_157:
	mov	ax, word [bp-2]
	mov	cx, 10
	imul	cx
	mov	si, ax
	add	si, YKQueueArray
	mov	ax, word [bp+4]
	mov	word [si], ax
	mov	ax, word [bp-2]
	mov	cx, 10
	imul	cx
	add	ax, YKQueueArray
	mov	si, ax
	add	si, 2
	mov	ax, word [bp+6]
	mov	word [si], ax
	mov	ax, word [bp-2]
	mov	cx, 10
	imul	cx
	add	ax, YKQueueArray
	mov	si, ax
	add	si, 4
	mov	word [si], 0
	mov	ax, word [bp-2]
	mov	cx, 10
	imul	cx
	add	ax, YKQueueArray
	mov	si, ax
	add	si, 6
	mov	word [si], 0
	mov	ax, word [bp-2]
	mov	cx, 10
	imul	cx
	add	ax, YKQueueArray
	mov	si, ax
	add	si, 8
	mov	word [si], 0
	mov	ax, word [bp-2]
	mov	cx, 10
	imul	cx
	add	ax, YKQueueArray
L_yakc_158:
	mov	sp, bp
	pop	bp
	ret
L_yakc_153:
	push	bp
	mov	bp, sp
	push	cx
	jmp	L_yakc_154
	ALIGN	2
YKQPend:
	jmp	L_yakc_160
L_yakc_161:
	call	YKEnterMutex
	mov	si, word [bp+4]
	add	si, 8
	mov	ax, word [si]
	test	ax, ax
	jne	L_yakc_162
	mov	ax, word [YKRdyList]
	mov	word [bp-2], ax
	mov	si, word [bp-2]
	add	si, 10
	mov	ax, word [si]
	mov	word [YKRdyList], ax
	mov	si, word [bp-2]
	add	si, 10
	mov	si, word [si]
	add	si, 12
	mov	word [si], 0
	mov	si, word [bp-2]
	add	si, 10
	mov	ax, word [YKQueueWaitingList]
	mov	word [si], ax
	mov	ax, word [bp-2]
	mov	word [YKQueueWaitingList], ax
	mov	si, word [bp-2]
	add	si, 12
	mov	word [si], 0
	mov	si, word [bp-2]
	add	si, 10
	mov	ax, word [si]
	test	ax, ax
	je	L_yakc_163
	mov	si, word [bp-2]
	add	si, 10
	mov	si, word [si]
	add	si, 12
	mov	ax, word [bp-2]
	mov	word [si], ax
L_yakc_163:
	mov	si, word [bp-2]
	add	si, 16
	mov	ax, word [bp+4]
	mov	word [si], ax
	mov	ax, 1
	push	ax
	call	YKScheduler
	add	sp, 2
L_yakc_162:
	mov	si, word [bp+4]
	add	si, 4
	mov	ax, word [si]
	shl	ax, 1
	mov	si, ax
	mov	di, word [bp+4]
	add	si, word [di]
	mov	ax, word [si]
	mov	word [bp-4], ax
	mov	si, word [bp+4]
	add	si, 8
	mov	ax, word [si]
	dec	ax
	mov	si, word [bp+4]
	add	si, 8
	mov	word [si], ax
	mov	si, word [bp+4]
	add	si, 4
	mov	ax, word [si]
	inc	ax
	mov	si, word [bp+4]
	add	si, 2
	mov	dx, word [si]
	cmp	dx, ax
	jle	L_yakc_164
	mov	si, word [bp+4]
	add	si, 4
	mov	ax, word [si]
	inc	ax
	jmp	L_yakc_165
L_yakc_164:
	xor	ax, ax
L_yakc_165:
	mov	si, word [bp+4]
	add	si, 4
	mov	word [si], ax
	call	YKExitMutex
	mov	ax, word [bp-4]
L_yakc_166:
	mov	sp, bp
	pop	bp
	ret
L_yakc_160:
	push	bp
	mov	bp, sp
	sub	sp, 4
	jmp	L_yakc_161
L_yakc_168:
	DB	"think the queue is full?",0xA,0
	ALIGN	2
YKQPost:
	jmp	L_yakc_169
L_yakc_170:
	call	YKEnterMutex
	mov	si, word [bp+4]
	add	si, 2
	mov	ax, word [si]
	dec	ax
	mov	si, word [bp+4]
	add	si, 8
	mov	dx, word [si]
	cmp	dx, ax
	jne	L_yakc_171
	mov	ax, L_yakc_168
	push	ax
	call	printString
	add	sp, 2
	xor	ax, ax
	jmp	L_yakc_172
L_yakc_171:
	mov	word [bp-4], 0
	mov	ax, word [YKQueueWaitingList]
	mov	word [bp-2], ax
	mov	si, word [bp+4]
	add	si, 6
	mov	ax, word [si]
	shl	ax, 1
	mov	si, ax
	mov	di, word [bp+4]
	add	si, word [di]
	mov	ax, word [bp+6]
	mov	word [si], ax
	mov	si, word [bp+4]
	add	si, 8
	mov	ax, word [si]
	inc	ax
	mov	si, word [bp+4]
	add	si, 8
	mov	word [si], ax
	mov	si, word [bp+4]
	add	si, 6
	mov	ax, word [si]
	inc	ax
	mov	si, word [bp+4]
	add	si, 2
	mov	dx, word [si]
	cmp	dx, ax
	jle	L_yakc_173
	mov	si, word [bp+4]
	add	si, 6
	mov	ax, word [si]
	inc	ax
	jmp	L_yakc_174
L_yakc_173:
	xor	ax, ax
L_yakc_174:
	mov	si, word [bp+4]
	add	si, 6
	mov	word [si], ax
	jmp	L_yakc_176
L_yakc_175:
	mov	si, word [bp-2]
	add	si, 16
	mov	ax, word [bp+4]
	cmp	ax, word [si]
	jne	L_yakc_178
	mov	ax, word [bp-4]
	test	ax, ax
	jne	L_yakc_179
	mov	ax, word [bp-2]
	mov	word [bp-4], ax
	jmp	L_yakc_180
L_yakc_179:
	mov	si, word [bp-2]
	add	si, 6
	mov	di, word [bp-4]
	add	di, 6
	mov	ax, word [di]
	cmp	ax, word [si]
	jle	L_yakc_181
	mov	ax, word [bp-2]
	mov	word [bp-4], ax
L_yakc_181:
L_yakc_180:
L_yakc_178:
	mov	si, word [bp-2]
	add	si, 10
	mov	ax, word [si]
	mov	word [bp-2], ax
L_yakc_176:
	mov	ax, word [bp-2]
	test	ax, ax
	jne	L_yakc_175
L_yakc_177:
	mov	ax, word [bp-4]
	test	ax, ax
	jne	L_yakc_182
	call	YKExitMutex
	mov	ax, 1
	jmp	L_yakc_172
L_yakc_182:
	mov	si, word [bp-4]
	add	si, 12
	mov	ax, word [si]
	test	ax, ax
	jne	L_yakc_183
	mov	si, word [bp-4]
	add	si, 10
	mov	ax, word [si]
	mov	word [YKQueueWaitingList], ax
	jmp	L_yakc_184
L_yakc_183:
	mov	si, word [bp-4]
	add	si, 10
	mov	di, word [bp-4]
	add	di, 12
	mov	di, word [di]
	add	di, 10
	mov	ax, word [si]
	mov	word [di], ax
L_yakc_184:
	mov	si, word [bp-4]
	add	si, 10
	mov	ax, word [si]
	test	ax, ax
	je	L_yakc_185
	mov	si, word [bp-4]
	add	si, 12
	mov	di, word [bp-4]
	add	di, 10
	mov	di, word [di]
	add	di, 12
	mov	ax, word [si]
	mov	word [di], ax
L_yakc_185:
	mov	ax, word [YKRdyList]
	mov	word [bp-6], ax
	jmp	L_yakc_187
L_yakc_186:
	mov	si, word [bp-6]
	add	si, 10
	mov	ax, word [si]
	mov	word [bp-6], ax
L_yakc_187:
	mov	si, word [bp-6]
	add	si, 6
	mov	di, word [bp-4]
	add	di, 6
	mov	ax, word [di]
	cmp	ax, word [si]
	jg	L_yakc_186
L_yakc_188:
	mov	si, word [bp-6]
	add	si, 12
	mov	ax, word [si]
	test	ax, ax
	jne	L_yakc_189
	mov	ax, word [bp-4]
	mov	word [YKRdyList], ax
	jmp	L_yakc_190
L_yakc_189:
	mov	si, word [bp-6]
	add	si, 12
	mov	si, word [si]
	add	si, 10
	mov	ax, word [bp-4]
	mov	word [si], ax
L_yakc_190:
	mov	si, word [bp-6]
	add	si, 12
	mov	di, word [bp-4]
	add	di, 12
	mov	ax, word [si]
	mov	word [di], ax
	mov	si, word [bp-4]
	add	si, 10
	mov	ax, word [bp-6]
	mov	word [si], ax
	mov	si, word [bp-6]
	add	si, 12
	mov	ax, word [bp-4]
	mov	word [si], ax
	mov	si, word [bp-4]
	add	si, 16
	mov	word [si], 0
	mov	ax, word [YKISRCallDepth]
	test	ax, ax
	jne	L_yakc_191
	mov	ax, 1
	push	ax
	call	YKScheduler
	add	sp, 2
L_yakc_191:
L_yakc_192:
	call	YKExitMutex
	mov	ax, 1
L_yakc_172:
	mov	sp, bp
	pop	bp
	ret
L_yakc_169:
	push	bp
	mov	bp, sp
	sub	sp, 6
	jmp	L_yakc_170
L_yakc_198:
	DB	0x9,"count= ",0
L_yakc_197:
	DB	0x9,"next_slot= ",0
L_yakc_196:
	DB	0x9,"oldest= ",0
L_yakc_195:
	DB	0x9,"length= ",0
L_yakc_194:
	DB	"printing queue ",0
	ALIGN	2
printQueue:
	jmp	L_yakc_199
L_yakc_200:
	call	YKEnterMutex
	mov	ax, L_yakc_194
	push	ax
	call	printString
	add	sp, 2
	push	word [bp+4]
	call	printInt
	add	sp, 2
	mov	ax, L_yakc_195
	push	ax
	call	printString
	add	sp, 2
	mov	si, word [bp+4]
	add	si, 2
	push	word [si]
	call	printInt
	add	sp, 2
	mov	ax, L_yakc_196
	push	ax
	call	printString
	add	sp, 2
	mov	si, word [bp+4]
	add	si, 4
	push	word [si]
	call	printInt
	add	sp, 2
	mov	ax, L_yakc_197
	push	ax
	call	printString
	add	sp, 2
	mov	si, word [bp+4]
	add	si, 6
	push	word [si]
	call	printInt
	add	sp, 2
	mov	ax, L_yakc_198
	push	ax
	call	printString
	add	sp, 2
	mov	si, word [bp+4]
	add	si, 8
	push	word [si]
	call	printInt
	add	sp, 2
	mov	ax, (L_yakc_32+33)
	push	ax
	call	printString
	add	sp, 2
	call	YKExitMutex
	mov	sp, bp
	pop	bp
	ret
L_yakc_199:
	push	bp
	mov	bp, sp
	push	cx
	jmp	L_yakc_200
	ALIGN	2
YKCtxSwCount:
	TIMES	2 db 0
YKIdleCount:
	TIMES	2 db 0
YKTickNum:
	TIMES	2 db 0
YKRdyList:
	TIMES	2 db 0
YKSuspList:
	TIMES	2 db 0
YKSemaphoreWaitingList:
	TIMES	2 db 0
YKAvailTCBList:
	TIMES	2 db 0
YKTCBArray:
	TIMES	240 db 0
idleStack:
	TIMES	512 db 0
YKISRCallDepth:
	TIMES	2 db 0
YKSEMArray:
	TIMES	4 db 0
YKQueueArray:
	TIMES	40 db 0
YKEVENTArray:
	TIMES	8 db 0
YKQueueWaitingList:
	TIMES	2 db 0
YKEventBlockingList:
	TIMES	2 db 0
YKCurrentlyExecuting:
	TIMES	2 db 0
