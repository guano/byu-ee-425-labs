 LINE  | ADDRESS  | HEX DUMP                  | ASSEMBLY
-------|----------|---------------------------|----------------------------
     1 |          |                           |         CPU     8086
     2 |          |                           |         ORG     0h
     3 |          |                           | InterruptVectorTable:
     4 |          |                           |         ; Internal x86 Interrupts:
     5 | 00000000 | 00000000                  |         dd      0 ; Reserved (Div err)  ; Int 00h
     6 | 00000004 | 00000000                  |         dd      0 ; Reserved (Step)     ; Int 01h
     7 | 00000008 | 00000000                  |         dd      0 ; Reserved (NMI)      ; Int 02h
     8 | 0000000C | 00000000                  |         dd      0 ; Reserved (Break)    ; Int 03h
     9 | 00000010 | 00000000                  |         dd      0 ; Reserved (Overflow) ; Int 04h
    10 | 00000014 | 00000000                  |         dd      0                       ; Int 05h
    11 | 00000018 | 00000000                  |         dd      0                       ; Int 06h
    12 | 0000001C | 00000000                  |         dd      0                       ; Int 07h
    13 |          |                           |         ; Hardware Interrupts:
    14 | 00000020 | [86080000]                |         dd      isr_reset ; Reset               ; Int 08h (IRQ 0)
    15 | 00000024 | [E4080000]                |         dd      isr_tick ; Tick                ; Int 09h (IRQ 1)
    16 | 00000028 | [B5080000]                |         dd      isr_keypress ; Keyboard            ; Int 0Ah (IRQ 2)
    17 | 0000002C | 00000000                  |         dd      0 ; Simptris Game Over  ; Int 0Bh (IRQ 3)
    18 | 00000030 | 00000000                  |         dd      0 ; Simptris New Piece  ; Int 0Ch (IRQ 4)
    19 | 00000034 | 00000000                  |         dd      0 ; Simptris Received   ; Int 0Dh (IRQ 5)
    20 | 00000038 | 00000000                  |         dd      0 ; Simptris Touchdown  ; Int 0Eh (IRQ 6)
    21 | 0000003C | 00000000                  |         dd      0 ; Simptris Clear      ; Int 0Fh (IRQ 7)
    22 |          |                           |         ; Software Interrupts:
    23 | 00000040 | 00000000                  |         dd      0 ; Reserved (PC BIOS)  ; Int 10h
    24 | 00000044 | 00000000                  |         dd      0                       ; Int 11h
    25 | 00000048 | 00000000                  |         dd      0                       ; Int 12h
    26 | 0000004C | 00000000                  |         dd      0                       ; Int 13h
    27 | 00000050 | 00000000                  |         dd      0                       ; Int 14h
    28 | 00000054 | 00000000                  |         dd      0                       ; Int 15h
    29 | 00000058 | 00000000                  |         dd      0                       ; Int 16h
    30 | 0000005C | 00000000                  |         dd      0                       ; Int 17h
    31 | 00000060 | 00000000                  |         dd      0                       ; Int 18h
    32 | 00000064 | 00000000                  |         dd      0                       ; Int 19h
    33 | 00000068 | 00000000                  |         dd      0                       ; Int 1Ah
    34 | 0000006C | 00000000                  |         dd      0                       ; Int 1Bh
    35 | 00000070 | 00000000                  |         dd      0                       ; Int 1Ch
    36 | 00000074 | 00000000                  |         dd      0                       ; Int 1Dh
    37 | 00000078 | 00000000                  |         dd      0                       ; Int 1Eh
    38 | 0000007C | 00000000                  |         dd      0                       ; Int 1Fh
    39 | 00000080 | 00000000                  |         dd      0                       ; Int 20h
    40 | 00000084 | 00000000                  |         dd      0 ; Reserved (DOS)      ; Int 21h
    41 | 00000088 | 00000000                  |         dd      0 ; Simptris Services   ; Int 22h
    42 | 0000008C | 00000000                  |         dd      0                       ; Int 23h
    43 | 00000090 | 00000000                  |         dd      0                       ; Int 24h
    44 | 00000094 | 00000000                  |         dd      0                       ; Int 25h
    45 | 00000098 | 00000000                  |         dd      0                       ; Int 26h
    46 | 0000009C | 00000000                  |         dd      0                       ; Int 27h
    47 | 000000A0 | 00000000                  |         dd      0                       ; Int 28h
    48 | 000000A4 | 00000000                  |         dd      0                       ; Int 29h
    49 | 000000A8 | 00000000                  |         dd      0                       ; Int 2Ah
    50 | 000000AC | 00000000                  |         dd      0                       ; Int 2Bh
    51 | 000000B0 | 00000000                  |         dd      0                       ; Int 2Ch
    52 | 000000B4 | 00000000                  |         dd      0                       ; Int 2Dh
    53 | 000000B8 | 00000000                  |         dd      0                       ; Int 2Eh
    54 | 000000BC | 00000000                  |         dd      0                       ; Int 2Fh
    55 |          |                           | KeyBuffer:                              ; Address 0xC0
    56 | 000000C0 | 0000                      |         dw      0
    57 |          |                           | NewPieceType:                           ; Address 0xC2
    58 | 000000C2 | 0000                      |         dw      0
    59 |          |                           | NewPieceID:                             ; Address 0xC4
    60 | 000000C4 | 0000                      |         dw      0
    61 |          |                           | NewPieceOrientation:                    ; Address 0xC6
    62 | 000000C6 | 0000                      |         dw      0
    63 |          |                           | NewPieceColumn:                         ; Address 0xC8
    64 | 000000C8 | 0000                      |         dw      0
    65 |          |                           | TouchdownID:                            ; Address 0xCA
    66 | 000000CA | 0000                      | 	dw	0
    67 |          |                           | ScreenBitMap0:                          ; Address 0xCC
    68 | 000000CC | 0000                      |         dw      0
    69 |          |                           | ScreenBitMap1:
    70 | 000000CE | 0000                      |         dw      0
    71 |          |                           | ScreenBitMap2:
    72 | 000000D0 | 0000                      |         dw      0
    73 |          |                           | ScreenBitMap3:
    74 | 000000D2 | 0000                      |         dw      0
    75 |          |                           | ScreenBitMap4:
    76 | 000000D4 | 0000                      |         dw      0
    77 |          |                           | ScreenBitMap5:
    78 | 000000D6 | 0000                      |         dw      0
    79 | 000000D8 | 00<rept>                  | TIMES   100h-($-$$) db  0               ; Fill up to (but not including) address 100h with 0
    80 | 00000100 | E9AF11                    | 	jmp	main
    81 |          |                           | ; This file contains support routines for 32-bit on the 8086.
    82 |          |                           | ; It is intended for use code generated by the C86 compiler.
    83 |          |                           | ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    84 |          |                           | SR_asldiv:			; l1 /= l2
    85 | 00000103 | 55                        | 	push	bp
    86 | 00000104 | 89E5                      | 	mov	bp,sp
    87 | 00000106 | 53                        | 	push	bx
    88 | 00000107 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
    89 | 0000010A | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
    90 | 0000010D | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
    91 | 00000110 | FF7702                    | 	push	word [bx+2]	; Push hi l1
    92 | 00000113 | FF37                      | 	push	word [bx]	; Push lo l1
    93 | 00000115 | E83D01                    | 	call	SR_ldiv
    94 | 00000118 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
    95 | 0000011B | 895702                    | 	mov	[bx+2],dx	; Store result
    96 | 0000011E | 8907                      | 	mov	[bx],ax
    97 | 00000120 | 5B                        | 	pop	bx
    98 | 00000121 | 5D                        | 	pop	bp
    99 | 00000122 | C3                        | 	ret
   100 |          |                           | SR_aslmod:			; l1 %= l2
   101 | 00000123 | 55                        | 	push	bp
   102 | 00000124 | 89E5                      | 	mov	bp,sp
   103 | 00000126 | 53                        | 	push	bx
   104 | 00000127 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
   105 | 0000012A | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
   106 | 0000012D | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
   107 | 00000130 | FF7702                    | 	push	word [bx+2]	; Push hi l1
   108 | 00000133 | FF37                      | 	push	word [bx]	; Push lo l1
   109 | 00000135 | E82C01                    | 	call	SR_lmod
   110 | 00000138 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
   111 | 0000013B | 895702                    | 	mov	[bx+2],dx	; Store result
   112 | 0000013E | 8907                      | 	mov	[bx],ax
   113 | 00000140 | 5B                        | 	pop	bx
   114 | 00000141 | 5D                        | 	pop	bp
   115 | 00000142 | C3                        | 	ret
   116 |          |                           | SR_aslmul:			; l1 *= l2
   117 | 00000143 | 55                        | 	push	bp
   118 | 00000144 | 89E5                      | 	mov	bp,sp
   119 | 00000146 | 53                        | 	push	bx
   120 | 00000147 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
   121 | 0000014A | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
   122 | 0000014D | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
   123 | 00000150 | FF7702                    | 	push	word [bx+2]	; Push hi l1
   124 | 00000153 | FF37                      | 	push	word [bx]	; Push lo l1
   125 | 00000155 | E84002                    | 	call	SR_lmul
   126 | 00000158 | 83C408                    | 	add	sp,8
   127 | 0000015B | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
   128 | 0000015E | 895702                    | 	mov	[bx+2],dx	; Store result
   129 | 00000161 | 8907                      | 	mov	[bx],ax
   130 | 00000163 | 5B                        | 	pop	bx
   131 | 00000164 | 5D                        | 	pop	bp
   132 | 00000165 | C3                        | 	ret
   133 |          |                           | SR_aslshl:			; l1 <<= l2
   134 | 00000166 | 55                        | 	push	bp
   135 | 00000167 | 89E5                      | 	mov	bp,sp
   136 | 00000169 | 53                        | 	push	bx
   137 | 0000016A | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
   138 | 0000016D | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
   139 | 00000170 | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
   140 | 00000173 | FF7702                    | 	push	word [bx+2]	; Push hi l1
   141 | 00000176 | FF37                      | 	push	word [bx]	; Push lo l1
   142 | 00000178 | E88801                    | 	call	SR_lshl
   143 | 0000017B | 83C408                    | 	add	sp,8
   144 | 0000017E | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
   145 | 00000181 | 895702                    | 	mov	[bx+2],dx	; Store result
   146 | 00000184 | 8907                      | 	mov	[bx],ax
   147 | 00000186 | 5B                        | 	pop	bx
   148 | 00000187 | 5D                        | 	pop	bp
   149 | 00000188 | C3                        | 	ret
   150 |          |                           | SR_aslshr:			; l1 >>= l2
   151 | 00000189 | 55                        | 	push	bp
   152 | 0000018A | 89E5                      | 	mov	bp,sp
   153 | 0000018C | 53                        | 	push	bx
   154 | 0000018D | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
   155 | 00000190 | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
   156 | 00000193 | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
   157 | 00000196 | FF7702                    | 	push	word [bx+2]	; Push hi l1
   158 | 00000199 | FF37                      | 	push	word [bx]	; Push lo l1
   159 | 0000019B | E89701                    | 	call	SR_lshr
   160 | 0000019E | 83C408                    | 	add	sp,8
   161 | 000001A1 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
   162 | 000001A4 | 895702                    | 	mov	[bx+2],dx	; Store result
   163 | 000001A7 | 8907                      | 	mov	[bx],ax
   164 | 000001A9 | 5B                        | 	pop	bx
   165 | 000001AA | 5D                        | 	pop	bp
   166 | 000001AB | C3                        | 	ret
   167 |          |                           | 
   168 |          |                           | 
   169 |          |                           | SR_asuldiv:			; u1 /= u2
   170 | 000001AC | 55                        | 	push	bp
   171 | 000001AD | 89E5                      | 	mov	bp,sp
   172 | 000001AF | 53                        | 	push	bx
   173 | 000001B0 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   174 | 000001B3 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   175 | 000001B6 | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   176 | 000001B9 | FF7702                    | 	push	word [bx+2]	; Push hi u1
   177 | 000001BC | FF37                      | 	push	word [bx]	; Push lo u1
   178 | 000001BE | E89B00                    | 	call	SR_uldiv
   179 | 000001C1 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   180 | 000001C4 | 895702                    | 	mov	[bx+2],dx	; Store result
   181 | 000001C7 | 8907                      | 	mov	[bx],ax
   182 | 000001C9 | 5B                        | 	pop	bx
   183 | 000001CA | 5D                        | 	pop	bp
   184 | 000001CB | C3                        | 	ret
   185 |          |                           | SR_asilmod:			; u1 %= u2
   186 | 000001CC | 55                        | 	push	bp
   187 | 000001CD | 89E5                      | 	mov	bp,sp
   188 | 000001CF | 53                        | 	push	bx
   189 | 000001D0 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   190 | 000001D3 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   191 | 000001D6 | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   192 | 000001D9 | FF7702                    | 	push	word [bx+2]	; Push hi u1
   193 | 000001DC | FF37                      | 	push	word [bx]	; Push lo u1
   194 | 000001DE | E88B00                    | 	call	SR_ilmod
   195 | 000001E1 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   196 | 000001E4 | 895702                    | 	mov	[bx+2],dx	; Store result
   197 | 000001E7 | 8907                      | 	mov	[bx],ax
   198 | 000001E9 | 5B                        | 	pop	bx
   199 | 000001EA | 5D                        | 	pop	bp
   200 | 000001EB | C3                        | 	ret
   201 |          |                           | SR_asulmul:			; u1 *= u2
   202 | 000001EC | 55                        | 	push	bp
   203 | 000001ED | 89E5                      | 	mov	bp,sp
   204 | 000001EF | 53                        | 	push	bx
   205 | 000001F0 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   206 | 000001F3 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   207 | 000001F6 | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   208 | 000001F9 | FF7702                    | 	push	word [bx+2]	; Push hi u1
   209 | 000001FC | FF37                      | 	push	word [bx]	; Push lo u1
   210 | 000001FE | E89701                    | 	call	SR_ulmul
   211 | 00000201 | 83C408                    | 	add	sp,8
   212 | 00000204 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   213 | 00000207 | 895702                    | 	mov	[bx+2],dx	; Store result
   214 | 0000020A | 8907                      | 	mov	[bx],ax
   215 | 0000020C | 5B                        | 	pop	bx
   216 | 0000020D | 5D                        | 	pop	bp
   217 | 0000020E | C3                        | 	ret
   218 |          |                           | SR_asulshl:			; u1 << u2
   219 | 0000020F | 55                        | 	push	bp
   220 | 00000210 | 89E5                      | 	mov	bp,sp
   221 | 00000212 | 53                        | 	push	bx
   222 | 00000213 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   223 | 00000216 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   224 | 00000219 | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   225 | 0000021C | FF7702                    | 	push	word [bx+2]	; Push hi u1
   226 | 0000021F | FF37                      | 	push	word [bx]	; Push lo u1
   227 | 00000221 | E8DF00                    | 	call	SR_ulshl
   228 | 00000224 | 83C408                    | 	add	sp,8
   229 | 00000227 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   230 | 0000022A | 895702                    | 	mov	[bx+2],dx	; Store result
   231 | 0000022D | 8907                      | 	mov	[bx],ax
   232 | 0000022F | 5B                        | 	pop	bx
   233 | 00000230 | 5D                        | 	pop	bp
   234 | 00000231 | C3                        | 	ret
   235 |          |                           | SR_asulshr:			; u1 >> u2
   236 | 00000232 | 55                        | 	push	bp
   237 | 00000233 | 89E5                      | 	mov	bp,sp
   238 | 00000235 | 53                        | 	push	bx
   239 | 00000236 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   240 | 00000239 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   241 | 0000023C | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   242 | 0000023F | FF7702                    | 	push	word [bx+2]	; Push hi u1
   243 | 00000242 | FF37                      | 	push	word [bx]	; Push lo u1
   244 | 00000244 | E81F01                    | 	call	SR_ulshr
   245 | 00000247 | 83C408                    | 	add	sp,8
   246 | 0000024A | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   247 | 0000024D | 895702                    | 	mov	[bx+2],dx	; Store result
   248 | 00000250 | 8907                      | 	mov	[bx],ax
   249 | 00000252 | 5B                        | 	pop	bx
   250 | 00000253 | 5D                        | 	pop	bp
   251 | 00000254 | C3                        | 	ret
   252 |          |                           | 
   253 |          |                           | 
   254 |          |                           | ; Main 32-bit routines begin here:
   255 |          |                           | 
   256 |          |                           | SR_ldiv:	; N_LDIV@
   257 | 00000255 | 59                        | 	pop    cx
   258 | 00000256 | 0E                        | 	push   cs
   259 | 00000257 | 51                        | 	push   cx
   260 |          |                           | 	; LDIV@
   261 | 00000258 | 31C9                      | 	xor    cx,cx
   262 | 0000025A | EB16                      | 	jmp    LSR_01
   263 |          |                           | SR_uldiv:	; N_LUDIV@
   264 | 0000025C | 59                        | 	pop    cx
   265 | 0000025D | 0E                        | 	push   cs
   266 | 0000025E | 51                        | 	push   cx
   267 |          |                           | 	; F_LUDIV@
   268 | 0000025F | B90100                    | 	mov    cx,0001
   269 | 00000262 | EB0E                      | 	jmp    LSR_01
   270 |          |                           | SR_lmod:	; N_LMOD@
   271 | 00000264 | 59                        | 	pop    cx
   272 | 00000265 | 0E                        | 	push   cs
   273 | 00000266 | 51                        | 	push   cx
   274 |          |                           | 	; F_LMOD@
   275 | 00000267 | B90200                    | 	mov    cx,0002
   276 | 0000026A | EB06                      | 	jmp    LSR_01
   277 |          |                           | SR_ilmod:	; N_LUMOD@
   278 | 0000026C | 59                        | 	pop    cx
   279 | 0000026D | 0E                        | 	push   cs
   280 | 0000026E | 51                        | 	push   cx
   281 |          |                           | 	; LUMOD@
   282 | 0000026F | B90300                    | 	mov    cx,0003
   283 |          |                           | LSR_01:
   284 | 00000272 | 55                        | 	push   bp
   285 | 00000273 | 56                        | 	push   si
   286 | 00000274 | 57                        | 	push   di
   287 | 00000275 | 89E5                      | 	mov    bp,sp
   288 | 00000277 | 89CF                      | 	mov    di,cx
   289 | 00000279 | 8B460A                    | 	mov    ax,[bp+0Ah]
   290 | 0000027C | 8B560C                    | 	mov    dx,[bp+0Ch]
   291 | 0000027F | 8B5E0E                    | 	mov    bx,[bp+0Eh]
   292 | 00000282 | 8B4E10                    | 	mov    cx,[bp+10h]
   293 | 00000285 | 09C9                      | 	or     cx,cx
   294 | 00000287 | 7508                      | 	jne    LSR_02
   295 | 00000289 | 09D2                      | 	or     dx,dx
   296 | 0000028B | 7469                      | 	je     LSR_10
   297 | 0000028D | 09DB                      | 	or     bx,bx
   298 | 0000028F | 7465                      | 	je     LSR_10
   299 |          |                           | LSR_02:
   300 | 00000291 | F7C70100                  | 	test   di,0001
   301 | 00000295 | 751C                      | 	jne    LSR_04
   302 | 00000297 | 09D2                      | 	or     dx,dx
   303 | 00000299 | 790A                      | 	jns    LSR_03
   304 | 0000029B | F7DA                      | 	neg    dx
   305 | 0000029D | F7D8                      | 	neg    ax
   306 | 0000029F | 83DA00                    | 	sbb    dx,0000
   307 | 000002A2 | 83CF0C                    | 	or     di,000Ch
   308 |          |                           | LSR_03:
   309 | 000002A5 | 09C9                      | 	or     cx,cx
   310 | 000002A7 | 790A                      | 	jns    LSR_04
   311 | 000002A9 | F7D9                      | 	neg    cx
   312 | 000002AB | F7DB                      | 	neg    bx
   313 | 000002AD | 83D900                    | 	sbb    cx,0000
   314 | 000002B0 | 83F704                    | 	xor    di,0004
   315 |          |                           | LSR_04:
   316 | 000002B3 | 89CD                      | 	mov    bp,cx
   317 | 000002B5 | B92000                    | 	mov    cx,0020h
   318 | 000002B8 | 57                        | 	push   di
   319 | 000002B9 | 31FF                      | 	xor    di,di
   320 | 000002BB | 31F6                      | 	xor    si,si
   321 |          |                           | LSR_05:
   322 | 000002BD | D1E0                      | 	shl    ax,1
   323 | 000002BF | D1D2                      | 	rcl    dx,1
   324 | 000002C1 | D1D6                      | 	rcl    si,1
   325 | 000002C3 | D1D7                      | 	rcl    di,1
   326 | 000002C5 | 39EF                      | 	cmp    di,bp
   327 | 000002C7 | 720B                      | 	jb     LSR_07
   328 | 000002C9 | 7704                      | 	ja     LSR_06
   329 | 000002CB | 39DE                      | 	cmp    si,bx
   330 | 000002CD | 7205                      | 	jb     LSR_07
   331 |          |                           | LSR_06:
   332 | 000002CF | 29DE                      | 	sub    si,bx
   333 | 000002D1 | 19EF                      | 	sbb    di,bp
   334 | 000002D3 | 40                        | 	inc    ax
   335 |          |                           | LSR_07:
   336 | 000002D4 | E2E7                      | 	loop   LSR_05
   337 | 000002D6 | 5B                        | 	pop    bx
   338 | 000002D7 | F7C30200                  | 	test   bx,0002
   339 | 000002DB | 7406                      | 	je     LSR_08
   340 | 000002DD | 89F0                      | 	mov    ax,si
   341 | 000002DF | 89FA                      | 	mov    dx,di
   342 | 000002E1 | D1EB                      | 	shr    bx,1
   343 |          |                           | LSR_08:
   344 | 000002E3 | F7C30400                  | 	test   bx,0004h
   345 | 000002E7 | 7407                      | 	je     LSR_09
   346 | 000002E9 | F7DA                      | 	neg    dx
   347 | 000002EB | F7D8                      | 	neg    ax
   348 | 000002ED | 83DA00                    | 	sbb    dx,0000
   349 |          |                           | LSR_09:
   350 | 000002F0 | 5F                        | 	pop    di
   351 | 000002F1 | 5E                        | 	pop    si
   352 | 000002F2 | 5D                        | 	pop    bp
   353 | 000002F3 | CA0800                    | 	retf   0008
   354 |          |                           | LSR_10:
   355 | 000002F6 | F7F3                      | 	div    bx
   356 | 000002F8 | F7C70200                  | 	test   di,0002
   357 | 000002FC | 7401                      | 	je     LSR_11
   358 | 000002FE | 92                        | 	xchg   dx,ax
   359 |          |                           | LSR_11:
   360 | 000002FF | 31D2                      | 	xor    dx,dx
   361 | 00000301 | EBED                      | 	jmp    LSR_09
   362 |          |                           | SR_lshl:	; N_LXLSH@
   363 |          |                           | SR_ulshl:
   364 |          |                           | 	; r = a << b
   365 | 00000303 | 5B                        | 	pop    bx
   366 | 00000304 | 0E                        | 	push   cs
   367 | 00000305 | 53                        | 	push   bx
   368 |          |                           | 
   369 | 00000306 | 55                        | 	push   bp
   370 | 00000307 | 89E5                      | 	mov    bp,sp
   371 |          |                           | 
   372 | 00000309 | 51                        | 	push   cx	; C86 doesn't expect use of cx or bx
   373 |          |                           | 
   374 | 0000030A | 8B4606                    | 	mov    ax, [bp+6]	; pop loword(a)
   375 | 0000030D | 8B5608                    | 	mov    dx, [bp+8]	; pop hiword(a)
   376 | 00000310 | 8B4E0A                    | 	mov    cx, [bp+10]	; pop word(b)
   377 |          |                           | 	
   378 |          |                           | 	; LXLSH@
   379 | 00000313 | 80F910                    | 	cmp    cl,10h
   380 | 00000316 | 7312                      | 	jnb    LSR_12
   381 | 00000318 | 89C3                      | 	mov    bx,ax
   382 | 0000031A | D3E0                      | 	shl    ax,cl
   383 | 0000031C | D3E2                      | 	shl    dx,cl
   384 | 0000031E | F6D9                      | 	neg    cl
   385 | 00000320 | 80C110                    | 	add    cl,10h
   386 | 00000323 | D3EB                      | 	shr    bx,cl
   387 | 00000325 | 09DA                      | 	or     dx,bx
   388 | 00000327 | 59                        | 	pop    cx
   389 | 00000328 | 5D                        | 	pop    bp
   390 | 00000329 | CB                        | 	retf
   391 |          |                           | LSR_12:
   392 | 0000032A | 80E910                    | 	sub    cl,10h
   393 | 0000032D | 92                        | 	xchg   dx,ax
   394 | 0000032E | 31C0                      | 	xor    ax,ax
   395 | 00000330 | D3E2                      | 	shl    dx,cl
   396 | 00000332 | 59                        | 	pop    cx
   397 | 00000333 | 5D                        | 	pop    bp
   398 | 00000334 | CB                        | 	retf
   399 |          |                           | SR_lshr:	; N_LXRSH@
   400 |          |                           | 	; r = a >> b
   401 | 00000335 | 5B                        | 	pop    bx
   402 | 00000336 | 0E                        | 	push   cs
   403 | 00000337 | 53                        | 	push   bx
   404 |          |                           | 
   405 | 00000338 | 55                        | 	push   bp
   406 | 00000339 | 89E5                      | 	mov    bp,sp
   407 |          |                           | 
   408 | 0000033B | 51                        | 	push   cx	; C86 doesn't expect use of cx or bx
   409 |          |                           | 
   410 | 0000033C | 8B4606                    |         mov    ax, [bp+6]	; pop loword(a)
   411 | 0000033F | 8B5608                    | 	mov    dx, [bp+8]	; pop hiword(a)
   412 | 00000342 | 8B4E0A                    | 	mov    cx, [bp+10]	; pop word(b)
   413 |          |                           | 	
   414 |          |                           | 	; LXRSH@
   415 | 00000345 | 80F910                    | 	cmp    cl,10h
   416 | 00000348 | 7312                      | 	jnb    LSR_13
   417 | 0000034A | 89D3                      | 	mov    bx,dx
   418 | 0000034C | D3E8                      | 	shr    ax,cl
   419 | 0000034E | D3FA                      | 	sar    dx,cl
   420 | 00000350 | F6D9                      | 	neg    cl
   421 | 00000352 | 80C110                    | 	add    cl,10h
   422 | 00000355 | D3E3                      | 	shl    bx,cl
   423 | 00000357 | 09D8                      | 	or     ax,bx
   424 | 00000359 | 59                        | 	pop    cx
   425 | 0000035A | 5D                        | 	pop    bp
   426 | 0000035B | CB                        | 	retf
   427 |          |                           | LSR_13:
   428 | 0000035C | 80E910                    | 	sub    cl,10h
   429 | 0000035F | 92                        | 	xchg   dx,ax
   430 | 00000360 | 99                        | 	cwd
   431 | 00000361 | D3F8                      | 	sar    ax,cl
   432 | 00000363 | 59                        | 	pop    cx
   433 | 00000364 | 5D                        | 	pop    bp
   434 | 00000365 | CB                        | 	retf
   435 |          |                           | SR_ulshr:	; N_LXURSH@
   436 |          |                           | 	; r = a >> b
   437 | 00000366 | 5B                        | 	pop    bx
   438 | 00000367 | 0E                        | 	push   cs
   439 | 00000368 | 53                        | 	push   bx
   440 |          |                           | 
   441 | 00000369 | 55                        | 	push   bp
   442 | 0000036A | 89E5                      | 	mov    bp,sp
   443 |          |                           | 
   444 | 0000036C | 51                        | 	push   cx	; C86 doesn't expect use of cx or bx
   445 |          |                           | 
   446 | 0000036D | 8B4606                    |         mov    ax, [bp+6]	; pop loword(a)
   447 | 00000370 | 8B5608                    | 	mov    dx, [bp+8]	; pop hiword(a)
   448 | 00000373 | 8B4E0A                    | 	mov    cx, [bp+10]	; pop word(b)
   449 |          |                           | 	
   450 |          |                           | 	; LXURSH@
   451 | 00000376 | 80F910                    | 	cmp    cl,10h
   452 | 00000379 | 7312                      | 	jnb    LSR_14
   453 | 0000037B | 89D3                      | 	mov    bx,dx
   454 | 0000037D | D3E8                      | 	shr    ax,cl
   455 | 0000037F | D3EA                      | 	shr    dx,cl
   456 | 00000381 | F6D9                      | 	neg    cl
   457 | 00000383 | 80C110                    | 	add    cl,10h
   458 | 00000386 | D3E3                      | 	shl    bx,cl
   459 | 00000388 | 09D8                      | 	or     ax,bx
   460 | 0000038A | 59                        | 	pop    cx
   461 | 0000038B | 5D                        | 	pop    bp
   462 | 0000038C | CB                        | 	retf
   463 |          |                           | LSR_14:
   464 | 0000038D | 80E910                    | 	sub    cl,10h
   465 | 00000390 | 92                        | 	xchg   dx,ax
   466 | 00000391 | 31D2                      | 	xor    dx,dx
   467 | 00000393 | D3E8                      | 	shr    ax,cl
   468 | 00000395 | 59                        | 	pop    cx
   469 | 00000396 | 5D                        | 	pop    bp
   470 | 00000397 | CB                        | 	retf
   471 |          |                           | SR_lmul:	; N_LXMUL@
   472 |          |                           | SR_ulmul:
   473 |          |                           | 	; r = a * b
   474 | 00000398 | 55                        | 	push   bp
   475 | 00000399 | 56                        | 	push   si
   476 | 0000039A | 89E5                      | 	mov    bp,sp
   477 |          |                           | 
   478 | 0000039C | 51                        | 	push   cx	; C86 doesn't expect use of cx or bx
   479 | 0000039D | 53                        | 	push   bx
   480 |          |                           | 
   481 | 0000039E | 8B5E06                    |         mov    bx, [bp+6]	; pop loword(a)
   482 | 000003A1 | 8B4E08                    | 	mov    cx, [bp+8]	; pop hiword(a)
   483 | 000003A4 | 8B460A                    | 	mov    ax, [bp+10]	; pop loword(b)
   484 | 000003A7 | 8B560C                    | 	mov    dx, [bp+12]	; pop hiword(b)
   485 |          |                           | 	
   486 | 000003AA | 96                        | 	xchg   si,ax
   487 | 000003AB | 92                        | 	xchg   dx,ax
   488 | 000003AC | 85C0                      | 	test   ax,ax
   489 | 000003AE | 7402                      | 	je     LSR_15
   490 | 000003B0 | F7E3                      | 	mul    bx
   491 |          |                           | LSR_15:
   492 | 000003B2 | E305                      | 	jcxz   LSR_16
   493 | 000003B4 | 91                        | 	xchg   cx,ax
   494 | 000003B5 | F7E6                      | 	mul    si
   495 | 000003B7 | 01C8                      | 	add    ax,cx
   496 |          |                           | LSR_16:
   497 | 000003B9 | 96                        | 	xchg   si,ax
   498 | 000003BA | F7E3                      | 	mul    bx
   499 | 000003BC | 01F2                      | 	add    dx,si
   500 | 000003BE | 5B                        | 	pop    bx
   501 | 000003BF | 59                        | 	pop    cx
   502 | 000003C0 | 5E                        | 	pop    si
   503 | 000003C1 | 5D                        | 	pop    bp
   504 | 000003C2 | C3                        | 	ret
   505 |          |                           | 
   506 |          |                           | ; Generated by c86 (BYU-NASM) 5.1 (beta) from clib.c
   507 |          |                           | 	CPU	8086
   508 | 000003C3 | 90                        | 	ALIGN	2
   509 | 000003C4 | E9EB0E                    | 	jmp	main	; Jump to program start
   510 |          |                           | new_line:
   511 | 000003C7 | 0D0A24                    | 	db	13,10,36
   512 |          |                           | 	ALIGN	2
   513 |          |                           | signalEOI:
   514 | 000003CA | EB08                      | 	jmp	L_clib_1
   515 |          |                           | L_clib_2:
   516 | 000003CC | B020                      | 	mov	al, 0x20
   517 | 000003CE | E620                      | 	out	0x20, al
   518 | 000003D0 | 89EC                      | 	mov	sp, bp
   519 | 000003D2 | 5D                        | 	pop	bp
   520 | 000003D3 | C3                        | 	ret
   521 |          |                           | L_clib_1:
   522 | 000003D4 | 55                        | 	push	bp
   523 | 000003D5 | 89E5                      | 	mov	bp, sp
   524 | 000003D7 | EBF3                      | 	jmp	L_clib_2
   525 | 000003D9 | 90                        | 	ALIGN	2
   526 |          |                           | exit:
   527 | 000003DA | EB0B                      | 	jmp	L_clib_4
   528 |          |                           | L_clib_5:
   529 | 000003DC | B44C                      | 	mov	ah, 4Ch
   530 | 000003DE | 8A4604                    | 	mov	al, [bp+4]
   531 | 000003E1 | CD21                      | 	int	21h
   532 | 000003E3 | 89EC                      | 	mov	sp, bp
   533 | 000003E5 | 5D                        | 	pop	bp
   534 | 000003E6 | C3                        | 	ret
   535 |          |                           | L_clib_4:
   536 | 000003E7 | 55                        | 	push	bp
   537 | 000003E8 | 89E5                      | 	mov	bp, sp
   538 | 000003EA | EBF0                      | 	jmp	L_clib_5
   539 |          |                           | 	ALIGN	2
   540 |          |                           | print:
   541 | 000003EC | EB11                      | 	jmp	L_clib_7
   542 |          |                           | L_clib_8:
   543 | 000003EE | B440                      | 	mov	ah, 40h
   544 | 000003F0 | BB0100                    | 	mov	bx, 1
   545 | 000003F3 | 8B4E06                    | 	mov	cx, [bp+6]
   546 | 000003F6 | 8B5604                    | 	mov	dx, [bp+4]
   547 | 000003F9 | CD21                      | 	int	21h
   548 | 000003FB | 89EC                      | 	mov	sp, bp
   549 | 000003FD | 5D                        | 	pop	bp
   550 | 000003FE | C3                        | 	ret
   551 |          |                           | L_clib_7:
   552 | 000003FF | 55                        | 	push	bp
   553 | 00000400 | 89E5                      | 	mov	bp, sp
   554 | 00000402 | EBEA                      | 	jmp	L_clib_8
   555 |          |                           | 	ALIGN	2
   556 |          |                           | printChar:
   557 | 00000404 | EB0B                      | 	jmp	L_clib_10
   558 |          |                           | L_clib_11:
   559 | 00000406 | B402                      | 	mov	ah, 2
   560 | 00000408 | 8A5604                    | 	mov	dl, [bp+4]
   561 | 0000040B | CD21                      | 	int	21h
   562 | 0000040D | 89EC                      | 	mov	sp, bp
   563 | 0000040F | 5D                        | 	pop	bp
   564 | 00000410 | C3                        | 	ret
   565 |          |                           | L_clib_10:
   566 | 00000411 | 55                        | 	push	bp
   567 | 00000412 | 89E5                      | 	mov	bp, sp
   568 | 00000414 | EBF0                      | 	jmp	L_clib_11
   569 |          |                           | 	ALIGN	2
   570 |          |                           | printNewLine:
   571 | 00000416 | EB0B                      | 	jmp	L_clib_13
   572 |          |                           | L_clib_14:
   573 | 00000418 | B409                      | 	mov	ah, 9
   574 | 0000041A | BA[C703]                  | 	mov	dx, new_line
   575 | 0000041D | CD21                      | 	int	21h
   576 | 0000041F | 89EC                      | 	mov	sp, bp
   577 | 00000421 | 5D                        | 	pop	bp
   578 | 00000422 | C3                        | 	ret
   579 |          |                           | L_clib_13:
   580 | 00000423 | 55                        | 	push	bp
   581 | 00000424 | 89E5                      | 	mov	bp, sp
   582 | 00000426 | EBF0                      | 	jmp	L_clib_14
   583 |          |                           | 	ALIGN	2
   584 |          |                           | printString:
   585 | 00000428 | EB1C                      | 	jmp	L_clib_16
   586 |          |                           | L_clib_17:
   587 | 0000042A | 31F6                      | 	xor	si,si
   588 | 0000042C | 8B5E04                    | 	mov	bx, [bp+4]
   589 | 0000042F | EB01                      | 	jmp	printString2
   590 |          |                           | 	printString1:
   591 | 00000431 | 46                        | 	inc	si
   592 |          |                           | 	printString2:
   593 | 00000432 | 803800                    | 	cmp	byte [bx+si],0
   594 | 00000435 | 75FA                      | 	jne	printString1
   595 | 00000437 | 89DA                      | 	mov	dx, bx
   596 | 00000439 | 89F1                      | 	mov	cx, si
   597 | 0000043B | B440                      | 	mov	ah, 40h
   598 | 0000043D | BB0100                    | 	mov	bx, 1
   599 | 00000440 | CD21                      | 	int	21h
   600 | 00000442 | 89EC                      | 	mov	sp, bp
   601 | 00000444 | 5D                        | 	pop	bp
   602 | 00000445 | C3                        | 	ret
   603 |          |                           | L_clib_16:
   604 | 00000446 | 55                        | 	push	bp
   605 | 00000447 | 89E5                      | 	mov	bp, sp
   606 | 00000449 | 51                        | 	push	cx
   607 | 0000044A | EBDE                      | 	jmp	L_clib_17
   608 |          |                           | 	ALIGN	2
   609 |          |                           | printInt:
   610 | 0000044C | E99500                    | 	jmp	L_clib_19
   611 |          |                           | L_clib_20:
   612 | 0000044F | C746FE0000                | 	mov	word [bp-2], 0
   613 | 00000454 | C746FC1027                | 	mov	word [bp-4], 10000
   614 | 00000459 | 837E0400                  | 	cmp	word [bp+4], 0
   615 | 0000045D | 7D0F                      | 	jge	L_clib_21
   616 | 0000045F | C646F62D                  | 	mov	byte [bp-10], 45
   617 | 00000463 | FF46FE                    | 	inc	word [bp-2]
   618 | 00000466 | 8B4604                    | 	mov	ax, word [bp+4]
   619 | 00000469 | F7D8                      | 	neg	ax
   620 | 0000046B | 894604                    | 	mov	word [bp+4], ax
   621 |          |                           | L_clib_21:
   622 | 0000046E | 8B4604                    | 	mov	ax, word [bp+4]
   623 | 00000471 | 85C0                      | 	test	ax, ax
   624 | 00000473 | 7507                      | 	jne	L_clib_22
   625 | 00000475 | C746FC0100                | 	mov	word [bp-4], 1
   626 | 0000047A | EB19                      | 	jmp	L_clib_23
   627 |          |                           | L_clib_22:
   628 | 0000047C | EB0C                      | 	jmp	L_clib_25
   629 |          |                           | L_clib_24:
   630 | 0000047E | 8B46FC                    | 	mov	ax, word [bp-4]
   631 | 00000481 | 99                        | 	cwd
   632 | 00000482 | B90A00                    | 	mov	cx, 10
   633 | 00000485 | F7F9                      | 	idiv	cx
   634 | 00000487 | 8946FC                    | 	mov	word [bp-4], ax
   635 |          |                           | L_clib_25:
   636 | 0000048A | 8B4604                    | 	mov	ax, word [bp+4]
   637 | 0000048D | 99                        | 	cwd
   638 | 0000048E | F77EFC                    | 	idiv	word [bp-4]
   639 | 00000491 | 85C0                      | 	test	ax, ax
   640 | 00000493 | 74E9                      | 	je	L_clib_24
   641 |          |                           | L_clib_26:
   642 |          |                           | L_clib_23:
   643 | 00000495 | EB36                      | 	jmp	L_clib_28
   644 |          |                           | L_clib_27:
   645 | 00000497 | 8B4604                    | 	mov	ax, word [bp+4]
   646 | 0000049A | 31D2                      | 	xor	dx, dx
   647 | 0000049C | F776FC                    | 	div	word [bp-4]
   648 | 0000049F | 0430                      | 	add	al, 48
   649 | 000004A1 | 8B76FE                    | 	mov	si, word [bp-2]
   650 | 000004A4 | 8D56F6                    | 	lea	dx, [bp-10]
   651 | 000004A7 | 01D6                      | 	add	si, dx
   652 | 000004A9 | 8804                      | 	mov	byte [si], al
   653 | 000004AB | FF46FE                    | 	inc	word [bp-2]
   654 | 000004AE | 8B4604                    | 	mov	ax, word [bp+4]
   655 | 000004B1 | 31D2                      | 	xor	dx, dx
   656 | 000004B3 | F776FC                    | 	div	word [bp-4]
   657 | 000004B6 | 89D0                      | 	mov	ax, dx
   658 | 000004B8 | 894604                    | 	mov	word [bp+4], ax
   659 | 000004BB | 8B46FC                    | 	mov	ax, word [bp-4]
   660 | 000004BE | 99                        | 	cwd
   661 | 000004BF | B90A00                    | 	mov	cx, 10
   662 | 000004C2 | F7F9                      | 	idiv	cx
   663 | 000004C4 | 8946FC                    | 	mov	word [bp-4], ax
   664 | 000004C7 | 8B46FC                    | 	mov	ax, word [bp-4]
   665 | 000004CA | 8946FC                    | 	mov	word [bp-4], ax
   666 |          |                           | L_clib_28:
   667 | 000004CD | 837EFC00                  | 	cmp	word [bp-4], 0
   668 | 000004D1 | 7FC4                      | 	jg	L_clib_27
   669 |          |                           | L_clib_29:
   670 | 000004D3 | FF76FE                    | 	push	word [bp-2]
   671 | 000004D6 | 8D46F6                    | 	lea	ax, [bp-10]
   672 | 000004D9 | 50                        | 	push	ax
   673 | 000004DA | E80FFF                    | 	call	print
   674 | 000004DD | 83C404                    | 	add	sp, 4
   675 | 000004E0 | 89EC                      | 	mov	sp, bp
   676 | 000004E2 | 5D                        | 	pop	bp
   677 | 000004E3 | C3                        | 	ret
   678 |          |                           | L_clib_19:
   679 | 000004E4 | 55                        | 	push	bp
   680 | 000004E5 | 89E5                      | 	mov	bp, sp
   681 | 000004E7 | 83EC0A                    | 	sub	sp, 10
   682 | 000004EA | E962FF                    | 	jmp	L_clib_20
   683 | 000004ED | 90                        | 	ALIGN	2
   684 |          |                           | printLong:
   685 | 000004EE | E9D200                    | 	jmp	L_clib_31
   686 |          |                           | L_clib_32:
   687 | 000004F1 | C746FE0000                | 	mov	word [bp-2], 0
   688 | 000004F6 | C746FA00CA                | 	mov	word [bp-6], 51712
   689 | 000004FB | C746FC9A3B                | 	mov	word [bp-4], 15258
   690 | 00000500 | 837E0600                  | 	cmp	word [bp+6], 0
   691 | 00000504 | 7F22                      | 	jg	L_clib_33
   692 | 00000506 | 7C06                      | 	jl	L_clib_34
   693 | 00000508 | 837E0400                  | 	cmp	word [bp+4], 0
   694 | 0000050C | 731A                      | 	jae	L_clib_33
   695 |          |                           | L_clib_34:
   696 | 0000050E | C646EF2D                  | 	mov	byte [bp-17], 45
   697 | 00000512 | FF46FE                    | 	inc	word [bp-2]
   698 | 00000515 | 8B4604                    | 	mov	ax, word [bp+4]
   699 | 00000518 | 8B5606                    | 	mov	dx, word [bp+6]
   700 | 0000051B | F7D8                      | 	neg	ax
   701 | 0000051D | 83D200                    | 	adc	dx, 0
   702 | 00000520 | F7DA                      | 	neg	dx
   703 | 00000522 | 894604                    | 	mov	word [bp+4], ax
   704 | 00000525 | 895606                    | 	mov	word [bp+6], dx
   705 |          |                           | L_clib_33:
   706 | 00000528 | 8B4604                    | 	mov	ax, word [bp+4]
   707 | 0000052B | 8B5606                    | 	mov	dx, word [bp+6]
   708 | 0000052E | 09C2                      | 	or	dx, ax
   709 | 00000530 | 750C                      | 	jne	L_clib_35
   710 | 00000532 | C746FA0100                | 	mov	word [bp-6], 1
   711 | 00000537 | C746FC0000                | 	mov	word [bp-4], 0
   712 | 0000053C | EB23                      | 	jmp	L_clib_36
   713 |          |                           | L_clib_35:
   714 | 0000053E | EB0E                      | 	jmp	L_clib_38
   715 |          |                           | L_clib_37:
   716 | 00000540 | B80A00                    | 	mov	ax, 10
   717 | 00000543 | 31D2                      | 	xor	dx, dx
   718 | 00000545 | 52                        | 	push	dx
   719 | 00000546 | 50                        | 	push	ax
   720 | 00000547 | 8D46FA                    | 	lea	ax, [bp-6]
   721 | 0000054A | 50                        | 	push	ax
   722 | 0000054B | E8B5FB                    | 	call	SR_asldiv
   723 |          |                           | L_clib_38:
   724 | 0000054E | FF76FC                    | 	push	word [bp-4]
   725 | 00000551 | FF76FA                    | 	push	word [bp-6]
   726 | 00000554 | FF7606                    | 	push	word [bp+6]
   727 | 00000557 | FF7604                    | 	push	word [bp+4]
   728 | 0000055A | E8F8FC                    | 	call	SR_ldiv
   729 | 0000055D | 09C2                      | 	or	dx, ax
   730 | 0000055F | 74DF                      | 	je	L_clib_37
   731 |          |                           | L_clib_39:
   732 |          |                           | L_clib_36:
   733 | 00000561 | EB41                      | 	jmp	L_clib_41
   734 |          |                           | L_clib_40:
   735 | 00000563 | FF76FC                    | 	push	word [bp-4]
   736 | 00000566 | FF76FA                    | 	push	word [bp-6]
   737 | 00000569 | FF7606                    | 	push	word [bp+6]
   738 | 0000056C | FF7604                    | 	push	word [bp+4]
   739 | 0000056F | E8EAFC                    | 	call	SR_uldiv
   740 | 00000572 | 0430                      | 	add	al, 48
   741 | 00000574 | 8B76FE                    | 	mov	si, word [bp-2]
   742 | 00000577 | 8D56EF                    | 	lea	dx, [bp-17]
   743 | 0000057A | 01D6                      | 	add	si, dx
   744 | 0000057C | 8804                      | 	mov	byte [si], al
   745 | 0000057E | FF46FE                    | 	inc	word [bp-2]
   746 | 00000581 | FF76FC                    | 	push	word [bp-4]
   747 | 00000584 | FF76FA                    | 	push	word [bp-6]
   748 | 00000587 | FF7606                    | 	push	word [bp+6]
   749 | 0000058A | FF7604                    | 	push	word [bp+4]
   750 | 0000058D | E8D4FC                    | 	call	SR_lmod
   751 | 00000590 | 894604                    | 	mov	word [bp+4], ax
   752 | 00000593 | 895606                    | 	mov	word [bp+6], dx
   753 | 00000596 | B80A00                    | 	mov	ax, 10
   754 | 00000599 | 31D2                      | 	xor	dx, dx
   755 | 0000059B | 52                        | 	push	dx
   756 | 0000059C | 50                        | 	push	ax
   757 | 0000059D | 8D46FA                    | 	lea	ax, [bp-6]
   758 | 000005A0 | 50                        | 	push	ax
   759 | 000005A1 | E85FFB                    | 	call	SR_asldiv
   760 |          |                           | L_clib_41:
   761 | 000005A4 | 837EFC00                  | 	cmp	word [bp-4], 0
   762 | 000005A8 | 7FB9                      | 	jg	L_clib_40
   763 | 000005AA | 7506                      | 	jne	L_clib_43
   764 | 000005AC | 837EFA00                  | 	cmp	word [bp-6], 0
   765 | 000005B0 | 77B1                      | 	ja	L_clib_40
   766 |          |                           | L_clib_43:
   767 |          |                           | L_clib_42:
   768 | 000005B2 | FF76FE                    | 	push	word [bp-2]
   769 | 000005B5 | 8D46EF                    | 	lea	ax, [bp-17]
   770 | 000005B8 | 50                        | 	push	ax
   771 | 000005B9 | E830FE                    | 	call	print
   772 | 000005BC | 83C404                    | 	add	sp, 4
   773 | 000005BF | 89EC                      | 	mov	sp, bp
   774 | 000005C1 | 5D                        | 	pop	bp
   775 | 000005C2 | C3                        | 	ret
   776 |          |                           | L_clib_31:
   777 | 000005C3 | 55                        | 	push	bp
   778 | 000005C4 | 89E5                      | 	mov	bp, sp
   779 | 000005C6 | 83EC12                    | 	sub	sp, 18
   780 | 000005C9 | E925FF                    | 	jmp	L_clib_32
   781 |          |                           | 	ALIGN	2
   782 |          |                           | printUInt:
   783 | 000005CC | EB7C                      | 	jmp	L_clib_45
   784 |          |                           | L_clib_46:
   785 | 000005CE | C746FE0000                | 	mov	word [bp-2], 0
   786 | 000005D3 | C746FC1027                | 	mov	word [bp-4], 10000
   787 | 000005D8 | 8B4604                    | 	mov	ax, word [bp+4]
   788 | 000005DB | 85C0                      | 	test	ax, ax
   789 | 000005DD | 7507                      | 	jne	L_clib_47
   790 | 000005DF | C746FC0100                | 	mov	word [bp-4], 1
   791 | 000005E4 | EB1B                      | 	jmp	L_clib_48
   792 |          |                           | L_clib_47:
   793 | 000005E6 | EB0D                      | 	jmp	L_clib_50
   794 |          |                           | L_clib_49:
   795 | 000005E8 | 8B46FC                    | 	mov	ax, word [bp-4]
   796 | 000005EB | 31D2                      | 	xor	dx, dx
   797 | 000005ED | B90A00                    | 	mov	cx, 10
   798 | 000005F0 | F7F1                      | 	div	cx
   799 | 000005F2 | 8946FC                    | 	mov	word [bp-4], ax
   800 |          |                           | L_clib_50:
   801 | 000005F5 | 8B4604                    | 	mov	ax, word [bp+4]
   802 | 000005F8 | 31D2                      | 	xor	dx, dx
   803 | 000005FA | F776FC                    | 	div	word [bp-4]
   804 | 000005FD | 85C0                      | 	test	ax, ax
   805 | 000005FF | 74E7                      | 	je	L_clib_49
   806 |          |                           | L_clib_51:
   807 |          |                           | L_clib_48:
   808 | 00000601 | EB2F                      | 	jmp	L_clib_53
   809 |          |                           | L_clib_52:
   810 | 00000603 | 8B4604                    | 	mov	ax, word [bp+4]
   811 | 00000606 | 31D2                      | 	xor	dx, dx
   812 | 00000608 | F776FC                    | 	div	word [bp-4]
   813 | 0000060B | 0430                      | 	add	al, 48
   814 | 0000060D | 8B76FE                    | 	mov	si, word [bp-2]
   815 | 00000610 | 8D56F6                    | 	lea	dx, [bp-10]
   816 | 00000613 | 01D6                      | 	add	si, dx
   817 | 00000615 | 8804                      | 	mov	byte [si], al
   818 | 00000617 | FF46FE                    | 	inc	word [bp-2]
   819 | 0000061A | 8B4604                    | 	mov	ax, word [bp+4]
   820 | 0000061D | 31D2                      | 	xor	dx, dx
   821 | 0000061F | F776FC                    | 	div	word [bp-4]
   822 | 00000622 | 895604                    | 	mov	word [bp+4], dx
   823 | 00000625 | 8B46FC                    | 	mov	ax, word [bp-4]
   824 | 00000628 | 31D2                      | 	xor	dx, dx
   825 | 0000062A | B90A00                    | 	mov	cx, 10
   826 | 0000062D | F7F1                      | 	div	cx
   827 | 0000062F | 8946FC                    | 	mov	word [bp-4], ax
   828 |          |                           | L_clib_53:
   829 | 00000632 | 8B46FC                    | 	mov	ax, word [bp-4]
   830 | 00000635 | 85C0                      | 	test	ax, ax
   831 | 00000637 | 75CA                      | 	jne	L_clib_52
   832 |          |                           | L_clib_54:
   833 | 00000639 | FF76FE                    | 	push	word [bp-2]
   834 | 0000063C | 8D46F6                    | 	lea	ax, [bp-10]
   835 | 0000063F | 50                        | 	push	ax
   836 | 00000640 | E8A9FD                    | 	call	print
   837 | 00000643 | 83C404                    | 	add	sp, 4
   838 | 00000646 | 89EC                      | 	mov	sp, bp
   839 | 00000648 | 5D                        | 	pop	bp
   840 | 00000649 | C3                        | 	ret
   841 |          |                           | L_clib_45:
   842 | 0000064A | 55                        | 	push	bp
   843 | 0000064B | 89E5                      | 	mov	bp, sp
   844 | 0000064D | 83EC0A                    | 	sub	sp, 10
   845 | 00000650 | E97BFF                    | 	jmp	L_clib_46
   846 | 00000653 | 90                        | 	ALIGN	2
   847 |          |                           | printULong:
   848 | 00000654 | E99E00                    | 	jmp	L_clib_56
   849 |          |                           | L_clib_57:
   850 | 00000657 | C746FE0000                | 	mov	word [bp-2], 0
   851 | 0000065C | C746FA00CA                | 	mov	word [bp-6], 51712
   852 | 00000661 | C746FC9A3B                | 	mov	word [bp-4], 15258
   853 | 00000666 | 8B4604                    | 	mov	ax, word [bp+4]
   854 | 00000669 | 8B5606                    | 	mov	dx, word [bp+6]
   855 | 0000066C | 09C2                      | 	or	dx, ax
   856 | 0000066E | 750C                      | 	jne	L_clib_58
   857 | 00000670 | C746FA0100                | 	mov	word [bp-6], 1
   858 | 00000675 | C746FC0000                | 	mov	word [bp-4], 0
   859 | 0000067A | EB23                      | 	jmp	L_clib_59
   860 |          |                           | L_clib_58:
   861 | 0000067C | EB0E                      | 	jmp	L_clib_61
   862 |          |                           | L_clib_60:
   863 | 0000067E | B80A00                    | 	mov	ax, 10
   864 | 00000681 | 31D2                      | 	xor	dx, dx
   865 | 00000683 | 52                        | 	push	dx
   866 | 00000684 | 50                        | 	push	ax
   867 | 00000685 | 8D46FA                    | 	lea	ax, [bp-6]
   868 | 00000688 | 50                        | 	push	ax
   869 | 00000689 | E820FB                    | 	call	SR_asuldiv
   870 |          |                           | L_clib_61:
   871 | 0000068C | FF76FC                    | 	push	word [bp-4]
   872 | 0000068F | FF76FA                    | 	push	word [bp-6]
   873 | 00000692 | FF7606                    | 	push	word [bp+6]
   874 | 00000695 | FF7604                    | 	push	word [bp+4]
   875 | 00000698 | E8C1FB                    | 	call	SR_uldiv
   876 | 0000069B | 09C2                      | 	or	dx, ax
   877 | 0000069D | 74DF                      | 	je	L_clib_60
   878 |          |                           | L_clib_62:
   879 |          |                           | L_clib_59:
   880 | 0000069F | EB39                      | 	jmp	L_clib_64
   881 |          |                           | L_clib_63:
   882 | 000006A1 | FF76FC                    | 	push	word [bp-4]
   883 | 000006A4 | FF76FA                    | 	push	word [bp-6]
   884 | 000006A7 | FF7606                    | 	push	word [bp+6]
   885 | 000006AA | FF7604                    | 	push	word [bp+4]
   886 | 000006AD | E8ACFB                    | 	call	SR_uldiv
   887 | 000006B0 | 0430                      | 	add	al, 48
   888 | 000006B2 | 8B76FE                    | 	mov	si, word [bp-2]
   889 | 000006B5 | 8D56EF                    | 	lea	dx, [bp-17]
   890 | 000006B8 | 01D6                      | 	add	si, dx
   891 | 000006BA | 8804                      | 	mov	byte [si], al
   892 | 000006BC | FF46FE                    | 	inc	word [bp-2]
   893 | 000006BF | FF76FC                    | 	push	word [bp-4]
   894 | 000006C2 | FF76FA                    | 	push	word [bp-6]
   895 | 000006C5 | 8D4604                    | 	lea	ax, [bp+4]
   896 | 000006C8 | 50                        | 	push	ax
   897 | 000006C9 | E800FB                    | 	call	SR_asilmod
   898 | 000006CC | B80A00                    | 	mov	ax, 10
   899 | 000006CF | 31D2                      | 	xor	dx, dx
   900 | 000006D1 | 52                        | 	push	dx
   901 | 000006D2 | 50                        | 	push	ax
   902 | 000006D3 | 8D46FA                    | 	lea	ax, [bp-6]
   903 | 000006D6 | 50                        | 	push	ax
   904 | 000006D7 | E8D2FA                    | 	call	SR_asuldiv
   905 |          |                           | L_clib_64:
   906 | 000006DA | 8B46FA                    | 	mov	ax, word [bp-6]
   907 | 000006DD | 8B56FC                    | 	mov	dx, word [bp-4]
   908 | 000006E0 | 09C2                      | 	or	dx, ax
   909 | 000006E2 | 75BD                      | 	jne	L_clib_63
   910 |          |                           | L_clib_65:
   911 | 000006E4 | FF76FE                    | 	push	word [bp-2]
   912 | 000006E7 | 8D46EF                    | 	lea	ax, [bp-17]
   913 | 000006EA | 50                        | 	push	ax
   914 | 000006EB | E8FEFC                    | 	call	print
   915 | 000006EE | 83C404                    | 	add	sp, 4
   916 | 000006F1 | 89EC                      | 	mov	sp, bp
   917 | 000006F3 | 5D                        | 	pop	bp
   918 | 000006F4 | C3                        | 	ret
   919 |          |                           | L_clib_56:
   920 | 000006F5 | 55                        | 	push	bp
   921 | 000006F6 | 89E5                      | 	mov	bp, sp
   922 | 000006F8 | 83EC12                    | 	sub	sp, 18
   923 | 000006FB | E959FF                    | 	jmp	L_clib_57
   924 |          |                           | 	ALIGN	2
   925 |          |                           | printByte:
   926 | 000006FE | EB61                      | 	jmp	L_clib_67
   927 |          |                           | L_clib_68:
   928 | 00000700 | 8A4604                    | 	mov	al, byte [bp+4]
   929 | 00000703 | 98                        | 	cbw
   930 | 00000704 | B90400                    | 	mov	cx, 4
   931 | 00000707 | D3F8                      | 	sar	ax, cl
   932 | 00000709 | 83E00F                    | 	and	ax, 15
   933 | 0000070C | 8846FF                    | 	mov	byte [bp-1], al
   934 | 0000070F | 807EFF09                  | 	cmp	byte [bp-1], 9
   935 | 00000713 | 7E0C                      | 	jle	L_clib_69
   936 | 00000715 | 8A46FF                    | 	mov	al, byte [bp-1]
   937 | 00000718 | 98                        | 	cbw
   938 | 00000719 | 83E80A                    | 	sub	ax, 10
   939 | 0000071C | 83C041                    | 	add	ax, 65
   940 | 0000071F | EB07                      | 	jmp	L_clib_70
   941 |          |                           | L_clib_69:
   942 | 00000721 | 8A46FF                    | 	mov	al, byte [bp-1]
   943 | 00000724 | 98                        | 	cbw
   944 | 00000725 | 83C030                    | 	add	ax, 48
   945 |          |                           | L_clib_70:
   946 | 00000728 | 8846FD                    | 	mov	byte [bp-3], al
   947 | 0000072B | 8A4604                    | 	mov	al, byte [bp+4]
   948 | 0000072E | 240F                      | 	and	al, 15
   949 | 00000730 | 8846FF                    | 	mov	byte [bp-1], al
   950 | 00000733 | 807EFF09                  | 	cmp	byte [bp-1], 9
   951 | 00000737 | 7E0C                      | 	jle	L_clib_71
   952 | 00000739 | 8A46FF                    | 	mov	al, byte [bp-1]
   953 | 0000073C | 98                        | 	cbw
   954 | 0000073D | 83E80A                    | 	sub	ax, 10
   955 | 00000740 | 83C041                    | 	add	ax, 65
   956 | 00000743 | EB07                      | 	jmp	L_clib_72
   957 |          |                           | L_clib_71:
   958 | 00000745 | 8A46FF                    | 	mov	al, byte [bp-1]
   959 | 00000748 | 98                        | 	cbw
   960 | 00000749 | 83C030                    | 	add	ax, 48
   961 |          |                           | L_clib_72:
   962 | 0000074C | 8846FE                    | 	mov	byte [bp-2], al
   963 | 0000074F | B80200                    | 	mov	ax, 2
   964 | 00000752 | 50                        | 	push	ax
   965 | 00000753 | 8D46FD                    | 	lea	ax, [bp-3]
   966 | 00000756 | 50                        | 	push	ax
   967 | 00000757 | E892FC                    | 	call	print
   968 | 0000075A | 83C404                    | 	add	sp, 4
   969 | 0000075D | 89EC                      | 	mov	sp, bp
   970 | 0000075F | 5D                        | 	pop	bp
   971 | 00000760 | C3                        | 	ret
   972 |          |                           | L_clib_67:
   973 | 00000761 | 55                        | 	push	bp
   974 | 00000762 | 89E5                      | 	mov	bp, sp
   975 | 00000764 | 83EC04                    | 	sub	sp, 4
   976 | 00000767 | EB97                      | 	jmp	L_clib_68
   977 | 00000769 | 90                        | 	ALIGN	2
   978 |          |                           | printWord:
   979 | 0000076A | EB59                      | 	jmp	L_clib_74
   980 |          |                           | L_clib_75:
   981 | 0000076C | C746FE0300                | 	mov	word [bp-2], 3
   982 | 00000771 | EB3A                      | 	jmp	L_clib_77
   983 |          |                           | L_clib_76:
   984 | 00000773 | 8B4604                    | 	mov	ax, word [bp+4]
   985 | 00000776 | 83E00F                    | 	and	ax, 15
   986 | 00000779 | 8846FD                    | 	mov	byte [bp-3], al
   987 | 0000077C | 807EFD09                  | 	cmp	byte [bp-3], 9
   988 | 00000780 | 7E0C                      | 	jle	L_clib_80
   989 | 00000782 | 8A46FD                    | 	mov	al, byte [bp-3]
   990 | 00000785 | 98                        | 	cbw
   991 | 00000786 | 83E80A                    | 	sub	ax, 10
   992 | 00000789 | 83C041                    | 	add	ax, 65
   993 | 0000078C | EB07                      | 	jmp	L_clib_81
   994 |          |                           | L_clib_80:
   995 | 0000078E | 8A46FD                    | 	mov	al, byte [bp-3]
   996 | 00000791 | 98                        | 	cbw
   997 | 00000792 | 83C030                    | 	add	ax, 48
   998 |          |                           | L_clib_81:
   999 | 00000795 | 8B76FE                    | 	mov	si, word [bp-2]
  1000 | 00000798 | 8D56F9                    | 	lea	dx, [bp-7]
  1001 | 0000079B | 01D6                      | 	add	si, dx
  1002 | 0000079D | 8804                      | 	mov	byte [si], al
  1003 | 0000079F | 8B4604                    | 	mov	ax, word [bp+4]
  1004 | 000007A2 | B90400                    | 	mov	cx, 4
  1005 | 000007A5 | D3F8                      | 	sar	ax, cl
  1006 | 000007A7 | 894604                    | 	mov	word [bp+4], ax
  1007 |          |                           | L_clib_79:
  1008 | 000007AA | FF4EFE                    | 	dec	word [bp-2]
  1009 |          |                           | L_clib_77:
  1010 | 000007AD | 837EFE00                  | 	cmp	word [bp-2], 0
  1011 | 000007B1 | 7DC0                      | 	jge	L_clib_76
  1012 |          |                           | L_clib_78:
  1013 | 000007B3 | B80400                    | 	mov	ax, 4
  1014 | 000007B6 | 50                        | 	push	ax
  1015 | 000007B7 | 8D46F9                    | 	lea	ax, [bp-7]
  1016 | 000007BA | 50                        | 	push	ax
  1017 | 000007BB | E82EFC                    | 	call	print
  1018 | 000007BE | 83C404                    | 	add	sp, 4
  1019 | 000007C1 | 89EC                      | 	mov	sp, bp
  1020 | 000007C3 | 5D                        | 	pop	bp
  1021 | 000007C4 | C3                        | 	ret
  1022 |          |                           | L_clib_74:
  1023 | 000007C5 | 55                        | 	push	bp
  1024 | 000007C6 | 89E5                      | 	mov	bp, sp
  1025 | 000007C8 | 83EC08                    | 	sub	sp, 8
  1026 | 000007CB | EB9F                      | 	jmp	L_clib_75
  1027 | 000007CD | 90                        | 	ALIGN	2
  1028 |          |                           | printDWord:
  1029 | 000007CE | E9AC00                    | 	jmp	L_clib_83
  1030 |          |                           | L_clib_84:
  1031 | 000007D1 | 8D4604                    | 	lea	ax, [bp+4]
  1032 | 000007D4 | 89C6                      | 	mov	si, ax
  1033 | 000007D6 | 8B04                      | 	mov	ax, word [si]
  1034 | 000007D8 | 8946FA                    | 	mov	word [bp-6], ax
  1035 | 000007DB | 8D4604                    | 	lea	ax, [bp+4]
  1036 | 000007DE | 89C6                      | 	mov	si, ax
  1037 | 000007E0 | 83C602                    | 	add	si, 2
  1038 | 000007E3 | 8B04                      | 	mov	ax, word [si]
  1039 | 000007E5 | 8946F8                    | 	mov	word [bp-8], ax
  1040 | 000007E8 | C746FE0300                | 	mov	word [bp-2], 3
  1041 | 000007ED | EB76                      | 	jmp	L_clib_86
  1042 |          |                           | L_clib_85:
  1043 | 000007EF | 8B46FA                    | 	mov	ax, word [bp-6]
  1044 | 000007F2 | 83E00F                    | 	and	ax, 15
  1045 | 000007F5 | 8846FD                    | 	mov	byte [bp-3], al
  1046 | 000007F8 | 807EFD09                  | 	cmp	byte [bp-3], 9
  1047 | 000007FC | 7E0C                      | 	jle	L_clib_89
  1048 | 000007FE | 8A46FD                    | 	mov	al, byte [bp-3]
  1049 | 00000801 | 98                        | 	cbw
  1050 | 00000802 | 83E80A                    | 	sub	ax, 10
  1051 | 00000805 | 83C041                    | 	add	ax, 65
  1052 | 00000808 | EB07                      | 	jmp	L_clib_90
  1053 |          |                           | L_clib_89:
  1054 | 0000080A | 8A46FD                    | 	mov	al, byte [bp-3]
  1055 | 0000080D | 98                        | 	cbw
  1056 | 0000080E | 83C030                    | 	add	ax, 48
  1057 |          |                           | L_clib_90:
  1058 | 00000811 | 8B56FE                    | 	mov	dx, word [bp-2]
  1059 | 00000814 | 83C204                    | 	add	dx, 4
  1060 | 00000817 | 89D6                      | 	mov	si, dx
  1061 | 00000819 | 8D56F0                    | 	lea	dx, [bp-16]
  1062 | 0000081C | 01D6                      | 	add	si, dx
  1063 | 0000081E | 8804                      | 	mov	byte [si], al
  1064 | 00000820 | 8B46FA                    | 	mov	ax, word [bp-6]
  1065 | 00000823 | B90400                    | 	mov	cx, 4
  1066 | 00000826 | D3F8                      | 	sar	ax, cl
  1067 | 00000828 | 8946FA                    | 	mov	word [bp-6], ax
  1068 | 0000082B | 8B46F8                    | 	mov	ax, word [bp-8]
  1069 | 0000082E | 83E00F                    | 	and	ax, 15
  1070 | 00000831 | 8846FD                    | 	mov	byte [bp-3], al
  1071 | 00000834 | 807EFD09                  | 	cmp	byte [bp-3], 9
  1072 | 00000838 | 7E0C                      | 	jle	L_clib_91
  1073 | 0000083A | 8A46FD                    | 	mov	al, byte [bp-3]
  1074 | 0000083D | 98                        | 	cbw
  1075 | 0000083E | 83E80A                    | 	sub	ax, 10
  1076 | 00000841 | 83C041                    | 	add	ax, 65
  1077 | 00000844 | EB07                      | 	jmp	L_clib_92
  1078 |          |                           | L_clib_91:
  1079 | 00000846 | 8A46FD                    | 	mov	al, byte [bp-3]
  1080 | 00000849 | 98                        | 	cbw
  1081 | 0000084A | 83C030                    | 	add	ax, 48
  1082 |          |                           | L_clib_92:
  1083 | 0000084D | 8B76FE                    | 	mov	si, word [bp-2]
  1084 | 00000850 | 8D56F0                    | 	lea	dx, [bp-16]
  1085 | 00000853 | 01D6                      | 	add	si, dx
  1086 | 00000855 | 8804                      | 	mov	byte [si], al
  1087 | 00000857 | 8B46F8                    | 	mov	ax, word [bp-8]
  1088 | 0000085A | B90400                    | 	mov	cx, 4
  1089 | 0000085D | D3F8                      | 	sar	ax, cl
  1090 | 0000085F | 8946F8                    | 	mov	word [bp-8], ax
  1091 |          |                           | L_clib_88:
  1092 | 00000862 | FF4EFE                    | 	dec	word [bp-2]
  1093 |          |                           | L_clib_86:
  1094 | 00000865 | 837EFE00                  | 	cmp	word [bp-2], 0
  1095 | 00000869 | 7D84                      | 	jge	L_clib_85
  1096 |          |                           | L_clib_87:
  1097 | 0000086B | B80800                    | 	mov	ax, 8
  1098 | 0000086E | 50                        | 	push	ax
  1099 | 0000086F | 8D46F0                    | 	lea	ax, [bp-16]
  1100 | 00000872 | 50                        | 	push	ax
  1101 | 00000873 | E876FB                    | 	call	print
  1102 | 00000876 | 83C404                    | 	add	sp, 4
  1103 | 00000879 | 89EC                      | 	mov	sp, bp
  1104 | 0000087B | 5D                        | 	pop	bp
  1105 | 0000087C | C3                        | 	ret
  1106 |          |                           | L_clib_83:
  1107 | 0000087D | 55                        | 	push	bp
  1108 | 0000087E | 89E5                      | 	mov	bp, sp
  1109 | 00000880 | 83EC10                    | 	sub	sp, 16
  1110 | 00000883 | E94BFF                    | 	jmp	L_clib_84
  1111 |          |                           | 
  1112 |          |                           | 
  1113 |          |                           | ; 1    Save the context of whatever was running by pushing all registers onto the stack, except SP, SS, CS, IP, and the flags.
  1114 |          |                           | ; 2    Enable interrupts to allow higher priority IRQs to interrupt.
  1115 |          |                           | ; 3    Run the interrupt handler, which is usually a C function that does the work for this interrupt.
  1116 |          |                           | ; 4    Disable interrupts.
  1117 |          |                           | ; 5    Send the EOI command to the PIC, informing it that the handler is finished.
  1118 |          |                           | ; 6    Restore the context of what was running before the interrupt occurred by popping the registers saved in step 1 off the stack.
  1119 |          |                           | ; 7    Execute the iret instruction. This restores in one atomic operation the values for IP, CS, and the flags, which were automatically saved on the stack by the processor when the interrupt occurred. This effecti
  1120 |          |                           | 
  1121 |          |                           | 
  1122 |          |                           | 
  1123 |          |                           | 
  1124 |          |                           | isr_reset:
  1125 |          |                           | 	; save context
  1126 | 00000886 | 50                        | 	push ax
  1127 | 00000887 | 53                        | 	push bx
  1128 | 00000888 | 51                        | 	push cx
  1129 | 00000889 | 52                        | 	push dx
  1130 | 0000088A | 55                        | 	push bp
  1131 | 0000088B | 56                        | 	push si
  1132 | 0000088C | 57                        | 	push di
  1133 | 0000088D | 1E                        | 	push ds
  1134 | 0000088E | 06                        | 	push es
  1135 |          |                           | 	; Here we test to see if we are the lowest-level interrupt.
  1136 |          |                           | 	; If we are, we need to save the task's stack that we interrupted
  1137 | 0000088F | A1[2A12]                  | 	mov ax, [YKISRCallDepth]
  1138 | 00000892 | 85C0                      | 	test ax, ax
  1139 | 00000894 | 7506                      | 	jnz isr_reset_not_lowest_interrupt
  1140 |          |                           | 
  1141 |          |                           | 	; Save the SP of the task we interrupted
  1142 | 00000896 | 8B1E[DE0F]                | 	mov bx, [YKRdyList]
  1143 | 0000089A | 8927                      | 	mov [bx], sp
  1144 |          |                           | 
  1145 |          |                           | isr_reset_not_lowest_interrupt:
  1146 |          |                           | 
  1147 | 0000089C | E80707                    | 	call YKEnterISR
  1148 |          |                           | 	; enable interrupts for higher priority IRQ
  1149 | 0000089F | FB                        | 	sti	
  1150 |          |                           | 
  1151 |          |                           | 	; run interrupt handler
  1152 |          |                           | 	
  1153 |          |                           | 	; disable interrupts
  1154 |          |                           | 	; sent EOI to PIC
  1155 |          |                           | 	; restore context
  1156 |          |                           | 
  1157 |          |                           | 	; But we don't have to do any of that, because we ARE the highest-priority interrupt
  1158 |          |                           | 	; And it will end the program. So no saving context, no enabling interrupts, 
  1159 |          |                           | 	; and no restoring context.
  1160 | 000008A0 | E87500                    | 	call c_isr_reset
  1161 |          |                           | 	
  1162 |          |                           | 
  1163 | 000008A3 | FA                        | 	cli
  1164 |          |                           | 	
  1165 | 000008A4 | B020                      | 	mov	al, 0x20
  1166 | 000008A6 | E620                      | 	out 	0x20, al
  1167 |          |                           | 
  1168 |          |                           | 		
  1169 | 000008A8 | E80D07                    | 	call YKExitISR
  1170 |          |                           | 	
  1171 | 000008AB | 07                        | 	pop es
  1172 | 000008AC | 1F                        | 	pop ds
  1173 | 000008AD | 5F                        | 	pop di
  1174 | 000008AE | 5E                        | 	pop si
  1175 | 000008AF | 5D                        | 	pop bp
  1176 | 000008B0 | 5A                        | 	pop dx
  1177 | 000008B1 | 59                        | 	pop cx
  1178 | 000008B2 | 5B                        | 	pop bx
  1179 | 000008B3 | 58                        | 	pop ax	
  1180 |          |                           | 	
  1181 | 000008B4 | CF                        | 	iret	; This should not even happen.
  1182 |          |                           | 
  1183 |          |                           | 
  1184 |          |                           | 
  1185 |          |                           | isr_keypress:
  1186 |          |                           | 		; Save context
  1187 | 000008B5 | 50                        | 	push ax
  1188 | 000008B6 | 53                        | 	push bx
  1189 | 000008B7 | 51                        | 	push cx
  1190 | 000008B8 | 52                        | 	push dx
  1191 | 000008B9 | 55                        | 	push bp
  1192 | 000008BA | 56                        | 	push si
  1193 | 000008BB | 57                        | 	push di
  1194 | 000008BC | 1E                        | 	push ds
  1195 | 000008BD | 06                        | 	push es
  1196 |          |                           | 
  1197 |          |                           | 	; Here we test to see if we are the lowest-level interrupt.
  1198 |          |                           | 	; If we are, we need to save the task's stack that we interrupted
  1199 | 000008BE | A1[2A12]                  | 	mov ax, [YKISRCallDepth]
  1200 | 000008C1 | 85C0                      | 	test ax, ax
  1201 | 000008C3 | 7506                      | 	jnz isr_keypress_not_lowest_interrupt
  1202 |          |                           | 
  1203 |          |                           | 	; Save the SP of the task we interrupted
  1204 | 000008C5 | 8B1E[DE0F]                | 	mov bx, [YKRdyList]
  1205 | 000008C9 | 8927                      | 	mov [bx], sp
  1206 |          |                           | 
  1207 |          |                           | isr_keypress_not_lowest_interrupt:
  1208 |          |                           | 
  1209 | 000008CB | E8D806                    | 	call YKEnterISR
  1210 |          |                           | 
  1211 |          |                           | 		; Enable interrupts for higher-priority 
  1212 | 000008CE | FB                        | 	sti
  1213 |          |                           | 
  1214 |          |                           | 		; Run interrupt handler
  1215 | 000008CF | E8CA00                    | 	call c_isr_keypress
  1216 |          |                           | 
  1217 |          |                           | 
  1218 |          |                           | 		; disable interrupts
  1219 | 000008D2 | FA                        | 	cli
  1220 |          |                           | 
  1221 |          |                           | 		;send EOI to PIC
  1222 | 000008D3 | B020                      | 	mov	al, 0x20	; Load nonspecific EOI value (0x20) into register al
  1223 | 000008D5 | E620                      | 	out	0x20, al	; Write EOI to PIC (port 0x20)
  1224 |          |                           | 
  1225 |          |                           | 	
  1226 | 000008D7 | E8DE06                    | 	call YKExitISR
  1227 |          |                           | 		; Restore context
  1228 | 000008DA | 07                        | 	pop es
  1229 | 000008DB | 1F                        | 	pop ds
  1230 | 000008DC | 5F                        | 	pop di
  1231 | 000008DD | 5E                        | 	pop si
  1232 | 000008DE | 5D                        | 	pop bp
  1233 | 000008DF | 5A                        | 	pop dx
  1234 | 000008E0 | 59                        | 	pop cx
  1235 | 000008E1 | 5B                        | 	pop bx
  1236 | 000008E2 | 58                        | 	pop ax	
  1237 |          |                           | 		; Execute IRET
  1238 | 000008E3 | CF                        | 	iret
  1239 |          |                           | 
  1240 |          |                           | 
  1241 |          |                           | 
  1242 |          |                           | isr_tick:
  1243 |          |                           | 		; Save context
  1244 | 000008E4 | 50                        | 	push ax
  1245 | 000008E5 | 53                        | 	push bx
  1246 | 000008E6 | 51                        | 	push cx
  1247 | 000008E7 | 52                        | 	push dx
  1248 | 000008E8 | 55                        | 	push bp
  1249 | 000008E9 | 56                        | 	push si
  1250 | 000008EA | 57                        | 	push di
  1251 | 000008EB | 1E                        | 	push ds
  1252 | 000008EC | 06                        | 	push es
  1253 |          |                           | 	
  1254 |          |                           | 	; Here we test to see if we are the lowest-level interrupt.
  1255 |          |                           | 	; If we are, we need to save the task's stack that we interrupted
  1256 | 000008ED | A1[2A12]                  | 	mov ax, [YKISRCallDepth]
  1257 | 000008F0 | 85C0                      | 	test ax, ax
  1258 | 000008F2 | 7506                      | 	jnz isr_tick_not_lowest_interrupt
  1259 |          |                           | 
  1260 |          |                           | 	; Save the SP of the task we interrupted
  1261 | 000008F4 | 8B1E[DE0F]                | 	mov bx, [YKRdyList]
  1262 | 000008F8 | 8927                      | 	mov [bx], sp
  1263 |          |                           | 
  1264 |          |                           | isr_tick_not_lowest_interrupt:
  1265 |          |                           | 
  1266 | 000008FA | E8A906                    | 	call YKEnterISR
  1267 |          |                           | 
  1268 |          |                           | 		; Enable interrupts for higher-priority 
  1269 | 000008FD | FB                        | 	sti
  1270 |          |                           | 
  1271 |          |                           | 		; Run interrupt handler
  1272 | 000008FE | E83500                    | 	call c_isr_tick
  1273 |          |                           | 		; disable interrupts
  1274 | 00000901 | FA                        | 	cli
  1275 |          |                           | 
  1276 |          |                           | 		;send EOI to PIC
  1277 | 00000902 | B020                      | 	mov	al, 0x20	; Load nonspecific EOI value (0x20) into register al
  1278 | 00000904 | E620                      | 	out	0x20, al	; Write EOI to PIC (port 0x20)
  1279 |          |                           | 
  1280 |          |                           | 		
  1281 | 00000906 | E8AF06                    | 	call YKExitISR
  1282 |          |                           | 		; Restore context
  1283 | 00000909 | 07                        | 	pop es
  1284 | 0000090A | 1F                        | 	pop ds
  1285 | 0000090B | 5F                        | 	pop di
  1286 | 0000090C | 5E                        | 	pop si
  1287 | 0000090D | 5D                        | 	pop bp
  1288 | 0000090E | 5A                        | 	pop dx
  1289 | 0000090F | 59                        | 	pop cx
  1290 | 00000910 | 5B                        | 	pop bx
  1291 | 00000911 | 58                        | 	pop ax
  1292 |          |                           | 
  1293 |          |                           | 	   ; Execute IRET
  1294 | 00000912 | CF                        | 	iret
  1295 |          |                           | ; Generated by c86 (BYU-NASM) 5.1 (beta) from myinth.i
  1296 |          |                           | 	CPU	8086
  1297 | 00000913 | 90                        | 	ALIGN	2
  1298 | 00000914 | E99B09                    | 	jmp	main	; Jump to program start
  1299 | 00000917 | 90                        | 	ALIGN	2
  1300 |          |                           | c_isr_reset:
  1301 | 00000918 | EB0D                      | 	jmp	L_myinth_1
  1302 |          |                           | L_myinth_2:
  1303 | 0000091A | 30C0                      | 	xor	al, al
  1304 | 0000091C | 50                        | 	push	ax
  1305 | 0000091D | E8BAFA                    | 	call	exit
  1306 | 00000920 | 83C402                    | 	add	sp, 2
  1307 | 00000923 | 89EC                      | 	mov	sp, bp
  1308 | 00000925 | 5D                        | 	pop	bp
  1309 | 00000926 | C3                        | 	ret
  1310 |          |                           | L_myinth_1:
  1311 | 00000927 | 55                        | 	push	bp
  1312 | 00000928 | 89E5                      | 	mov	bp, sp
  1313 | 0000092A | EBEE                      | 	jmp	L_myinth_2
  1314 |          |                           | 	ALIGN	2
  1315 |          |                           | L_myinth_4:
  1316 | 0000092C | 0000                      | 	DW	0
  1317 |          |                           | L_myinth_5:
  1318 | 0000092E | 0A5449434B2000            | 	DB	0xA,"TICK ",0
  1319 | 00000935 | 90                        | 	ALIGN	2
  1320 |          |                           | c_isr_tick:
  1321 | 00000936 | EB22                      | 	jmp	L_myinth_6
  1322 |          |                           | L_myinth_7:
  1323 | 00000938 | B8[2E09]                  | 	mov	ax, L_myinth_5
  1324 | 0000093B | 50                        | 	push	ax
  1325 | 0000093C | E8E9FA                    | 	call	printString
  1326 | 0000093F | 83C402                    | 	add	sp, 2
  1327 | 00000942 | A1[2C09]                  | 	mov	ax, word [L_myinth_4]
  1328 | 00000945 | FF06[2C09]                | 	inc	word [L_myinth_4]
  1329 | 00000949 | 50                        | 	push	ax
  1330 | 0000094A | E8FFFA                    | 	call	printInt
  1331 | 0000094D | 83C402                    | 	add	sp, 2
  1332 | 00000950 | E8C3FA                    | 	call	printNewLine
  1333 | 00000953 | E83805                    | 	call	YKTickHandler
  1334 | 00000956 | 89EC                      | 	mov	sp, bp
  1335 | 00000958 | 5D                        | 	pop	bp
  1336 | 00000959 | C3                        | 	ret
  1337 |          |                           | L_myinth_6:
  1338 | 0000095A | 55                        | 	push	bp
  1339 | 0000095B | 89E5                      | 	mov	bp, sp
  1340 | 0000095D | EBD9                      | 	jmp	L_myinth_7
  1341 |          |                           | L_myinth_12:
  1342 | 0000095F | 292049474E4F524544-       | 	DB	") IGNORED",0xA,0
  1343 | 00000968 | 0A00                      | ...
  1344 |          |                           | L_myinth_11:
  1345 | 0000096A | 0A4B45595052455353-       | 	DB	0xA,"KEYPRESS (",0
  1346 | 00000973 | 202800                    | ...
  1347 |          |                           | L_myinth_10:
  1348 | 00000976 | 0A44454C415920434F-       | 	DB	0xA,"DELAY COMPLETE",0xA,0
  1349 | 0000097F | 4D504C4554450A00          | ...
  1350 |          |                           | L_myinth_9:
  1351 | 00000987 | 0A44454C4159204B45-       | 	DB	0xA,"DELAY KEY PRESSED",0xA,0
  1352 | 00000990 | 592050524553534544-       | ...
  1353 | 00000999 | 0A00                      | ...
  1354 | 0000099B | 90                        | 	ALIGN	2
  1355 |          |                           | c_isr_keypress:
  1356 | 0000099C | EB46                      | 	jmp	L_myinth_13
  1357 |          |                           | L_myinth_14:
  1358 | 0000099E | A0[C000]                  | 	mov	al, byte [KeyBuffer]
  1359 | 000009A1 | 8846FF                    | 	mov	byte [bp-1], al
  1360 | 000009A4 | 807EFF64                  | 	cmp	byte [bp-1], 100
  1361 | 000009A8 | 7519                      | 	jne	L_myinth_15
  1362 | 000009AA | B8[8709]                  | 	mov	ax, L_myinth_9
  1363 | 000009AD | 50                        | 	push	ax
  1364 | 000009AE | E877FA                    | 	call	printString
  1365 | 000009B1 | 83C402                    | 	add	sp, 2
  1366 | 000009B4 | E83300                    | 	call	delay
  1367 | 000009B7 | B8[7609]                  | 	mov	ax, L_myinth_10
  1368 | 000009BA | 50                        | 	push	ax
  1369 | 000009BB | E86AFA                    | 	call	printString
  1370 | 000009BE | 83C402                    | 	add	sp, 2
  1371 | 000009C1 | EB1D                      | 	jmp	L_myinth_16
  1372 |          |                           | L_myinth_15:
  1373 | 000009C3 | B8[6A09]                  | 	mov	ax, L_myinth_11
  1374 | 000009C6 | 50                        | 	push	ax
  1375 | 000009C7 | E85EFA                    | 	call	printString
  1376 | 000009CA | 83C402                    | 	add	sp, 2
  1377 | 000009CD | FF76FF                    | 	push	word [bp-1]
  1378 | 000009D0 | E831FA                    | 	call	printChar
  1379 | 000009D3 | 83C402                    | 	add	sp, 2
  1380 | 000009D6 | B8[5F09]                  | 	mov	ax, L_myinth_12
  1381 | 000009D9 | 50                        | 	push	ax
  1382 | 000009DA | E84BFA                    | 	call	printString
  1383 | 000009DD | 83C402                    | 	add	sp, 2
  1384 |          |                           | L_myinth_16:
  1385 | 000009E0 | 89EC                      | 	mov	sp, bp
  1386 | 000009E2 | 5D                        | 	pop	bp
  1387 | 000009E3 | C3                        | 	ret
  1388 |          |                           | L_myinth_13:
  1389 | 000009E4 | 55                        | 	push	bp
  1390 | 000009E5 | 89E5                      | 	mov	bp, sp
  1391 | 000009E7 | 51                        | 	push	cx
  1392 | 000009E8 | EBB4                      | 	jmp	L_myinth_14
  1393 |          |                           | 	ALIGN	2
  1394 |          |                           | delay:
  1395 | 000009EA | EB1A                      | 	jmp	L_myinth_18
  1396 |          |                           | L_myinth_19:
  1397 | 000009EC | C746FE0000                | 	mov	word [bp-2], 0
  1398 | 000009F1 | C746FE0000                | 	mov	word [bp-2], 0
  1399 | 000009F6 | EB03                      | 	jmp	L_myinth_21
  1400 |          |                           | L_myinth_20:
  1401 |          |                           | L_myinth_23:
  1402 | 000009F8 | FF46FE                    | 	inc	word [bp-2]
  1403 |          |                           | L_myinth_21:
  1404 | 000009FB | 817EFE8813                | 	cmp	word [bp-2], 5000
  1405 | 00000A00 | 7CF6                      | 	jl	L_myinth_20
  1406 |          |                           | L_myinth_22:
  1407 | 00000A02 | 89EC                      | 	mov	sp, bp
  1408 | 00000A04 | 5D                        | 	pop	bp
  1409 | 00000A05 | C3                        | 	ret
  1410 |          |                           | L_myinth_18:
  1411 | 00000A06 | 55                        | 	push	bp
  1412 | 00000A07 | 89E5                      | 	mov	bp, sp
  1413 | 00000A09 | 51                        | 	push	cx
  1414 | 00000A0A | EBE0                      | 	jmp	L_myinth_19
  1415 |          |                           | ; Generated by c86 (BYU-NASM) 5.1 (beta) from yakc.i
  1416 |          |                           | 	CPU	8086
  1417 |          |                           | 	ALIGN	2
  1418 | 00000A0C | E9A308                    | 	jmp	main	; Jump to program start
  1419 |          |                           | started_running:
  1420 | 00000A0F | 00                        | 	DB	0
  1421 |          |                           | 	ALIGN	2
  1422 |          |                           | YKInitialize:
  1423 | 00000A10 | EB6F                      | 	jmp	L_yakc_1
  1424 |          |                           | L_yakc_2:
  1425 | 00000A12 | C706[D80F]0000            | 	mov	word [YKCtxSwCount], 0
  1426 | 00000A18 | C706[DA0F]0000            | 	mov	word [YKIdleCount], 0
  1427 | 00000A1E | C706[2C12]0000            | 	mov	word [YKCurrentlyExecuting], 0
  1428 | 00000A24 | C706[2A12]0000            | 	mov	word [YKISRCallDepth], 0
  1429 | 00000A2A | E80108                    | 	call	YKEnterMutex
  1430 | 00000A2D | C706[E20F][E40F]          | 	mov	word [YKAvailTCBList], YKTCBArray
  1431 | 00000A33 | C746FE0000                | 	mov	word [bp-2], 0
  1432 | 00000A38 | EB26                      | 	jmp	L_yakc_4
  1433 |          |                           | L_yakc_3:
  1434 | 00000A3A | 8B46FE                    | 	mov	ax, word [bp-2]
  1435 | 00000A3D | 40                        | 	inc	ax
  1436 | 00000A3E | B90E00                    | 	mov	cx, 14
  1437 | 00000A41 | F7E9                      | 	imul	cx
  1438 | 00000A43 | 05[E40F]                  | 	add	ax, YKTCBArray
  1439 | 00000A46 | 50                        | 	push	ax
  1440 | 00000A47 | 8B46FE                    | 	mov	ax, word [bp-2]
  1441 | 00000A4A | B90E00                    | 	mov	cx, 14
  1442 | 00000A4D | F7E9                      | 	imul	cx
  1443 | 00000A4F | 89C2                      | 	mov	dx, ax
  1444 | 00000A51 | 81C2[E40F]                | 	add	dx, YKTCBArray
  1445 | 00000A55 | 89D6                      | 	mov	si, dx
  1446 | 00000A57 | 83C60A                    | 	add	si, 10
  1447 | 00000A5A | 58                        | 	pop	ax
  1448 | 00000A5B | 8904                      | 	mov	word [si], ax
  1449 |          |                           | L_yakc_6:
  1450 | 00000A5D | FF46FE                    | 	inc	word [bp-2]
  1451 |          |                           | L_yakc_4:
  1452 | 00000A60 | 837EFE04                  | 	cmp	word [bp-2], 4
  1453 | 00000A64 | 7CD4                      | 	jl	L_yakc_3
  1454 |          |                           | L_yakc_5:
  1455 | 00000A66 | C706[2610]0000            | 	mov	word [(66+YKTCBArray)], 0
  1456 | 00000A6C | B064                      | 	mov	al, 100
  1457 | 00000A6E | 50                        | 	push	ax
  1458 | 00000A6F | B8[2A12]                  | 	mov	ax, (idleStack+512)
  1459 | 00000A72 | 50                        | 	push	ax
  1460 | 00000A73 | B8[880A]                  | 	mov	ax, YKIdleTask
  1461 | 00000A76 | 50                        | 	push	ax
  1462 | 00000A77 | E84800                    | 	call	YKNewTask
  1463 | 00000A7A | 83C406                    | 	add	sp, 6
  1464 | 00000A7D | 89EC                      | 	mov	sp, bp
  1465 | 00000A7F | 5D                        | 	pop	bp
  1466 | 00000A80 | C3                        | 	ret
  1467 |          |                           | L_yakc_1:
  1468 | 00000A81 | 55                        | 	push	bp
  1469 | 00000A82 | 89E5                      | 	mov	bp, sp
  1470 | 00000A84 | 51                        | 	push	cx
  1471 | 00000A85 | EB8B                      | 	jmp	L_yakc_2
  1472 | 00000A87 | 90                        | 	ALIGN	2
  1473 |          |                           | YKIdleTask:
  1474 | 00000A88 | EB12                      | 	jmp	L_yakc_8
  1475 |          |                           | L_yakc_9:
  1476 | 00000A8A | EB0A                      | 	jmp	L_yakc_11
  1477 |          |                           | L_yakc_10:
  1478 | 00000A8C | A1[DA0F]                  | 	mov	ax, word [YKIdleCount]
  1479 | 00000A8F | 40                        | 	inc	ax
  1480 | 00000A90 | A3[DA0F]                  | 	mov	word [YKIdleCount], ax
  1481 | 00000A93 | E89A07                    | 	call	YKExitMutex
  1482 |          |                           | L_yakc_11:
  1483 | 00000A96 | EBF4                      | 	jmp	L_yakc_10
  1484 |          |                           | L_yakc_12:
  1485 | 00000A98 | 89EC                      | 	mov	sp, bp
  1486 | 00000A9A | 5D                        | 	pop	bp
  1487 | 00000A9B | C3                        | 	ret
  1488 |          |                           | L_yakc_8:
  1489 | 00000A9C | 55                        | 	push	bp
  1490 | 00000A9D | 89E5                      | 	mov	bp, sp
  1491 | 00000A9F | EBE9                      | 	jmp	L_yakc_9
  1492 |          |                           | L_yakc_15:
  1493 | 00000AA1 | 0A00                      | 	DB	0xA,0
  1494 |          |                           | L_yakc_14:
  1495 | 00000AA3 | 416464726573732066-       | 	DB	"Address for new task's SP is ",0
  1496 | 00000AAC | 6F72206E6577207461-       | ...
  1497 | 00000AB5 | 736B27732053502069-       | ...
  1498 | 00000ABE | 732000                    | ...
  1499 | 00000AC1 | 90                        | 	ALIGN	2
  1500 |          |                           | YKNewTask:
  1501 | 00000AC2 | E99501                    | 	jmp	L_yakc_16
  1502 |          |                           | L_yakc_17:
  1503 | 00000AC5 | A1[E20F]                  | 	mov	ax, word [YKAvailTCBList]
  1504 | 00000AC8 | 8946FE                    | 	mov	word [bp-2], ax
  1505 | 00000ACB | 8B76FE                    | 	mov	si, word [bp-2]
  1506 | 00000ACE | 83C60A                    | 	add	si, 10
  1507 | 00000AD1 | 8B04                      | 	mov	ax, word [si]
  1508 | 00000AD3 | A3[E20F]                  | 	mov	word [YKAvailTCBList], ax
  1509 | 00000AD6 | 8B76FE                    | 	mov	si, word [bp-2]
  1510 | 00000AD9 | 83C608                    | 	add	si, 8
  1511 | 00000ADC | C7040000                  | 	mov	word [si], 0
  1512 | 00000AE0 | 8A4608                    | 	mov	al, byte [bp+8]
  1513 | 00000AE3 | 30E4                      | 	xor	ah, ah
  1514 | 00000AE5 | 8B76FE                    | 	mov	si, word [bp-2]
  1515 | 00000AE8 | 83C606                    | 	add	si, 6
  1516 | 00000AEB | 8904                      | 	mov	word [si], ax
  1517 | 00000AED | E83E07                    | 	call	YKEnterMutex
  1518 | 00000AF0 | A1[DE0F]                  | 	mov	ax, word [YKRdyList]
  1519 | 00000AF3 | 85C0                      | 	test	ax, ax
  1520 | 00000AF5 | 751C                      | 	jne	L_yakc_18
  1521 | 00000AF7 | 8B46FE                    | 	mov	ax, word [bp-2]
  1522 | 00000AFA | A3[DE0F]                  | 	mov	word [YKRdyList], ax
  1523 | 00000AFD | 8B76FE                    | 	mov	si, word [bp-2]
  1524 | 00000B00 | 83C60A                    | 	add	si, 10
  1525 | 00000B03 | C7040000                  | 	mov	word [si], 0
  1526 | 00000B07 | 8B76FE                    | 	mov	si, word [bp-2]
  1527 | 00000B0A | 83C60C                    | 	add	si, 12
  1528 | 00000B0D | C7040000                  | 	mov	word [si], 0
  1529 | 00000B11 | EB6F                      | 	jmp	L_yakc_19
  1530 |          |                           | L_yakc_18:
  1531 | 00000B13 | A1[DE0F]                  | 	mov	ax, word [YKRdyList]
  1532 | 00000B16 | 8946FC                    | 	mov	word [bp-4], ax
  1533 | 00000B19 | EB0B                      | 	jmp	L_yakc_21
  1534 |          |                           | L_yakc_20:
  1535 | 00000B1B | 8B76FC                    | 	mov	si, word [bp-4]
  1536 | 00000B1E | 83C60A                    | 	add	si, 10
  1537 | 00000B21 | 8B04                      | 	mov	ax, word [si]
  1538 | 00000B23 | 8946FC                    | 	mov	word [bp-4], ax
  1539 |          |                           | L_yakc_21:
  1540 | 00000B26 | 8B76FC                    | 	mov	si, word [bp-4]
  1541 | 00000B29 | 83C606                    | 	add	si, 6
  1542 | 00000B2C | 8B7EFE                    | 	mov	di, word [bp-2]
  1543 | 00000B2F | 83C706                    | 	add	di, 6
  1544 | 00000B32 | 8B05                      | 	mov	ax, word [di]
  1545 | 00000B34 | 3B04                      | 	cmp	ax, word [si]
  1546 | 00000B36 | 7FE3                      | 	jg	L_yakc_20
  1547 |          |                           | L_yakc_22:
  1548 | 00000B38 | 8B76FC                    | 	mov	si, word [bp-4]
  1549 | 00000B3B | 83C60C                    | 	add	si, 12
  1550 | 00000B3E | 8B04                      | 	mov	ax, word [si]
  1551 | 00000B40 | 85C0                      | 	test	ax, ax
  1552 | 00000B42 | 7508                      | 	jne	L_yakc_23
  1553 | 00000B44 | 8B46FE                    | 	mov	ax, word [bp-2]
  1554 | 00000B47 | A3[DE0F]                  | 	mov	word [YKRdyList], ax
  1555 | 00000B4A | EB10                      | 	jmp	L_yakc_24
  1556 |          |                           | L_yakc_23:
  1557 | 00000B4C | 8B76FC                    | 	mov	si, word [bp-4]
  1558 | 00000B4F | 83C60C                    | 	add	si, 12
  1559 | 00000B52 | 8B34                      | 	mov	si, word [si]
  1560 | 00000B54 | 83C60A                    | 	add	si, 10
  1561 | 00000B57 | 8B46FE                    | 	mov	ax, word [bp-2]
  1562 | 00000B5A | 8904                      | 	mov	word [si], ax
  1563 |          |                           | L_yakc_24:
  1564 | 00000B5C | 8B76FC                    | 	mov	si, word [bp-4]
  1565 | 00000B5F | 83C60C                    | 	add	si, 12
  1566 | 00000B62 | 8B7EFE                    | 	mov	di, word [bp-2]
  1567 | 00000B65 | 83C70C                    | 	add	di, 12
  1568 | 00000B68 | 8B04                      | 	mov	ax, word [si]
  1569 | 00000B6A | 8905                      | 	mov	word [di], ax
  1570 | 00000B6C | 8B76FE                    | 	mov	si, word [bp-2]
  1571 | 00000B6F | 83C60A                    | 	add	si, 10
  1572 | 00000B72 | 8B46FC                    | 	mov	ax, word [bp-4]
  1573 | 00000B75 | 8904                      | 	mov	word [si], ax
  1574 | 00000B77 | 8B76FC                    | 	mov	si, word [bp-4]
  1575 | 00000B7A | 83C60C                    | 	add	si, 12
  1576 | 00000B7D | 8B46FE                    | 	mov	ax, word [bp-2]
  1577 | 00000B80 | 8904                      | 	mov	word [si], ax
  1578 |          |                           | L_yakc_19:
  1579 | 00000B82 | E8AB06                    | 	call	YKExitMutex
  1580 | 00000B85 | 8B76FE                    | 	mov	si, word [bp-2]
  1581 | 00000B88 | 8B4606                    | 	mov	ax, word [bp+6]
  1582 | 00000B8B | 8904                      | 	mov	word [si], ax
  1583 | 00000B8D | B8[A30A]                  | 	mov	ax, L_yakc_14
  1584 | 00000B90 | 50                        | 	push	ax
  1585 | 00000B91 | E894F8                    | 	call	printString
  1586 | 00000B94 | 83C402                    | 	add	sp, 2
  1587 | 00000B97 | FF76FE                    | 	push	word [bp-2]
  1588 | 00000B9A | E8AFF8                    | 	call	printInt
  1589 | 00000B9D | 83C402                    | 	add	sp, 2
  1590 | 00000BA0 | B8[A10A]                  | 	mov	ax, L_yakc_15
  1591 | 00000BA3 | 50                        | 	push	ax
  1592 | 00000BA4 | E881F8                    | 	call	printString
  1593 | 00000BA7 | 83C402                    | 	add	sp, 2
  1594 | 00000BAA | 8B76FE                    | 	mov	si, word [bp-2]
  1595 | 00000BAD | 83C602                    | 	add	si, 2
  1596 | 00000BB0 | C7040000                  | 	mov	word [si], 0
  1597 | 00000BB4 | 8B76FE                    | 	mov	si, word [bp-2]
  1598 | 00000BB7 | 8B04                      | 	mov	ax, word [si]
  1599 | 00000BB9 | 83E816                    | 	sub	ax, 22
  1600 | 00000BBC | 8904                      | 	mov	word [si], ax
  1601 | 00000BBE | 8B76FE                    | 	mov	si, word [bp-2]
  1602 | 00000BC1 | 8B34                      | 	mov	si, word [si]
  1603 | 00000BC3 | 83C616                    | 	add	si, 22
  1604 | 00000BC6 | C7040002                  | 	mov	word [si], 512
  1605 | 00000BCA | 8B76FE                    | 	mov	si, word [bp-2]
  1606 | 00000BCD | 8B34                      | 	mov	si, word [si]
  1607 | 00000BCF | 83C614                    | 	add	si, 20
  1608 | 00000BD2 | C7040000                  | 	mov	word [si], 0
  1609 | 00000BD6 | 8B76FE                    | 	mov	si, word [bp-2]
  1610 | 00000BD9 | 8B34                      | 	mov	si, word [si]
  1611 | 00000BDB | 83C612                    | 	add	si, 18
  1612 | 00000BDE | 8B4604                    | 	mov	ax, word [bp+4]
  1613 | 00000BE1 | 8904                      | 	mov	word [si], ax
  1614 | 00000BE3 | 8B76FE                    | 	mov	si, word [bp-2]
  1615 | 00000BE6 | 8B34                      | 	mov	si, word [si]
  1616 | 00000BE8 | 83C610                    | 	add	si, 16
  1617 | 00000BEB | C7040000                  | 	mov	word [si], 0
  1618 | 00000BEF | 8B76FE                    | 	mov	si, word [bp-2]
  1619 | 00000BF2 | 8B34                      | 	mov	si, word [si]
  1620 | 00000BF4 | 83C60E                    | 	add	si, 14
  1621 | 00000BF7 | C7040000                  | 	mov	word [si], 0
  1622 | 00000BFB | 8B76FE                    | 	mov	si, word [bp-2]
  1623 | 00000BFE | 8B34                      | 	mov	si, word [si]
  1624 | 00000C00 | 83C60C                    | 	add	si, 12
  1625 | 00000C03 | C7040000                  | 	mov	word [si], 0
  1626 | 00000C07 | 8B76FE                    | 	mov	si, word [bp-2]
  1627 | 00000C0A | 8B34                      | 	mov	si, word [si]
  1628 | 00000C0C | 83C60A                    | 	add	si, 10
  1629 | 00000C0F | C7040000                  | 	mov	word [si], 0
  1630 | 00000C13 | 8B76FE                    | 	mov	si, word [bp-2]
  1631 | 00000C16 | 8B34                      | 	mov	si, word [si]
  1632 | 00000C18 | 83C608                    | 	add	si, 8
  1633 | 00000C1B | C7040000                  | 	mov	word [si], 0
  1634 | 00000C1F | 8B76FE                    | 	mov	si, word [bp-2]
  1635 | 00000C22 | 8B34                      | 	mov	si, word [si]
  1636 | 00000C24 | 83C606                    | 	add	si, 6
  1637 | 00000C27 | C7040000                  | 	mov	word [si], 0
  1638 | 00000C2B | 8B76FE                    | 	mov	si, word [bp-2]
  1639 | 00000C2E | 8B34                      | 	mov	si, word [si]
  1640 | 00000C30 | 83C604                    | 	add	si, 4
  1641 | 00000C33 | C7040000                  | 	mov	word [si], 0
  1642 | 00000C37 | 8B76FE                    | 	mov	si, word [bp-2]
  1643 | 00000C3A | 8B34                      | 	mov	si, word [si]
  1644 | 00000C3C | 83C602                    | 	add	si, 2
  1645 | 00000C3F | C7040000                  | 	mov	word [si], 0
  1646 | 00000C43 | 8B76FE                    | 	mov	si, word [bp-2]
  1647 | 00000C46 | 8B34                      | 	mov	si, word [si]
  1648 | 00000C48 | C7040000                  | 	mov	word [si], 0
  1649 | 00000C4C | B80100                    | 	mov	ax, 1
  1650 | 00000C4F | 50                        | 	push	ax
  1651 | 00000C50 | E82F01                    | 	call	YKScheduler
  1652 | 00000C53 | 83C402                    | 	add	sp, 2
  1653 | 00000C56 | 89EC                      | 	mov	sp, bp
  1654 | 00000C58 | 5D                        | 	pop	bp
  1655 | 00000C59 | C3                        | 	ret
  1656 |          |                           | L_yakc_16:
  1657 | 00000C5A | 55                        | 	push	bp
  1658 | 00000C5B | 89E5                      | 	mov	bp, sp
  1659 | 00000C5D | 83EC04                    | 	sub	sp, 4
  1660 | 00000C60 | E962FE                    | 	jmp	L_yakc_17
  1661 |          |                           | L_yakc_26:
  1662 | 00000C63 | 72756E2063616C6C65-       | 	DB	"run called. Calling the scheduler",0xA,0
  1663 | 00000C6C | 642E2043616C6C696E-       | ...
  1664 | 00000C75 | 672074686520736368-       | ...
  1665 | 00000C7E | 6564756C65720A00          | ...
  1666 |          |                           | 	ALIGN	2
  1667 |          |                           | YKRun:
  1668 | 00000C86 | EB1C                      | 	jmp	L_yakc_27
  1669 |          |                           | L_yakc_28:
  1670 | 00000C88 | B8[630C]                  | 	mov	ax, L_yakc_26
  1671 | 00000C8B | 50                        | 	push	ax
  1672 | 00000C8C | E899F7                    | 	call	printString
  1673 | 00000C8F | 83C402                    | 	add	sp, 2
  1674 | 00000C92 | C606[0F0A]01              | 	mov	byte [started_running], 1
  1675 | 00000C97 | 31C0                      | 	xor	ax, ax
  1676 | 00000C99 | 50                        | 	push	ax
  1677 | 00000C9A | E8E500                    | 	call	YKScheduler
  1678 | 00000C9D | 83C402                    | 	add	sp, 2
  1679 | 00000CA0 | 89EC                      | 	mov	sp, bp
  1680 | 00000CA2 | 5D                        | 	pop	bp
  1681 | 00000CA3 | C3                        | 	ret
  1682 |          |                           | L_yakc_27:
  1683 | 00000CA4 | 55                        | 	push	bp
  1684 | 00000CA5 | 89E5                      | 	mov	bp, sp
  1685 | 00000CA7 | EBDF                      | 	jmp	L_yakc_28
  1686 |          |                           | L_yakc_32:
  1687 | 00000CA9 | 207768696368206861-       | 	DB	" which has stack ",0
  1688 | 00000CB2 | 7320737461636B2000        | ...
  1689 |          |                           | L_yakc_31:
  1690 | 00000CBB | 7363686564756C6572-       | 	DB	"scheduler here. dispatcher will load ",0
  1691 | 00000CC4 | 20686572652E206469-       | ...
  1692 | 00000CCD | 737061746368657220-       | ...
  1693 | 00000CD6 | 77696C6C206C6F6164-       | ...
  1694 | 00000CDF | 2000                      | ...
  1695 |          |                           | L_yakc_30:
  1696 | 00000CE1 | 544849532053484F55-       | 	DB	"THIS SHOULD NEVER HAPPEN",0xA,"THIS SHOULD NEVER HAPPEN",0xA,0
  1697 | 00000CEA | 4C44204E4556455220-       | ...
  1698 | 00000CF3 | 48415050454E0A5448-       | ...
  1699 | 00000CFC | 49532053484F554C44-       | ...
  1700 | 00000D05 | 204E45564552204841-       | ...
  1701 | 00000D0E | 5050454E0A00              | ...
  1702 |          |                           | 	ALIGN	2
  1703 |          |                           | YKScheduler_old:
  1704 | 00000D14 | EB66                      | 	jmp	L_yakc_33
  1705 |          |                           | L_yakc_34:
  1706 | 00000D16 | A1[DE0F]                  | 	mov	ax, word [YKRdyList]
  1707 | 00000D19 | 8946FE                    | 	mov	word [bp-2], ax
  1708 | 00000D1C | B8[E10C]                  | 	mov	ax, L_yakc_30
  1709 | 00000D1F | 50                        | 	push	ax
  1710 | 00000D20 | E805F7                    | 	call	printString
  1711 | 00000D23 | 83C402                    | 	add	sp, 2
  1712 | 00000D26 | B8[BB0C]                  | 	mov	ax, L_yakc_31
  1713 | 00000D29 | 50                        | 	push	ax
  1714 | 00000D2A | E8FBF6                    | 	call	printString
  1715 | 00000D2D | 83C402                    | 	add	sp, 2
  1716 | 00000D30 | FF76FE                    | 	push	word [bp-2]
  1717 | 00000D33 | E816F7                    | 	call	printInt
  1718 | 00000D36 | 83C402                    | 	add	sp, 2
  1719 | 00000D39 | B8[A90C]                  | 	mov	ax, L_yakc_32
  1720 | 00000D3C | 50                        | 	push	ax
  1721 | 00000D3D | E8E8F6                    | 	call	printString
  1722 | 00000D40 | 83C402                    | 	add	sp, 2
  1723 | 00000D43 | 8B76FE                    | 	mov	si, word [bp-2]
  1724 | 00000D46 | FF34                      | 	push	word [si]
  1725 | 00000D48 | E801F7                    | 	call	printInt
  1726 | 00000D4B | 83C402                    | 	add	sp, 2
  1727 | 00000D4E | B8[A10A]                  | 	mov	ax, L_yakc_15
  1728 | 00000D51 | 50                        | 	push	ax
  1729 | 00000D52 | E8D3F6                    | 	call	printString
  1730 | 00000D55 | 83C402                    | 	add	sp, 2
  1731 | 00000D58 | A0[0F0A]                  | 	mov	al, byte [started_running]
  1732 | 00000D5B | 84C0                      | 	test	al, al
  1733 | 00000D5D | 7419                      | 	je	L_yakc_35
  1734 | 00000D5F | 8B46FE                    | 	mov	ax, word [bp-2]
  1735 | 00000D62 | 3B06[2C12]                | 	cmp	ax, word [YKCurrentlyExecuting]
  1736 | 00000D66 | 7410                      | 	je	L_yakc_37
  1737 |          |                           | L_yakc_36:
  1738 | 00000D68 | A1[D80F]                  | 	mov	ax, word [YKCtxSwCount]
  1739 | 00000D6B | 40                        | 	inc	ax
  1740 | 00000D6C | A3[D80F]                  | 	mov	word [YKCtxSwCount], ax
  1741 | 00000D6F | 8B46FE                    | 	mov	ax, word [bp-2]
  1742 | 00000D72 | A3[2C12]                  | 	mov	word [YKCurrentlyExecuting], ax
  1743 | 00000D75 | E8BA04                    | 	call	YKDispatcher
  1744 |          |                           | L_yakc_35:
  1745 |          |                           | L_yakc_37:
  1746 | 00000D78 | 89EC                      | 	mov	sp, bp
  1747 | 00000D7A | 5D                        | 	pop	bp
  1748 | 00000D7B | C3                        | 	ret
  1749 |          |                           | L_yakc_33:
  1750 | 00000D7C | 55                        | 	push	bp
  1751 | 00000D7D | 89E5                      | 	mov	bp, sp
  1752 | 00000D7F | 51                        | 	push	cx
  1753 | 00000D80 | EB94                      | 	jmp	L_yakc_34
  1754 |          |                           | 	ALIGN	2
  1755 |          |                           | YKScheduler:
  1756 | 00000D82 | EB74                      | 	jmp	L_yakc_39
  1757 |          |                           | L_yakc_40:
  1758 | 00000D84 | A1[DE0F]                  | 	mov	ax, word [YKRdyList]
  1759 | 00000D87 | 8946FE                    | 	mov	word [bp-2], ax
  1760 | 00000D8A | A1[2C12]                  | 	mov	ax, word [YKCurrentlyExecuting]
  1761 | 00000D8D | 8946FC                    | 	mov	word [bp-4], ax
  1762 | 00000D90 | A0[0F0A]                  | 	mov	al, byte [started_running]
  1763 | 00000D93 | 84C0                      | 	test	al, al
  1764 | 00000D95 | 745D                      | 	je	L_yakc_42
  1765 |          |                           | L_yakc_41:
  1766 | 00000D97 | 8B46FE                    | 	mov	ax, word [bp-2]
  1767 | 00000D9A | 3B06[2C12]                | 	cmp	ax, word [YKCurrentlyExecuting]
  1768 | 00000D9E | 7454                      | 	je	L_yakc_42
  1769 |          |                           | L_yakc_43:
  1770 | 00000DA0 | A1[D80F]                  | 	mov	ax, word [YKCtxSwCount]
  1771 | 00000DA3 | 40                        | 	inc	ax
  1772 | 00000DA4 | A3[D80F]                  | 	mov	word [YKCtxSwCount], ax
  1773 | 00000DA7 | 8B46FE                    | 	mov	ax, word [bp-2]
  1774 | 00000DAA | A3[2C12]                  | 	mov	word [YKCurrentlyExecuting], ax
  1775 | 00000DAD | 8B4604                    | 	mov	ax, word [bp+4]
  1776 | 00000DB0 | 85C0                      | 	test	ax, ax
  1777 | 00000DB2 | 7520                      | 	jne	L_yakc_44
  1778 | 00000DB4 | 8B76FE                    | 	mov	si, word [bp-2]
  1779 | 00000DB7 | 83C602                    | 	add	si, 2
  1780 | 00000DBA | FF34                      | 	push	word [si]
  1781 | 00000DBC | 8B76FE                    | 	mov	si, word [bp-2]
  1782 | 00000DBF | FF34                      | 	push	word [si]
  1783 | 00000DC1 | B80100                    | 	mov	ax, 1
  1784 | 00000DC4 | 50                        | 	push	ax
  1785 | 00000DC5 | B80100                    | 	mov	ax, 1
  1786 | 00000DC8 | 50                        | 	push	ax
  1787 | 00000DC9 | 31C0                      | 	xor	ax, ax
  1788 | 00000DCB | 50                        | 	push	ax
  1789 | 00000DCC | E87304                    | 	call	YKDispatcher_save_context
  1790 | 00000DCF | 83C40A                    | 	add	sp, 10
  1791 | 00000DD2 | EB20                      | 	jmp	L_yakc_45
  1792 |          |                           | L_yakc_44:
  1793 | 00000DD4 | 8B76FE                    | 	mov	si, word [bp-2]
  1794 | 00000DD7 | 83C602                    | 	add	si, 2
  1795 | 00000DDA | FF34                      | 	push	word [si]
  1796 | 00000DDC | 8B76FE                    | 	mov	si, word [bp-2]
  1797 | 00000DDF | FF34                      | 	push	word [si]
  1798 | 00000DE1 | 8B46FC                    | 	mov	ax, word [bp-4]
  1799 | 00000DE4 | 83C002                    | 	add	ax, 2
  1800 | 00000DE7 | 50                        | 	push	ax
  1801 | 00000DE8 | FF76FC                    | 	push	word [bp-4]
  1802 | 00000DEB | FF7604                    | 	push	word [bp+4]
  1803 | 00000DEE | E85104                    | 	call	YKDispatcher_save_context
  1804 | 00000DF1 | 83C40A                    | 	add	sp, 10
  1805 |          |                           | L_yakc_45:
  1806 |          |                           | L_yakc_42:
  1807 | 00000DF4 | 89EC                      | 	mov	sp, bp
  1808 | 00000DF6 | 5D                        | 	pop	bp
  1809 | 00000DF7 | C3                        | 	ret
  1810 |          |                           | L_yakc_39:
  1811 | 00000DF8 | 55                        | 	push	bp
  1812 | 00000DF9 | 89E5                      | 	mov	bp, sp
  1813 | 00000DFB | 83EC04                    | 	sub	sp, 4
  1814 | 00000DFE | EB84                      | 	jmp	L_yakc_40
  1815 |          |                           | 	ALIGN	2
  1816 |          |                           | YKDelayTask:
  1817 | 00000E00 | E98400                    | 	jmp	L_yakc_47
  1818 |          |                           | L_yakc_48:
  1819 | 00000E03 | E82804                    | 	call	YKEnterMutex
  1820 | 00000E06 | 8B4604                    | 	mov	ax, word [bp+4]
  1821 | 00000E09 | 85C0                      | 	test	ax, ax
  1822 | 00000E0B | 7464                      | 	je	L_yakc_49
  1823 | 00000E0D | A1[DE0F]                  | 	mov	ax, word [YKRdyList]
  1824 | 00000E10 | 8946FE                    | 	mov	word [bp-2], ax
  1825 | 00000E13 | 8B76FE                    | 	mov	si, word [bp-2]
  1826 | 00000E16 | 83C60A                    | 	add	si, 10
  1827 | 00000E19 | 8B04                      | 	mov	ax, word [si]
  1828 | 00000E1B | A3[DE0F]                  | 	mov	word [YKRdyList], ax
  1829 | 00000E1E | 8B76FE                    | 	mov	si, word [bp-2]
  1830 | 00000E21 | 83C60A                    | 	add	si, 10
  1831 | 00000E24 | 8B34                      | 	mov	si, word [si]
  1832 | 00000E26 | 83C60C                    | 	add	si, 12
  1833 | 00000E29 | C7040000                  | 	mov	word [si], 0
  1834 | 00000E2D | 8B76FE                    | 	mov	si, word [bp-2]
  1835 | 00000E30 | 83C60A                    | 	add	si, 10
  1836 | 00000E33 | A1[E00F]                  | 	mov	ax, word [YKSuspList]
  1837 | 00000E36 | 8904                      | 	mov	word [si], ax
  1838 | 00000E38 | 8B46FE                    | 	mov	ax, word [bp-2]
  1839 | 00000E3B | A3[E00F]                  | 	mov	word [YKSuspList], ax
  1840 | 00000E3E | 8B76FE                    | 	mov	si, word [bp-2]
  1841 | 00000E41 | 83C60C                    | 	add	si, 12
  1842 | 00000E44 | C7040000                  | 	mov	word [si], 0
  1843 | 00000E48 | 8B76FE                    | 	mov	si, word [bp-2]
  1844 | 00000E4B | 83C60A                    | 	add	si, 10
  1845 | 00000E4E | 8B04                      | 	mov	ax, word [si]
  1846 | 00000E50 | 85C0                      | 	test	ax, ax
  1847 | 00000E52 | 7410                      | 	je	L_yakc_50
  1848 | 00000E54 | 8B76FE                    | 	mov	si, word [bp-2]
  1849 | 00000E57 | 83C60A                    | 	add	si, 10
  1850 | 00000E5A | 8B34                      | 	mov	si, word [si]
  1851 | 00000E5C | 83C60C                    | 	add	si, 12
  1852 | 00000E5F | 8B46FE                    | 	mov	ax, word [bp-2]
  1853 | 00000E62 | 8904                      | 	mov	word [si], ax
  1854 |          |                           | L_yakc_50:
  1855 | 00000E64 | 8B76FE                    | 	mov	si, word [bp-2]
  1856 | 00000E67 | 83C608                    | 	add	si, 8
  1857 | 00000E6A | 8B4604                    | 	mov	ax, word [bp+4]
  1858 | 00000E6D | 8904                      | 	mov	word [si], ax
  1859 | 00000E6F | EB05                      | 	jmp	L_yakc_51
  1860 |          |                           | L_yakc_49:
  1861 | 00000E71 | E8BC03                    | 	call	YKExitMutex
  1862 | 00000E74 | EB0D                      | 	jmp	L_yakc_52
  1863 |          |                           | L_yakc_51:
  1864 | 00000E76 | B80100                    | 	mov	ax, 1
  1865 | 00000E79 | 50                        | 	push	ax
  1866 | 00000E7A | E805FF                    | 	call	YKScheduler
  1867 | 00000E7D | 83C402                    | 	add	sp, 2
  1868 | 00000E80 | E8AD03                    | 	call	YKExitMutex
  1869 |          |                           | L_yakc_52:
  1870 | 00000E83 | 89EC                      | 	mov	sp, bp
  1871 | 00000E85 | 5D                        | 	pop	bp
  1872 | 00000E86 | C3                        | 	ret
  1873 |          |                           | L_yakc_47:
  1874 | 00000E87 | 55                        | 	push	bp
  1875 | 00000E88 | 89E5                      | 	mov	bp, sp
  1876 | 00000E8A | 51                        | 	push	cx
  1877 | 00000E8B | E975FF                    | 	jmp	L_yakc_48
  1878 |          |                           | 	ALIGN	2
  1879 |          |                           | YKTickHandler:
  1880 | 00000E8E | E90C01                    | 	jmp	L_yakc_54
  1881 |          |                           | L_yakc_55:
  1882 | 00000E91 | A1[E00F]                  | 	mov	ax, word [YKSuspList]
  1883 | 00000E94 | 8946FE                    | 	mov	word [bp-2], ax
  1884 | 00000E97 | E89403                    | 	call	YKEnterMutex
  1885 | 00000E9A | E9EF00                    | 	jmp	L_yakc_57
  1886 |          |                           | L_yakc_56:
  1887 | 00000E9D | 8B76FE                    | 	mov	si, word [bp-2]
  1888 | 00000EA0 | 83C60A                    | 	add	si, 10
  1889 | 00000EA3 | 8B04                      | 	mov	ax, word [si]
  1890 | 00000EA5 | 8946FA                    | 	mov	word [bp-6], ax
  1891 | 00000EA8 | 8B76FE                    | 	mov	si, word [bp-2]
  1892 | 00000EAB | 83C608                    | 	add	si, 8
  1893 | 00000EAE | 8B04                      | 	mov	ax, word [si]
  1894 | 00000EB0 | 48                        | 	dec	ax
  1895 | 00000EB1 | 8B76FE                    | 	mov	si, word [bp-2]
  1896 | 00000EB4 | 83C608                    | 	add	si, 8
  1897 | 00000EB7 | 8904                      | 	mov	word [si], ax
  1898 | 00000EB9 | 8B76FE                    | 	mov	si, word [bp-2]
  1899 | 00000EBC | 83C608                    | 	add	si, 8
  1900 | 00000EBF | 8B04                      | 	mov	ax, word [si]
  1901 | 00000EC1 | 85C0                      | 	test	ax, ax
  1902 | 00000EC3 | 7403E9BE00                | 	jne	L_yakc_59
  1903 | 00000EC8 | 8B76FE                    | 	mov	si, word [bp-2]
  1904 | 00000ECB | 83C60C                    | 	add	si, 12
  1905 | 00000ECE | 8B04                      | 	mov	ax, word [si]
  1906 | 00000ED0 | 85C0                      | 	test	ax, ax
  1907 | 00000ED2 | 750D                      | 	jne	L_yakc_60
  1908 | 00000ED4 | 8B76FE                    | 	mov	si, word [bp-2]
  1909 | 00000ED7 | 83C60A                    | 	add	si, 10
  1910 | 00000EDA | 8B04                      | 	mov	ax, word [si]
  1911 | 00000EDC | A3[E00F]                  | 	mov	word [YKSuspList], ax
  1912 | 00000EDF | EB15                      | 	jmp	L_yakc_61
  1913 |          |                           | L_yakc_60:
  1914 | 00000EE1 | 8B76FE                    | 	mov	si, word [bp-2]
  1915 | 00000EE4 | 83C60A                    | 	add	si, 10
  1916 | 00000EE7 | 8B7EFE                    | 	mov	di, word [bp-2]
  1917 | 00000EEA | 83C70C                    | 	add	di, 12
  1918 | 00000EED | 8B3D                      | 	mov	di, word [di]
  1919 | 00000EEF | 83C70A                    | 	add	di, 10
  1920 | 00000EF2 | 8B04                      | 	mov	ax, word [si]
  1921 | 00000EF4 | 8905                      | 	mov	word [di], ax
  1922 |          |                           | L_yakc_61:
  1923 | 00000EF6 | 8B76FE                    | 	mov	si, word [bp-2]
  1924 | 00000EF9 | 83C60A                    | 	add	si, 10
  1925 | 00000EFC | 8B04                      | 	mov	ax, word [si]
  1926 | 00000EFE | 85C0                      | 	test	ax, ax
  1927 | 00000F00 | 7415                      | 	je	L_yakc_62
  1928 | 00000F02 | 8B76FE                    | 	mov	si, word [bp-2]
  1929 | 00000F05 | 83C60C                    | 	add	si, 12
  1930 | 00000F08 | 8B7EFE                    | 	mov	di, word [bp-2]
  1931 | 00000F0B | 83C70A                    | 	add	di, 10
  1932 | 00000F0E | 8B3D                      | 	mov	di, word [di]
  1933 | 00000F10 | 83C70C                    | 	add	di, 12
  1934 | 00000F13 | 8B04                      | 	mov	ax, word [si]
  1935 | 00000F15 | 8905                      | 	mov	word [di], ax
  1936 |          |                           | L_yakc_62:
  1937 | 00000F17 | A1[DE0F]                  | 	mov	ax, word [YKRdyList]
  1938 | 00000F1A | 8946FC                    | 	mov	word [bp-4], ax
  1939 | 00000F1D | EB0B                      | 	jmp	L_yakc_64
  1940 |          |                           | L_yakc_63:
  1941 | 00000F1F | 8B76FC                    | 	mov	si, word [bp-4]
  1942 | 00000F22 | 83C60A                    | 	add	si, 10
  1943 | 00000F25 | 8B04                      | 	mov	ax, word [si]
  1944 | 00000F27 | 8946FC                    | 	mov	word [bp-4], ax
  1945 |          |                           | L_yakc_64:
  1946 | 00000F2A | 8B76FC                    | 	mov	si, word [bp-4]
  1947 | 00000F2D | 83C606                    | 	add	si, 6
  1948 | 00000F30 | 8B7EFE                    | 	mov	di, word [bp-2]
  1949 | 00000F33 | 83C706                    | 	add	di, 6
  1950 | 00000F36 | 8B05                      | 	mov	ax, word [di]
  1951 | 00000F38 | 3B04                      | 	cmp	ax, word [si]
  1952 | 00000F3A | 7FE3                      | 	jg	L_yakc_63
  1953 |          |                           | L_yakc_65:
  1954 | 00000F3C | 8B76FC                    | 	mov	si, word [bp-4]
  1955 | 00000F3F | 83C60C                    | 	add	si, 12
  1956 | 00000F42 | 8B04                      | 	mov	ax, word [si]
  1957 | 00000F44 | 85C0                      | 	test	ax, ax
  1958 | 00000F46 | 7508                      | 	jne	L_yakc_66
  1959 | 00000F48 | 8B46FE                    | 	mov	ax, word [bp-2]
  1960 | 00000F4B | A3[DE0F]                  | 	mov	word [YKRdyList], ax
  1961 | 00000F4E | EB10                      | 	jmp	L_yakc_67
  1962 |          |                           | L_yakc_66:
  1963 | 00000F50 | 8B76FC                    | 	mov	si, word [bp-4]
  1964 | 00000F53 | 83C60C                    | 	add	si, 12
  1965 | 00000F56 | 8B34                      | 	mov	si, word [si]
  1966 | 00000F58 | 83C60A                    | 	add	si, 10
  1967 | 00000F5B | 8B46FE                    | 	mov	ax, word [bp-2]
  1968 | 00000F5E | 8904                      | 	mov	word [si], ax
  1969 |          |                           | L_yakc_67:
  1970 | 00000F60 | 8B76FC                    | 	mov	si, word [bp-4]
  1971 | 00000F63 | 83C60C                    | 	add	si, 12
  1972 | 00000F66 | 8B7EFE                    | 	mov	di, word [bp-2]
  1973 | 00000F69 | 83C70C                    | 	add	di, 12
  1974 | 00000F6C | 8B04                      | 	mov	ax, word [si]
  1975 | 00000F6E | 8905                      | 	mov	word [di], ax
  1976 | 00000F70 | 8B76FE                    | 	mov	si, word [bp-2]
  1977 | 00000F73 | 83C60A                    | 	add	si, 10
  1978 | 00000F76 | 8B46FC                    | 	mov	ax, word [bp-4]
  1979 | 00000F79 | 8904                      | 	mov	word [si], ax
  1980 | 00000F7B | 8B76FC                    | 	mov	si, word [bp-4]
  1981 | 00000F7E | 83C60C                    | 	add	si, 12
  1982 | 00000F81 | 8B46FE                    | 	mov	ax, word [bp-2]
  1983 | 00000F84 | 8904                      | 	mov	word [si], ax
  1984 |          |                           | L_yakc_59:
  1985 | 00000F86 | 8B46FA                    | 	mov	ax, word [bp-6]
  1986 | 00000F89 | 8946FE                    | 	mov	word [bp-2], ax
  1987 |          |                           | L_yakc_57:
  1988 | 00000F8C | 8B46FE                    | 	mov	ax, word [bp-2]
  1989 | 00000F8F | 85C0                      | 	test	ax, ax
  1990 | 00000F91 | 7403E907FF                | 	jne	L_yakc_56
  1991 |          |                           | L_yakc_58:
  1992 | 00000F96 | E89702                    | 	call	YKExitMutex
  1993 | 00000F99 | 89EC                      | 	mov	sp, bp
  1994 | 00000F9B | 5D                        | 	pop	bp
  1995 | 00000F9C | C3                        | 	ret
  1996 |          |                           | L_yakc_54:
  1997 | 00000F9D | 55                        | 	push	bp
  1998 | 00000F9E | 89E5                      | 	mov	bp, sp
  1999 | 00000FA0 | 83EC06                    | 	sub	sp, 6
  2000 | 00000FA3 | E9EBFE                    | 	jmp	L_yakc_55
  2001 |          |                           | 	ALIGN	2
  2002 |          |                           | YKEnterISR:
  2003 | 00000FA6 | EB0B                      | 	jmp	L_yakc_69
  2004 |          |                           | L_yakc_70:
  2005 | 00000FA8 | A1[2A12]                  | 	mov	ax, word [YKISRCallDepth]
  2006 | 00000FAB | 40                        | 	inc	ax
  2007 | 00000FAC | A3[2A12]                  | 	mov	word [YKISRCallDepth], ax
  2008 | 00000FAF | 89EC                      | 	mov	sp, bp
  2009 | 00000FB1 | 5D                        | 	pop	bp
  2010 | 00000FB2 | C3                        | 	ret
  2011 |          |                           | L_yakc_69:
  2012 | 00000FB3 | 55                        | 	push	bp
  2013 | 00000FB4 | 89E5                      | 	mov	bp, sp
  2014 | 00000FB6 | EBF0                      | 	jmp	L_yakc_70
  2015 |          |                           | 	ALIGN	2
  2016 |          |                           | YKExitISR:
  2017 | 00000FB8 | EB18                      | 	jmp	L_yakc_72
  2018 |          |                           | L_yakc_73:
  2019 | 00000FBA | A1[2A12]                  | 	mov	ax, word [YKISRCallDepth]
  2020 | 00000FBD | 48                        | 	dec	ax
  2021 | 00000FBE | A3[2A12]                  | 	mov	word [YKISRCallDepth], ax
  2022 | 00000FC1 | 85C0                      | 	test	ax, ax
  2023 | 00000FC3 | 7509                      | 	jne	L_yakc_74
  2024 | 00000FC5 | 31C0                      | 	xor	ax, ax
  2025 | 00000FC7 | 50                        | 	push	ax
  2026 | 00000FC8 | E8B7FD                    | 	call	YKScheduler
  2027 | 00000FCB | 83C402                    | 	add	sp, 2
  2028 |          |                           | L_yakc_74:
  2029 | 00000FCE | 89EC                      | 	mov	sp, bp
  2030 | 00000FD0 | 5D                        | 	pop	bp
  2031 | 00000FD1 | C3                        | 	ret
  2032 |          |                           | L_yakc_72:
  2033 | 00000FD2 | 55                        | 	push	bp
  2034 | 00000FD3 | 89E5                      | 	mov	bp, sp
  2035 | 00000FD5 | EBE3                      | 	jmp	L_yakc_73
  2036 | 00000FD7 | 90                        | 	ALIGN	2
  2037 |          |                           | YKCtxSwCount:
  2038 | 00000FD8 | 00<rept>                  | 	TIMES	2 db 0
  2039 |          |                           | YKIdleCount:
  2040 | 00000FDA | 00<rept>                  | 	TIMES	2 db 0
  2041 |          |                           | YKTickNum:
  2042 | 00000FDC | 00<rept>                  | 	TIMES	2 db 0
  2043 |          |                           | YKRdyList:
  2044 | 00000FDE | 00<rept>                  | 	TIMES	2 db 0
  2045 |          |                           | YKSuspList:
  2046 | 00000FE0 | 00<rept>                  | 	TIMES	2 db 0
  2047 |          |                           | YKAvailTCBList:
  2048 | 00000FE2 | 00<rept>                  | 	TIMES	2 db 0
  2049 |          |                           | YKTCBArray:
  2050 | 00000FE4 | 00<rept>                  | 	TIMES	70 db 0
  2051 |          |                           | idleStack:
  2052 | 0000102A | 00<rept>                  | 	TIMES	512 db 0
  2053 |          |                           | YKISRCallDepth:
  2054 | 0000122A | 00<rept>                  | 	TIMES	2 db 0
  2055 |          |                           | YKCurrentlyExecuting:
  2056 | 0000122C | 00<rept>                  | 	TIMES	2 db 0
  2057 |          |                           | ; All kernel routines that are written in assembly are here 
  2058 |          |                           | 
  2059 |          |                           | ; Disables interrupts 
  2060 |          |                           | YKEnterMutex:
  2061 | 0000122E | FA                        | 	cli	; clear interrupt flag to disable interrupts 
  2062 | 0000122F | C3                        | 	ret
  2063 |          |                           | 
  2064 |          |                           | ; Enables Interrupts 
  2065 |          |                           | YKExitMutex:
  2066 | 00001230 | FB                        | 	sti	; set interrupt flag to enable interrupts 
  2067 | 00001231 | C3                        | 	ret
  2068 |          |                           | 
  2069 |          |                           | YKDispatcher:
  2070 |          |                           | 	; So if we are following andy's design
  2071 |          |                           | 	; we will save context here (if the boolean
  2072 |          |                           | 	; passed to us tells us to)
  2073 |          |                           | 	
  2074 |          |                           | 	; Hmm. Should the proper SS and SP be passed to us as an argument?
  2075 |          |                           | 	; Or shall we fetch them ourselves?
  2076 |          |                           | 
  2077 |          |                           | 
  2078 |          |                           | 	; I am TRYING to move what YKRdyList is pointing at into the stack pointer
  2079 |          |                           | 	; Because what YKRdyList points at is the stack pointer of the most ready task
  2080 |          |                           | 	; Incorrect. The value from the dereferenced YKRdyList needs to be 
  2081 |          |                           | 	; dereferenced again to get the proper stack pointer
  2082 |          |                           | 	;mov SP, [YKRdyList]
  2083 | 00001232 | 8B1E[DE0F]                | 	mov BX, [YKRdyList]
  2084 | 00001236 | 8B27                      | 	mov SP, word [BX]
  2085 |          |                           | 
  2086 |          |                           | 	; but in any case we need to restore context
  2087 | 00001238 | 07                        | 	pop ES
  2088 | 00001239 | 1F                        | 	pop DS
  2089 | 0000123A | 5F                        | 	pop DI
  2090 | 0000123B | 5E                        | 	pop SI
  2091 | 0000123C | 5D                        | 	pop BP
  2092 | 0000123D | 5A                        | 	pop DX
  2093 | 0000123E | 59                        | 	pop CX
  2094 | 0000123F | 5B                        | 	pop BX
  2095 | 00001240 | 58                        | 	pop AX
  2096 |          |                           | 	; After this- done by reti
  2097 |          |                           | 	; IP
  2098 |          |                           | 	; CS
  2099 |          |                           | 	; flags
  2100 | 00001241 | CF                        | 	iret
  2101 |          |                           | 
  2102 |          |                           | ; This dispatcher has a bool parameter for whether it needs to save context
  2103 |          |                           | ; @ param: int should_save_context
  2104 |          |                           | ; @ param: int * save_sp_location
  2105 |          |                           | ; @ param: int * save_ss_location
  2106 |          |                           | ; @ param: int * restore_sp_location
  2107 |          |                           | ; @ param: int * restore_ss_location
  2108 |          |                           | YKDispatcher_save_context:
  2109 | 00001242 | FA                        | cli
  2110 |          |                           | 	; Here is where we will deal with our parameters
  2111 | 00001243 | 55                        | 	push bp
  2112 | 00001244 | 89E5                      | 	mov bp, sp
  2113 |          |                           | ; NOTE: WE DO NOT NEED TO SAVE AX. BECAUSE IT IS THE RETURN REGISTER.
  2114 |          |                           | 
  2115 |          |                           | ;	push ax				; gotta save ax
  2116 | 00001246 | 8B4604                    | 	mov ax, word [bp+4]			; getting the bool
  2117 | 00001249 | 85C0                      | 	test ax, ax					; if (ax == 0)
  2118 |          |                           | ;	pop ax				; shouldn't mess up flags
  2119 | 0000124B | 742A                      | 	jz	restoring_context		; If zero, we do NOT store context
  2120 |          |                           | storing_context:
  2121 | 0000124D | 8B4602                    | 	mov AX, [bp+2]	; The return address.
  2122 | 00001250 | 5D                        | 	pop bp
  2123 | 00001251 | 83C402                    | 	add sp, 2
  2124 |          |                           | 	
  2125 | 00001254 | 9C                        | 	pushf
  2126 | 00001255 | 0E                        | 	push CS
  2127 |          |                           | 
  2128 |          |                           | ;	mov AX, ending_dispatcher
  2129 |          |                           | ;	push AX
  2130 |          |                           | ;;	mov AX, [SP+4]	; return address now stored at sp+4
  2131 | 00001256 | 50                        | 	push AX
  2132 |          |                           | 
  2133 | 00001257 | 50                        | 	push AX
  2134 | 00001258 | 53                        | 	push BX
  2135 | 00001259 | 51                        | 	push CX
  2136 | 0000125A | 52                        | 	push DX
  2137 | 0000125B | 55                        | 	push BP						; Maybe not?
  2138 | 0000125C | 56                        | 	push SI
  2139 | 0000125D | 57                        | 	push DI
  2140 | 0000125E | 1E                        | 	push DS
  2141 | 0000125F | 06                        | 	push ES
  2142 |          |                           | 
  2143 | 00001260 | 89E5                      | 	mov bp, sp
  2144 | 00001262 | 83C514                    | 	add bp, 20
  2145 |          |                           | 
  2146 |          |                           | 	; Now we just need to store SS and SP in the proper TCB. (these are parameters)
  2147 |          |                           | 	; 2nd argument, int * save_sp = [bp+6]
  2148 | 00001265 | 8B7606                    | 	mov si, word [bp+6]
  2149 | 00001268 | 8924                      | 	mov word [si], sp
  2150 |          |                           | ;	mov word [bp+6], SP
  2151 |          |                           | 	; 3rd argument, int * save_ss = [bp+8]
  2152 | 0000126A | 8B7608                    | 	mov si, word [bp+8]
  2153 | 0000126D | 8C14                      | 	mov word [si], ss
  2154 |          |                           | ;	mov word [bp+8], SS
  2155 |          |                           | 
  2156 |          |                           | 
  2157 | 0000126F | 8E560C                    | 	mov ss, word[bp+12]
  2158 | 00001272 | 8B660A                    | 	mov sp, word[bp+10]
  2159 | 00001275 | EB06                      | 	jmp real_restoring_context
  2160 |          |                           | 	
  2161 |          |                           | restoring_context:
  2162 |          |                           | ;	sp is still pointing at the return address.
  2163 |          |                           | 
  2164 |          |                           | 	; Now we just need to restore SS and SP from the proper TCB. (parameters)
  2165 |          |                           | 	; 5th argument, int * restore_ss = [bp+12]
  2166 |          |                           | 	; 4th argument, int * restore_sp = [bp+10]
  2167 | 00001277 | 8E560C                    | 	mov ss, word[bp+12]
  2168 | 0000127A | 8B660A                    | 	mov sp, word[bp+10]
  2169 |          |                           | 
  2170 |          |                           | real_restoring_context:
  2171 | 0000127D | 07                        | 	pop ES
  2172 | 0000127E | 1F                        | 	pop DS
  2173 | 0000127F | 5F                        | 	pop DI
  2174 | 00001280 | 5E                        | 	pop SI
  2175 | 00001281 | 5D                        | 	pop BP
  2176 | 00001282 | 5A                        | 	pop DX
  2177 | 00001283 | 59                        | 	pop CX
  2178 | 00001284 | 5B                        | 	pop BX
  2179 | 00001285 | 58                        | 	pop AX
  2180 | 00001286 | CF                        | 	iret			; restores CS, IP, and flags. Starts execution at ENDING_IP
  2181 |          |                           | 
  2182 |          |                           | ;;;ending_dispatcher:
  2183 |          |                           | 	; do all the ending crap of the function
  2184 |          |                           | ;;;	mov sp, bp
  2185 |          |                           | ;;;	pop bp
  2186 |          |                           | ;;;	ret				; Takes us back to the scheduler, and context is restored!
  2187 |          |                           | 
  2188 |          |                           | ;
  2189 |          |                           | ; POSSIBLE SOLUITION
  2190 |          |                           | ; Use assembly macro to
  2191 |          |                           | ; in-line all of this
  2192 |          |                           | ; so it doesn't have to 
  2193 |          |                           | ; be a function call
  2194 |          |                           | ;
  2195 |          |                           | ;
  2196 |          |                           | ; (Start stack)
  2197 |          |                           | ;	IP of task
  2198 |          |                           | ;	return address
  2199 |          |                           | ;	[SP points here]
  2200 |          |                           | ; 
  2201 |          |                           | ; (End stack)
  2202 |          |                           | ;	flags
  2203 |          |                           | ;	CS
  2204 |          |                           | ;	IP
  2205 |          |                           | ;	return address
  2206 |          |                           | ;	[SP points here]
  2207 |          |                           | ;
  2208 |          |                           | ;YKSaveFlagsAndCS:
  2209 |          |                           | ;	sub SP, 4
  2210 |          |                           | ;	push DX			; Save DX
  2211 |          |                           | ;	push CX			; Save CX
  2212 |          |                           | ;	mov DX, SP+12	; DX = IP (to original task)
  2213 |          |                           | ;	mov CX, SP+10	; CX = return address (to whomever called me)
  2214 |          |                           | ;	mov SP+8, DX
  2215 |          |                           | ;	mov SP+6, CX
  2216 |          |                           | ;	pop CX			; Restore CX
  2217 |          |                           | ;	pop DX			; Restore DX
  2218 |          |                           | ;
  2219 |          |                           | ;	add SP, 8
  2220 |          |                           | ;	pushf			; push flags into their proper spot
  2221 |          |                           | ;	push CS			; push CS into its proper spot
  2222 |          |                           | ;	sub SP, 4
  2223 |          |                           | ;	
  2224 |          |                           | ;	jmp YKSaveContext	; Now we are ready to save the rest of context
  2225 |          |                           | 
  2226 |          |                           | ; This saves the context on the current stack frame 
  2227 |          |                           | ; We are assuming this is called from an interrupt
  2228 |          |                           | ;	(if it is not, call YKSaveFlagsAndCS instead)
  2229 |          |                           | ; So we already have flags, CS, and IP saved properly
  2230 |          |                           | ;YKSaveContext:
  2231 |          |                           | ;	;SP + 2 (I think) is return address.
  2232 |          |                           | ;	sub SP, 18	; Get ready to save 9 words onto the stack
  2233 |          |                           | ;	push DX
  2234 |          |                           | ;	mov DX, SP + 22	; mov the return address onto SP 
  2235 |          |                           | ;	mov SP+4, DX	; put it at the end of the stack, ready to be popped
  2236 |          |                           | ;	pop DX
  2237 |          |                           | ;	
  2238 |          |                           | ;	mov [SP+20], AX
  2239 |          |                           | ;	mov SP+18, BX
  2240 |          |                           | ;	mov SP+16, CX
  2241 |          |                           | ;	mov SP+14, DX
  2242 |          |                           | ;	mov SP+12, BP
  2243 |          |                           | ;	mov SP+10, SI
  2244 |          |                           | ;	mov SP+8, DI
  2245 |          |                           | ;	mov SP+6, DS
  2246 |          |                           | ;	mov SP+4, ES
  2247 |          |                           | ;;	; Current stack: return address, empty 
  2248 |          |                           | ;;	push AX	; Each 
  2249 |          |                           | ;	push BX	; one  
  2250 |          |                           | ;	push CX	; is  
  2251 |          |                           | ;	push DX	; sp-2 
  2252 |          |                           | ;	; Instruction Pointer - In interrupt, saved already
  2253 |          |                           | ;	; Stack pointer - Need to be saved seperately
  2254 |          |                           | ;	push BP ; Base pointer 
  2255 |          |                           | ;	push SI ; Source index 
  2256 |          |                           | ;	push DI ; Destination index    
  2257 |          |                           | ;	; Code segment - Saved with IP?
  2258 |          |                           | ;	; Stack segment - saved with SP?
  2259 |          |                           | ;	push DS ; Data segment 
  2260 |          |                           | ;	push ES ; Extra segment 
  2261 |          |                           | ;	; Flags - interrupts already save it
  2262 |          |                           | ;	ret
  2263 |          |                           | 
  2264 |          |                           | ; This restores the context FROM the current stack frame 
  2265 |          |                           | ;YKRestoreContext:
  2266 |          |                           | ;	mov AX, SP+20
  2267 |          |                           | ;	mov BX, SP+18
  2268 |          |                           | ;	mov CX, SP+16
  2269 |          |                           | ;	mov DX, SP+14
  2270 |          |                           | ;	mov BP, SP+12
  2271 |          |                           | ;	mov SI, SP+10
  2272 |          |                           | ;	mov DI, SP+8
  2273 |          |                           | ;	mov DS, SP+6
  2274 |          |                           | ;	mov ES, SP+4
  2275 |          |                           | ;
  2276 |          |                           | ;	push DX
  2277 |          |                           | ;	mov DX, SP+4
  2278 |          |                           | ;	mov SP+22 , DX
  2279 |          |                           | ;	pop DX
  2280 |          |                           | ;	add SP, 18
  2281 |          |                           | ;	ret
  2282 |          |                           | 
  2283 |          |                           | ;	add SP, 2	; This deletes the return address saved when we call'ed YKRestoreContext.
  2284 |          |                           | ;	pop ES
  2285 |          |                           | ;	pop DS
  2286 |          |                           | ;	SS
  2287 |          |                           | ;	CS
  2288 |          |                           | ;	pop DI
  2289 |          |                           | ;	pop SI
  2290 |          |                           | ;	pop BP
  2291 |          |                           | ;	SP
  2292 |          |                           | ;	IP
  2293 |          |                           | 
  2294 |          |                           | ;	pop DX
  2295 |          |                           | ;	pop CX
  2296 |          |                           | ;	pop BX
  2297 |          |                           | ;	pop AX
  2298 |          |                           | ;	reti		; This pops IP, CS, and the flags, and goes to the return address.
  2299 |          |                           | 
  2300 |          |                           | ; Generated by c86 (BYU-NASM) 5.1 (beta) from lab4d_app.i
  2301 |          |                           | 	CPU	8086
  2302 | 00001287 | 90                        | 	ALIGN	2
  2303 | 00001288 | EB28                      | 	jmp	main	; Jump to program start
  2304 |          |                           | L_lab4d_app_2:
  2305 | 0000128A | 5374617274696E6720-       | 	DB	"Starting kernel...",0xA,0
  2306 | 00001293 | 6B65726E656C2E2E2E-       | ...
  2307 | 0000129C | 0A00                      | ...
  2308 |          |                           | L_lab4d_app_1:
  2309 | 0000129E | 4372656174696E6720-       | 	DB	"Creating tasks...",0xA,0
  2310 | 000012A7 | 7461736B732E2E2E0A-       | ...
  2311 | 000012B0 | 00                        | ...
  2312 | 000012B1 | 90                        | 	ALIGN	2
  2313 |          |                           | main:
  2314 | 000012B2 | EB62                      | 	jmp	L_lab4d_app_3
  2315 |          |                           | L_lab4d_app_4:
  2316 | 000012B4 | E859F7                    | 	call	YKInitialize
  2317 | 000012B7 | B8[9E12]                  | 	mov	ax, L_lab4d_app_1
  2318 | 000012BA | 50                        | 	push	ax
  2319 | 000012BB | E86AF1                    | 	call	printString
  2320 | 000012BE | 83C402                    | 	add	sp, 2
  2321 | 000012C1 | B003                      | 	mov	al, 3
  2322 | 000012C3 | 50                        | 	push	ax
  2323 | 000012C4 | B8[6C16]                  | 	mov	ax, (AStk+512)
  2324 | 000012C7 | 50                        | 	push	ax
  2325 | 000012C8 | B8[4213]                  | 	mov	ax, ATask
  2326 | 000012CB | 50                        | 	push	ax
  2327 | 000012CC | E8F3F7                    | 	call	YKNewTask
  2328 | 000012CF | 83C406                    | 	add	sp, 6
  2329 | 000012D2 | B005                      | 	mov	al, 5
  2330 | 000012D4 | 50                        | 	push	ax
  2331 | 000012D5 | B8[6C18]                  | 	mov	ax, (BStk+512)
  2332 | 000012D8 | 50                        | 	push	ax
  2333 | 000012D9 | B8[9613]                  | 	mov	ax, BTask
  2334 | 000012DC | 50                        | 	push	ax
  2335 | 000012DD | E8E2F7                    | 	call	YKNewTask
  2336 | 000012E0 | 83C406                    | 	add	sp, 6
  2337 | 000012E3 | B007                      | 	mov	al, 7
  2338 | 000012E5 | 50                        | 	push	ax
  2339 | 000012E6 | B8[6C1A]                  | 	mov	ax, (CStk+512)
  2340 | 000012E9 | 50                        | 	push	ax
  2341 | 000012EA | B8[EA13]                  | 	mov	ax, CTask
  2342 | 000012ED | 50                        | 	push	ax
  2343 | 000012EE | E8D1F7                    | 	call	YKNewTask
  2344 | 000012F1 | 83C406                    | 	add	sp, 6
  2345 | 000012F4 | B008                      | 	mov	al, 8
  2346 | 000012F6 | 50                        | 	push	ax
  2347 | 000012F7 | B8[6C1C]                  | 	mov	ax, (DStk+512)
  2348 | 000012FA | 50                        | 	push	ax
  2349 | 000012FB | B8[3E14]                  | 	mov	ax, DTask
  2350 | 000012FE | 50                        | 	push	ax
  2351 | 000012FF | E8C0F7                    | 	call	YKNewTask
  2352 | 00001302 | 83C406                    | 	add	sp, 6
  2353 | 00001305 | B8[8A12]                  | 	mov	ax, L_lab4d_app_2
  2354 | 00001308 | 50                        | 	push	ax
  2355 | 00001309 | E81CF1                    | 	call	printString
  2356 | 0000130C | 83C402                    | 	add	sp, 2
  2357 | 0000130F | E874F9                    | 	call	YKRun
  2358 | 00001312 | 89EC                      | 	mov	sp, bp
  2359 | 00001314 | 5D                        | 	pop	bp
  2360 | 00001315 | C3                        | 	ret
  2361 |          |                           | L_lab4d_app_3:
  2362 | 00001316 | 55                        | 	push	bp
  2363 | 00001317 | 89E5                      | 	mov	bp, sp
  2364 | 00001319 | EB99                      | 	jmp	L_lab4d_app_4
  2365 |          |                           | L_lab4d_app_7:
  2366 | 0000131B | 5461736B20412C2064-       | 	DB	"Task A, delaying 2.",0xA,0
  2367 | 00001324 | 656C6179696E672032-       | ...
  2368 | 0000132D | 2E0A00                    | ...
  2369 |          |                           | L_lab4d_app_6:
  2370 | 00001330 | 5461736B2041207374-       | 	DB	"Task A started.",0xA,0
  2371 | 00001339 | 61727465642E0A00          | ...
  2372 | 00001341 | 90                        | 	ALIGN	2
  2373 |          |                           | ATask:
  2374 | 00001342 | EB26                      | 	jmp	L_lab4d_app_8
  2375 |          |                           | L_lab4d_app_9:
  2376 | 00001344 | B8[3013]                  | 	mov	ax, L_lab4d_app_6
  2377 | 00001347 | 50                        | 	push	ax
  2378 | 00001348 | E8DDF0                    | 	call	printString
  2379 | 0000134B | 83C402                    | 	add	sp, 2
  2380 | 0000134E | EB14                      | 	jmp	L_lab4d_app_11
  2381 |          |                           | L_lab4d_app_10:
  2382 | 00001350 | B8[1B13]                  | 	mov	ax, L_lab4d_app_7
  2383 | 00001353 | 50                        | 	push	ax
  2384 | 00001354 | E8D1F0                    | 	call	printString
  2385 | 00001357 | 83C402                    | 	add	sp, 2
  2386 | 0000135A | B80200                    | 	mov	ax, 2
  2387 | 0000135D | 50                        | 	push	ax
  2388 | 0000135E | E89FFA                    | 	call	YKDelayTask
  2389 | 00001361 | 83C402                    | 	add	sp, 2
  2390 |          |                           | L_lab4d_app_11:
  2391 | 00001364 | EBEA                      | 	jmp	L_lab4d_app_10
  2392 |          |                           | L_lab4d_app_12:
  2393 | 00001366 | 89EC                      | 	mov	sp, bp
  2394 | 00001368 | 5D                        | 	pop	bp
  2395 | 00001369 | C3                        | 	ret
  2396 |          |                           | L_lab4d_app_8:
  2397 | 0000136A | 55                        | 	push	bp
  2398 | 0000136B | 89E5                      | 	mov	bp, sp
  2399 | 0000136D | EBD5                      | 	jmp	L_lab4d_app_9
  2400 |          |                           | L_lab4d_app_15:
  2401 | 0000136F | 5461736B20422C2064-       | 	DB	"Task B, delaying 3.",0xA,0
  2402 | 00001378 | 656C6179696E672033-       | ...
  2403 | 00001381 | 2E0A00                    | ...
  2404 |          |                           | L_lab4d_app_14:
  2405 | 00001384 | 5461736B2042207374-       | 	DB	"Task B started.",0xA,0
  2406 | 0000138D | 61727465642E0A00          | ...
  2407 | 00001395 | 90                        | 	ALIGN	2
  2408 |          |                           | BTask:
  2409 | 00001396 | EB26                      | 	jmp	L_lab4d_app_16
  2410 |          |                           | L_lab4d_app_17:
  2411 | 00001398 | B8[8413]                  | 	mov	ax, L_lab4d_app_14
  2412 | 0000139B | 50                        | 	push	ax
  2413 | 0000139C | E889F0                    | 	call	printString
  2414 | 0000139F | 83C402                    | 	add	sp, 2
  2415 | 000013A2 | EB14                      | 	jmp	L_lab4d_app_19
  2416 |          |                           | L_lab4d_app_18:
  2417 | 000013A4 | B8[6F13]                  | 	mov	ax, L_lab4d_app_15
  2418 | 000013A7 | 50                        | 	push	ax
  2419 | 000013A8 | E87DF0                    | 	call	printString
  2420 | 000013AB | 83C402                    | 	add	sp, 2
  2421 | 000013AE | B80300                    | 	mov	ax, 3
  2422 | 000013B1 | 50                        | 	push	ax
  2423 | 000013B2 | E84BFA                    | 	call	YKDelayTask
  2424 | 000013B5 | 83C402                    | 	add	sp, 2
  2425 |          |                           | L_lab4d_app_19:
  2426 | 000013B8 | EBEA                      | 	jmp	L_lab4d_app_18
  2427 |          |                           | L_lab4d_app_20:
  2428 | 000013BA | 89EC                      | 	mov	sp, bp
  2429 | 000013BC | 5D                        | 	pop	bp
  2430 | 000013BD | C3                        | 	ret
  2431 |          |                           | L_lab4d_app_16:
  2432 | 000013BE | 55                        | 	push	bp
  2433 | 000013BF | 89E5                      | 	mov	bp, sp
  2434 | 000013C1 | EBD5                      | 	jmp	L_lab4d_app_17
  2435 |          |                           | L_lab4d_app_23:
  2436 | 000013C3 | 5461736B20432C2064-       | 	DB	"Task C, delaying 5.",0xA,0
  2437 | 000013CC | 656C6179696E672035-       | ...
  2438 | 000013D5 | 2E0A00                    | ...
  2439 |          |                           | L_lab4d_app_22:
  2440 | 000013D8 | 5461736B2043207374-       | 	DB	"Task C started.",0xA,0
  2441 | 000013E1 | 61727465642E0A00          | ...
  2442 | 000013E9 | 90                        | 	ALIGN	2
  2443 |          |                           | CTask:
  2444 | 000013EA | EB26                      | 	jmp	L_lab4d_app_24
  2445 |          |                           | L_lab4d_app_25:
  2446 | 000013EC | B8[D813]                  | 	mov	ax, L_lab4d_app_22
  2447 | 000013EF | 50                        | 	push	ax
  2448 | 000013F0 | E835F0                    | 	call	printString
  2449 | 000013F3 | 83C402                    | 	add	sp, 2
  2450 | 000013F6 | EB14                      | 	jmp	L_lab4d_app_27
  2451 |          |                           | L_lab4d_app_26:
  2452 | 000013F8 | B8[C313]                  | 	mov	ax, L_lab4d_app_23
  2453 | 000013FB | 50                        | 	push	ax
  2454 | 000013FC | E829F0                    | 	call	printString
  2455 | 000013FF | 83C402                    | 	add	sp, 2
  2456 | 00001402 | B80500                    | 	mov	ax, 5
  2457 | 00001405 | 50                        | 	push	ax
  2458 | 00001406 | E8F7F9                    | 	call	YKDelayTask
  2459 | 00001409 | 83C402                    | 	add	sp, 2
  2460 |          |                           | L_lab4d_app_27:
  2461 | 0000140C | EBEA                      | 	jmp	L_lab4d_app_26
  2462 |          |                           | L_lab4d_app_28:
  2463 | 0000140E | 89EC                      | 	mov	sp, bp
  2464 | 00001410 | 5D                        | 	pop	bp
  2465 | 00001411 | C3                        | 	ret
  2466 |          |                           | L_lab4d_app_24:
  2467 | 00001412 | 55                        | 	push	bp
  2468 | 00001413 | 89E5                      | 	mov	bp, sp
  2469 | 00001415 | EBD5                      | 	jmp	L_lab4d_app_25
  2470 |          |                           | L_lab4d_app_31:
  2471 | 00001417 | 5461736B20442C2064-       | 	DB	"Task D, delaying 10.",0xA,0
  2472 | 00001420 | 656C6179696E672031-       | ...
  2473 | 00001429 | 302E0A00                  | ...
  2474 |          |                           | L_lab4d_app_30:
  2475 | 0000142D | 5461736B2044207374-       | 	DB	"Task D started.",0xA,0
  2476 | 00001436 | 61727465642E0A00          | ...
  2477 |          |                           | 	ALIGN	2
  2478 |          |                           | DTask:
  2479 | 0000143E | EB26                      | 	jmp	L_lab4d_app_32
  2480 |          |                           | L_lab4d_app_33:
  2481 | 00001440 | B8[2D14]                  | 	mov	ax, L_lab4d_app_30
  2482 | 00001443 | 50                        | 	push	ax
  2483 | 00001444 | E8E1EF                    | 	call	printString
  2484 | 00001447 | 83C402                    | 	add	sp, 2
  2485 | 0000144A | EB14                      | 	jmp	L_lab4d_app_35
  2486 |          |                           | L_lab4d_app_34:
  2487 | 0000144C | B8[1714]                  | 	mov	ax, L_lab4d_app_31
  2488 | 0000144F | 50                        | 	push	ax
  2489 | 00001450 | E8D5EF                    | 	call	printString
  2490 | 00001453 | 83C402                    | 	add	sp, 2
  2491 | 00001456 | B80A00                    | 	mov	ax, 10
  2492 | 00001459 | 50                        | 	push	ax
  2493 | 0000145A | E8A3F9                    | 	call	YKDelayTask
  2494 | 0000145D | 83C402                    | 	add	sp, 2
  2495 |          |                           | L_lab4d_app_35:
  2496 | 00001460 | EBEA                      | 	jmp	L_lab4d_app_34
  2497 |          |                           | L_lab4d_app_36:
  2498 | 00001462 | 89EC                      | 	mov	sp, bp
  2499 | 00001464 | 5D                        | 	pop	bp
  2500 | 00001465 | C3                        | 	ret
  2501 |          |                           | L_lab4d_app_32:
  2502 | 00001466 | 55                        | 	push	bp
  2503 | 00001467 | 89E5                      | 	mov	bp, sp
  2504 | 00001469 | EBD5                      | 	jmp	L_lab4d_app_33
  2505 | 0000146B | 90                        | 	ALIGN	2
  2506 |          |                           | AStk:
  2507 | 0000146C | 00<rept>                  | 	TIMES	512 db 0
  2508 |          |                           | BStk:
  2509 | 0000166C | 00<rept>                  | 	TIMES	512 db 0
  2510 |          |                           | CStk:
  2511 | 0000186C | 00<rept>                  | 	TIMES	512 db 0
  2512 |          |                           | DStk:
  2513 | 00001A6C | 00<rept>                  | 	TIMES	512 db 0
