 LINE  | ADDRESS  | HEX DUMP                  | ASSEMBLY
-------|----------|---------------------------|----------------------------
     1 |          |                           |         CPU     8086
     2 |          |                           |         ORG     0h
     3 |          |                           | InterruptVectorTable:
     4 |          |                           |         ; Internal x86 Interrupts:
     5 | 00000000 | 00000000                  |         dd      0 ; Reserved (Div err)  ; Int 00h
     6 | 00000004 | 00000000                  |         dd      0 ; Reserved (Step)     ; Int 01h
     7 | 00000008 | 00000000                  |         dd      0 ; Reserved (NMI)      ; Int 02h
     8 | 0000000C | 00000000                  |         dd      0 ; Reserved (Break)    ; Int 03h
     9 | 00000010 | 00000000                  |         dd      0 ; Reserved (Overflow) ; Int 04h
    10 | 00000014 | 00000000                  |         dd      0                       ; Int 05h
    11 | 00000018 | 00000000                  |         dd      0                       ; Int 06h
    12 | 0000001C | 00000000                  |         dd      0                       ; Int 07h
    13 |          |                           |         ; Hardware Interrupts:
    14 | 00000020 | [86080000]                |         dd      isr_reset ; Reset               ; Int 08h (IRQ 0)
    15 | 00000024 | [CA080000]                |         dd      isr_tick ; Tick                ; Int 09h (IRQ 1)
    16 | 00000028 | [A8080000]                |         dd      isr_keypress ; Keyboard            ; Int 0Ah (IRQ 2)
    17 | 0000002C | 00000000                  |         dd      0 ; Simptris Game Over  ; Int 0Bh (IRQ 3)
    18 | 00000030 | 00000000                  |         dd      0 ; Simptris New Piece  ; Int 0Ch (IRQ 4)
    19 | 00000034 | 00000000                  |         dd      0 ; Simptris Received   ; Int 0Dh (IRQ 5)
    20 | 00000038 | 00000000                  |         dd      0 ; Simptris Touchdown  ; Int 0Eh (IRQ 6)
    21 | 0000003C | 00000000                  |         dd      0 ; Simptris Clear      ; Int 0Fh (IRQ 7)
    22 |          |                           |         ; Software Interrupts:
    23 | 00000040 | 00000000                  |         dd      0 ; Reserved (PC BIOS)  ; Int 10h
    24 | 00000044 | 00000000                  |         dd      0                       ; Int 11h
    25 | 00000048 | 00000000                  |         dd      0                       ; Int 12h
    26 | 0000004C | 00000000                  |         dd      0                       ; Int 13h
    27 | 00000050 | 00000000                  |         dd      0                       ; Int 14h
    28 | 00000054 | 00000000                  |         dd      0                       ; Int 15h
    29 | 00000058 | 00000000                  |         dd      0                       ; Int 16h
    30 | 0000005C | 00000000                  |         dd      0                       ; Int 17h
    31 | 00000060 | 00000000                  |         dd      0                       ; Int 18h
    32 | 00000064 | 00000000                  |         dd      0                       ; Int 19h
    33 | 00000068 | 00000000                  |         dd      0                       ; Int 1Ah
    34 | 0000006C | 00000000                  |         dd      0                       ; Int 1Bh
    35 | 00000070 | 00000000                  |         dd      0                       ; Int 1Ch
    36 | 00000074 | 00000000                  |         dd      0                       ; Int 1Dh
    37 | 00000078 | 00000000                  |         dd      0                       ; Int 1Eh
    38 | 0000007C | 00000000                  |         dd      0                       ; Int 1Fh
    39 | 00000080 | 00000000                  |         dd      0                       ; Int 20h
    40 | 00000084 | 00000000                  |         dd      0 ; Reserved (DOS)      ; Int 21h
    41 | 00000088 | 00000000                  |         dd      0 ; Simptris Services   ; Int 22h
    42 | 0000008C | 00000000                  |         dd      0                       ; Int 23h
    43 | 00000090 | 00000000                  |         dd      0                       ; Int 24h
    44 | 00000094 | 00000000                  |         dd      0                       ; Int 25h
    45 | 00000098 | 00000000                  |         dd      0                       ; Int 26h
    46 | 0000009C | 00000000                  |         dd      0                       ; Int 27h
    47 | 000000A0 | 00000000                  |         dd      0                       ; Int 28h
    48 | 000000A4 | 00000000                  |         dd      0                       ; Int 29h
    49 | 000000A8 | 00000000                  |         dd      0                       ; Int 2Ah
    50 | 000000AC | 00000000                  |         dd      0                       ; Int 2Bh
    51 | 000000B0 | 00000000                  |         dd      0                       ; Int 2Ch
    52 | 000000B4 | 00000000                  |         dd      0                       ; Int 2Dh
    53 | 000000B8 | 00000000                  |         dd      0                       ; Int 2Eh
    54 | 000000BC | 00000000                  |         dd      0                       ; Int 2Fh
    55 |          |                           | KeyBuffer:                              ; Address 0xC0
    56 | 000000C0 | 0000                      |         dw      0
    57 |          |                           | NewPieceType:                           ; Address 0xC2
    58 | 000000C2 | 0000                      |         dw      0
    59 |          |                           | NewPieceID:                             ; Address 0xC4
    60 | 000000C4 | 0000                      |         dw      0
    61 |          |                           | NewPieceOrientation:                    ; Address 0xC6
    62 | 000000C6 | 0000                      |         dw      0
    63 |          |                           | NewPieceColumn:                         ; Address 0xC8
    64 | 000000C8 | 0000                      |         dw      0
    65 |          |                           | TouchdownID:                            ; Address 0xCA
    66 | 000000CA | 0000                      | 	dw	0
    67 |          |                           | ScreenBitMap0:                          ; Address 0xCC
    68 | 000000CC | 0000                      |         dw      0
    69 |          |                           | ScreenBitMap1:
    70 | 000000CE | 0000                      |         dw      0
    71 |          |                           | ScreenBitMap2:
    72 | 000000D0 | 0000                      |         dw      0
    73 |          |                           | ScreenBitMap3:
    74 | 000000D2 | 0000                      |         dw      0
    75 |          |                           | ScreenBitMap4:
    76 | 000000D4 | 0000                      |         dw      0
    77 |          |                           | ScreenBitMap5:
    78 | 000000D6 | 0000                      |         dw      0
    79 | 000000D8 | 00<rept>                  | TIMES   100h-($-$$) db  0               ; Fill up to (but not including) address 100h with 0
    80 | 00000100 | E9F510                    | 	jmp	main
    81 |          |                           | ; This file contains support routines for 32-bit on the 8086.
    82 |          |                           | ; It is intended for use code generated by the C86 compiler.
    83 |          |                           | ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    84 |          |                           | SR_asldiv:			; l1 /= l2
    85 | 00000103 | 55                        | 	push	bp
    86 | 00000104 | 89E5                      | 	mov	bp,sp
    87 | 00000106 | 53                        | 	push	bx
    88 | 00000107 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
    89 | 0000010A | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
    90 | 0000010D | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
    91 | 00000110 | FF7702                    | 	push	word [bx+2]	; Push hi l1
    92 | 00000113 | FF37                      | 	push	word [bx]	; Push lo l1
    93 | 00000115 | E83D01                    | 	call	SR_ldiv
    94 | 00000118 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
    95 | 0000011B | 895702                    | 	mov	[bx+2],dx	; Store result
    96 | 0000011E | 8907                      | 	mov	[bx],ax
    97 | 00000120 | 5B                        | 	pop	bx
    98 | 00000121 | 5D                        | 	pop	bp
    99 | 00000122 | C3                        | 	ret
   100 |          |                           | SR_aslmod:			; l1 %= l2
   101 | 00000123 | 55                        | 	push	bp
   102 | 00000124 | 89E5                      | 	mov	bp,sp
   103 | 00000126 | 53                        | 	push	bx
   104 | 00000127 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
   105 | 0000012A | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
   106 | 0000012D | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
   107 | 00000130 | FF7702                    | 	push	word [bx+2]	; Push hi l1
   108 | 00000133 | FF37                      | 	push	word [bx]	; Push lo l1
   109 | 00000135 | E82C01                    | 	call	SR_lmod
   110 | 00000138 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
   111 | 0000013B | 895702                    | 	mov	[bx+2],dx	; Store result
   112 | 0000013E | 8907                      | 	mov	[bx],ax
   113 | 00000140 | 5B                        | 	pop	bx
   114 | 00000141 | 5D                        | 	pop	bp
   115 | 00000142 | C3                        | 	ret
   116 |          |                           | SR_aslmul:			; l1 *= l2
   117 | 00000143 | 55                        | 	push	bp
   118 | 00000144 | 89E5                      | 	mov	bp,sp
   119 | 00000146 | 53                        | 	push	bx
   120 | 00000147 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
   121 | 0000014A | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
   122 | 0000014D | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
   123 | 00000150 | FF7702                    | 	push	word [bx+2]	; Push hi l1
   124 | 00000153 | FF37                      | 	push	word [bx]	; Push lo l1
   125 | 00000155 | E84002                    | 	call	SR_lmul
   126 | 00000158 | 83C408                    | 	add	sp,8
   127 | 0000015B | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
   128 | 0000015E | 895702                    | 	mov	[bx+2],dx	; Store result
   129 | 00000161 | 8907                      | 	mov	[bx],ax
   130 | 00000163 | 5B                        | 	pop	bx
   131 | 00000164 | 5D                        | 	pop	bp
   132 | 00000165 | C3                        | 	ret
   133 |          |                           | SR_aslshl:			; l1 <<= l2
   134 | 00000166 | 55                        | 	push	bp
   135 | 00000167 | 89E5                      | 	mov	bp,sp
   136 | 00000169 | 53                        | 	push	bx
   137 | 0000016A | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
   138 | 0000016D | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
   139 | 00000170 | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
   140 | 00000173 | FF7702                    | 	push	word [bx+2]	; Push hi l1
   141 | 00000176 | FF37                      | 	push	word [bx]	; Push lo l1
   142 | 00000178 | E88801                    | 	call	SR_lshl
   143 | 0000017B | 83C408                    | 	add	sp,8
   144 | 0000017E | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
   145 | 00000181 | 895702                    | 	mov	[bx+2],dx	; Store result
   146 | 00000184 | 8907                      | 	mov	[bx],ax
   147 | 00000186 | 5B                        | 	pop	bx
   148 | 00000187 | 5D                        | 	pop	bp
   149 | 00000188 | C3                        | 	ret
   150 |          |                           | SR_aslshr:			; l1 >>= l2
   151 | 00000189 | 55                        | 	push	bp
   152 | 0000018A | 89E5                      | 	mov	bp,sp
   153 | 0000018C | 53                        | 	push	bx
   154 | 0000018D | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
   155 | 00000190 | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
   156 | 00000193 | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
   157 | 00000196 | FF7702                    | 	push	word [bx+2]	; Push hi l1
   158 | 00000199 | FF37                      | 	push	word [bx]	; Push lo l1
   159 | 0000019B | E89701                    | 	call	SR_lshr
   160 | 0000019E | 83C408                    | 	add	sp,8
   161 | 000001A1 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
   162 | 000001A4 | 895702                    | 	mov	[bx+2],dx	; Store result
   163 | 000001A7 | 8907                      | 	mov	[bx],ax
   164 | 000001A9 | 5B                        | 	pop	bx
   165 | 000001AA | 5D                        | 	pop	bp
   166 | 000001AB | C3                        | 	ret
   167 |          |                           | 
   168 |          |                           | 
   169 |          |                           | SR_asuldiv:			; u1 /= u2
   170 | 000001AC | 55                        | 	push	bp
   171 | 000001AD | 89E5                      | 	mov	bp,sp
   172 | 000001AF | 53                        | 	push	bx
   173 | 000001B0 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   174 | 000001B3 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   175 | 000001B6 | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   176 | 000001B9 | FF7702                    | 	push	word [bx+2]	; Push hi u1
   177 | 000001BC | FF37                      | 	push	word [bx]	; Push lo u1
   178 | 000001BE | E89B00                    | 	call	SR_uldiv
   179 | 000001C1 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   180 | 000001C4 | 895702                    | 	mov	[bx+2],dx	; Store result
   181 | 000001C7 | 8907                      | 	mov	[bx],ax
   182 | 000001C9 | 5B                        | 	pop	bx
   183 | 000001CA | 5D                        | 	pop	bp
   184 | 000001CB | C3                        | 	ret
   185 |          |                           | SR_asilmod:			; u1 %= u2
   186 | 000001CC | 55                        | 	push	bp
   187 | 000001CD | 89E5                      | 	mov	bp,sp
   188 | 000001CF | 53                        | 	push	bx
   189 | 000001D0 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   190 | 000001D3 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   191 | 000001D6 | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   192 | 000001D9 | FF7702                    | 	push	word [bx+2]	; Push hi u1
   193 | 000001DC | FF37                      | 	push	word [bx]	; Push lo u1
   194 | 000001DE | E88B00                    | 	call	SR_ilmod
   195 | 000001E1 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   196 | 000001E4 | 895702                    | 	mov	[bx+2],dx	; Store result
   197 | 000001E7 | 8907                      | 	mov	[bx],ax
   198 | 000001E9 | 5B                        | 	pop	bx
   199 | 000001EA | 5D                        | 	pop	bp
   200 | 000001EB | C3                        | 	ret
   201 |          |                           | SR_asulmul:			; u1 *= u2
   202 | 000001EC | 55                        | 	push	bp
   203 | 000001ED | 89E5                      | 	mov	bp,sp
   204 | 000001EF | 53                        | 	push	bx
   205 | 000001F0 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   206 | 000001F3 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   207 | 000001F6 | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   208 | 000001F9 | FF7702                    | 	push	word [bx+2]	; Push hi u1
   209 | 000001FC | FF37                      | 	push	word [bx]	; Push lo u1
   210 | 000001FE | E89701                    | 	call	SR_ulmul
   211 | 00000201 | 83C408                    | 	add	sp,8
   212 | 00000204 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   213 | 00000207 | 895702                    | 	mov	[bx+2],dx	; Store result
   214 | 0000020A | 8907                      | 	mov	[bx],ax
   215 | 0000020C | 5B                        | 	pop	bx
   216 | 0000020D | 5D                        | 	pop	bp
   217 | 0000020E | C3                        | 	ret
   218 |          |                           | SR_asulshl:			; u1 << u2
   219 | 0000020F | 55                        | 	push	bp
   220 | 00000210 | 89E5                      | 	mov	bp,sp
   221 | 00000212 | 53                        | 	push	bx
   222 | 00000213 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   223 | 00000216 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   224 | 00000219 | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   225 | 0000021C | FF7702                    | 	push	word [bx+2]	; Push hi u1
   226 | 0000021F | FF37                      | 	push	word [bx]	; Push lo u1
   227 | 00000221 | E8DF00                    | 	call	SR_ulshl
   228 | 00000224 | 83C408                    | 	add	sp,8
   229 | 00000227 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   230 | 0000022A | 895702                    | 	mov	[bx+2],dx	; Store result
   231 | 0000022D | 8907                      | 	mov	[bx],ax
   232 | 0000022F | 5B                        | 	pop	bx
   233 | 00000230 | 5D                        | 	pop	bp
   234 | 00000231 | C3                        | 	ret
   235 |          |                           | SR_asulshr:			; u1 >> u2
   236 | 00000232 | 55                        | 	push	bp
   237 | 00000233 | 89E5                      | 	mov	bp,sp
   238 | 00000235 | 53                        | 	push	bx
   239 | 00000236 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   240 | 00000239 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   241 | 0000023C | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   242 | 0000023F | FF7702                    | 	push	word [bx+2]	; Push hi u1
   243 | 00000242 | FF37                      | 	push	word [bx]	; Push lo u1
   244 | 00000244 | E81F01                    | 	call	SR_ulshr
   245 | 00000247 | 83C408                    | 	add	sp,8
   246 | 0000024A | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   247 | 0000024D | 895702                    | 	mov	[bx+2],dx	; Store result
   248 | 00000250 | 8907                      | 	mov	[bx],ax
   249 | 00000252 | 5B                        | 	pop	bx
   250 | 00000253 | 5D                        | 	pop	bp
   251 | 00000254 | C3                        | 	ret
   252 |          |                           | 
   253 |          |                           | 
   254 |          |                           | ; Main 32-bit routines begin here:
   255 |          |                           | 
   256 |          |                           | SR_ldiv:	; N_LDIV@
   257 | 00000255 | 59                        | 	pop    cx
   258 | 00000256 | 0E                        | 	push   cs
   259 | 00000257 | 51                        | 	push   cx
   260 |          |                           | 	; LDIV@
   261 | 00000258 | 31C9                      | 	xor    cx,cx
   262 | 0000025A | EB16                      | 	jmp    LSR_01
   263 |          |                           | SR_uldiv:	; N_LUDIV@
   264 | 0000025C | 59                        | 	pop    cx
   265 | 0000025D | 0E                        | 	push   cs
   266 | 0000025E | 51                        | 	push   cx
   267 |          |                           | 	; F_LUDIV@
   268 | 0000025F | B90100                    | 	mov    cx,0001
   269 | 00000262 | EB0E                      | 	jmp    LSR_01
   270 |          |                           | SR_lmod:	; N_LMOD@
   271 | 00000264 | 59                        | 	pop    cx
   272 | 00000265 | 0E                        | 	push   cs
   273 | 00000266 | 51                        | 	push   cx
   274 |          |                           | 	; F_LMOD@
   275 | 00000267 | B90200                    | 	mov    cx,0002
   276 | 0000026A | EB06                      | 	jmp    LSR_01
   277 |          |                           | SR_ilmod:	; N_LUMOD@
   278 | 0000026C | 59                        | 	pop    cx
   279 | 0000026D | 0E                        | 	push   cs
   280 | 0000026E | 51                        | 	push   cx
   281 |          |                           | 	; LUMOD@
   282 | 0000026F | B90300                    | 	mov    cx,0003
   283 |          |                           | LSR_01:
   284 | 00000272 | 55                        | 	push   bp
   285 | 00000273 | 56                        | 	push   si
   286 | 00000274 | 57                        | 	push   di
   287 | 00000275 | 89E5                      | 	mov    bp,sp
   288 | 00000277 | 89CF                      | 	mov    di,cx
   289 | 00000279 | 8B460A                    | 	mov    ax,[bp+0Ah]
   290 | 0000027C | 8B560C                    | 	mov    dx,[bp+0Ch]
   291 | 0000027F | 8B5E0E                    | 	mov    bx,[bp+0Eh]
   292 | 00000282 | 8B4E10                    | 	mov    cx,[bp+10h]
   293 | 00000285 | 09C9                      | 	or     cx,cx
   294 | 00000287 | 7508                      | 	jne    LSR_02
   295 | 00000289 | 09D2                      | 	or     dx,dx
   296 | 0000028B | 7469                      | 	je     LSR_10
   297 | 0000028D | 09DB                      | 	or     bx,bx
   298 | 0000028F | 7465                      | 	je     LSR_10
   299 |          |                           | LSR_02:
   300 | 00000291 | F7C70100                  | 	test   di,0001
   301 | 00000295 | 751C                      | 	jne    LSR_04
   302 | 00000297 | 09D2                      | 	or     dx,dx
   303 | 00000299 | 790A                      | 	jns    LSR_03
   304 | 0000029B | F7DA                      | 	neg    dx
   305 | 0000029D | F7D8                      | 	neg    ax
   306 | 0000029F | 83DA00                    | 	sbb    dx,0000
   307 | 000002A2 | 83CF0C                    | 	or     di,000Ch
   308 |          |                           | LSR_03:
   309 | 000002A5 | 09C9                      | 	or     cx,cx
   310 | 000002A7 | 790A                      | 	jns    LSR_04
   311 | 000002A9 | F7D9                      | 	neg    cx
   312 | 000002AB | F7DB                      | 	neg    bx
   313 | 000002AD | 83D900                    | 	sbb    cx,0000
   314 | 000002B0 | 83F704                    | 	xor    di,0004
   315 |          |                           | LSR_04:
   316 | 000002B3 | 89CD                      | 	mov    bp,cx
   317 | 000002B5 | B92000                    | 	mov    cx,0020h
   318 | 000002B8 | 57                        | 	push   di
   319 | 000002B9 | 31FF                      | 	xor    di,di
   320 | 000002BB | 31F6                      | 	xor    si,si
   321 |          |                           | LSR_05:
   322 | 000002BD | D1E0                      | 	shl    ax,1
   323 | 000002BF | D1D2                      | 	rcl    dx,1
   324 | 000002C1 | D1D6                      | 	rcl    si,1
   325 | 000002C3 | D1D7                      | 	rcl    di,1
   326 | 000002C5 | 39EF                      | 	cmp    di,bp
   327 | 000002C7 | 720B                      | 	jb     LSR_07
   328 | 000002C9 | 7704                      | 	ja     LSR_06
   329 | 000002CB | 39DE                      | 	cmp    si,bx
   330 | 000002CD | 7205                      | 	jb     LSR_07
   331 |          |                           | LSR_06:
   332 | 000002CF | 29DE                      | 	sub    si,bx
   333 | 000002D1 | 19EF                      | 	sbb    di,bp
   334 | 000002D3 | 40                        | 	inc    ax
   335 |          |                           | LSR_07:
   336 | 000002D4 | E2E7                      | 	loop   LSR_05
   337 | 000002D6 | 5B                        | 	pop    bx
   338 | 000002D7 | F7C30200                  | 	test   bx,0002
   339 | 000002DB | 7406                      | 	je     LSR_08
   340 | 000002DD | 89F0                      | 	mov    ax,si
   341 | 000002DF | 89FA                      | 	mov    dx,di
   342 | 000002E1 | D1EB                      | 	shr    bx,1
   343 |          |                           | LSR_08:
   344 | 000002E3 | F7C30400                  | 	test   bx,0004h
   345 | 000002E7 | 7407                      | 	je     LSR_09
   346 | 000002E9 | F7DA                      | 	neg    dx
   347 | 000002EB | F7D8                      | 	neg    ax
   348 | 000002ED | 83DA00                    | 	sbb    dx,0000
   349 |          |                           | LSR_09:
   350 | 000002F0 | 5F                        | 	pop    di
   351 | 000002F1 | 5E                        | 	pop    si
   352 | 000002F2 | 5D                        | 	pop    bp
   353 | 000002F3 | CA0800                    | 	retf   0008
   354 |          |                           | LSR_10:
   355 | 000002F6 | F7F3                      | 	div    bx
   356 | 000002F8 | F7C70200                  | 	test   di,0002
   357 | 000002FC | 7401                      | 	je     LSR_11
   358 | 000002FE | 92                        | 	xchg   dx,ax
   359 |          |                           | LSR_11:
   360 | 000002FF | 31D2                      | 	xor    dx,dx
   361 | 00000301 | EBED                      | 	jmp    LSR_09
   362 |          |                           | SR_lshl:	; N_LXLSH@
   363 |          |                           | SR_ulshl:
   364 |          |                           | 	; r = a << b
   365 | 00000303 | 5B                        | 	pop    bx
   366 | 00000304 | 0E                        | 	push   cs
   367 | 00000305 | 53                        | 	push   bx
   368 |          |                           | 
   369 | 00000306 | 55                        | 	push   bp
   370 | 00000307 | 89E5                      | 	mov    bp,sp
   371 |          |                           | 
   372 | 00000309 | 51                        | 	push   cx	; C86 doesn't expect use of cx or bx
   373 |          |                           | 
   374 | 0000030A | 8B4606                    | 	mov    ax, [bp+6]	; pop loword(a)
   375 | 0000030D | 8B5608                    | 	mov    dx, [bp+8]	; pop hiword(a)
   376 | 00000310 | 8B4E0A                    | 	mov    cx, [bp+10]	; pop word(b)
   377 |          |                           | 	
   378 |          |                           | 	; LXLSH@
   379 | 00000313 | 80F910                    | 	cmp    cl,10h
   380 | 00000316 | 7312                      | 	jnb    LSR_12
   381 | 00000318 | 89C3                      | 	mov    bx,ax
   382 | 0000031A | D3E0                      | 	shl    ax,cl
   383 | 0000031C | D3E2                      | 	shl    dx,cl
   384 | 0000031E | F6D9                      | 	neg    cl
   385 | 00000320 | 80C110                    | 	add    cl,10h
   386 | 00000323 | D3EB                      | 	shr    bx,cl
   387 | 00000325 | 09DA                      | 	or     dx,bx
   388 | 00000327 | 59                        | 	pop    cx
   389 | 00000328 | 5D                        | 	pop    bp
   390 | 00000329 | CB                        | 	retf
   391 |          |                           | LSR_12:
   392 | 0000032A | 80E910                    | 	sub    cl,10h
   393 | 0000032D | 92                        | 	xchg   dx,ax
   394 | 0000032E | 31C0                      | 	xor    ax,ax
   395 | 00000330 | D3E2                      | 	shl    dx,cl
   396 | 00000332 | 59                        | 	pop    cx
   397 | 00000333 | 5D                        | 	pop    bp
   398 | 00000334 | CB                        | 	retf
   399 |          |                           | SR_lshr:	; N_LXRSH@
   400 |          |                           | 	; r = a >> b
   401 | 00000335 | 5B                        | 	pop    bx
   402 | 00000336 | 0E                        | 	push   cs
   403 | 00000337 | 53                        | 	push   bx
   404 |          |                           | 
   405 | 00000338 | 55                        | 	push   bp
   406 | 00000339 | 89E5                      | 	mov    bp,sp
   407 |          |                           | 
   408 | 0000033B | 51                        | 	push   cx	; C86 doesn't expect use of cx or bx
   409 |          |                           | 
   410 | 0000033C | 8B4606                    |         mov    ax, [bp+6]	; pop loword(a)
   411 | 0000033F | 8B5608                    | 	mov    dx, [bp+8]	; pop hiword(a)
   412 | 00000342 | 8B4E0A                    | 	mov    cx, [bp+10]	; pop word(b)
   413 |          |                           | 	
   414 |          |                           | 	; LXRSH@
   415 | 00000345 | 80F910                    | 	cmp    cl,10h
   416 | 00000348 | 7312                      | 	jnb    LSR_13
   417 | 0000034A | 89D3                      | 	mov    bx,dx
   418 | 0000034C | D3E8                      | 	shr    ax,cl
   419 | 0000034E | D3FA                      | 	sar    dx,cl
   420 | 00000350 | F6D9                      | 	neg    cl
   421 | 00000352 | 80C110                    | 	add    cl,10h
   422 | 00000355 | D3E3                      | 	shl    bx,cl
   423 | 00000357 | 09D8                      | 	or     ax,bx
   424 | 00000359 | 59                        | 	pop    cx
   425 | 0000035A | 5D                        | 	pop    bp
   426 | 0000035B | CB                        | 	retf
   427 |          |                           | LSR_13:
   428 | 0000035C | 80E910                    | 	sub    cl,10h
   429 | 0000035F | 92                        | 	xchg   dx,ax
   430 | 00000360 | 99                        | 	cwd
   431 | 00000361 | D3F8                      | 	sar    ax,cl
   432 | 00000363 | 59                        | 	pop    cx
   433 | 00000364 | 5D                        | 	pop    bp
   434 | 00000365 | CB                        | 	retf
   435 |          |                           | SR_ulshr:	; N_LXURSH@
   436 |          |                           | 	; r = a >> b
   437 | 00000366 | 5B                        | 	pop    bx
   438 | 00000367 | 0E                        | 	push   cs
   439 | 00000368 | 53                        | 	push   bx
   440 |          |                           | 
   441 | 00000369 | 55                        | 	push   bp
   442 | 0000036A | 89E5                      | 	mov    bp,sp
   443 |          |                           | 
   444 | 0000036C | 51                        | 	push   cx	; C86 doesn't expect use of cx or bx
   445 |          |                           | 
   446 | 0000036D | 8B4606                    |         mov    ax, [bp+6]	; pop loword(a)
   447 | 00000370 | 8B5608                    | 	mov    dx, [bp+8]	; pop hiword(a)
   448 | 00000373 | 8B4E0A                    | 	mov    cx, [bp+10]	; pop word(b)
   449 |          |                           | 	
   450 |          |                           | 	; LXURSH@
   451 | 00000376 | 80F910                    | 	cmp    cl,10h
   452 | 00000379 | 7312                      | 	jnb    LSR_14
   453 | 0000037B | 89D3                      | 	mov    bx,dx
   454 | 0000037D | D3E8                      | 	shr    ax,cl
   455 | 0000037F | D3EA                      | 	shr    dx,cl
   456 | 00000381 | F6D9                      | 	neg    cl
   457 | 00000383 | 80C110                    | 	add    cl,10h
   458 | 00000386 | D3E3                      | 	shl    bx,cl
   459 | 00000388 | 09D8                      | 	or     ax,bx
   460 | 0000038A | 59                        | 	pop    cx
   461 | 0000038B | 5D                        | 	pop    bp
   462 | 0000038C | CB                        | 	retf
   463 |          |                           | LSR_14:
   464 | 0000038D | 80E910                    | 	sub    cl,10h
   465 | 00000390 | 92                        | 	xchg   dx,ax
   466 | 00000391 | 31D2                      | 	xor    dx,dx
   467 | 00000393 | D3E8                      | 	shr    ax,cl
   468 | 00000395 | 59                        | 	pop    cx
   469 | 00000396 | 5D                        | 	pop    bp
   470 | 00000397 | CB                        | 	retf
   471 |          |                           | SR_lmul:	; N_LXMUL@
   472 |          |                           | SR_ulmul:
   473 |          |                           | 	; r = a * b
   474 | 00000398 | 55                        | 	push   bp
   475 | 00000399 | 56                        | 	push   si
   476 | 0000039A | 89E5                      | 	mov    bp,sp
   477 |          |                           | 
   478 | 0000039C | 51                        | 	push   cx	; C86 doesn't expect use of cx or bx
   479 | 0000039D | 53                        | 	push   bx
   480 |          |                           | 
   481 | 0000039E | 8B5E06                    |         mov    bx, [bp+6]	; pop loword(a)
   482 | 000003A1 | 8B4E08                    | 	mov    cx, [bp+8]	; pop hiword(a)
   483 | 000003A4 | 8B460A                    | 	mov    ax, [bp+10]	; pop loword(b)
   484 | 000003A7 | 8B560C                    | 	mov    dx, [bp+12]	; pop hiword(b)
   485 |          |                           | 	
   486 | 000003AA | 96                        | 	xchg   si,ax
   487 | 000003AB | 92                        | 	xchg   dx,ax
   488 | 000003AC | 85C0                      | 	test   ax,ax
   489 | 000003AE | 7402                      | 	je     LSR_15
   490 | 000003B0 | F7E3                      | 	mul    bx
   491 |          |                           | LSR_15:
   492 | 000003B2 | E305                      | 	jcxz   LSR_16
   493 | 000003B4 | 91                        | 	xchg   cx,ax
   494 | 000003B5 | F7E6                      | 	mul    si
   495 | 000003B7 | 01C8                      | 	add    ax,cx
   496 |          |                           | LSR_16:
   497 | 000003B9 | 96                        | 	xchg   si,ax
   498 | 000003BA | F7E3                      | 	mul    bx
   499 | 000003BC | 01F2                      | 	add    dx,si
   500 | 000003BE | 5B                        | 	pop    bx
   501 | 000003BF | 59                        | 	pop    cx
   502 | 000003C0 | 5E                        | 	pop    si
   503 | 000003C1 | 5D                        | 	pop    bp
   504 | 000003C2 | C3                        | 	ret
   505 |          |                           | 
   506 |          |                           | ; Generated by c86 (BYU-NASM) 5.1 (beta) from clib.c
   507 |          |                           | 	CPU	8086
   508 | 000003C3 | 90                        | 	ALIGN	2
   509 | 000003C4 | E9310E                    | 	jmp	main	; Jump to program start
   510 |          |                           | new_line:
   511 | 000003C7 | 0D0A24                    | 	db	13,10,36
   512 |          |                           | 	ALIGN	2
   513 |          |                           | signalEOI:
   514 | 000003CA | EB08                      | 	jmp	L_clib_1
   515 |          |                           | L_clib_2:
   516 | 000003CC | B020                      | 	mov	al, 0x20
   517 | 000003CE | E620                      | 	out	0x20, al
   518 | 000003D0 | 89EC                      | 	mov	sp, bp
   519 | 000003D2 | 5D                        | 	pop	bp
   520 | 000003D3 | C3                        | 	ret
   521 |          |                           | L_clib_1:
   522 | 000003D4 | 55                        | 	push	bp
   523 | 000003D5 | 89E5                      | 	mov	bp, sp
   524 | 000003D7 | EBF3                      | 	jmp	L_clib_2
   525 | 000003D9 | 90                        | 	ALIGN	2
   526 |          |                           | exit:
   527 | 000003DA | EB0B                      | 	jmp	L_clib_4
   528 |          |                           | L_clib_5:
   529 | 000003DC | B44C                      | 	mov	ah, 4Ch
   530 | 000003DE | 8A4604                    | 	mov	al, [bp+4]
   531 | 000003E1 | CD21                      | 	int	21h
   532 | 000003E3 | 89EC                      | 	mov	sp, bp
   533 | 000003E5 | 5D                        | 	pop	bp
   534 | 000003E6 | C3                        | 	ret
   535 |          |                           | L_clib_4:
   536 | 000003E7 | 55                        | 	push	bp
   537 | 000003E8 | 89E5                      | 	mov	bp, sp
   538 | 000003EA | EBF0                      | 	jmp	L_clib_5
   539 |          |                           | 	ALIGN	2
   540 |          |                           | print:
   541 | 000003EC | EB11                      | 	jmp	L_clib_7
   542 |          |                           | L_clib_8:
   543 | 000003EE | B440                      | 	mov	ah, 40h
   544 | 000003F0 | BB0100                    | 	mov	bx, 1
   545 | 000003F3 | 8B4E06                    | 	mov	cx, [bp+6]
   546 | 000003F6 | 8B5604                    | 	mov	dx, [bp+4]
   547 | 000003F9 | CD21                      | 	int	21h
   548 | 000003FB | 89EC                      | 	mov	sp, bp
   549 | 000003FD | 5D                        | 	pop	bp
   550 | 000003FE | C3                        | 	ret
   551 |          |                           | L_clib_7:
   552 | 000003FF | 55                        | 	push	bp
   553 | 00000400 | 89E5                      | 	mov	bp, sp
   554 | 00000402 | EBEA                      | 	jmp	L_clib_8
   555 |          |                           | 	ALIGN	2
   556 |          |                           | printChar:
   557 | 00000404 | EB0B                      | 	jmp	L_clib_10
   558 |          |                           | L_clib_11:
   559 | 00000406 | B402                      | 	mov	ah, 2
   560 | 00000408 | 8A5604                    | 	mov	dl, [bp+4]
   561 | 0000040B | CD21                      | 	int	21h
   562 | 0000040D | 89EC                      | 	mov	sp, bp
   563 | 0000040F | 5D                        | 	pop	bp
   564 | 00000410 | C3                        | 	ret
   565 |          |                           | L_clib_10:
   566 | 00000411 | 55                        | 	push	bp
   567 | 00000412 | 89E5                      | 	mov	bp, sp
   568 | 00000414 | EBF0                      | 	jmp	L_clib_11
   569 |          |                           | 	ALIGN	2
   570 |          |                           | printNewLine:
   571 | 00000416 | EB0B                      | 	jmp	L_clib_13
   572 |          |                           | L_clib_14:
   573 | 00000418 | B409                      | 	mov	ah, 9
   574 | 0000041A | BA[C703]                  | 	mov	dx, new_line
   575 | 0000041D | CD21                      | 	int	21h
   576 | 0000041F | 89EC                      | 	mov	sp, bp
   577 | 00000421 | 5D                        | 	pop	bp
   578 | 00000422 | C3                        | 	ret
   579 |          |                           | L_clib_13:
   580 | 00000423 | 55                        | 	push	bp
   581 | 00000424 | 89E5                      | 	mov	bp, sp
   582 | 00000426 | EBF0                      | 	jmp	L_clib_14
   583 |          |                           | 	ALIGN	2
   584 |          |                           | printString:
   585 | 00000428 | EB1C                      | 	jmp	L_clib_16
   586 |          |                           | L_clib_17:
   587 | 0000042A | 31F6                      | 	xor	si,si
   588 | 0000042C | 8B5E04                    | 	mov	bx, [bp+4]
   589 | 0000042F | EB01                      | 	jmp	printString2
   590 |          |                           | 	printString1:
   591 | 00000431 | 46                        | 	inc	si
   592 |          |                           | 	printString2:
   593 | 00000432 | 803800                    | 	cmp	byte [bx+si],0
   594 | 00000435 | 75FA                      | 	jne	printString1
   595 | 00000437 | 89DA                      | 	mov	dx, bx
   596 | 00000439 | 89F1                      | 	mov	cx, si
   597 | 0000043B | B440                      | 	mov	ah, 40h
   598 | 0000043D | BB0100                    | 	mov	bx, 1
   599 | 00000440 | CD21                      | 	int	21h
   600 | 00000442 | 89EC                      | 	mov	sp, bp
   601 | 00000444 | 5D                        | 	pop	bp
   602 | 00000445 | C3                        | 	ret
   603 |          |                           | L_clib_16:
   604 | 00000446 | 55                        | 	push	bp
   605 | 00000447 | 89E5                      | 	mov	bp, sp
   606 | 00000449 | 51                        | 	push	cx
   607 | 0000044A | EBDE                      | 	jmp	L_clib_17
   608 |          |                           | 	ALIGN	2
   609 |          |                           | printInt:
   610 | 0000044C | E99500                    | 	jmp	L_clib_19
   611 |          |                           | L_clib_20:
   612 | 0000044F | C746FE0000                | 	mov	word [bp-2], 0
   613 | 00000454 | C746FC1027                | 	mov	word [bp-4], 10000
   614 | 00000459 | 837E0400                  | 	cmp	word [bp+4], 0
   615 | 0000045D | 7D0F                      | 	jge	L_clib_21
   616 | 0000045F | C646F62D                  | 	mov	byte [bp-10], 45
   617 | 00000463 | FF46FE                    | 	inc	word [bp-2]
   618 | 00000466 | 8B4604                    | 	mov	ax, word [bp+4]
   619 | 00000469 | F7D8                      | 	neg	ax
   620 | 0000046B | 894604                    | 	mov	word [bp+4], ax
   621 |          |                           | L_clib_21:
   622 | 0000046E | 8B4604                    | 	mov	ax, word [bp+4]
   623 | 00000471 | 85C0                      | 	test	ax, ax
   624 | 00000473 | 7507                      | 	jne	L_clib_22
   625 | 00000475 | C746FC0100                | 	mov	word [bp-4], 1
   626 | 0000047A | EB19                      | 	jmp	L_clib_23
   627 |          |                           | L_clib_22:
   628 | 0000047C | EB0C                      | 	jmp	L_clib_25
   629 |          |                           | L_clib_24:
   630 | 0000047E | 8B46FC                    | 	mov	ax, word [bp-4]
   631 | 00000481 | 99                        | 	cwd
   632 | 00000482 | B90A00                    | 	mov	cx, 10
   633 | 00000485 | F7F9                      | 	idiv	cx
   634 | 00000487 | 8946FC                    | 	mov	word [bp-4], ax
   635 |          |                           | L_clib_25:
   636 | 0000048A | 8B4604                    | 	mov	ax, word [bp+4]
   637 | 0000048D | 99                        | 	cwd
   638 | 0000048E | F77EFC                    | 	idiv	word [bp-4]
   639 | 00000491 | 85C0                      | 	test	ax, ax
   640 | 00000493 | 74E9                      | 	je	L_clib_24
   641 |          |                           | L_clib_26:
   642 |          |                           | L_clib_23:
   643 | 00000495 | EB36                      | 	jmp	L_clib_28
   644 |          |                           | L_clib_27:
   645 | 00000497 | 8B4604                    | 	mov	ax, word [bp+4]
   646 | 0000049A | 31D2                      | 	xor	dx, dx
   647 | 0000049C | F776FC                    | 	div	word [bp-4]
   648 | 0000049F | 0430                      | 	add	al, 48
   649 | 000004A1 | 8B76FE                    | 	mov	si, word [bp-2]
   650 | 000004A4 | 8D56F6                    | 	lea	dx, [bp-10]
   651 | 000004A7 | 01D6                      | 	add	si, dx
   652 | 000004A9 | 8804                      | 	mov	byte [si], al
   653 | 000004AB | FF46FE                    | 	inc	word [bp-2]
   654 | 000004AE | 8B4604                    | 	mov	ax, word [bp+4]
   655 | 000004B1 | 31D2                      | 	xor	dx, dx
   656 | 000004B3 | F776FC                    | 	div	word [bp-4]
   657 | 000004B6 | 89D0                      | 	mov	ax, dx
   658 | 000004B8 | 894604                    | 	mov	word [bp+4], ax
   659 | 000004BB | 8B46FC                    | 	mov	ax, word [bp-4]
   660 | 000004BE | 99                        | 	cwd
   661 | 000004BF | B90A00                    | 	mov	cx, 10
   662 | 000004C2 | F7F9                      | 	idiv	cx
   663 | 000004C4 | 8946FC                    | 	mov	word [bp-4], ax
   664 | 000004C7 | 8B46FC                    | 	mov	ax, word [bp-4]
   665 | 000004CA | 8946FC                    | 	mov	word [bp-4], ax
   666 |          |                           | L_clib_28:
   667 | 000004CD | 837EFC00                  | 	cmp	word [bp-4], 0
   668 | 000004D1 | 7FC4                      | 	jg	L_clib_27
   669 |          |                           | L_clib_29:
   670 | 000004D3 | FF76FE                    | 	push	word [bp-2]
   671 | 000004D6 | 8D46F6                    | 	lea	ax, [bp-10]
   672 | 000004D9 | 50                        | 	push	ax
   673 | 000004DA | E80FFF                    | 	call	print
   674 | 000004DD | 83C404                    | 	add	sp, 4
   675 | 000004E0 | 89EC                      | 	mov	sp, bp
   676 | 000004E2 | 5D                        | 	pop	bp
   677 | 000004E3 | C3                        | 	ret
   678 |          |                           | L_clib_19:
   679 | 000004E4 | 55                        | 	push	bp
   680 | 000004E5 | 89E5                      | 	mov	bp, sp
   681 | 000004E7 | 83EC0A                    | 	sub	sp, 10
   682 | 000004EA | E962FF                    | 	jmp	L_clib_20
   683 | 000004ED | 90                        | 	ALIGN	2
   684 |          |                           | printLong:
   685 | 000004EE | E9D200                    | 	jmp	L_clib_31
   686 |          |                           | L_clib_32:
   687 | 000004F1 | C746FE0000                | 	mov	word [bp-2], 0
   688 | 000004F6 | C746FA00CA                | 	mov	word [bp-6], 51712
   689 | 000004FB | C746FC9A3B                | 	mov	word [bp-4], 15258
   690 | 00000500 | 837E0600                  | 	cmp	word [bp+6], 0
   691 | 00000504 | 7F22                      | 	jg	L_clib_33
   692 | 00000506 | 7C06                      | 	jl	L_clib_34
   693 | 00000508 | 837E0400                  | 	cmp	word [bp+4], 0
   694 | 0000050C | 731A                      | 	jae	L_clib_33
   695 |          |                           | L_clib_34:
   696 | 0000050E | C646EF2D                  | 	mov	byte [bp-17], 45
   697 | 00000512 | FF46FE                    | 	inc	word [bp-2]
   698 | 00000515 | 8B4604                    | 	mov	ax, word [bp+4]
   699 | 00000518 | 8B5606                    | 	mov	dx, word [bp+6]
   700 | 0000051B | F7D8                      | 	neg	ax
   701 | 0000051D | 83D200                    | 	adc	dx, 0
   702 | 00000520 | F7DA                      | 	neg	dx
   703 | 00000522 | 894604                    | 	mov	word [bp+4], ax
   704 | 00000525 | 895606                    | 	mov	word [bp+6], dx
   705 |          |                           | L_clib_33:
   706 | 00000528 | 8B4604                    | 	mov	ax, word [bp+4]
   707 | 0000052B | 8B5606                    | 	mov	dx, word [bp+6]
   708 | 0000052E | 09C2                      | 	or	dx, ax
   709 | 00000530 | 750C                      | 	jne	L_clib_35
   710 | 00000532 | C746FA0100                | 	mov	word [bp-6], 1
   711 | 00000537 | C746FC0000                | 	mov	word [bp-4], 0
   712 | 0000053C | EB23                      | 	jmp	L_clib_36
   713 |          |                           | L_clib_35:
   714 | 0000053E | EB0E                      | 	jmp	L_clib_38
   715 |          |                           | L_clib_37:
   716 | 00000540 | B80A00                    | 	mov	ax, 10
   717 | 00000543 | 31D2                      | 	xor	dx, dx
   718 | 00000545 | 52                        | 	push	dx
   719 | 00000546 | 50                        | 	push	ax
   720 | 00000547 | 8D46FA                    | 	lea	ax, [bp-6]
   721 | 0000054A | 50                        | 	push	ax
   722 | 0000054B | E8B5FB                    | 	call	SR_asldiv
   723 |          |                           | L_clib_38:
   724 | 0000054E | FF76FC                    | 	push	word [bp-4]
   725 | 00000551 | FF76FA                    | 	push	word [bp-6]
   726 | 00000554 | FF7606                    | 	push	word [bp+6]
   727 | 00000557 | FF7604                    | 	push	word [bp+4]
   728 | 0000055A | E8F8FC                    | 	call	SR_ldiv
   729 | 0000055D | 09C2                      | 	or	dx, ax
   730 | 0000055F | 74DF                      | 	je	L_clib_37
   731 |          |                           | L_clib_39:
   732 |          |                           | L_clib_36:
   733 | 00000561 | EB41                      | 	jmp	L_clib_41
   734 |          |                           | L_clib_40:
   735 | 00000563 | FF76FC                    | 	push	word [bp-4]
   736 | 00000566 | FF76FA                    | 	push	word [bp-6]
   737 | 00000569 | FF7606                    | 	push	word [bp+6]
   738 | 0000056C | FF7604                    | 	push	word [bp+4]
   739 | 0000056F | E8EAFC                    | 	call	SR_uldiv
   740 | 00000572 | 0430                      | 	add	al, 48
   741 | 00000574 | 8B76FE                    | 	mov	si, word [bp-2]
   742 | 00000577 | 8D56EF                    | 	lea	dx, [bp-17]
   743 | 0000057A | 01D6                      | 	add	si, dx
   744 | 0000057C | 8804                      | 	mov	byte [si], al
   745 | 0000057E | FF46FE                    | 	inc	word [bp-2]
   746 | 00000581 | FF76FC                    | 	push	word [bp-4]
   747 | 00000584 | FF76FA                    | 	push	word [bp-6]
   748 | 00000587 | FF7606                    | 	push	word [bp+6]
   749 | 0000058A | FF7604                    | 	push	word [bp+4]
   750 | 0000058D | E8D4FC                    | 	call	SR_lmod
   751 | 00000590 | 894604                    | 	mov	word [bp+4], ax
   752 | 00000593 | 895606                    | 	mov	word [bp+6], dx
   753 | 00000596 | B80A00                    | 	mov	ax, 10
   754 | 00000599 | 31D2                      | 	xor	dx, dx
   755 | 0000059B | 52                        | 	push	dx
   756 | 0000059C | 50                        | 	push	ax
   757 | 0000059D | 8D46FA                    | 	lea	ax, [bp-6]
   758 | 000005A0 | 50                        | 	push	ax
   759 | 000005A1 | E85FFB                    | 	call	SR_asldiv
   760 |          |                           | L_clib_41:
   761 | 000005A4 | 837EFC00                  | 	cmp	word [bp-4], 0
   762 | 000005A8 | 7FB9                      | 	jg	L_clib_40
   763 | 000005AA | 7506                      | 	jne	L_clib_43
   764 | 000005AC | 837EFA00                  | 	cmp	word [bp-6], 0
   765 | 000005B0 | 77B1                      | 	ja	L_clib_40
   766 |          |                           | L_clib_43:
   767 |          |                           | L_clib_42:
   768 | 000005B2 | FF76FE                    | 	push	word [bp-2]
   769 | 000005B5 | 8D46EF                    | 	lea	ax, [bp-17]
   770 | 000005B8 | 50                        | 	push	ax
   771 | 000005B9 | E830FE                    | 	call	print
   772 | 000005BC | 83C404                    | 	add	sp, 4
   773 | 000005BF | 89EC                      | 	mov	sp, bp
   774 | 000005C1 | 5D                        | 	pop	bp
   775 | 000005C2 | C3                        | 	ret
   776 |          |                           | L_clib_31:
   777 | 000005C3 | 55                        | 	push	bp
   778 | 000005C4 | 89E5                      | 	mov	bp, sp
   779 | 000005C6 | 83EC12                    | 	sub	sp, 18
   780 | 000005C9 | E925FF                    | 	jmp	L_clib_32
   781 |          |                           | 	ALIGN	2
   782 |          |                           | printUInt:
   783 | 000005CC | EB7C                      | 	jmp	L_clib_45
   784 |          |                           | L_clib_46:
   785 | 000005CE | C746FE0000                | 	mov	word [bp-2], 0
   786 | 000005D3 | C746FC1027                | 	mov	word [bp-4], 10000
   787 | 000005D8 | 8B4604                    | 	mov	ax, word [bp+4]
   788 | 000005DB | 85C0                      | 	test	ax, ax
   789 | 000005DD | 7507                      | 	jne	L_clib_47
   790 | 000005DF | C746FC0100                | 	mov	word [bp-4], 1
   791 | 000005E4 | EB1B                      | 	jmp	L_clib_48
   792 |          |                           | L_clib_47:
   793 | 000005E6 | EB0D                      | 	jmp	L_clib_50
   794 |          |                           | L_clib_49:
   795 | 000005E8 | 8B46FC                    | 	mov	ax, word [bp-4]
   796 | 000005EB | 31D2                      | 	xor	dx, dx
   797 | 000005ED | B90A00                    | 	mov	cx, 10
   798 | 000005F0 | F7F1                      | 	div	cx
   799 | 000005F2 | 8946FC                    | 	mov	word [bp-4], ax
   800 |          |                           | L_clib_50:
   801 | 000005F5 | 8B4604                    | 	mov	ax, word [bp+4]
   802 | 000005F8 | 31D2                      | 	xor	dx, dx
   803 | 000005FA | F776FC                    | 	div	word [bp-4]
   804 | 000005FD | 85C0                      | 	test	ax, ax
   805 | 000005FF | 74E7                      | 	je	L_clib_49
   806 |          |                           | L_clib_51:
   807 |          |                           | L_clib_48:
   808 | 00000601 | EB2F                      | 	jmp	L_clib_53
   809 |          |                           | L_clib_52:
   810 | 00000603 | 8B4604                    | 	mov	ax, word [bp+4]
   811 | 00000606 | 31D2                      | 	xor	dx, dx
   812 | 00000608 | F776FC                    | 	div	word [bp-4]
   813 | 0000060B | 0430                      | 	add	al, 48
   814 | 0000060D | 8B76FE                    | 	mov	si, word [bp-2]
   815 | 00000610 | 8D56F6                    | 	lea	dx, [bp-10]
   816 | 00000613 | 01D6                      | 	add	si, dx
   817 | 00000615 | 8804                      | 	mov	byte [si], al
   818 | 00000617 | FF46FE                    | 	inc	word [bp-2]
   819 | 0000061A | 8B4604                    | 	mov	ax, word [bp+4]
   820 | 0000061D | 31D2                      | 	xor	dx, dx
   821 | 0000061F | F776FC                    | 	div	word [bp-4]
   822 | 00000622 | 895604                    | 	mov	word [bp+4], dx
   823 | 00000625 | 8B46FC                    | 	mov	ax, word [bp-4]
   824 | 00000628 | 31D2                      | 	xor	dx, dx
   825 | 0000062A | B90A00                    | 	mov	cx, 10
   826 | 0000062D | F7F1                      | 	div	cx
   827 | 0000062F | 8946FC                    | 	mov	word [bp-4], ax
   828 |          |                           | L_clib_53:
   829 | 00000632 | 8B46FC                    | 	mov	ax, word [bp-4]
   830 | 00000635 | 85C0                      | 	test	ax, ax
   831 | 00000637 | 75CA                      | 	jne	L_clib_52
   832 |          |                           | L_clib_54:
   833 | 00000639 | FF76FE                    | 	push	word [bp-2]
   834 | 0000063C | 8D46F6                    | 	lea	ax, [bp-10]
   835 | 0000063F | 50                        | 	push	ax
   836 | 00000640 | E8A9FD                    | 	call	print
   837 | 00000643 | 83C404                    | 	add	sp, 4
   838 | 00000646 | 89EC                      | 	mov	sp, bp
   839 | 00000648 | 5D                        | 	pop	bp
   840 | 00000649 | C3                        | 	ret
   841 |          |                           | L_clib_45:
   842 | 0000064A | 55                        | 	push	bp
   843 | 0000064B | 89E5                      | 	mov	bp, sp
   844 | 0000064D | 83EC0A                    | 	sub	sp, 10
   845 | 00000650 | E97BFF                    | 	jmp	L_clib_46
   846 | 00000653 | 90                        | 	ALIGN	2
   847 |          |                           | printULong:
   848 | 00000654 | E99E00                    | 	jmp	L_clib_56
   849 |          |                           | L_clib_57:
   850 | 00000657 | C746FE0000                | 	mov	word [bp-2], 0
   851 | 0000065C | C746FA00CA                | 	mov	word [bp-6], 51712
   852 | 00000661 | C746FC9A3B                | 	mov	word [bp-4], 15258
   853 | 00000666 | 8B4604                    | 	mov	ax, word [bp+4]
   854 | 00000669 | 8B5606                    | 	mov	dx, word [bp+6]
   855 | 0000066C | 09C2                      | 	or	dx, ax
   856 | 0000066E | 750C                      | 	jne	L_clib_58
   857 | 00000670 | C746FA0100                | 	mov	word [bp-6], 1
   858 | 00000675 | C746FC0000                | 	mov	word [bp-4], 0
   859 | 0000067A | EB23                      | 	jmp	L_clib_59
   860 |          |                           | L_clib_58:
   861 | 0000067C | EB0E                      | 	jmp	L_clib_61
   862 |          |                           | L_clib_60:
   863 | 0000067E | B80A00                    | 	mov	ax, 10
   864 | 00000681 | 31D2                      | 	xor	dx, dx
   865 | 00000683 | 52                        | 	push	dx
   866 | 00000684 | 50                        | 	push	ax
   867 | 00000685 | 8D46FA                    | 	lea	ax, [bp-6]
   868 | 00000688 | 50                        | 	push	ax
   869 | 00000689 | E820FB                    | 	call	SR_asuldiv
   870 |          |                           | L_clib_61:
   871 | 0000068C | FF76FC                    | 	push	word [bp-4]
   872 | 0000068F | FF76FA                    | 	push	word [bp-6]
   873 | 00000692 | FF7606                    | 	push	word [bp+6]
   874 | 00000695 | FF7604                    | 	push	word [bp+4]
   875 | 00000698 | E8C1FB                    | 	call	SR_uldiv
   876 | 0000069B | 09C2                      | 	or	dx, ax
   877 | 0000069D | 74DF                      | 	je	L_clib_60
   878 |          |                           | L_clib_62:
   879 |          |                           | L_clib_59:
   880 | 0000069F | EB39                      | 	jmp	L_clib_64
   881 |          |                           | L_clib_63:
   882 | 000006A1 | FF76FC                    | 	push	word [bp-4]
   883 | 000006A4 | FF76FA                    | 	push	word [bp-6]
   884 | 000006A7 | FF7606                    | 	push	word [bp+6]
   885 | 000006AA | FF7604                    | 	push	word [bp+4]
   886 | 000006AD | E8ACFB                    | 	call	SR_uldiv
   887 | 000006B0 | 0430                      | 	add	al, 48
   888 | 000006B2 | 8B76FE                    | 	mov	si, word [bp-2]
   889 | 000006B5 | 8D56EF                    | 	lea	dx, [bp-17]
   890 | 000006B8 | 01D6                      | 	add	si, dx
   891 | 000006BA | 8804                      | 	mov	byte [si], al
   892 | 000006BC | FF46FE                    | 	inc	word [bp-2]
   893 | 000006BF | FF76FC                    | 	push	word [bp-4]
   894 | 000006C2 | FF76FA                    | 	push	word [bp-6]
   895 | 000006C5 | 8D4604                    | 	lea	ax, [bp+4]
   896 | 000006C8 | 50                        | 	push	ax
   897 | 000006C9 | E800FB                    | 	call	SR_asilmod
   898 | 000006CC | B80A00                    | 	mov	ax, 10
   899 | 000006CF | 31D2                      | 	xor	dx, dx
   900 | 000006D1 | 52                        | 	push	dx
   901 | 000006D2 | 50                        | 	push	ax
   902 | 000006D3 | 8D46FA                    | 	lea	ax, [bp-6]
   903 | 000006D6 | 50                        | 	push	ax
   904 | 000006D7 | E8D2FA                    | 	call	SR_asuldiv
   905 |          |                           | L_clib_64:
   906 | 000006DA | 8B46FA                    | 	mov	ax, word [bp-6]
   907 | 000006DD | 8B56FC                    | 	mov	dx, word [bp-4]
   908 | 000006E0 | 09C2                      | 	or	dx, ax
   909 | 000006E2 | 75BD                      | 	jne	L_clib_63
   910 |          |                           | L_clib_65:
   911 | 000006E4 | FF76FE                    | 	push	word [bp-2]
   912 | 000006E7 | 8D46EF                    | 	lea	ax, [bp-17]
   913 | 000006EA | 50                        | 	push	ax
   914 | 000006EB | E8FEFC                    | 	call	print
   915 | 000006EE | 83C404                    | 	add	sp, 4
   916 | 000006F1 | 89EC                      | 	mov	sp, bp
   917 | 000006F3 | 5D                        | 	pop	bp
   918 | 000006F4 | C3                        | 	ret
   919 |          |                           | L_clib_56:
   920 | 000006F5 | 55                        | 	push	bp
   921 | 000006F6 | 89E5                      | 	mov	bp, sp
   922 | 000006F8 | 83EC12                    | 	sub	sp, 18
   923 | 000006FB | E959FF                    | 	jmp	L_clib_57
   924 |          |                           | 	ALIGN	2
   925 |          |                           | printByte:
   926 | 000006FE | EB61                      | 	jmp	L_clib_67
   927 |          |                           | L_clib_68:
   928 | 00000700 | 8A4604                    | 	mov	al, byte [bp+4]
   929 | 00000703 | 98                        | 	cbw
   930 | 00000704 | B90400                    | 	mov	cx, 4
   931 | 00000707 | D3F8                      | 	sar	ax, cl
   932 | 00000709 | 83E00F                    | 	and	ax, 15
   933 | 0000070C | 8846FF                    | 	mov	byte [bp-1], al
   934 | 0000070F | 807EFF09                  | 	cmp	byte [bp-1], 9
   935 | 00000713 | 7E0C                      | 	jle	L_clib_69
   936 | 00000715 | 8A46FF                    | 	mov	al, byte [bp-1]
   937 | 00000718 | 98                        | 	cbw
   938 | 00000719 | 83E80A                    | 	sub	ax, 10
   939 | 0000071C | 83C041                    | 	add	ax, 65
   940 | 0000071F | EB07                      | 	jmp	L_clib_70
   941 |          |                           | L_clib_69:
   942 | 00000721 | 8A46FF                    | 	mov	al, byte [bp-1]
   943 | 00000724 | 98                        | 	cbw
   944 | 00000725 | 83C030                    | 	add	ax, 48
   945 |          |                           | L_clib_70:
   946 | 00000728 | 8846FD                    | 	mov	byte [bp-3], al
   947 | 0000072B | 8A4604                    | 	mov	al, byte [bp+4]
   948 | 0000072E | 240F                      | 	and	al, 15
   949 | 00000730 | 8846FF                    | 	mov	byte [bp-1], al
   950 | 00000733 | 807EFF09                  | 	cmp	byte [bp-1], 9
   951 | 00000737 | 7E0C                      | 	jle	L_clib_71
   952 | 00000739 | 8A46FF                    | 	mov	al, byte [bp-1]
   953 | 0000073C | 98                        | 	cbw
   954 | 0000073D | 83E80A                    | 	sub	ax, 10
   955 | 00000740 | 83C041                    | 	add	ax, 65
   956 | 00000743 | EB07                      | 	jmp	L_clib_72
   957 |          |                           | L_clib_71:
   958 | 00000745 | 8A46FF                    | 	mov	al, byte [bp-1]
   959 | 00000748 | 98                        | 	cbw
   960 | 00000749 | 83C030                    | 	add	ax, 48
   961 |          |                           | L_clib_72:
   962 | 0000074C | 8846FE                    | 	mov	byte [bp-2], al
   963 | 0000074F | B80200                    | 	mov	ax, 2
   964 | 00000752 | 50                        | 	push	ax
   965 | 00000753 | 8D46FD                    | 	lea	ax, [bp-3]
   966 | 00000756 | 50                        | 	push	ax
   967 | 00000757 | E892FC                    | 	call	print
   968 | 0000075A | 83C404                    | 	add	sp, 4
   969 | 0000075D | 89EC                      | 	mov	sp, bp
   970 | 0000075F | 5D                        | 	pop	bp
   971 | 00000760 | C3                        | 	ret
   972 |          |                           | L_clib_67:
   973 | 00000761 | 55                        | 	push	bp
   974 | 00000762 | 89E5                      | 	mov	bp, sp
   975 | 00000764 | 83EC04                    | 	sub	sp, 4
   976 | 00000767 | EB97                      | 	jmp	L_clib_68
   977 | 00000769 | 90                        | 	ALIGN	2
   978 |          |                           | printWord:
   979 | 0000076A | EB59                      | 	jmp	L_clib_74
   980 |          |                           | L_clib_75:
   981 | 0000076C | C746FE0300                | 	mov	word [bp-2], 3
   982 | 00000771 | EB3A                      | 	jmp	L_clib_77
   983 |          |                           | L_clib_76:
   984 | 00000773 | 8B4604                    | 	mov	ax, word [bp+4]
   985 | 00000776 | 83E00F                    | 	and	ax, 15
   986 | 00000779 | 8846FD                    | 	mov	byte [bp-3], al
   987 | 0000077C | 807EFD09                  | 	cmp	byte [bp-3], 9
   988 | 00000780 | 7E0C                      | 	jle	L_clib_80
   989 | 00000782 | 8A46FD                    | 	mov	al, byte [bp-3]
   990 | 00000785 | 98                        | 	cbw
   991 | 00000786 | 83E80A                    | 	sub	ax, 10
   992 | 00000789 | 83C041                    | 	add	ax, 65
   993 | 0000078C | EB07                      | 	jmp	L_clib_81
   994 |          |                           | L_clib_80:
   995 | 0000078E | 8A46FD                    | 	mov	al, byte [bp-3]
   996 | 00000791 | 98                        | 	cbw
   997 | 00000792 | 83C030                    | 	add	ax, 48
   998 |          |                           | L_clib_81:
   999 | 00000795 | 8B76FE                    | 	mov	si, word [bp-2]
  1000 | 00000798 | 8D56F9                    | 	lea	dx, [bp-7]
  1001 | 0000079B | 01D6                      | 	add	si, dx
  1002 | 0000079D | 8804                      | 	mov	byte [si], al
  1003 | 0000079F | 8B4604                    | 	mov	ax, word [bp+4]
  1004 | 000007A2 | B90400                    | 	mov	cx, 4
  1005 | 000007A5 | D3F8                      | 	sar	ax, cl
  1006 | 000007A7 | 894604                    | 	mov	word [bp+4], ax
  1007 |          |                           | L_clib_79:
  1008 | 000007AA | FF4EFE                    | 	dec	word [bp-2]
  1009 |          |                           | L_clib_77:
  1010 | 000007AD | 837EFE00                  | 	cmp	word [bp-2], 0
  1011 | 000007B1 | 7DC0                      | 	jge	L_clib_76
  1012 |          |                           | L_clib_78:
  1013 | 000007B3 | B80400                    | 	mov	ax, 4
  1014 | 000007B6 | 50                        | 	push	ax
  1015 | 000007B7 | 8D46F9                    | 	lea	ax, [bp-7]
  1016 | 000007BA | 50                        | 	push	ax
  1017 | 000007BB | E82EFC                    | 	call	print
  1018 | 000007BE | 83C404                    | 	add	sp, 4
  1019 | 000007C1 | 89EC                      | 	mov	sp, bp
  1020 | 000007C3 | 5D                        | 	pop	bp
  1021 | 000007C4 | C3                        | 	ret
  1022 |          |                           | L_clib_74:
  1023 | 000007C5 | 55                        | 	push	bp
  1024 | 000007C6 | 89E5                      | 	mov	bp, sp
  1025 | 000007C8 | 83EC08                    | 	sub	sp, 8
  1026 | 000007CB | EB9F                      | 	jmp	L_clib_75
  1027 | 000007CD | 90                        | 	ALIGN	2
  1028 |          |                           | printDWord:
  1029 | 000007CE | E9AC00                    | 	jmp	L_clib_83
  1030 |          |                           | L_clib_84:
  1031 | 000007D1 | 8D4604                    | 	lea	ax, [bp+4]
  1032 | 000007D4 | 89C6                      | 	mov	si, ax
  1033 | 000007D6 | 8B04                      | 	mov	ax, word [si]
  1034 | 000007D8 | 8946FA                    | 	mov	word [bp-6], ax
  1035 | 000007DB | 8D4604                    | 	lea	ax, [bp+4]
  1036 | 000007DE | 89C6                      | 	mov	si, ax
  1037 | 000007E0 | 83C602                    | 	add	si, 2
  1038 | 000007E3 | 8B04                      | 	mov	ax, word [si]
  1039 | 000007E5 | 8946F8                    | 	mov	word [bp-8], ax
  1040 | 000007E8 | C746FE0300                | 	mov	word [bp-2], 3
  1041 | 000007ED | EB76                      | 	jmp	L_clib_86
  1042 |          |                           | L_clib_85:
  1043 | 000007EF | 8B46FA                    | 	mov	ax, word [bp-6]
  1044 | 000007F2 | 83E00F                    | 	and	ax, 15
  1045 | 000007F5 | 8846FD                    | 	mov	byte [bp-3], al
  1046 | 000007F8 | 807EFD09                  | 	cmp	byte [bp-3], 9
  1047 | 000007FC | 7E0C                      | 	jle	L_clib_89
  1048 | 000007FE | 8A46FD                    | 	mov	al, byte [bp-3]
  1049 | 00000801 | 98                        | 	cbw
  1050 | 00000802 | 83E80A                    | 	sub	ax, 10
  1051 | 00000805 | 83C041                    | 	add	ax, 65
  1052 | 00000808 | EB07                      | 	jmp	L_clib_90
  1053 |          |                           | L_clib_89:
  1054 | 0000080A | 8A46FD                    | 	mov	al, byte [bp-3]
  1055 | 0000080D | 98                        | 	cbw
  1056 | 0000080E | 83C030                    | 	add	ax, 48
  1057 |          |                           | L_clib_90:
  1058 | 00000811 | 8B56FE                    | 	mov	dx, word [bp-2]
  1059 | 00000814 | 83C204                    | 	add	dx, 4
  1060 | 00000817 | 89D6                      | 	mov	si, dx
  1061 | 00000819 | 8D56F0                    | 	lea	dx, [bp-16]
  1062 | 0000081C | 01D6                      | 	add	si, dx
  1063 | 0000081E | 8804                      | 	mov	byte [si], al
  1064 | 00000820 | 8B46FA                    | 	mov	ax, word [bp-6]
  1065 | 00000823 | B90400                    | 	mov	cx, 4
  1066 | 00000826 | D3F8                      | 	sar	ax, cl
  1067 | 00000828 | 8946FA                    | 	mov	word [bp-6], ax
  1068 | 0000082B | 8B46F8                    | 	mov	ax, word [bp-8]
  1069 | 0000082E | 83E00F                    | 	and	ax, 15
  1070 | 00000831 | 8846FD                    | 	mov	byte [bp-3], al
  1071 | 00000834 | 807EFD09                  | 	cmp	byte [bp-3], 9
  1072 | 00000838 | 7E0C                      | 	jle	L_clib_91
  1073 | 0000083A | 8A46FD                    | 	mov	al, byte [bp-3]
  1074 | 0000083D | 98                        | 	cbw
  1075 | 0000083E | 83E80A                    | 	sub	ax, 10
  1076 | 00000841 | 83C041                    | 	add	ax, 65
  1077 | 00000844 | EB07                      | 	jmp	L_clib_92
  1078 |          |                           | L_clib_91:
  1079 | 00000846 | 8A46FD                    | 	mov	al, byte [bp-3]
  1080 | 00000849 | 98                        | 	cbw
  1081 | 0000084A | 83C030                    | 	add	ax, 48
  1082 |          |                           | L_clib_92:
  1083 | 0000084D | 8B76FE                    | 	mov	si, word [bp-2]
  1084 | 00000850 | 8D56F0                    | 	lea	dx, [bp-16]
  1085 | 00000853 | 01D6                      | 	add	si, dx
  1086 | 00000855 | 8804                      | 	mov	byte [si], al
  1087 | 00000857 | 8B46F8                    | 	mov	ax, word [bp-8]
  1088 | 0000085A | B90400                    | 	mov	cx, 4
  1089 | 0000085D | D3F8                      | 	sar	ax, cl
  1090 | 0000085F | 8946F8                    | 	mov	word [bp-8], ax
  1091 |          |                           | L_clib_88:
  1092 | 00000862 | FF4EFE                    | 	dec	word [bp-2]
  1093 |          |                           | L_clib_86:
  1094 | 00000865 | 837EFE00                  | 	cmp	word [bp-2], 0
  1095 | 00000869 | 7D84                      | 	jge	L_clib_85
  1096 |          |                           | L_clib_87:
  1097 | 0000086B | B80800                    | 	mov	ax, 8
  1098 | 0000086E | 50                        | 	push	ax
  1099 | 0000086F | 8D46F0                    | 	lea	ax, [bp-16]
  1100 | 00000872 | 50                        | 	push	ax
  1101 | 00000873 | E876FB                    | 	call	print
  1102 | 00000876 | 83C404                    | 	add	sp, 4
  1103 | 00000879 | 89EC                      | 	mov	sp, bp
  1104 | 0000087B | 5D                        | 	pop	bp
  1105 | 0000087C | C3                        | 	ret
  1106 |          |                           | L_clib_83:
  1107 | 0000087D | 55                        | 	push	bp
  1108 | 0000087E | 89E5                      | 	mov	bp, sp
  1109 | 00000880 | 83EC10                    | 	sub	sp, 16
  1110 | 00000883 | E94BFF                    | 	jmp	L_clib_84
  1111 |          |                           | 
  1112 |          |                           | 
  1113 |          |                           | ; 1    Save the context of whatever was running by pushing all registers onto the stack, except SP, SS, CS, IP, and the flags.
  1114 |          |                           | ; 2    Enable interrupts to allow higher priority IRQs to interrupt.
  1115 |          |                           | ; 3    Run the interrupt handler, which is usually a C function that does the work for this interrupt.
  1116 |          |                           | ; 4    Disable interrupts.
  1117 |          |                           | ; 5    Send the EOI command to the PIC, informing it that the handler is finished.
  1118 |          |                           | ; 6    Restore the context of what was running before the interrupt occurred by popping the registers saved in step 1 off the stack.
  1119 |          |                           | ; 7    Execute the iret instruction. This restores in one atomic operation the values for IP, CS, and the flags, which were automatically saved on the stack by the processor when the interrupt occurred. This effecti
  1120 |          |                           | 
  1121 |          |                           | 
  1122 |          |                           | 
  1123 |          |                           | 
  1124 |          |                           | isr_reset:
  1125 |          |                           | 	; save context
  1126 | 00000886 | 50                        | 	push ax
  1127 | 00000887 | 53                        | 	push bx
  1128 | 00000888 | 51                        | 	push cx
  1129 | 00000889 | 52                        | 	push dx
  1130 | 0000088A | 56                        | 	push si
  1131 | 0000088B | 57                        | 	push di
  1132 | 0000088C | 55                        | 	push bp
  1133 | 0000088D | 06                        | 	push es
  1134 | 0000088E | 1E                        | 	push ds
  1135 |          |                           | 	
  1136 | 0000088F | E8F208                    | 	call YKEnterISR
  1137 |          |                           | 	; enable interrupts for higher priority IRQ
  1138 | 00000892 | FB                        | 	sti	
  1139 |          |                           | 
  1140 |          |                           | 	; run interrupt handler
  1141 |          |                           | 	
  1142 |          |                           | 	; disable interrupts
  1143 |          |                           | 	; sent EOI to PIC
  1144 |          |                           | 	; restore context
  1145 |          |                           | 
  1146 |          |                           | 	; But we don't have to do any of that, because we ARE the highest-priority interrupt
  1147 |          |                           | 	; And it will end the program. So no saving context, no enabling interrupts, 
  1148 |          |                           | 	; and no restoring context.
  1149 | 00000893 | E85A00                    | 	call c_isr_reset
  1150 |          |                           | 	
  1151 | 00000896 | E8EB08                    | 	call YKExitISR
  1152 |          |                           | 
  1153 | 00000899 | FA                        | 	cli
  1154 |          |                           | 	
  1155 | 0000089A | B020                      | 	mov	al, 0x20
  1156 | 0000089C | E620                      | 	out 	0x20, al
  1157 |          |                           | 
  1158 | 0000089E | 1F                        | 	pop ds
  1159 | 0000089F | 07                        | 	pop es
  1160 | 000008A0 | 5D                        | 	pop bp
  1161 | 000008A1 | 5F                        | 	pop di
  1162 | 000008A2 | 5E                        | 	pop si
  1163 | 000008A3 | 5A                        | 	pop dx
  1164 | 000008A4 | 59                        | 	pop cx
  1165 | 000008A5 | 5B                        | 	pop bx
  1166 | 000008A6 | 58                        | 	pop ax	
  1167 |          |                           | 
  1168 |          |                           | 
  1169 | 000008A7 | CF                        | 	iret	; This should not even happen.
  1170 |          |                           | 
  1171 |          |                           | 
  1172 |          |                           | 
  1173 |          |                           | isr_keypress:
  1174 |          |                           | 		; Save context
  1175 | 000008A8 | 50                        | 	push ax
  1176 | 000008A9 | 53                        | 	push bx
  1177 | 000008AA | 51                        | 	push cx
  1178 | 000008AB | 52                        | 	push dx
  1179 | 000008AC | 56                        | 	push si
  1180 | 000008AD | 57                        | 	push di
  1181 | 000008AE | 55                        | 	push bp
  1182 | 000008AF | 06                        | 	push es
  1183 | 000008B0 | 1E                        | 	push ds
  1184 |          |                           | 
  1185 | 000008B1 | E8D008                    | 	call YKEnterISR
  1186 |          |                           | 
  1187 |          |                           | 		; Enable interrupts for higher-priority 
  1188 | 000008B4 | FB                        | 	sti
  1189 |          |                           | 
  1190 |          |                           | 		; Run interrupt handler
  1191 | 000008B5 | E8BC00                    | 	call c_isr_keypress
  1192 |          |                           | 
  1193 | 000008B8 | E8C908                    | 	call YKExitISR
  1194 |          |                           | 
  1195 |          |                           | 		; disable interrupts
  1196 | 000008BB | FA                        | 	cli
  1197 |          |                           | 
  1198 |          |                           | 		;send EOI to PIC
  1199 | 000008BC | B020                      | 	mov	al, 0x20	; Load nonspecific EOI value (0x20) into register al
  1200 | 000008BE | E620                      | 	out	0x20, al	; Write EOI to PIC (port 0x20)
  1201 |          |                           | 
  1202 |          |                           | 		; Restore context
  1203 | 000008C0 | 1F                        | 	pop ds
  1204 | 000008C1 | 07                        | 	pop es
  1205 | 000008C2 | 5D                        | 	pop bp
  1206 | 000008C3 | 5F                        | 	pop di
  1207 | 000008C4 | 5E                        | 	pop si
  1208 | 000008C5 | 5A                        | 	pop dx
  1209 | 000008C6 | 59                        | 	pop cx
  1210 | 000008C7 | 5B                        | 	pop bx
  1211 | 000008C8 | 58                        | 	pop ax
  1212 |          |                           | 
  1213 |          |                           | 		; Execute IRET
  1214 | 000008C9 | CF                        | 	iret
  1215 |          |                           | 
  1216 |          |                           | 
  1217 |          |                           | 
  1218 |          |                           | isr_tick:
  1219 |          |                           | 		; Save context
  1220 | 000008CA | 50                        | 	push ax
  1221 | 000008CB | 53                        | 	push bx
  1222 | 000008CC | 51                        | 	push cx
  1223 | 000008CD | 52                        | 	push dx
  1224 | 000008CE | 56                        | 	push si
  1225 | 000008CF | 57                        | 	push di
  1226 | 000008D0 | 55                        | 	push bp
  1227 | 000008D1 | 06                        | 	push es
  1228 | 000008D2 | 1E                        | 	push ds
  1229 |          |                           | 	
  1230 | 000008D3 | E8AE08                    | 	call YKEnterISR
  1231 |          |                           | 
  1232 |          |                           | 		; Enable interrupts for higher-priority 
  1233 | 000008D6 | FB                        | 	sti
  1234 |          |                           | 
  1235 |          |                           | 		; Run interrupt handler
  1236 | 000008D7 | E83400                    | 	call c_isr_tick
  1237 |          |                           | 
  1238 | 000008DA | E8A708                    | 	call YKExitISR
  1239 |          |                           | 
  1240 |          |                           | 		; disable interrupts
  1241 | 000008DD | FA                        | 	cli
  1242 |          |                           | 
  1243 |          |                           | 		;send EOI to PIC
  1244 | 000008DE | B020                      | 	mov	al, 0x20	; Load nonspecific EOI value (0x20) into register al
  1245 | 000008E0 | E620                      | 	out	0x20, al	; Write EOI to PIC (port 0x20)
  1246 |          |                           | 
  1247 |          |                           | 		; Restore context
  1248 | 000008E2 | 1F                        | 	pop ds
  1249 | 000008E3 | 07                        | 	pop es
  1250 | 000008E4 | 5D                        | 	pop bp
  1251 | 000008E5 | 5F                        | 	pop di
  1252 | 000008E6 | 5E                        | 	pop si
  1253 | 000008E7 | 5A                        | 	pop dx
  1254 | 000008E8 | 59                        | 	pop cx
  1255 | 000008E9 | 5B                        | 	pop bx
  1256 | 000008EA | 58                        | 	pop ax
  1257 |          |                           | 
  1258 |          |                           | 		; Execute IRET
  1259 | 000008EB | CF                        | 	iret
  1260 |          |                           | ; Generated by c86 (BYU-NASM) 5.1 (beta) from myinth.i
  1261 |          |                           | 	CPU	8086
  1262 |          |                           | 	ALIGN	2
  1263 | 000008EC | E90909                    | 	jmp	main	; Jump to program start
  1264 | 000008EF | 90                        | 	ALIGN	2
  1265 |          |                           | c_isr_reset:
  1266 |          |                           | 	; >>>>> Line:	13
  1267 |          |                           | 	; >>>>> void c_isr_reset(){ 
  1268 | 000008F0 | EB0D                      | 	jmp	L_myinth_1
  1269 |          |                           | L_myinth_2:
  1270 |          |                           | 	; >>>>> Line:	15
  1271 |          |                           | 	; >>>>> exit(0); 
  1272 | 000008F2 | 30C0                      | 	xor	al, al
  1273 | 000008F4 | 50                        | 	push	ax
  1274 | 000008F5 | E8E2FA                    | 	call	exit
  1275 | 000008F8 | 83C402                    | 	add	sp, 2
  1276 | 000008FB | 89EC                      | 	mov	sp, bp
  1277 | 000008FD | 5D                        | 	pop	bp
  1278 | 000008FE | C3                        | 	ret
  1279 |          |                           | L_myinth_1:
  1280 | 000008FF | 55                        | 	push	bp
  1281 | 00000900 | 89E5                      | 	mov	bp, sp
  1282 | 00000902 | EBEE                      | 	jmp	L_myinth_2
  1283 |          |                           | 	ALIGN	2
  1284 |          |                           | L_myinth_4:
  1285 | 00000904 | 0000                      | 	DW	0
  1286 |          |                           | L_myinth_5:
  1287 | 00000906 | 0A5449434B2000            | 	DB	0xA,"TICK ",0
  1288 | 0000090D | 90                        | 	ALIGN	2
  1289 |          |                           | c_isr_tick:
  1290 |          |                           | 	; >>>>> Line:	18
  1291 |          |                           | 	; >>>>> void c_isr_tick(){ 
  1292 | 0000090E | EB22                      | 	jmp	L_myinth_6
  1293 |          |                           | L_myinth_7:
  1294 |          |                           | 	; >>>>> Line:	21
  1295 |          |                           | 	; >>>>> printString("\nTICK "); 
  1296 | 00000910 | B8[0609]                  | 	mov	ax, L_myinth_5
  1297 | 00000913 | 50                        | 	push	ax
  1298 | 00000914 | E811FB                    | 	call	printString
  1299 | 00000917 | 83C402                    | 	add	sp, 2
  1300 |          |                           | 	; >>>>> Line:	22
  1301 |          |                           | 	; >>>>> printInt(tick_number++); 
  1302 | 0000091A | A1[0409]                  | 	mov	ax, word [L_myinth_4]
  1303 | 0000091D | FF06[0409]                | 	inc	word [L_myinth_4]
  1304 | 00000921 | 50                        | 	push	ax
  1305 | 00000922 | E827FB                    | 	call	printInt
  1306 | 00000925 | 83C402                    | 	add	sp, 2
  1307 |          |                           | 	; >>>>> Line:	23
  1308 |          |                           | 	; >>>>> printNewLine(); 
  1309 | 00000928 | E8EBFA                    | 	call	printNewLine
  1310 |          |                           | 	; >>>>> Line:	24
  1311 |          |                           | 	; >>>>> YKTickHandler(); 
  1312 | 0000092B | E8FA05                    | 	call	YKTickHandler
  1313 | 0000092E | 89EC                      | 	mov	sp, bp
  1314 | 00000930 | 5D                        | 	pop	bp
  1315 | 00000931 | C3                        | 	ret
  1316 |          |                           | L_myinth_6:
  1317 | 00000932 | 55                        | 	push	bp
  1318 | 00000933 | 89E5                      | 	mov	bp, sp
  1319 | 00000935 | EBD9                      | 	jmp	L_myinth_7
  1320 |          |                           | L_myinth_12:
  1321 | 00000937 | 292049474E4F524544-       | 	DB	") IGNORED",0xA,0
  1322 | 00000940 | 0A00                      | ...
  1323 |          |                           | L_myinth_11:
  1324 | 00000942 | 0A4B45595052455353-       | 	DB	0xA,"KEYPRESS (",0
  1325 | 0000094B | 202800                    | ...
  1326 |          |                           | L_myinth_10:
  1327 | 0000094E | 0A44454C415920434F-       | 	DB	0xA,"DELAY COMPLETE",0xA,0
  1328 | 00000957 | 4D504C4554450A00          | ...
  1329 |          |                           | L_myinth_9:
  1330 | 0000095F | 0A44454C4159204B45-       | 	DB	0xA,"DELAY KEY PRESSED",0xA,0
  1331 | 00000968 | 592050524553534544-       | ...
  1332 | 00000971 | 0A00                      | ...
  1333 | 00000973 | 90                        | 	ALIGN	2
  1334 |          |                           | c_isr_keypress:
  1335 |          |                           | 	; >>>>> Line:	27
  1336 |          |                           | 	; >>>>> void c_isr_keypress(){ 
  1337 | 00000974 | EB46                      | 	jmp	L_myinth_13
  1338 |          |                           | L_myinth_14:
  1339 |          |                           | 	; >>>>> Line:	31
  1340 |          |                           | 	; >>>>> if(c == 'd'){ 
  1341 | 00000976 | A0[C000]                  | 	mov	al, byte [KeyBuffer]
  1342 | 00000979 | 8846FF                    | 	mov	byte [bp-1], al
  1343 |          |                           | 	; >>>>> Line:	31
  1344 |          |                           | 	; >>>>> if(c == 'd'){ 
  1345 | 0000097C | 807EFF64                  | 	cmp	byte [bp-1], 100
  1346 | 00000980 | 7519                      | 	jne	L_myinth_15
  1347 |          |                           | 	; >>>>> Line:	32
  1348 |          |                           | 	; >>>>> printString("\nDELAY KEY PRESSED\n"); 
  1349 | 00000982 | B8[5F09]                  | 	mov	ax, L_myinth_9
  1350 | 00000985 | 50                        | 	push	ax
  1351 | 00000986 | E89FFA                    | 	call	printString
  1352 | 00000989 | 83C402                    | 	add	sp, 2
  1353 |          |                           | 	; >>>>> Line:	33
  1354 |          |                           | 	; >>>>> delay(); 
  1355 | 0000098C | E83300                    | 	call	delay
  1356 |          |                           | 	; >>>>> Line:	34
  1357 |          |                           | 	; >>>>> printString("\nDELAY COMPLETE\n"); 
  1358 | 0000098F | B8[4E09]                  | 	mov	ax, L_myinth_10
  1359 | 00000992 | 50                        | 	push	ax
  1360 | 00000993 | E892FA                    | 	call	printString
  1361 | 00000996 | 83C402                    | 	add	sp, 2
  1362 | 00000999 | EB1D                      | 	jmp	L_myinth_16
  1363 |          |                           | L_myinth_15:
  1364 |          |                           | 	; >>>>> Line:	36
  1365 |          |                           | 	; >>>>> printString("\nKEYPRESS ("); 
  1366 | 0000099B | B8[4209]                  | 	mov	ax, L_myinth_11
  1367 | 0000099E | 50                        | 	push	ax
  1368 | 0000099F | E886FA                    | 	call	printString
  1369 | 000009A2 | 83C402                    | 	add	sp, 2
  1370 |          |                           | 	; >>>>> Line:	37
  1371 |          |                           | 	; >>>>> printChar(c); 
  1372 | 000009A5 | FF76FF                    | 	push	word [bp-1]
  1373 | 000009A8 | E859FA                    | 	call	printChar
  1374 | 000009AB | 83C402                    | 	add	sp, 2
  1375 |          |                           | 	; >>>>> Line:	38
  1376 |          |                           | 	; >>>>> printString(") IGNORED\n"); 
  1377 | 000009AE | B8[3709]                  | 	mov	ax, L_myinth_12
  1378 | 000009B1 | 50                        | 	push	ax
  1379 | 000009B2 | E873FA                    | 	call	printString
  1380 | 000009B5 | 83C402                    | 	add	sp, 2
  1381 |          |                           | L_myinth_16:
  1382 | 000009B8 | 89EC                      | 	mov	sp, bp
  1383 | 000009BA | 5D                        | 	pop	bp
  1384 | 000009BB | C3                        | 	ret
  1385 |          |                           | L_myinth_13:
  1386 | 000009BC | 55                        | 	push	bp
  1387 | 000009BD | 89E5                      | 	mov	bp, sp
  1388 | 000009BF | 51                        | 	push	cx
  1389 | 000009C0 | EBB4                      | 	jmp	L_myinth_14
  1390 |          |                           | 	ALIGN	2
  1391 |          |                           | delay:
  1392 |          |                           | 	; >>>>> Line:	43
  1393 |          |                           | 	; >>>>> void delay(){ 
  1394 | 000009C2 | EB1A                      | 	jmp	L_myinth_18
  1395 |          |                           | L_myinth_19:
  1396 |          |                           | 	; >>>>> Line:	45
  1397 |          |                           | 	; >>>>> for(i=0; i<5000; i++){ 
  1398 | 000009C4 | C746FE0000                | 	mov	word [bp-2], 0
  1399 |          |                           | 	; >>>>> Line:	45
  1400 |          |                           | 	; >>>>> for(i=0; i<5000; i++){ 
  1401 | 000009C9 | C746FE0000                | 	mov	word [bp-2], 0
  1402 | 000009CE | EB03                      | 	jmp	L_myinth_21
  1403 |          |                           | L_myinth_20:
  1404 |          |                           | L_myinth_23:
  1405 |          |                           | 	; >>>>> Line:	46
  1406 |          |                           | 	; >>>>> ; 
  1407 | 000009D0 | FF46FE                    | 	inc	word [bp-2]
  1408 |          |                           | L_myinth_21:
  1409 | 000009D3 | 817EFE8813                | 	cmp	word [bp-2], 5000
  1410 | 000009D8 | 7CF6                      | 	jl	L_myinth_20
  1411 |          |                           | L_myinth_22:
  1412 | 000009DA | 89EC                      | 	mov	sp, bp
  1413 | 000009DC | 5D                        | 	pop	bp
  1414 | 000009DD | C3                        | 	ret
  1415 |          |                           | L_myinth_18:
  1416 | 000009DE | 55                        | 	push	bp
  1417 | 000009DF | 89E5                      | 	mov	bp, sp
  1418 | 000009E1 | 51                        | 	push	cx
  1419 | 000009E2 | EBE0                      | 	jmp	L_myinth_19
  1420 |          |                           | ; Generated by c86 (BYU-NASM) 5.1 (beta) from yakc.i
  1421 |          |                           | 	CPU	8086
  1422 |          |                           | 	ALIGN	2
  1423 | 000009E4 | E91108                    | 	jmp	main	; Jump to program start
  1424 |          |                           | started_running:
  1425 | 000009E7 | 00                        | 	DB	0
  1426 |          |                           | 	ALIGN	2
  1427 |          |                           | YKInitialize:
  1428 |          |                           | 	; >>>>> Line:	29
  1429 |          |                           | 	; >>>>> void YKInitialize(void){ 
  1430 | 000009E8 | EB66                      | 	jmp	L_yakc_1
  1431 |          |                           | L_yakc_2:
  1432 |          |                           | 	; >>>>> Line:	33
  1433 |          |                           | 	; >>>>> YKCtxSwCount = 0; 
  1434 | 000009EA | C706[3E0F]0000            | 	mov	word [YKCtxSwCount], 0
  1435 |          |                           | 	; >>>>> Line:	34
  1436 |          |                           | 	; >>>>> YKIdleCount = 0; 
  1437 | 000009F0 | C706[400F]0000            | 	mov	word [YKIdleCount], 0
  1438 |          |                           | 	; >>>>> Line:	35
  1439 |          |                           | 	; >>>>> YKCurrentlyExecuting = 0; 
  1440 | 000009F6 | C706[8211]0000            | 	mov	word [YKCurrentlyExecuting], 0
  1441 |          |                           | 	; >>>>> Line:	42
  1442 |          |                           | 	; >>>>> YKAvailTCBList = &(YKTCBArray[0]); 
  1443 | 000009FC | C706[480F][4A0F]          | 	mov	word [YKAvailTCBList], YKTCBArray
  1444 |          |                           | 	; >>>>> Line:	43
  1445 |          |                           | 	; >>>>> for (i = 0; i < 3; i++) 
  1446 | 00000A02 | C746FE0000                | 	mov	word [bp-2], 0
  1447 | 00000A07 | EB26                      | 	jmp	L_yakc_4
  1448 |          |                           | L_yakc_3:
  1449 |          |                           | 	; >>>>> Line:	44
  1450 |          |                           | 	; >>>>> YKTCBArray[i].next = &(YKTCBArray[i+1]); 
  1451 | 00000A09 | 8B46FE                    | 	mov	ax, word [bp-2]
  1452 | 00000A0C | 40                        | 	inc	ax
  1453 | 00000A0D | B90E00                    | 	mov	cx, 14
  1454 | 00000A10 | F7E9                      | 	imul	cx
  1455 | 00000A12 | 05[4A0F]                  | 	add	ax, YKTCBArray
  1456 | 00000A15 | 50                        | 	push	ax
  1457 | 00000A16 | 8B46FE                    | 	mov	ax, word [bp-2]
  1458 | 00000A19 | B90E00                    | 	mov	cx, 14
  1459 | 00000A1C | F7E9                      | 	imul	cx
  1460 | 00000A1E | 89C2                      | 	mov	dx, ax
  1461 | 00000A20 | 81C2[4A0F]                | 	add	dx, YKTCBArray
  1462 | 00000A24 | 89D6                      | 	mov	si, dx
  1463 | 00000A26 | 83C60A                    | 	add	si, 10
  1464 | 00000A29 | 58                        | 	pop	ax
  1465 | 00000A2A | 8904                      | 	mov	word [si], ax
  1466 |          |                           | L_yakc_6:
  1467 | 00000A2C | FF46FE                    | 	inc	word [bp-2]
  1468 |          |                           | L_yakc_4:
  1469 | 00000A2F | 837EFE03                  | 	cmp	word [bp-2], 3
  1470 | 00000A33 | 7CD4                      | 	jl	L_yakc_3
  1471 |          |                           | L_yakc_5:
  1472 |          |                           | 	; >>>>> Line:	45
  1473 |          |                           | 	; >>>>> YKTCBArray[3].next = 0; 
  1474 | 00000A35 | C706[7E0F]0000            | 	mov	word [(52+YKTCBArray)], 0
  1475 |          |                           | 	; >>>>> Line:	56
  1476 |          |                           | 	; >>>>> YKNewTask(YKIdleTask, 
  1477 | 00000A3B | B064                      | 	mov	al, 100
  1478 | 00000A3D | 50                        | 	push	ax
  1479 | 00000A3E | B8[8211]                  | 	mov	ax, (idleStack+512)
  1480 | 00000A41 | 50                        | 	push	ax
  1481 | 00000A42 | B8[560A]                  | 	mov	ax, YKIdleTask
  1482 | 00000A45 | 50                        | 	push	ax
  1483 | 00000A46 | E82100                    | 	call	YKNewTask
  1484 | 00000A49 | 83C406                    | 	add	sp, 6
  1485 | 00000A4C | 89EC                      | 	mov	sp, bp
  1486 | 00000A4E | 5D                        | 	pop	bp
  1487 | 00000A4F | C3                        | 	ret
  1488 |          |                           | L_yakc_1:
  1489 | 00000A50 | 55                        | 	push	bp
  1490 | 00000A51 | 89E5                      | 	mov	bp, sp
  1491 | 00000A53 | 51                        | 	push	cx
  1492 | 00000A54 | EB94                      | 	jmp	L_yakc_2
  1493 |          |                           | 	ALIGN	2
  1494 |          |                           | YKIdleTask:
  1495 |          |                           | 	; >>>>> Line:	60
  1496 |          |                           | 	; >>>>> void YKIdleTask(void) { 
  1497 | 00000A56 | EB0C                      | 	jmp	L_yakc_8
  1498 |          |                           | L_yakc_9:
  1499 |          |                           | 	; >>>>> Line:	62
  1500 |          |                           | 	; >>>>> while(1){ 
  1501 | 00000A58 | EB04                      | 	jmp	L_yakc_11
  1502 |          |                           | L_yakc_10:
  1503 |          |                           | 	; >>>>> Line:	64
  1504 |          |                           | 	; >>>>> YKIdleCount++; 
  1505 | 00000A5A | FF06[400F]                | 	inc	word [YKIdleCount]
  1506 |          |                           | L_yakc_11:
  1507 | 00000A5E | EBFA                      | 	jmp	L_yakc_10
  1508 |          |                           | L_yakc_12:
  1509 | 00000A60 | 89EC                      | 	mov	sp, bp
  1510 | 00000A62 | 5D                        | 	pop	bp
  1511 | 00000A63 | C3                        | 	ret
  1512 |          |                           | L_yakc_8:
  1513 | 00000A64 | 55                        | 	push	bp
  1514 | 00000A65 | 89E5                      | 	mov	bp, sp
  1515 | 00000A67 | EBEF                      | 	jmp	L_yakc_9
  1516 | 00000A69 | 90                        | 	ALIGN	2
  1517 |          |                           | YKNewTask:
  1518 |          |                           | 	; >>>>> Line:	76
  1519 |          |                           | 	; >>>>> void YKNewTask(void (*task)(void), void *taskStack, unsigned char priority){ 
  1520 | 00000A6A | E97201                    | 	jmp	L_yakc_14
  1521 |          |                           | L_yakc_15:
  1522 |          |                           | 	; >>>>> Line:	87
  1523 |          |                           | 	; >>>>> tmp = YKAvailTCBList; 
  1524 | 00000A6D | A1[480F]                  | 	mov	ax, word [YKAvailTCBList]
  1525 | 00000A70 | 8946FE                    | 	mov	word [bp-2], ax
  1526 |          |                           | 	; >>>>> Line:	88
  1527 |          |                           | 	; >>>>> YKAvailTCBList = tmp->next; 
  1528 | 00000A73 | 8B76FE                    | 	mov	si, word [bp-2]
  1529 | 00000A76 | 83C60A                    | 	add	si, 10
  1530 | 00000A79 | 8B04                      | 	mov	ax, word [si]
  1531 | 00000A7B | A3[480F]                  | 	mov	word [YKAvailTCBList], ax
  1532 |          |                           | 	; >>>>> Line:	92
  1533 |          |                           | 	; >>>>> tmp->delay = 0; 
  1534 | 00000A7E | 8B76FE                    | 	mov	si, word [bp-2]
  1535 | 00000A81 | 83C608                    | 	add	si, 8
  1536 | 00000A84 | C7040000                  | 	mov	word [si], 0
  1537 |          |                           | 	; >>>>> Line:	98
  1538 |          |                           | 	; >>>>> tmp->priority = priority; 
  1539 | 00000A88 | 8A4608                    | 	mov	al, byte [bp+8]
  1540 | 00000A8B | 30E4                      | 	xor	ah, ah
  1541 | 00000A8D | 8B76FE                    | 	mov	si, word [bp-2]
  1542 | 00000A90 | 83C606                    | 	add	si, 6
  1543 | 00000A93 | 8904                      | 	mov	word [si], ax
  1544 |          |                           | 	; >>>>> Line:	105
  1545 |          |                           | 	; >>>>> if (YKRdyList == 0) { 
  1546 | 00000A95 | A1[440F]                  | 	mov	ax, word [YKRdyList]
  1547 | 00000A98 | 85C0                      | 	test	ax, ax
  1548 | 00000A9A | 751C                      | 	jne	L_yakc_16
  1549 |          |                           | 	; >>>>> Line:	106
  1550 |          |                           | 	; >>>>> YKRdyList = tmp; 
  1551 | 00000A9C | 8B46FE                    | 	mov	ax, word [bp-2]
  1552 | 00000A9F | A3[440F]                  | 	mov	word [YKRdyList], ax
  1553 |          |                           | 	; >>>>> Line:	107
  1554 |          |                           | 	; >>>>> tmp->next = 0; 
  1555 | 00000AA2 | 8B76FE                    | 	mov	si, word [bp-2]
  1556 | 00000AA5 | 83C60A                    | 	add	si, 10
  1557 | 00000AA8 | C7040000                  | 	mov	word [si], 0
  1558 |          |                           | 	; >>>>> Line:	108
  1559 |          |                           | 	; >>>>> tmp->prev = 0; 
  1560 | 00000AAC | 8B76FE                    | 	mov	si, word [bp-2]
  1561 | 00000AAF | 83C60C                    | 	add	si, 12
  1562 | 00000AB2 | C7040000                  | 	mov	word [si], 0
  1563 | 00000AB6 | EB6F                      | 	jmp	L_yakc_17
  1564 |          |                           | L_yakc_16:
  1565 |          |                           | 	; >>>>> Line:	110
  1566 |          |                           | 	; >>>>> tmp2 = YKRdyList; 
  1567 | 00000AB8 | A1[440F]                  | 	mov	ax, word [YKRdyList]
  1568 | 00000ABB | 8946FC                    | 	mov	word [bp-4], ax
  1569 |          |                           | 	; >>>>> Line:	111
  1570 |          |                           | 	; >>>>> while (tmp2->priority < tmp->priority) 
  1571 | 00000ABE | EB0B                      | 	jmp	L_yakc_19
  1572 |          |                           | L_yakc_18:
  1573 |          |                           | 	; >>>>> Line:	112
  1574 |          |                           | 	; >>>>> tmp2 = tmp2->next; 
  1575 | 00000AC0 | 8B76FC                    | 	mov	si, word [bp-4]
  1576 | 00000AC3 | 83C60A                    | 	add	si, 10
  1577 | 00000AC6 | 8B04                      | 	mov	ax, word [si]
  1578 | 00000AC8 | 8946FC                    | 	mov	word [bp-4], ax
  1579 |          |                           | L_yakc_19:
  1580 | 00000ACB | 8B76FC                    | 	mov	si, word [bp-4]
  1581 | 00000ACE | 83C606                    | 	add	si, 6
  1582 | 00000AD1 | 8B7EFE                    | 	mov	di, word [bp-2]
  1583 | 00000AD4 | 83C706                    | 	add	di, 6
  1584 | 00000AD7 | 8B05                      | 	mov	ax, word [di]
  1585 | 00000AD9 | 3B04                      | 	cmp	ax, word [si]
  1586 | 00000ADB | 7FE3                      | 	jg	L_yakc_18
  1587 |          |                           | L_yakc_20:
  1588 |          |                           | 	; >>>>> Line:	113
  1589 |          |                           | 	; >>>>> if (tmp2->prev = 
  1590 | 00000ADD | 8B76FC                    | 	mov	si, word [bp-4]
  1591 | 00000AE0 | 83C60C                    | 	add	si, 12
  1592 | 00000AE3 | 8B04                      | 	mov	ax, word [si]
  1593 | 00000AE5 | 85C0                      | 	test	ax, ax
  1594 | 00000AE7 | 7508                      | 	jne	L_yakc_21
  1595 |          |                           | 	; >>>>> Line:	114
  1596 |          |                           | 	; >>>>> YKRdyList = tmp; 
  1597 | 00000AE9 | 8B46FE                    | 	mov	ax, word [bp-2]
  1598 | 00000AEC | A3[440F]                  | 	mov	word [YKRdyList], ax
  1599 | 00000AEF | EB10                      | 	jmp	L_yakc_22
  1600 |          |                           | L_yakc_21:
  1601 |          |                           | 	; >>>>> Line:	116
  1602 |          |                           | 	; >>>>> tmp2->prev->next = tmp; 
  1603 | 00000AF1 | 8B76FC                    | 	mov	si, word [bp-4]
  1604 | 00000AF4 | 83C60C                    | 	add	si, 12
  1605 | 00000AF7 | 8B34                      | 	mov	si, word [si]
  1606 | 00000AF9 | 83C60A                    | 	add	si, 10
  1607 | 00000AFC | 8B46FE                    | 	mov	ax, word [bp-2]
  1608 | 00000AFF | 8904                      | 	mov	word [si], ax
  1609 |          |                           | L_yakc_22:
  1610 |          |                           | 	; >>>>> Line:	117
  1611 |          |                           | 	; >>>>> tmp->prev = tmp2->prev; 
  1612 | 00000B01 | 8B76FC                    | 	mov	si, word [bp-4]
  1613 | 00000B04 | 83C60C                    | 	add	si, 12
  1614 | 00000B07 | 8B7EFE                    | 	mov	di, word [bp-2]
  1615 | 00000B0A | 83C70C                    | 	add	di, 12
  1616 | 00000B0D | 8B04                      | 	mov	ax, word [si]
  1617 | 00000B0F | 8905                      | 	mov	word [di], ax
  1618 |          |                           | 	; >>>>> Line:	118
  1619 |          |                           | 	; >>>>> tmp->next = tmp2; 
  1620 | 00000B11 | 8B76FE                    | 	mov	si, word [bp-2]
  1621 | 00000B14 | 83C60A                    | 	add	si, 10
  1622 | 00000B17 | 8B46FC                    | 	mov	ax, word [bp-4]
  1623 | 00000B1A | 8904                      | 	mov	word [si], ax
  1624 |          |                           | 	; >>>>> Line:	119
  1625 |          |                           | 	; >>>>> tmp2->prev = tmp; 
  1626 | 00000B1C | 8B76FC                    | 	mov	si, word [bp-4]
  1627 | 00000B1F | 83C60C                    | 	add	si, 12
  1628 | 00000B22 | 8B46FE                    | 	mov	ax, word [bp-2]
  1629 | 00000B25 | 8904                      | 	mov	word [si], ax
  1630 |          |                           | L_yakc_17:
  1631 |          |                           | 	; >>>>> Line:	130
  1632 |          |                           | 	; >>>>> tmp->stackptr = taskStack; 
  1633 | 00000B27 | 8B76FE                    | 	mov	si, word [bp-2]
  1634 | 00000B2A | 8B4606                    | 	mov	ax, word [bp+6]
  1635 | 00000B2D | 8904                      | 	mov	word [si], ax
  1636 |          |                           | 	; >>>>> Line:	131
  1637 |          |                           | 	; >>>>> tmp->ss = 0; 
  1638 | 00000B2F | 8B76FE                    | 	mov	si, word [bp-2]
  1639 | 00000B32 | 83C602                    | 	add	si, 2
  1640 | 00000B35 | C7040000                  | 	mov	word [si], 0
  1641 |          |                           | 	; >>>>> Line:	134
  1642 |          |                           | 	; >>>>> tmp->stackptr = tmp->stackptr - 11; 
  1643 | 00000B39 | 8B76FE                    | 	mov	si, word [bp-2]
  1644 | 00000B3C | 8B04                      | 	mov	ax, word [si]
  1645 | 00000B3E | 83E816                    | 	sub	ax, 22
  1646 | 00000B41 | 8904                      | 	mov	word [si], ax
  1647 |          |                           | 	; >>>>> Line:	135
  1648 |          |                           | 	; >>>>> *(tmp->stackptr+11) = 0x200; 
  1649 | 00000B43 | 8B76FE                    | 	mov	si, word [bp-2]
  1650 | 00000B46 | 8B34                      | 	mov	si, word [si]
  1651 | 00000B48 | 83C616                    | 	add	si, 22
  1652 | 00000B4B | C7040002                  | 	mov	word [si], 512
  1653 |          |                           | 	; >>>>> Line:	136
  1654 |          |                           | 	; >>>>> *(tmp->stackptr+10) = 0; 
  1655 | 00000B4F | 8B76FE                    | 	mov	si, word [bp-2]
  1656 | 00000B52 | 8B34                      | 	mov	si, word [si]
  1657 | 00000B54 | 83C614                    | 	add	si, 20
  1658 | 00000B57 | C7040000                  | 	mov	word [si], 0
  1659 |          |                           | 	; >>>>> Line:	137
  1660 |          |                           | 	; >>>>> *(tmp->stackptr+9) = (int)task; 
  1661 | 00000B5B | 8B76FE                    | 	mov	si, word [bp-2]
  1662 | 00000B5E | 8B34                      | 	mov	si, word [si]
  1663 | 00000B60 | 83C612                    | 	add	si, 18
  1664 | 00000B63 | 8B4604                    | 	mov	ax, word [bp+4]
  1665 | 00000B66 | 8904                      | 	mov	word [si], ax
  1666 |          |                           | 	; >>>>> Line:	138
  1667 |          |                           | 	; >>>>> *(tmp->stackptr+8) = 0; 
  1668 | 00000B68 | 8B76FE                    | 	mov	si, word [bp-2]
  1669 | 00000B6B | 8B34                      | 	mov	si, word [si]
  1670 | 00000B6D | 83C610                    | 	add	si, 16
  1671 | 00000B70 | C7040000                  | 	mov	word [si], 0
  1672 |          |                           | 	; >>>>> Line:	139
  1673 |          |                           | 	; >>>>> *(tmp->stackptr+7) = 0; 
  1674 | 00000B74 | 8B76FE                    | 	mov	si, word [bp-2]
  1675 | 00000B77 | 8B34                      | 	mov	si, word [si]
  1676 | 00000B79 | 83C60E                    | 	add	si, 14
  1677 | 00000B7C | C7040000                  | 	mov	word [si], 0
  1678 |          |                           | 	; >>>>> Line:	140
  1679 |          |                           | 	; >>>>> *(tmp->stackptr+6) = 0; 
  1680 | 00000B80 | 8B76FE                    | 	mov	si, word [bp-2]
  1681 | 00000B83 | 8B34                      | 	mov	si, word [si]
  1682 | 00000B85 | 83C60C                    | 	add	si, 12
  1683 | 00000B88 | C7040000                  | 	mov	word [si], 0
  1684 |          |                           | 	; >>>>> Line:	141
  1685 |          |                           | 	; >>>>> *(tmp->stackptr+5) = 0; 
  1686 | 00000B8C | 8B76FE                    | 	mov	si, word [bp-2]
  1687 | 00000B8F | 8B34                      | 	mov	si, word [si]
  1688 | 00000B91 | 83C60A                    | 	add	si, 10
  1689 | 00000B94 | C7040000                  | 	mov	word [si], 0
  1690 |          |                           | 	; >>>>> Line:	142
  1691 |          |                           | 	; >>>>> *(tmp->stackptr+4) = 0; 
  1692 | 00000B98 | 8B76FE                    | 	mov	si, word [bp-2]
  1693 | 00000B9B | 8B34                      | 	mov	si, word [si]
  1694 | 00000B9D | 83C608                    | 	add	si, 8
  1695 | 00000BA0 | C7040000                  | 	mov	word [si], 0
  1696 |          |                           | 	; >>>>> Line:	143
  1697 |          |                           | 	; >>>>> *(tmp->stackptr+3) = 0; 
  1698 | 00000BA4 | 8B76FE                    | 	mov	si, word [bp-2]
  1699 | 00000BA7 | 8B34                      | 	mov	si, word [si]
  1700 | 00000BA9 | 83C606                    | 	add	si, 6
  1701 | 00000BAC | C7040000                  | 	mov	word [si], 0
  1702 |          |                           | 	; >>>>> Line:	144
  1703 |          |                           | 	; >>>>> *(tmp->stackptr+2) = 0; 
  1704 | 00000BB0 | 8B76FE                    | 	mov	si, word [bp-2]
  1705 | 00000BB3 | 8B34                      | 	mov	si, word [si]
  1706 | 00000BB5 | 83C604                    | 	add	si, 4
  1707 | 00000BB8 | C7040000                  | 	mov	word [si], 0
  1708 |          |                           | 	; >>>>> Line:	145
  1709 |          |                           | 	; >>>>> *(tmp->stackptr+1) = 0; 
  1710 | 00000BBC | 8B76FE                    | 	mov	si, word [bp-2]
  1711 | 00000BBF | 8B34                      | 	mov	si, word [si]
  1712 | 00000BC1 | 83C602                    | 	add	si, 2
  1713 | 00000BC4 | C7040000                  | 	mov	word [si], 0
  1714 |          |                           | 	; >>>>> Line:	146
  1715 |          |                           | 	; >>>>> *(tmp->stackptr+0) = 0; 
  1716 | 00000BC8 | 8B76FE                    | 	mov	si, word [bp-2]
  1717 | 00000BCB | 8B34                      | 	mov	si, word [si]
  1718 | 00000BCD | C7040000                  | 	mov	word [si], 0
  1719 |          |                           | 	; >>>>> Line:	151
  1720 |          |                           | 	; >>>>> YKScheduler(1); 
  1721 | 00000BD1 | B80100                    | 	mov	ax, 1
  1722 | 00000BD4 | 50                        | 	push	ax
  1723 | 00000BD5 | E8EE01                    | 	call	YKScheduler
  1724 | 00000BD8 | 83C402                    | 	add	sp, 2
  1725 | 00000BDB | 89EC                      | 	mov	sp, bp
  1726 | 00000BDD | 5D                        | 	pop	bp
  1727 | 00000BDE | C3                        | 	ret
  1728 |          |                           | L_yakc_14:
  1729 | 00000BDF | 55                        | 	push	bp
  1730 | 00000BE0 | 89E5                      | 	mov	bp, sp
  1731 | 00000BE2 | 83EC04                    | 	sub	sp, 4
  1732 | 00000BE5 | E985FE                    | 	jmp	L_yakc_15
  1733 |          |                           | 	ALIGN	2
  1734 |          |                           | YKRun:
  1735 |          |                           | 	; >>>>> Line:	158
  1736 |          |                           | 	; >>>>> void YKRun(void) { 
  1737 | 00000BE8 | EB12                      | 	jmp	L_yakc_24
  1738 |          |                           | L_yakc_25:
  1739 |          |                           | 	; >>>>> Line:	160
  1740 |          |                           | 	; >>>>> started_running = 1; 
  1741 | 00000BEA | C606[E709]01              | 	mov	byte [started_running], 1
  1742 |          |                           | 	; >>>>> Line:	161
  1743 |          |                           | 	; >>>>> YKScheduler(0); 
  1744 | 00000BEF | 31C0                      | 	xor	ax, ax
  1745 | 00000BF1 | 50                        | 	push	ax
  1746 | 00000BF2 | E8D101                    | 	call	YKScheduler
  1747 | 00000BF5 | 83C402                    | 	add	sp, 2
  1748 | 00000BF8 | 89EC                      | 	mov	sp, bp
  1749 | 00000BFA | 5D                        | 	pop	bp
  1750 | 00000BFB | C3                        | 	ret
  1751 |          |                           | L_yakc_24:
  1752 | 00000BFC | 55                        | 	push	bp
  1753 | 00000BFD | 89E5                      | 	mov	bp, sp
  1754 | 00000BFF | EBE9                      | 	jmp	L_yakc_25
  1755 |          |                           | L_yakc_29:
  1756 | 00000C01 | 207768696368206861-       | 	DB	" which has stack ",0
  1757 | 00000C0A | 7320737461636B2000        | ...
  1758 |          |                           | L_yakc_28:
  1759 | 00000C13 | 7363686564756C6572-       | 	DB	"scheduler here. dispatcher will load ",0
  1760 | 00000C1C | 20686572652E206469-       | ...
  1761 | 00000C25 | 737061746368657220-       | ...
  1762 | 00000C2E | 77696C6C206C6F6164-       | ...
  1763 | 00000C37 | 2000                      | ...
  1764 |          |                           | L_yakc_27:
  1765 | 00000C39 | 544849532053484F55-       | 	DB	"THIS SHOULD NEVER HAPPEN",0xA,"THIS SHOULD NEVER HAPPEN",0xA,0
  1766 | 00000C42 | 4C44204E4556455220-       | ...
  1767 | 00000C4B | 48415050454E0A5448-       | ...
  1768 | 00000C54 | 49532053484F554C44-       | ...
  1769 | 00000C5D | 204E45564552204841-       | ...
  1770 | 00000C66 | 5050454E0A00              | ...
  1771 |          |                           | 	ALIGN	2
  1772 |          |                           | YKScheduler_old:
  1773 |          |                           | 	; >>>>> Line:	170
  1774 |          |                           | 	; >>>>> void YKScheduler_old(void) { 
  1775 | 00000C6C | EB68                      | 	jmp	L_yakc_30
  1776 |          |                           | L_yakc_31:
  1777 |          |                           | 	; >>>>> Line:	174
  1778 |          |                           | 	; >>>>> printString("THIS SHOULD NEVER HAPPEN\nTHIS SHOULD NEVER HAPPEN\n"); 
  1779 | 00000C6E | A1[440F]                  | 	mov	ax, word [YKRdyList]
  1780 | 00000C71 | 8946FE                    | 	mov	word [bp-2], ax
  1781 |          |                           | 	; >>>>> Line:	174
  1782 |          |                           | 	; >>>>> printString("THIS SHOULD NEVER HAPPEN\nTHIS SHOULD NEVER HAPPEN\n"); 
  1783 | 00000C74 | B8[390C]                  | 	mov	ax, L_yakc_27
  1784 | 00000C77 | 50                        | 	push	ax
  1785 | 00000C78 | E8ADF7                    | 	call	printString
  1786 | 00000C7B | 83C402                    | 	add	sp, 2
  1787 |          |                           | 	; >>>>> Line:	175
  1788 |          |                           | 	; >>>>> printString("scheduler here. dispatcher will load "); 
  1789 | 00000C7E | B8[130C]                  | 	mov	ax, L_yakc_28
  1790 | 00000C81 | 50                        | 	push	ax
  1791 | 00000C82 | E8A3F7                    | 	call	printString
  1792 | 00000C85 | 83C402                    | 	add	sp, 2
  1793 |          |                           | 	; >>>>> Line:	176
  1794 |          |                           | 	; >>>>> printInt((int)highest_priority_task); 
  1795 | 00000C88 | FF76FE                    | 	push	word [bp-2]
  1796 | 00000C8B | E8BEF7                    | 	call	printInt
  1797 | 00000C8E | 83C402                    | 	add	sp, 2
  1798 |          |                           | 	; >>>>> Line:	177
  1799 |          |                           | 	; >>>>> printString(" which has stack "); 
  1800 | 00000C91 | B8[010C]                  | 	mov	ax, L_yakc_29
  1801 | 00000C94 | 50                        | 	push	ax
  1802 | 00000C95 | E890F7                    | 	call	printString
  1803 | 00000C98 | 83C402                    | 	add	sp, 2
  1804 |          |                           | 	; >>>>> Line:	178
  1805 |          |                           | 	; >>>>> printInt((int)highest_priority_task->stackptr); 
  1806 | 00000C9B | 8B76FE                    | 	mov	si, word [bp-2]
  1807 | 00000C9E | FF34                      | 	push	word [si]
  1808 | 00000CA0 | E8A9F7                    | 	call	printInt
  1809 | 00000CA3 | 83C402                    | 	add	sp, 2
  1810 |          |                           | 	; >>>>> Line:	179
  1811 |          |                           | 	; >>>>> printString("\n"); 
  1812 | 00000CA6 | B8[6A0C]                  | 	mov	ax, (L_yakc_27+49)
  1813 | 00000CA9 | 50                        | 	push	ax
  1814 | 00000CAA | E87BF7                    | 	call	printString
  1815 | 00000CAD | 83C402                    | 	add	sp, 2
  1816 |          |                           | 	; >>>>> Line:	199
  1817 |          |                           | 	; >>>>> if(started_running){ 
  1818 | 00000CB0 | A0[E709]                  | 	mov	al, byte [started_running]
  1819 | 00000CB3 | 84C0                      | 	test	al, al
  1820 | 00000CB5 | 741B                      | 	je	L_yakc_32
  1821 |          |                           | 	; >>>>> Line:	200
  1822 |          |                           | 	; >>>>> if(YKCurr 
  1823 | 00000CB7 | 8B46FE                    | 	mov	ax, word [bp-2]
  1824 | 00000CBA | 3B06[8211]                | 	cmp	ax, word [YKCurrentlyExecuting]
  1825 | 00000CBE | 7502                      | 	jne	L_yakc_33
  1826 |          |                           | 	; >>>>> Line:	201
  1827 |          |                           | 	; >>>>> return; 
  1828 | 00000CC0 | EB10                      | 	jmp	L_yakc_34
  1829 |          |                           | L_yakc_33:
  1830 |          |                           | 	; >>>>> Line:	204
  1831 |          |                           | 	; >>>>> YKCtxSwCount = YKCtxSwCount + 1; 
  1832 | 00000CC2 | A1[3E0F]                  | 	mov	ax, word [YKCtxSwCount]
  1833 | 00000CC5 | 40                        | 	inc	ax
  1834 | 00000CC6 | A3[3E0F]                  | 	mov	word [YKCtxSwCount], ax
  1835 |          |                           | 	; >>>>> Line:	205
  1836 |          |                           | 	; >>>>> YKCurrentlyExecuting = highest_priority_task; 
  1837 | 00000CC9 | 8B46FE                    | 	mov	ax, word [bp-2]
  1838 | 00000CCC | A3[8211]                  | 	mov	word [YKCurrentlyExecuting], ax
  1839 |          |                           | 	; >>>>> Line:	207
  1840 |          |                           | 	; >>>>> YKDispatcher(); 
  1841 | 00000CCF | E8B604                    | 	call	YKDispatcher
  1842 |          |                           | L_yakc_32:
  1843 |          |                           | L_yakc_34:
  1844 | 00000CD2 | 89EC                      | 	mov	sp, bp
  1845 | 00000CD4 | 5D                        | 	pop	bp
  1846 | 00000CD5 | C3                        | 	ret
  1847 |          |                           | L_yakc_30:
  1848 | 00000CD6 | 55                        | 	push	bp
  1849 | 00000CD7 | 89E5                      | 	mov	bp, sp
  1850 | 00000CD9 | 51                        | 	push	cx
  1851 | 00000CDA | EB92                      | 	jmp	L_yakc_31
  1852 |          |                           | L_yakc_43:
  1853 | 00000CDC | 7363686564756C6572-       | 	DB	"scheduler called, need to save context",0xA,0
  1854 | 00000CE5 | 2063616C6C65642C20-       | ...
  1855 | 00000CEE | 6E65656420746F2073-       | ...
  1856 | 00000CF7 | 61766520636F6E7465-       | ...
  1857 | 00000D00 | 78740A00                  | ...
  1858 |          |                           | L_yakc_42:
  1859 | 00000D04 | 686967686573745F70-       | 	DB	"highest_priority_task ",0
  1860 | 00000D0D | 72696F726974795F74-       | ...
  1861 | 00000D16 | 61736B2000                | ...
  1862 |          |                           | L_yakc_41:
  1863 | 00000D1B | 20616E642053532000        | 	DB	" and SS ",0
  1864 |          |                           | L_yakc_40:
  1865 | 00000D24 | 676976696E67207468-       | 	DB	"giving the dispatcher stackptr",0
  1866 | 00000D2D | 652064697370617463-       | ...
  1867 | 00000D36 | 68657220737461636B-       | ...
  1868 | 00000D3F | 70747200                  | ...
  1869 |          |                           | L_yakc_39:
  1870 | 00000D43 | 7363686564756C6572-       | 	DB	"scheduler called, no need to save context",0xA,0
  1871 | 00000D4C | 2063616C6C65642C20-       | ...
  1872 | 00000D55 | 6E6F206E6565642074-       | ...
  1873 | 00000D5E | 6F207361766520636F-       | ...
  1874 | 00000D67 | 6E746578740A00            | ...
  1875 |          |                           | L_yakc_38:
  1876 | 00000D6E | 7363686564756C6572-       | 	DB	"scheduler called; returning to task",0xA,0
  1877 | 00000D77 | 2063616C6C65643B20-       | ...
  1878 | 00000D80 | 72657475726E696E67-       | ...
  1879 | 00000D89 | 20746F207461736B0A-       | ...
  1880 | 00000D92 | 00                        | ...
  1881 |          |                           | L_yakc_37:
  1882 | 00000D93 | 7363686564756C6572-       | 	DB	"scheduler called, but not yet running",0xA,0
  1883 | 00000D9C | 2063616C6C65642C20-       | ...
  1884 | 00000DA5 | 627574206E6F742079-       | ...
  1885 | 00000DAE | 65742072756E6E696E-       | ...
  1886 | 00000DB7 | 670A00                    | ...
  1887 |          |                           | L_yakc_36:
  1888 | 00000DBA | 594B5264794C697374-       | 	DB	"YKRdyList: ",0
  1889 | 00000DC3 | 3A2000                    | ...
  1890 |          |                           | 	ALIGN	2
  1891 |          |                           | YKScheduler:
  1892 |          |                           | 	; >>>>> Line:	211
  1893 |          |                           | 	; >>>>> void YKScheduler(int need_to_save_context){ 
  1894 | 00000DC6 | E90D01                    | 	jmp	L_yakc_44
  1895 |          |                           | L_yakc_45:
  1896 |          |                           | 	; >>>>> Line:	215
  1897 |          |                           | 	; >>>>> printString("YKRdyList: "); 
  1898 | 00000DC9 | A1[440F]                  | 	mov	ax, word [YKRdyList]
  1899 | 00000DCC | 8946FE                    | 	mov	word [bp-2], ax
  1900 | 00000DCF | A1[8211]                  | 	mov	ax, word [YKCurrentlyExecuting]
  1901 | 00000DD2 | 8946FC                    | 	mov	word [bp-4], ax
  1902 |          |                           | 	; >>>>> Line:	215
  1903 |          |                           | 	; >>>>> printString("YKRdyList: "); 
  1904 | 00000DD5 | B8[BA0D]                  | 	mov	ax, L_yakc_36
  1905 | 00000DD8 | 50                        | 	push	ax
  1906 | 00000DD9 | E84CF6                    | 	call	printString
  1907 | 00000DDC | 83C402                    | 	add	sp, 2
  1908 |          |                           | 	; >>>>> Line:	216
  1909 |          |                           | 	; >>>>> printInt((int)YKRdyList); 
  1910 | 00000DDF | FF36[440F]                | 	push	word [YKRdyList]
  1911 | 00000DE3 | E866F6                    | 	call	printInt
  1912 | 00000DE6 | 83C402                    | 	add	sp, 2
  1913 |          |                           | 	; >>>>> Line:	217
  1914 |          |                           | 	; >>>>> printString("\n"); 
  1915 | 00000DE9 | B8[6A0C]                  | 	mov	ax, (L_yakc_27+49)
  1916 | 00000DEC | 50                        | 	push	ax
  1917 | 00000DED | E838F6                    | 	call	printString
  1918 | 00000DF0 | 83C402                    | 	add	sp, 2
  1919 |          |                           | 	; >>>>> Line:	220
  1920 |          |                           | 	; >>>>> if(!started_running){ 
  1921 | 00000DF3 | A0[E709]                  | 	mov	al, byte [started_running]
  1922 | 00000DF6 | 84C0                      | 	test	al, al
  1923 | 00000DF8 | 750D                      | 	jne	L_yakc_46
  1924 |          |                           | 	; >>>>> Line:	221
  1925 |          |                           | 	; >>>>> printString("scheduler called, but not yet running\n"); 
  1926 | 00000DFA | B8[930D]                  | 	mov	ax, L_yakc_37
  1927 | 00000DFD | 50                        | 	push	ax
  1928 | 00000DFE | E827F6                    | 	call	printString
  1929 | 00000E01 | 83C402                    | 	add	sp, 2
  1930 |          |                           | 	; >>>>> Line:	222
  1931 |          |                           | 	; >>>>> return; 
  1932 | 00000E04 | E9CB00                    | 	jmp	L_yakc_47
  1933 |          |                           | L_yakc_46:
  1934 |          |                           | 	; >>>>> Line:	224
  1935 |          |                           | 	; >>>>> if(YKCurrentlyExecuting == highest 
  1936 | 00000E07 | 8B46FE                    | 	mov	ax, word [bp-2]
  1937 | 00000E0A | 3B06[8211]                | 	cmp	ax, word [YKCurrentlyExecuting]
  1938 | 00000E0E | 750D                      | 	jne	L_yakc_48
  1939 |          |                           | 	; >>>>> Line:	225
  1940 |          |                           | 	; >>>>> printString("scheduler called; returning to task\n"); 
  1941 | 00000E10 | B8[6E0D]                  | 	mov	ax, L_yakc_38
  1942 | 00000E13 | 50                        | 	push	ax
  1943 | 00000E14 | E811F6                    | 	call	printString
  1944 | 00000E17 | 83C402                    | 	add	sp, 2
  1945 |          |                           | 	; >>>>> Line:	226
  1946 |          |                           | 	; >>>>> return; 
  1947 | 00000E1A | E9B500                    | 	jmp	L_yakc_47
  1948 |          |                           | L_yakc_48:
  1949 |          |                           | 	; >>>>> Line:	229
  1950 |          |                           | 	; >>>>> YKCtxSwCount = YKCtxSwCount + 1; 
  1951 | 00000E1D | A1[3E0F]                  | 	mov	ax, word [YKCtxSwCount]
  1952 | 00000E20 | 40                        | 	inc	ax
  1953 | 00000E21 | A3[3E0F]                  | 	mov	word [YKCtxSwCount], ax
  1954 |          |                           | 	; >>>>> Line:	230
  1955 |          |                           | 	; >>>>> YKCurrentlyExecuting = highest_priority_task; 
  1956 | 00000E24 | 8B46FE                    | 	mov	ax, word [bp-2]
  1957 | 00000E27 | A3[8211]                  | 	mov	word [YKCurrentlyExecuting], ax
  1958 |          |                           | 	; >>>>> Line:	233
  1959 |          |                           | 	; >>>>> if(!need_to_save_context){ 
  1960 | 00000E2A | 8B4604                    | 	mov	ax, word [bp+4]
  1961 | 00000E2D | 85C0                      | 	test	ax, ax
  1962 | 00000E2F | 7574                      | 	jne	L_yakc_49
  1963 |          |                           | 	; >>>>> Line:	234
  1964 |          |                           | 	; >>>>> printString("scheduler called, no need to save context\n"); 
  1965 | 00000E31 | B8[430D]                  | 	mov	ax, L_yakc_39
  1966 | 00000E34 | 50                        | 	push	ax
  1967 | 00000E35 | E8F0F5                    | 	call	printString
  1968 | 00000E38 | 83C402                    | 	add	sp, 2
  1969 |          |                           | 	; >>>>> Line:	235
  1970 |          |                           | 	; >>>>> printString("giving the dispatcher stackptr"); 
  1971 | 00000E3B | B8[240D]                  | 	mov	ax, L_yakc_40
  1972 | 00000E3E | 50                        | 	push	ax
  1973 | 00000E3F | E8E6F5                    | 	call	printString
  1974 | 00000E42 | 83C402                    | 	add	sp, 2
  1975 |          |                           | 	; >>>>> Line:	236
  1976 |          |                           | 	; >>>>> printInt((int)highest_priority_task->stackptr); 
  1977 | 00000E45 | 8B76FE                    | 	mov	si, word [bp-2]
  1978 | 00000E48 | FF34                      | 	push	word [si]
  1979 | 00000E4A | E8FFF5                    | 	call	printInt
  1980 | 00000E4D | 83C402                    | 	add	sp, 2
  1981 |          |                           | 	; >>>>> Line:	237
  1982 |          |                           | 	; >>>>> printString(" and SS "); 
  1983 | 00000E50 | B8[1B0D]                  | 	mov	ax, L_yakc_41
  1984 | 00000E53 | 50                        | 	push	ax
  1985 | 00000E54 | E8D1F5                    | 	call	printString
  1986 | 00000E57 | 83C402                    | 	add	sp, 2
  1987 |          |                           | 	; >>>>> Line:	238
  1988 |          |                           | 	; >>>>> printInt((int)highest_priority_task->ss); 
  1989 | 00000E5A | 8B76FE                    | 	mov	si, word [bp-2]
  1990 | 00000E5D | 83C602                    | 	add	si, 2
  1991 | 00000E60 | FF34                      | 	push	word [si]
  1992 | 00000E62 | E8E7F5                    | 	call	printInt
  1993 | 00000E65 | 83C402                    | 	add	sp, 2
  1994 |          |                           | 	; >>>>> Line:	239
  1995 |          |                           | 	; >>>>> printString("highest_priority_task "); 
  1996 | 00000E68 | B8[040D]                  | 	mov	ax, L_yakc_42
  1997 | 00000E6B | 50                        | 	push	ax
  1998 | 00000E6C | E8B9F5                    | 	call	printString
  1999 | 00000E6F | 83C402                    | 	add	sp, 2
  2000 |          |                           | 	; >>>>> Line:	240
  2001 |          |                           | 	; >>>>> printInt((int)highest_priority_task); 
  2002 | 00000E72 | FF76FE                    | 	push	word [bp-2]
  2003 | 00000E75 | E8D4F5                    | 	call	printInt
  2004 | 00000E78 | 83C402                    | 	add	sp, 2
  2005 |          |                           | 	; >>>>> Line:	241
  2006 |          |                           | 	; >>>>>  
  2007 | 00000E7B | B8[6A0C]                  | 	mov	ax, (L_yakc_27+49)
  2008 | 00000E7E | 50                        | 	push	ax
  2009 | 00000E7F | E8A6F5                    | 	call	printString
  2010 | 00000E82 | 83C402                    | 	add	sp, 2
  2011 |          |                           | 	; >>>>> Line:	242
  2012 |          |                           | 	; >>>>> YKDispatcher_save_context(0,(int *) 1, (int *)1, 
  2013 | 00000E85 | 8B76FE                    | 	mov	si, word [bp-2]
  2014 | 00000E88 | 83C602                    | 	add	si, 2
  2015 | 00000E8B | FF34                      | 	push	word [si]
  2016 | 00000E8D | 8B76FE                    | 	mov	si, word [bp-2]
  2017 | 00000E90 | FF34                      | 	push	word [si]
  2018 | 00000E92 | B80100                    | 	mov	ax, 1
  2019 | 00000E95 | 50                        | 	push	ax
  2020 | 00000E96 | B80100                    | 	mov	ax, 1
  2021 | 00000E99 | 50                        | 	push	ax
  2022 | 00000E9A | 31C0                      | 	xor	ax, ax
  2023 | 00000E9C | 50                        | 	push	ax
  2024 | 00000E9D | E8F802                    | 	call	YKDispatcher_save_context
  2025 | 00000EA0 | 83C40A                    | 	add	sp, 10
  2026 | 00000EA3 | EB2D                      | 	jmp	L_yakc_50
  2027 |          |                           | L_yakc_49:
  2028 |          |                           | 	; >>>>> Line:	248
  2029 |          |                           | 	; >>>>> printString("scheduler called, need to save context\n"); 
  2030 | 00000EA5 | B8[DC0C]                  | 	mov	ax, L_yakc_43
  2031 | 00000EA8 | 50                        | 	push	ax
  2032 | 00000EA9 | E87CF5                    | 	call	printString
  2033 | 00000EAC | 83C402                    | 	add	sp, 2
  2034 |          |                           | 	; >>>>> Line:	249
  2035 |          |                           | 	; >>>>> YKDispatcher_save_context(need_to_save_context, 
  2036 | 00000EAF | 8B76FE                    | 	mov	si, word [bp-2]
  2037 | 00000EB2 | 83C602                    | 	add	si, 2
  2038 | 00000EB5 | FF34                      | 	push	word [si]
  2039 | 00000EB7 | 8B76FE                    | 	mov	si, word [bp-2]
  2040 | 00000EBA | FF34                      | 	push	word [si]
  2041 | 00000EBC | 8B76FC                    | 	mov	si, word [bp-4]
  2042 | 00000EBF | 83C602                    | 	add	si, 2
  2043 | 00000EC2 | FF34                      | 	push	word [si]
  2044 | 00000EC4 | 8B76FC                    | 	mov	si, word [bp-4]
  2045 | 00000EC7 | FF34                      | 	push	word [si]
  2046 | 00000EC9 | FF7604                    | 	push	word [bp+4]
  2047 | 00000ECC | E8C902                    | 	call	YKDispatcher_save_context
  2048 | 00000ECF | 83C40A                    | 	add	sp, 10
  2049 |          |                           | L_yakc_50:
  2050 |          |                           | L_yakc_47:
  2051 | 00000ED2 | 89EC                      | 	mov	sp, bp
  2052 | 00000ED4 | 5D                        | 	pop	bp
  2053 | 00000ED5 | C3                        | 	ret
  2054 |          |                           | L_yakc_44:
  2055 | 00000ED6 | 55                        | 	push	bp
  2056 | 00000ED7 | 89E5                      | 	mov	bp, sp
  2057 | 00000ED9 | 83EC04                    | 	sub	sp, 4
  2058 | 00000EDC | E9EAFE                    | 	jmp	L_yakc_45
  2059 | 00000EDF | 90                        | 	ALIGN	2
  2060 |          |                           | YKDelayTask:
  2061 |          |                           | 	; >>>>> Line:	268
  2062 |          |                           | 	; >>>>> { 
  2063 | 00000EE0 | EB15                      | 	jmp	L_yakc_52
  2064 |          |                           | L_yakc_53:
  2065 |          |                           | 	; >>>>> Line:	271
  2066 |          |                           | 	; >>>>> if(count != 0) 
  2067 | 00000EE2 | 8B4604                    | 	mov	ax, word [bp+4]
  2068 | 00000EE5 | 85C0                      | 	test	ax, ax
  2069 | 00000EE7 | 7400                      | 	je	L_yakc_54
  2070 |          |                           | L_yakc_54:
  2071 |          |                           | 	; >>>>> Line:	278
  2072 |          |                           | 	; >>>>> YKScheduler(1); 
  2073 | 00000EE9 | B80100                    | 	mov	ax, 1
  2074 | 00000EEC | 50                        | 	push	ax
  2075 | 00000EED | E8D6FE                    | 	call	YKScheduler
  2076 | 00000EF0 | 83C402                    | 	add	sp, 2
  2077 | 00000EF3 | 89EC                      | 	mov	sp, bp
  2078 | 00000EF5 | 5D                        | 	pop	bp
  2079 | 00000EF6 | C3                        | 	ret
  2080 |          |                           | L_yakc_52:
  2081 | 00000EF7 | 55                        | 	push	bp
  2082 | 00000EF8 | 89E5                      | 	mov	bp, sp
  2083 | 00000EFA | EBE6                      | 	jmp	L_yakc_53
  2084 |          |                           | L_yakc_56:
  2085 | 00000EFC | 63616C6C656420594B-       | 	DB	"called YKTickHandler() currently within it",0xA,0
  2086 | 00000F05 | 5469636B48616E646C-       | ...
  2087 | 00000F0E | 657228292063757272-       | ...
  2088 | 00000F17 | 656E746C7920776974-       | ...
  2089 | 00000F20 | 68696E2069740A00          | ...
  2090 |          |                           | 	ALIGN	2
  2091 |          |                           | YKTickHandler:
  2092 |          |                           | 	; >>>>> Line:	296
  2093 |          |                           | 	; >>>>> { 
  2094 | 00000F28 | EB0E                      | 	jmp	L_yakc_57
  2095 |          |                           | L_yakc_58:
  2096 |          |                           | 	; >>>>> Line:	297
  2097 |          |                           | 	; >>>>> printString("called YKTickHandler() currently within it\n"); 
  2098 | 00000F2A | B8[FC0E]                  | 	mov	ax, L_yakc_56
  2099 | 00000F2D | 50                        | 	push	ax
  2100 | 00000F2E | E8F7F4                    | 	call	printString
  2101 | 00000F31 | 83C402                    | 	add	sp, 2
  2102 | 00000F34 | 89EC                      | 	mov	sp, bp
  2103 | 00000F36 | 5D                        | 	pop	bp
  2104 | 00000F37 | C3                        | 	ret
  2105 |          |                           | L_yakc_57:
  2106 | 00000F38 | 55                        | 	push	bp
  2107 | 00000F39 | 89E5                      | 	mov	bp, sp
  2108 | 00000F3B | EBED                      | 	jmp	L_yakc_58
  2109 | 00000F3D | 90                        | 	ALIGN	2
  2110 |          |                           | YKCtxSwCount:
  2111 | 00000F3E | 00<rept>                  | 	TIMES	2 db 0
  2112 |          |                           | YKIdleCount:
  2113 | 00000F40 | 00<rept>                  | 	TIMES	2 db 0
  2114 |          |                           | YKTickNum:
  2115 | 00000F42 | 00<rept>                  | 	TIMES	2 db 0
  2116 |          |                           | YKRdyList:
  2117 | 00000F44 | 00<rept>                  | 	TIMES	2 db 0
  2118 |          |                           | YKSuspList:
  2119 | 00000F46 | 00<rept>                  | 	TIMES	2 db 0
  2120 |          |                           | YKAvailTCBList:
  2121 | 00000F48 | 00<rept>                  | 	TIMES	2 db 0
  2122 |          |                           | YKTCBArray:
  2123 | 00000F4A | 00<rept>                  | 	TIMES	56 db 0
  2124 |          |                           | idleStack:
  2125 | 00000F82 | 00<rept>                  | 	TIMES	512 db 0
  2126 |          |                           | YKCurrentlyExecuting:
  2127 | 00001182 | 00<rept>                  | 	TIMES	2 db 0
  2128 |          |                           | ; All kernel routines that are written in assembly are here 
  2129 |          |                           | YKEnterISR:
  2130 |          |                           | 	; does context need to be saved??
  2131 |          |                           | 	; nope. context is already saved within the interrupts
  2132 |          |                           | ;	push ax
  2133 |          |                           | ;	push bx
  2134 |          |                           | ;	push cx
  2135 |          |                           | ;	push dx
  2136 |          |                           | ;	push bp
  2137 |          |                           | ;	push si
  2138 |          |                           | ;	push di
  2139 |          |                           | ;	push ds
  2140 |          |                           | ;	push es
  2141 |          |                           | 
  2142 |          |                           | 	;incremement a counter representing the ISR call depth
  2143 |          |                           | 	; would this be a different variable from contet switch?? YKCtxSwCount
  2144 |          |                           | YKExitISR:
  2145 |          |                           | 
  2146 |          |                           | 
  2147 |          |                           | 
  2148 |          |                           | ; Disables interrupts 
  2149 |          |                           | YKEnterMutex:
  2150 | 00001184 | FA                        | 	cli	; clear interrupt flag to disable interrupts 
  2151 | 00001185 | C3                        | 	ret
  2152 |          |                           | 
  2153 |          |                           | ; Enables Interrupts 
  2154 |          |                           | YKExitMutex:
  2155 | 00001186 | FB                        | 	sti	; set interrupt flag to enable interrupts 
  2156 | 00001187 | C3                        | 	ret
  2157 |          |                           | 
  2158 |          |                           | YKDispatcher:
  2159 |          |                           | 	; So if we are following andy's design
  2160 |          |                           | 	; we will save context here (if the boolean
  2161 |          |                           | 	; passed to us tells us to)
  2162 |          |                           | 	
  2163 |          |                           | 	; Hmm. Should the proper SS and SP be passed to us as an argument?
  2164 |          |                           | 	; Or shall we fetch them ourselves?
  2165 |          |                           | 
  2166 |          |                           | 
  2167 |          |                           | 	; I am TRYING to move what YKRdyList is pointing at into the stack pointer
  2168 |          |                           | 	; Because what YKRdyList points at is the stack pointer of the most ready task
  2169 |          |                           | 	; Incorrect. The value from the dereferenced YKRdyList needs to be 
  2170 |          |                           | 	; dereferenced again to get the proper stack pointer
  2171 |          |                           | 	;mov SP, [YKRdyList]
  2172 | 00001188 | 8B1E[440F]                | 	mov BX, [YKRdyList]
  2173 | 0000118C | 8B27                      | 	mov SP, word [BX]
  2174 |          |                           | 
  2175 |          |                           | 	; but in any case we need to restore context
  2176 | 0000118E | 07                        | 	pop ES
  2177 | 0000118F | 1F                        | 	pop DS
  2178 | 00001190 | 5F                        | 	pop DI
  2179 | 00001191 | 5E                        | 	pop SI
  2180 | 00001192 | 5D                        | 	pop BP
  2181 | 00001193 | 5A                        | 	pop DX
  2182 | 00001194 | 59                        | 	pop CX
  2183 | 00001195 | 5B                        | 	pop BX
  2184 | 00001196 | 58                        | 	pop AX
  2185 |          |                           | 	; After this- done by reti
  2186 |          |                           | 	; IP
  2187 |          |                           | 	; CS
  2188 |          |                           | 	; flags
  2189 | 00001197 | CF                        | 	iret
  2190 |          |                           | 
  2191 |          |                           | ; This dispatcher has a bool parameter for whether it needs to save context
  2192 |          |                           | ; @ param: int should_save_context
  2193 |          |                           | ; @ param: int * save_sp_location
  2194 |          |                           | ; @ param: int * save_ss_location
  2195 |          |                           | ; @ param: int * restore_sp_location
  2196 |          |                           | ; @ param: int * restore_ss_location
  2197 |          |                           | YKDispatcher_save_context:
  2198 |          |                           | 	; Here is where we will deal with our parameters
  2199 | 00001198 | 55                        | 	push bp
  2200 | 00001199 | 89E5                      | 	mov bp, sp
  2201 |          |                           | ; NOTE: WE DO NOT NEED TO SAVE AX. BECAUSE IT IS THE RETURN REGISTER.
  2202 |          |                           | 
  2203 |          |                           | ;	push ax				; gotta save ax
  2204 | 0000119B | 8B4604                    | 	mov ax, word [bp+4]			; getting the bool
  2205 | 0000119E | 85C0                      | 	test ax, ax					; if (ax == 0)
  2206 |          |                           | ;	pop ax				; shouldn't mess up flags
  2207 | 000011A0 | 7415                      | 	jz	restoring_context		; If zero, we do NOT store context
  2208 |          |                           | storing_context:
  2209 | 000011A2 | 9C                        | 	pushf
  2210 | 000011A3 | 0E                        | 	push CS
  2211 |          |                           | ;	mov [SP-4], AX
  2212 | 000011A4 | B8[C711]                  | 	mov AX, ending_dispatcher
  2213 | 000011A7 | 50                        | 	push AX
  2214 |          |                           | ;	mov AX, [SP-2]
  2215 |          |                           | ;	sub SP, 2					; cant push immediates?
  2216 |          |                           | ;	mov word [SP], ending_dispatcher
  2217 |          |                           | ;	push ending_dispatcher	; This will be important
  2218 | 000011A8 | 50                        | 	push AX
  2219 | 000011A9 | 53                        | 	push BX
  2220 | 000011AA | 51                        | 	push CX
  2221 | 000011AB | 52                        | 	push DX
  2222 | 000011AC | 55                        | 	push BP						; Maybe not?
  2223 | 000011AD | 56                        | 	push SI
  2224 | 000011AE | 57                        | 	push DI
  2225 | 000011AF | 1E                        | 	push DS
  2226 | 000011B0 | 06                        | 	push ES
  2227 |          |                           | 	; Now we just need to store SS and SP in the proper TCB. (these are parameters)
  2228 |          |                           | 	; 2nd argument, int * save_sp = [bp+6]
  2229 |          |                           | ;	mov si, word [bp+6]
  2230 |          |                           | ;	mov word [si], sp
  2231 | 000011B1 | 896606                    | 	mov word [bp+6], SP
  2232 |          |                           | 	; 3rd argument, int * save_ss = [bp+8]
  2233 |          |                           | ;	mov si, word [bp+8]
  2234 |          |                           | ;	mov word [si], ss
  2235 | 000011B4 | 8C5608                    | 	mov word [bp+8], SS
  2236 |          |                           | 
  2237 |          |                           | 
  2238 |          |                           | restoring_context:
  2239 |          |                           | 	; Now we just need to restore SS and SP from the proper TCB. (parameters)
  2240 |          |                           | 	; 4th argument, int * restore_sp = [bp+10]
  2241 | 000011B7 | 8B660A                    | 	mov sp, word[bp+10]
  2242 |          |                           | 	; 5th argument, int * restore_ss = [bp+12]
  2243 | 000011BA | 8E560C                    | 	mov ss, word[bp+12]
  2244 |          |                           | 
  2245 | 000011BD | 07                        | 	pop ES
  2246 | 000011BE | 1F                        | 	pop DS
  2247 | 000011BF | 5F                        | 	pop DI
  2248 | 000011C0 | 5E                        | 	pop SI
  2249 | 000011C1 | 5D                        | 	pop BP
  2250 | 000011C2 | 5A                        | 	pop DX
  2251 | 000011C3 | 59                        | 	pop CX
  2252 | 000011C4 | 5B                        | 	pop BX
  2253 | 000011C5 | 58                        | 	pop AX
  2254 | 000011C6 | CF                        | 	iret			; restores CS, IP, and flags. Starts execution at ENDING_IP
  2255 |          |                           | 
  2256 |          |                           | ending_dispatcher:
  2257 |          |                           | 	; do all the ending crap of the function
  2258 | 000011C7 | 89EC                      | 	mov sp, bp
  2259 | 000011C9 | 5D                        | 	pop bp
  2260 | 000011CA | C3                        | 	ret				; Takes us back to the scheduler, and context is restored!
  2261 |          |                           | 
  2262 |          |                           | ;
  2263 |          |                           | ; POSSIBLE SOLUITION
  2264 |          |                           | ; Use assembly macro to
  2265 |          |                           | ; in-line all of this
  2266 |          |                           | ; so it doesn't have to 
  2267 |          |                           | ; be a function call
  2268 |          |                           | ;
  2269 |          |                           | ;
  2270 |          |                           | ; (Start stack)
  2271 |          |                           | ;	IP of task
  2272 |          |                           | ;	return address
  2273 |          |                           | ;	[SP points here]
  2274 |          |                           | ; 
  2275 |          |                           | ; (End stack)
  2276 |          |                           | ;	flags
  2277 |          |                           | ;	CS
  2278 |          |                           | ;	IP
  2279 |          |                           | ;	return address
  2280 |          |                           | ;	[SP points here]
  2281 |          |                           | ;
  2282 |          |                           | ;YKSaveFlagsAndCS:
  2283 |          |                           | ;	sub SP, 4
  2284 |          |                           | ;	push DX			; Save DX
  2285 |          |                           | ;	push CX			; Save CX
  2286 |          |                           | ;	mov DX, SP+12	; DX = IP (to original task)
  2287 |          |                           | ;	mov CX, SP+10	; CX = return address (to whomever called me)
  2288 |          |                           | ;	mov SP+8, DX
  2289 |          |                           | ;	mov SP+6, CX
  2290 |          |                           | ;	pop CX			; Restore CX
  2291 |          |                           | ;	pop DX			; Restore DX
  2292 |          |                           | ;
  2293 |          |                           | ;	add SP, 8
  2294 |          |                           | ;	pushf			; push flags into their proper spot
  2295 |          |                           | ;	push CS			; push CS into its proper spot
  2296 |          |                           | ;	sub SP, 4
  2297 |          |                           | ;	
  2298 |          |                           | ;	jmp YKSaveContext	; Now we are ready to save the rest of context
  2299 |          |                           | 
  2300 |          |                           | ; This saves the context on the current stack frame 
  2301 |          |                           | ; We are assuming this is called from an interrupt
  2302 |          |                           | ;	(if it is not, call YKSaveFlagsAndCS instead)
  2303 |          |                           | ; So we already have flags, CS, and IP saved properly
  2304 |          |                           | ;YKSaveContext:
  2305 |          |                           | ;	;SP + 2 (I think) is return address.
  2306 |          |                           | ;	sub SP, 18	; Get ready to save 9 words onto the stack
  2307 |          |                           | ;	push DX
  2308 |          |                           | ;	mov DX, SP + 22	; mov the return address onto SP 
  2309 |          |                           | ;	mov SP+4, DX	; put it at the end of the stack, ready to be popped
  2310 |          |                           | ;	pop DX
  2311 |          |                           | ;	
  2312 |          |                           | ;	mov [SP+20], AX
  2313 |          |                           | ;	mov SP+18, BX
  2314 |          |                           | ;	mov SP+16, CX
  2315 |          |                           | ;	mov SP+14, DX
  2316 |          |                           | ;	mov SP+12, BP
  2317 |          |                           | ;	mov SP+10, SI
  2318 |          |                           | ;	mov SP+8, DI
  2319 |          |                           | ;	mov SP+6, DS
  2320 |          |                           | ;	mov SP+4, ES
  2321 |          |                           | ;;	; Current stack: return address, empty 
  2322 |          |                           | ;;	push AX	; Each 
  2323 |          |                           | ;	push BX	; one  
  2324 |          |                           | ;	push CX	; is  
  2325 |          |                           | ;	push DX	; sp-2 
  2326 |          |                           | ;	; Instruction Pointer - In interrupt, saved already
  2327 |          |                           | ;	; Stack pointer - Need to be saved seperately
  2328 |          |                           | ;	push BP ; Base pointer 
  2329 |          |                           | ;	push SI ; Source index 
  2330 |          |                           | ;	push DI ; Destination index    
  2331 |          |                           | ;	; Code segment - Saved with IP?
  2332 |          |                           | ;	; Stack segment - saved with SP?
  2333 |          |                           | ;	push DS ; Data segment 
  2334 |          |                           | ;	push ES ; Extra segment 
  2335 |          |                           | ;	; Flags - interrupts already save it
  2336 |          |                           | ;	ret
  2337 |          |                           | 
  2338 |          |                           | ; This restores the context FROM the current stack frame 
  2339 |          |                           | ;YKRestoreContext:
  2340 |          |                           | ;	mov AX, SP+20
  2341 |          |                           | ;	mov BX, SP+18
  2342 |          |                           | ;	mov CX, SP+16
  2343 |          |                           | ;	mov DX, SP+14
  2344 |          |                           | ;	mov BP, SP+12
  2345 |          |                           | ;	mov SI, SP+10
  2346 |          |                           | ;	mov DI, SP+8
  2347 |          |                           | ;	mov DS, SP+6
  2348 |          |                           | ;	mov ES, SP+4
  2349 |          |                           | ;
  2350 |          |                           | ;	push DX
  2351 |          |                           | ;	mov DX, SP+4
  2352 |          |                           | ;	mov SP+22 , DX
  2353 |          |                           | ;	pop DX
  2354 |          |                           | ;	add SP, 18
  2355 |          |                           | ;	ret
  2356 |          |                           | 
  2357 |          |                           | ;	add SP, 2	; This deletes the return address saved when we call'ed YKRestoreContext.
  2358 |          |                           | ;	pop ES
  2359 |          |                           | ;	pop DS
  2360 |          |                           | ;	SS
  2361 |          |                           | ;	CS
  2362 |          |                           | ;	pop DI
  2363 |          |                           | ;	pop SI
  2364 |          |                           | ;	pop BP
  2365 |          |                           | ;	SP
  2366 |          |                           | ;	IP
  2367 |          |                           | 
  2368 |          |                           | ;	pop DX
  2369 |          |                           | ;	pop CX
  2370 |          |                           | ;	pop BX
  2371 |          |                           | ;	pop AX
  2372 |          |                           | ;	reti		; This pops IP, CS, and the flags, and goes to the return address.
  2373 |          |                           | 
  2374 |          |                           | ; Generated by c86 (BYU-NASM) 5.1 (beta) from lab4b_app.i
  2375 |          |                           | 	CPU	8086
  2376 | 000011CB | 90                        | 	ALIGN	2
  2377 | 000011CC | EB2A                      | 	jmp	main	; Jump to program start
  2378 |          |                           | L_lab4b_app_3:
  2379 | 000011CE | 5374617274696E6720-       | 	DB	"Starting kernel...",0xA,0
  2380 | 000011D7 | 6B65726E656C2E2E2E-       | ...
  2381 | 000011E0 | 0A00                      | ...
  2382 |          |                           | L_lab4b_app_2:
  2383 | 000011E2 | 0A00                      | 	DB	0xA,0
  2384 |          |                           | L_lab4b_app_1:
  2385 | 000011E4 | 4372656174696E6720-       | 	DB	"Creating task A...",0
  2386 | 000011ED | 7461736B20412E2E2E-       | ...
  2387 | 000011F6 | 00                        | ...
  2388 | 000011F7 | 90                        | 	ALIGN	2
  2389 |          |                           | main:
  2390 |          |                           | 	; >>>>> Line:	23
  2391 |          |                           | 	; >>>>> { 
  2392 | 000011F8 | EB43                      | 	jmp	L_lab4b_app_4
  2393 |          |                           | L_lab4b_app_5:
  2394 |          |                           | 	; >>>>> Line:	24
  2395 |          |                           | 	; >>>>> YKInitialize(); 
  2396 | 000011FA | E8EBF7                    | 	call	YKInitialize
  2397 |          |                           | 	; >>>>> Line:	26
  2398 |          |                           | 	; >>>>> printString("Creating task A..."); 
  2399 | 000011FD | B8[E411]                  | 	mov	ax, L_lab4b_app_1
  2400 | 00001200 | 50                        | 	push	ax
  2401 | 00001201 | E824F2                    | 	call	printString
  2402 | 00001204 | 83C402                    | 	add	sp, 2
  2403 |          |                           | 	; >>>>> Line:	27
  2404 |          |                           | 	; >>>>> printInt((int)ATask); 
  2405 | 00001207 | B8[C412]                  | 	mov	ax, ATask
  2406 | 0000120A | 50                        | 	push	ax
  2407 | 0000120B | E83EF2                    | 	call	printInt
  2408 | 0000120E | 83C402                    | 	add	sp, 2
  2409 |          |                           | 	; >>>>> Line:	28
  2410 |          |                           | 	; >>>>> printString("\n"); 
  2411 | 00001211 | B8[E211]                  | 	mov	ax, L_lab4b_app_2
  2412 | 00001214 | 50                        | 	push	ax
  2413 | 00001215 | E810F2                    | 	call	printString
  2414 | 00001218 | 83C402                    | 	add	sp, 2
  2415 |          |                           | 	; >>>>> Line:	30
  2416 |          |                           | 	; >>>>> YKNewTask(ATask, (void *)&AStk[256], 5); 
  2417 | 0000121B | B005                      | 	mov	al, 5
  2418 | 0000121D | 50                        | 	push	ax
  2419 | 0000121E | B8[3616]                  | 	mov	ax, (AStk+512)
  2420 | 00001221 | 50                        | 	push	ax
  2421 | 00001222 | B8[C412]                  | 	mov	ax, ATask
  2422 | 00001225 | 50                        | 	push	ax
  2423 | 00001226 | E841F8                    | 	call	YKNewTask
  2424 | 00001229 | 83C406                    | 	add	sp, 6
  2425 |          |                           | 	; >>>>> Line:	32
  2426 |          |                           | 	; >>>>> printString("Starting kernel...\n"); 
  2427 | 0000122C | B8[CE11]                  | 	mov	ax, L_lab4b_app_3
  2428 | 0000122F | 50                        | 	push	ax
  2429 | 00001230 | E8F5F1                    | 	call	printString
  2430 | 00001233 | 83C402                    | 	add	sp, 2
  2431 |          |                           | 	; >>>>> Line:	33
  2432 |          |                           | 	; >>>>> YKRun(); 
  2433 | 00001236 | E8AFF9                    | 	call	YKRun
  2434 | 00001239 | 89EC                      | 	mov	sp, bp
  2435 | 0000123B | 5D                        | 	pop	bp
  2436 | 0000123C | C3                        | 	ret
  2437 |          |                           | L_lab4b_app_4:
  2438 | 0000123D | 55                        | 	push	bp
  2439 | 0000123E | 89E5                      | 	mov	bp, sp
  2440 | 00001240 | EBB8                      | 	jmp	L_lab4b_app_5
  2441 |          |                           | L_lab4b_app_10:
  2442 | 00001242 | 5461736B2041206973-       | 	DB	"Task A is still running! Oh no! Task A was supposed to stop.",0xA,0
  2443 | 0000124B | 207374696C6C207275-       | ...
  2444 | 00001254 | 6E6E696E6721204F68-       | ...
  2445 | 0000125D | 206E6F21205461736B-       | ...
  2446 | 00001266 | 204120776173207375-       | ...
  2447 | 0000126F | 70706F73656420746F-       | ...
  2448 | 00001278 | 2073746F702E0A00          | ...
  2449 |          |                           | L_lab4b_app_9:
  2450 | 00001280 | 4372656174696E6720-       | 	DB	"Creating task C...",0
  2451 | 00001289 | 7461736B20432E2E2E-       | ...
  2452 | 00001292 | 00                        | ...
  2453 |          |                           | L_lab4b_app_8:
  2454 | 00001293 | 4372656174696E6720-       | 	DB	"Creating low priority task B...",0
  2455 | 0000129C | 6C6F77207072696F72-       | ...
  2456 | 000012A5 | 697479207461736B20-       | ...
  2457 | 000012AE | 422E2E2E00                | ...
  2458 |          |                           | L_lab4b_app_7:
  2459 | 000012B3 | 5461736B2041207374-       | 	DB	"Task A started!",0xA,0
  2460 | 000012BC | 6172746564210A00          | ...
  2461 |          |                           | 	ALIGN	2
  2462 |          |                           | ATask:
  2463 |          |                           | 	; >>>>> Line:	37
  2464 |          |                           | 	; >>>>> { 
  2465 | 000012C4 | EB7F                      | 	jmp	L_lab4b_app_11
  2466 |          |                           | L_lab4b_app_12:
  2467 |          |                           | 	; >>>>> Line:	38
  2468 |          |                           | 	; >>>>> printString("Task A started!\n"); 
  2469 | 000012C6 | B8[B312]                  | 	mov	ax, L_lab4b_app_7
  2470 | 000012C9 | 50                        | 	push	ax
  2471 | 000012CA | E85BF1                    | 	call	printString
  2472 | 000012CD | 83C402                    | 	add	sp, 2
  2473 |          |                           | 	; >>>>> Line:	40
  2474 |          |                           | 	; >>>>> printString("Creating low priority task B..."); 
  2475 | 000012D0 | B8[9312]                  | 	mov	ax, L_lab4b_app_8
  2476 | 000012D3 | 50                        | 	push	ax
  2477 | 000012D4 | E851F1                    | 	call	printString
  2478 | 000012D7 | 83C402                    | 	add	sp, 2
  2479 |          |                           | 	; >>>>> Line:	41
  2480 |          |                           | 	; >>>>> printInt((int)BTask); 
  2481 | 000012DA | B8[8213]                  | 	mov	ax, BTask
  2482 | 000012DD | 50                        | 	push	ax
  2483 | 000012DE | E86BF1                    | 	call	printInt
  2484 | 000012E1 | 83C402                    | 	add	sp, 2
  2485 |          |                           | 	; >>>>> Line:	42
  2486 |          |                           | 	; >>>>> printString("\n"); 
  2487 | 000012E4 | B8[E211]                  | 	mov	ax, L_lab4b_app_2
  2488 | 000012E7 | 50                        | 	push	ax
  2489 | 000012E8 | E83DF1                    | 	call	printString
  2490 | 000012EB | 83C402                    | 	add	sp, 2
  2491 |          |                           | 	; >>>>> Line:	43
  2492 |          |                           | 	; >>>>> YKNewTask(BTas 
  2493 | 000012EE | B007                      | 	mov	al, 7
  2494 | 000012F0 | 50                        | 	push	ax
  2495 | 000012F1 | B8[3618]                  | 	mov	ax, (BStk+512)
  2496 | 000012F4 | 50                        | 	push	ax
  2497 | 000012F5 | B8[8213]                  | 	mov	ax, BTask
  2498 | 000012F8 | 50                        | 	push	ax
  2499 | 000012F9 | E86EF7                    | 	call	YKNewTask
  2500 | 000012FC | 83C406                    | 	add	sp, 6
  2501 |          |                           | 	; >>>>> Line:	45
  2502 |          |                           | 	; >>>>> printString("Creating task C..."); 
  2503 | 000012FF | B8[8012]                  | 	mov	ax, L_lab4b_app_9
  2504 | 00001302 | 50                        | 	push	ax
  2505 | 00001303 | E822F1                    | 	call	printString
  2506 | 00001306 | 83C402                    | 	add	sp, 2
  2507 |          |                           | 	; >>>>> Line:	46
  2508 |          |                           | 	; >>>>> printInt((int)CTask); 
  2509 | 00001309 | B8[E013]                  | 	mov	ax, CTask
  2510 | 0000130C | 50                        | 	push	ax
  2511 | 0000130D | E83CF1                    | 	call	printInt
  2512 | 00001310 | 83C402                    | 	add	sp, 2
  2513 |          |                           | 	; >>>>> Line:	47
  2514 |          |                           | 	; >>>>> printString("\n"); 
  2515 | 00001313 | B8[E211]                  | 	mov	ax, L_lab4b_app_2
  2516 | 00001316 | 50                        | 	push	ax
  2517 | 00001317 | E80EF1                    | 	call	printString
  2518 | 0000131A | 83C402                    | 	add	sp, 2
  2519 |          |                           | 	; >>>>> Line:	48
  2520 |          |                           | 	; >>>>> YKNewTask(CTask, (void *)&CStk[256], 2); 
  2521 | 0000131D | B002                      | 	mov	al, 2
  2522 | 0000131F | 50                        | 	push	ax
  2523 | 00001320 | B8[361A]                  | 	mov	ax, (CStk+512)
  2524 | 00001323 | 50                        | 	push	ax
  2525 | 00001324 | B8[E013]                  | 	mov	ax, CTask
  2526 | 00001327 | 50                        | 	push	ax
  2527 | 00001328 | E83FF7                    | 	call	YKNewTask
  2528 | 0000132B | 83C406                    | 	add	sp, 6
  2529 |          |                           | 	; >>>>> Line:	50
  2530 |          |                           | 	; >>>>> printString("Task A is still running! Oh no! Task A was supposed to stop.\n"); 
  2531 | 0000132E | B8[4212]                  | 	mov	ax, L_lab4b_app_10
  2532 | 00001331 | 50                        | 	push	ax
  2533 | 00001332 | E8F3F0                    | 	call	printString
  2534 | 00001335 | 83C402                    | 	add	sp, 2
  2535 |          |                           | 	; >>>>> Line:	51
  2536 |          |                           | 	; >>>>> exit(0); 
  2537 | 00001338 | 30C0                      | 	xor	al, al
  2538 | 0000133A | 50                        | 	push	ax
  2539 | 0000133B | E89CF0                    | 	call	exit
  2540 | 0000133E | 83C402                    | 	add	sp, 2
  2541 | 00001341 | 89EC                      | 	mov	sp, bp
  2542 | 00001343 | 5D                        | 	pop	bp
  2543 | 00001344 | C3                        | 	ret
  2544 |          |                           | L_lab4b_app_11:
  2545 | 00001345 | 55                        | 	push	bp
  2546 | 00001346 | 89E5                      | 	mov	bp, sp
  2547 | 00001348 | E97BFF                    | 	jmp	L_lab4b_app_12
  2548 |          |                           | L_lab4b_app_14:
  2549 | 0000134B | 5461736B2042207374-       | 	DB	"Task B started! Oh no! Task B wasn't supposed to run.",0xA,0
  2550 | 00001354 | 617274656421204F68-       | ...
  2551 | 0000135D | 206E6F21205461736B-       | ...
  2552 | 00001366 | 2042207761736E2774-       | ...
  2553 | 0000136F | 20737570706F736564-       | ...
  2554 | 00001378 | 20746F2072756E2E0A-       | ...
  2555 | 00001381 | 00                        | ...
  2556 |          |                           | 	ALIGN	2
  2557 |          |                           | BTask:
  2558 |          |                           | 	; >>>>> Line:	55
  2559 |          |                           | 	; >>>>> { 
  2560 | 00001382 | EB17                      | 	jmp	L_lab4b_app_15
  2561 |          |                           | L_lab4b_app_16:
  2562 |          |                           | 	; >>>>> Line:	56
  2563 |          |                           | 	; >>>>> printString("Task B started! Oh no! Task B wasn't supposed to run.\n"); 
  2564 | 00001384 | B8[4B13]                  | 	mov	ax, L_lab4b_app_14
  2565 | 00001387 | 50                        | 	push	ax
  2566 | 00001388 | E89DF0                    | 	call	printString
  2567 | 0000138B | 83C402                    | 	add	sp, 2
  2568 |          |                           | 	; >>>>> Line:	57
  2569 |          |                           | 	; >>>>> exit(0); 
  2570 | 0000138E | 30C0                      | 	xor	al, al
  2571 | 00001390 | 50                        | 	push	ax
  2572 | 00001391 | E846F0                    | 	call	exit
  2573 | 00001394 | 83C402                    | 	add	sp, 2
  2574 | 00001397 | 89EC                      | 	mov	sp, bp
  2575 | 00001399 | 5D                        | 	pop	bp
  2576 | 0000139A | C3                        | 	ret
  2577 |          |                           | L_lab4b_app_15:
  2578 | 0000139B | 55                        | 	push	bp
  2579 | 0000139C | 89E5                      | 	mov	bp, sp
  2580 | 0000139E | EBE4                      | 	jmp	L_lab4b_app_16
  2581 |          |                           | L_lab4b_app_20:
  2582 | 000013A0 | 457865637574696E67-       | 	DB	"Executing in task C.",0xA,0
  2583 | 000013A9 | 20696E207461736B20-       | ...
  2584 | 000013B2 | 432E0A00                  | ...
  2585 |          |                           | L_lab4b_app_19:
  2586 | 000013B6 | 20636F6E7465787420-       | 	DB	" context switches!",0xA,0
  2587 | 000013BF | 737769746368657321-       | ...
  2588 | 000013C8 | 0A00                      | ...
  2589 |          |                           | L_lab4b_app_18:
  2590 | 000013CA | 5461736B2043207374-       | 	DB	"Task C started after ",0
  2591 | 000013D3 | 617274656420616674-       | ...
  2592 | 000013DC | 65722000                  | ...
  2593 |          |                           | 	ALIGN	2
  2594 |          |                           | CTask:
  2595 |          |                           | 	; >>>>> Line:	61
  2596 |          |                           | 	; >>>>> { 
  2597 | 000013E0 | EB4C                      | 	jmp	L_lab4b_app_21
  2598 |          |                           | L_lab4b_app_22:
  2599 |          |                           | 	; >>>>> Line:	65
  2600 |          |                           | 	; >>>>> YKEnterMutex(); 
  2601 | 000013E2 | E89FFD                    | 	call	YKEnterMutex
  2602 |          |                           | 	; >>>>> Line:	66
  2603 |          |                           | 	; >>>>> numCtxSwitches = YKCtxSwCount; 
  2604 | 000013E5 | A1[3E0F]                  | 	mov	ax, word [YKCtxSwCount]
  2605 | 000013E8 | 8946FC                    | 	mov	word [bp-4], ax
  2606 |          |                           | 	; >>>>> Line:	67
  2607 |          |                           | 	; >>>>> YKExitMutex(); 
  2608 | 000013EB | E898FD                    | 	call	YKExitMutex
  2609 |          |                           | 	; >>>>> Line:	69
  2610 |          |                           | 	; >>>>> pri 
  2611 | 000013EE | B8[CA13]                  | 	mov	ax, L_lab4b_app_18
  2612 | 000013F1 | 50                        | 	push	ax
  2613 | 000013F2 | E833F0                    | 	call	printString
  2614 | 000013F5 | 83C402                    | 	add	sp, 2
  2615 |          |                           | 	; >>>>> Line:	70
  2616 |          |                           | 	; >>>>> printUInt(numCtxSwitches); 
  2617 | 000013F8 | FF76FC                    | 	push	word [bp-4]
  2618 | 000013FB | E8CEF1                    | 	call	printUInt
  2619 | 000013FE | 83C402                    | 	add	sp, 2
  2620 |          |                           | 	; >>>>> Line:	71
  2621 |          |                           | 	; >>>>> printString(" context switches!\n"); 
  2622 | 00001401 | B8[B613]                  | 	mov	ax, L_lab4b_app_19
  2623 | 00001404 | 50                        | 	push	ax
  2624 | 00001405 | E820F0                    | 	call	printString
  2625 | 00001408 | 83C402                    | 	add	sp, 2
  2626 |          |                           | 	; >>>>> Line:	73
  2627 |          |                           | 	; >>>>> while (1) 
  2628 | 0000140B | EB1B                      | 	jmp	L_lab4b_app_24
  2629 |          |                           | L_lab4b_app_23:
  2630 |          |                           | 	; >>>>> Line:	75
  2631 |          |                           | 	; >>>>> printString("Executing in task C.\n"); 
  2632 | 0000140D | B8[A013]                  | 	mov	ax, L_lab4b_app_20
  2633 | 00001410 | 50                        | 	push	ax
  2634 | 00001411 | E814F0                    | 	call	printString
  2635 | 00001414 | 83C402                    | 	add	sp, 2
  2636 |          |                           | 	; >>>>> Line:	76
  2637 |          |                           | 	; >>>>> for(count = 0; count < 5000; count++); 
  2638 | 00001417 | C746FE0000                | 	mov	word [bp-2], 0
  2639 | 0000141C | EB03                      | 	jmp	L_lab4b_app_27
  2640 |          |                           | L_lab4b_app_26:
  2641 |          |                           | L_lab4b_app_29:
  2642 | 0000141E | FF46FE                    | 	inc	word [bp-2]
  2643 |          |                           | L_lab4b_app_27:
  2644 | 00001421 | 817EFE8813                | 	cmp	word [bp-2], 5000
  2645 | 00001426 | 7CF6                      | 	jl	L_lab4b_app_26
  2646 |          |                           | L_lab4b_app_28:
  2647 |          |                           | L_lab4b_app_24:
  2648 | 00001428 | EBE3                      | 	jmp	L_lab4b_app_23
  2649 |          |                           | L_lab4b_app_25:
  2650 | 0000142A | 89EC                      | 	mov	sp, bp
  2651 | 0000142C | 5D                        | 	pop	bp
  2652 | 0000142D | C3                        | 	ret
  2653 |          |                           | L_lab4b_app_21:
  2654 | 0000142E | 55                        | 	push	bp
  2655 | 0000142F | 89E5                      | 	mov	bp, sp
  2656 | 00001431 | 83EC04                    | 	sub	sp, 4
  2657 | 00001434 | EBAC                      | 	jmp	L_lab4b_app_22
  2658 |          |                           | 	ALIGN	2
  2659 |          |                           | AStk:
  2660 | 00001436 | 00<rept>                  | 	TIMES	512 db 0
  2661 |          |                           | BStk:
  2662 | 00001636 | 00<rept>                  | 	TIMES	512 db 0
  2663 |          |                           | CStk:
  2664 | 00001836 | 00<rept>                  | 	TIMES	512 db 0
