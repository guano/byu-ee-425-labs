; Generated by c86 (BYU-NASM) 5.1 (beta) from yakc.i
	CPU	8086
	ALIGN	2
	jmp	main	; Jump to program start
started_running:
	DB	0
	ALIGN	2
YKInitialize:
	jmp	L_yakc_1
L_yakc_2:
	mov	word [YKCtxSwCount], 0
	mov	word [YKIdleCount], 0
	mov	word [YKCurrentlyExecuting], 0
	mov	word [YKAvailTCBList], YKTCBArray
	mov	word [bp-2], 0
	jmp	L_yakc_4
L_yakc_3:
	mov	ax, word [bp-2]
	inc	ax
	mov	cx, 12
	imul	cx
	add	ax, YKTCBArray
	push	ax
	mov	ax, word [bp-2]
	mov	cx, 12
	imul	cx
	mov	dx, ax
	add	dx, YKTCBArray
	mov	si, dx
	add	si, 8
	pop	ax
	mov	word [si], ax
L_yakc_6:
	inc	word [bp-2]
L_yakc_4:
	cmp	word [bp-2], 3
	jl	L_yakc_3
L_yakc_5:
	mov	word [(44+YKTCBArray)], 0
	mov	al, 100
	push	ax
	mov	ax, (idleStack+512)
	push	ax
	mov	ax, YKIdleTask
	push	ax
	call	YKNewTask
	add	sp, 6
	mov	sp, bp
	pop	bp
	ret
L_yakc_1:
	push	bp
	mov	bp, sp
	push	cx
	jmp	L_yakc_2
	ALIGN	2
YKIdleTask:
	jmp	L_yakc_8
L_yakc_9:
	jmp	L_yakc_11
L_yakc_10:
	inc	word [YKIdleCount]
L_yakc_11:
	jmp	L_yakc_10
L_yakc_12:
	mov	sp, bp
	pop	bp
	ret
L_yakc_8:
	push	bp
	mov	bp, sp
	jmp	L_yakc_9
	ALIGN	2
YKNewTask:
	jmp	L_yakc_14
L_yakc_15:
	mov	ax, word [YKAvailTCBList]
	mov	word [bp-2], ax
	mov	si, word [bp-2]
	add	si, 8
	mov	ax, word [si]
	mov	word [YKAvailTCBList], ax
	mov	si, word [bp-2]
	add	si, 6
	mov	word [si], 0
	mov	al, byte [bp+8]
	xor	ah, ah
	mov	si, word [bp-2]
	add	si, 4
	mov	word [si], ax
	mov	ax, word [YKRdyList]
	test	ax, ax
	jne	L_yakc_16
	mov	ax, word [bp-2]
	mov	word [YKRdyList], ax
	mov	si, word [bp-2]
	add	si, 8
	mov	word [si], 0
	mov	si, word [bp-2]
	add	si, 10
	mov	word [si], 0
	jmp	L_yakc_17
L_yakc_16:
	mov	ax, word [YKRdyList]
	mov	word [bp-4], ax
	jmp	L_yakc_19
L_yakc_18:
	mov	si, word [bp-4]
	add	si, 8
	mov	ax, word [si]
	mov	word [bp-4], ax
L_yakc_19:
	mov	si, word [bp-4]
	add	si, 4
	mov	di, word [bp-2]
	add	di, 4
	mov	ax, word [di]
	cmp	ax, word [si]
	jg	L_yakc_18
L_yakc_20:
	mov	si, word [bp-4]
	add	si, 10
	mov	ax, word [si]
	test	ax, ax
	jne	L_yakc_21
	mov	ax, word [bp-2]
	mov	word [YKRdyList], ax
	jmp	L_yakc_22
L_yakc_21:
	mov	si, word [bp-4]
	add	si, 10
	mov	si, word [si]
	add	si, 8
	mov	ax, word [bp-2]
	mov	word [si], ax
L_yakc_22:
	mov	si, word [bp-4]
	add	si, 10
	mov	di, word [bp-2]
	add	di, 10
	mov	ax, word [si]
	mov	word [di], ax
	mov	si, word [bp-2]
	add	si, 8
	mov	ax, word [bp-4]
	mov	word [si], ax
	mov	si, word [bp-4]
	add	si, 10
	mov	ax, word [bp-2]
	mov	word [si], ax
L_yakc_17:
	mov	si, word [bp-2]
	mov	ax, word [bp+6]
	mov	word [si], ax
	mov	si, word [bp-2]
	mov	ax, word [si]
	sub	ax, 22
	mov	word [si], ax
	mov	si, word [bp-2]
	mov	si, word [si]
	add	si, 22
	mov	word [si], 512
	mov	si, word [bp-2]
	mov	si, word [si]
	add	si, 20
	mov	word [si], 0
	mov	si, word [bp-2]
	mov	si, word [si]
	add	si, 18
	mov	ax, word [bp+4]
	mov	word [si], ax
	mov	si, word [bp-2]
	mov	si, word [si]
	add	si, 16
	mov	word [si], 0
	mov	si, word [bp-2]
	mov	si, word [si]
	add	si, 14
	mov	word [si], 0
	mov	si, word [bp-2]
	mov	si, word [si]
	add	si, 12
	mov	word [si], 0
	mov	si, word [bp-2]
	mov	si, word [si]
	add	si, 10
	mov	word [si], 0
	mov	si, word [bp-2]
	mov	si, word [si]
	add	si, 8
	mov	word [si], 0
	mov	si, word [bp-2]
	mov	si, word [si]
	add	si, 6
	mov	word [si], 0
	mov	si, word [bp-2]
	mov	si, word [si]
	add	si, 4
	mov	word [si], 0
	mov	si, word [bp-2]
	mov	si, word [si]
	add	si, 2
	mov	word [si], 0
	mov	si, word [bp-2]
	mov	si, word [si]
	mov	word [si], 0
	call	YKScheduler
	mov	sp, bp
	pop	bp
	ret
L_yakc_14:
	push	bp
	mov	bp, sp
	sub	sp, 4
	jmp	L_yakc_15
	ALIGN	2
YKRun:
	jmp	L_yakc_24
L_yakc_25:
	mov	byte [started_running], 1
	call	YKScheduler
	mov	sp, bp
	pop	bp
	ret
L_yakc_24:
	push	bp
	mov	bp, sp
	jmp	L_yakc_25
	ALIGN	2
YKScheduler:
	jmp	L_yakc_27
L_yakc_28:
	mov	ax, word [YKRdyList]
	mov	word [bp-2], ax
	mov	al, byte [started_running]
	test	al, al
	je	L_yakc_29
	mov	ax, word [bp-2]
	cmp	ax, word [YKCurrentlyExecuting]
	je	L_yakc_31
L_yakc_30:
	mov	ax, word [YKCtxSwCount]
	inc	ax
	mov	word [YKCtxSwCount], ax
	mov	ax, word [bp-2]
	mov	word [YKCurrentlyExecuting], ax
	call	YKDispatcher
L_yakc_29:
L_yakc_31:
	mov	sp, bp
	pop	bp
	ret
L_yakc_27:
	push	bp
	mov	bp, sp
	push	cx
	jmp	L_yakc_28
	ALIGN	2
YKDelayTask:
	jmp	L_yakc_33
L_yakc_34:
	mov	ax, word [bp+4]
	test	ax, ax
	je	L_yakc_35
L_yakc_35:
	call	YKScheduler
	mov	sp, bp
	pop	bp
	ret
L_yakc_33:
	push	bp
	mov	bp, sp
	jmp	L_yakc_34
L_yakc_37:
	DB	"called YKTickHandler() currently within it",0xA,0
	ALIGN	2
YKTickHandler:
	jmp	L_yakc_38
L_yakc_39:
	mov	ax, L_yakc_37
	push	ax
	call	printString
	add	sp, 2
	mov	sp, bp
	pop	bp
	ret
L_yakc_38:
	push	bp
	mov	bp, sp
	jmp	L_yakc_39
	ALIGN	2
YKEnterISR:
	jmp	L_yakc_41
L_yakc_42:
	mov	ax, word [YKCtxSwCount]
	inc	ax
	mov	word [YKCtxSwCount], ax
	mov	sp, bp
	pop	bp
	ret
L_yakc_41:
	push	bp
	mov	bp, sp
	jmp	L_yakc_42
	ALIGN	2
YKExitISR:
	jmp	L_yakc_44
L_yakc_45:
	mov	ax, word [YKCtxSwCount]
	dec	ax
	mov	word [YKCtxSwCount], ax
	test	ax, ax
	jne	L_yakc_46
	call	YKScheduler
L_yakc_46:
	mov	sp, bp
	pop	bp
	ret
L_yakc_44:
	push	bp
	mov	bp, sp
	jmp	L_yakc_45
	ALIGN	2
YKCtxSwCount:
	TIMES	2 db 0
YKIdleCount:
	TIMES	2 db 0
YKTickNum:
	TIMES	2 db 0
YKRdyList:
	TIMES	2 db 0
YKSuspList:
	TIMES	2 db 0
YKAvailTCBList:
	TIMES	2 db 0
YKTCBArray:
	TIMES	48 db 0
idleStack:
	TIMES	512 db 0
YKCurrentlyExecuting:
	TIMES	2 db 0
